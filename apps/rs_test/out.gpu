Testing compilation unit with offset_marker at 0x104d56b00
Loading /Users/aam/halide/halide-aam1/apps/rs_test/./test_gen.dSYM/Contents/Resources/DWARF/test_gen
Failed to load binary:/Users/aam/halide/halide-aam1/apps/rs_test/./test_gen.dSYM/Contents/Resources/DWARF/test_gen



Input to letify input(max(min(v0, (input.extent.0 - 1)), 0), max(min(v1, (input.extent.1 - 1)), 0))
Canonical form without lets input(max(min(v0, (input.extent.0 - 1)), 0), max(min(v1, (input.extent.1 - 1)), 0))
0: v0, 0
1: input.extent.0, 0
2: 1, 0
3: (input.extent.0 - 1), 0
4: min(v0, (input.extent.0 - 1)), 1
5: 0, 0
6: max(min(v0, (input.extent.0 - 1)), 0), 1
7: v1, 0
8: input.extent.1, 0
9: (input.extent.1 - 1), 0
10: min(v1, (input.extent.1 - 1)), 1
11: max(min(v1, (input.extent.1 - 1)), 0), 1
12: input(max(min(v0, (input.extent.0 - 1)), 0), max(min(v1, (input.extent.1 - 1)), 0)), 1
With variables input(max(min(v0, (input.extent.0 - 1)), 0), max(min(v1, (input.extent.1 - 1)), 0))
With lets: input(max(min(v0, (input.extent.0 - 1)), 0), max(min(v1, (input.extent.1 - 1)), 0))



Input to letify clamped(v0, v1)
Canonical form without lets clamped(v0, v1)
0: v0, 0
1: v1, 0
2: clamped(v0, v1), 1
With variables clamped(v0, v1)
With lets: clamped(v0, v1)



Input to letify f(v0, v1)
Canonical form without lets f(v0, v1)
0: v0, 0
1: v1, 0
2: f(v0, v1), 1
With variables f(v0, v1)
With lets: f(v0, v1)
Creating initial loop nests...
Injecting realization of g
InjectRealization of g entering for loop over .__root
Found compute level
Found store level
for (.__root, 0, 1) {
  produce g {
    let g.s0.v1.loop_max = g.s0.v1.max
    let g.s0.v1.loop_min = g.s0.v1.min
    let g.s0.v1.loop_extent = ((g.s0.v1.max + 1) - g.s0.v1.min)
    let g.s0.v0.loop_max = g.s0.v0.max
    let g.s0.v0.loop_min = g.s0.v0.min
    let g.s0.v0.loop_extent = ((g.s0.v0.max + 1) - g.s0.v0.min)
    let g.s0.__outermost.loop_extent = 1
    let g.s0.__outermost.loop_max = 1
    let g.s0.__outermost.loop_min = 0
    let g.s0.v0.__block_id_x.loop_extent = g.s0.v0.loop_extent
    let g.s0.v0.__block_id_x.loop_max = g.s0.v0.loop_max
    let g.s0.v0.__block_id_x.loop_min = g.s0.v0.loop_min
    let g.s0.v1.__block_id_y.loop_extent = g.s0.v1.loop_extent
    let g.s0.v1.__block_id_y.loop_max = g.s0.v1.loop_max
    let g.s0.v1.__block_id_y.loop_min = g.s0.v1.loop_min
    for<Parent> (g.s0.__outermost, g.s0.__outermost.loop_min, g.s0.__outermost.loop_extent) {
      parallel<Renderscript> (g.s0.v1.__block_id_y, g.s0.v1.__block_id_y.loop_min, g.s0.v1.__block_id_y.loop_extent) {
        let g.s0.v1 = g.s0.v1.__block_id_y
        parallel<Renderscript> (g.s0.v0.__block_id_x, g.s0.v0.__block_id_x.loop_min, g.s0.v0.__block_id_x.loop_extent) {
          let g.s0.v0 = g.s0.v0.__block_id_x
          g(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y) = f(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y)
        }
      }
    }
  }
  0
}

Injecting realization of f
InjectRealization of f entering for loop over .__root
InjectRealization of f entering for loop over g.s0.__outermost
InjectRealization of f entering for loop over g.s0.v1.__block_id_y
InjectRealization of f entering for loop over g.s0.v0.__block_id_x
Found compute level
Found store level
for (.__root, 0, 1) {
  realize f([f.v0.min_realized, f.v0.extent_realized], [f.v1.min_realized, f.v1.extent_realized]) {
    produce f {
      let f.s0.v1.loop_max = f.s0.v1.max
      let f.s0.v1.loop_min = f.s0.v1.min
      let f.s0.v1.loop_extent = ((f.s0.v1.max + 1) - f.s0.v1.min)
      let f.s0.v0.loop_max = f.s0.v0.max
      let f.s0.v0.loop_min = f.s0.v0.min
      let f.s0.v0.loop_extent = ((f.s0.v0.max + 1) - f.s0.v0.min)
      let f.s0.__outermost.loop_extent = 1
      let f.s0.__outermost.loop_max = 1
      let f.s0.__outermost.loop_min = 0
      let f.s0.v0.__block_id_x.loop_extent = f.s0.v0.loop_extent
      let f.s0.v0.__block_id_x.loop_max = f.s0.v0.loop_max
      let f.s0.v0.__block_id_x.loop_min = f.s0.v0.loop_min
      let f.s0.v1.__block_id_y.loop_extent = f.s0.v1.loop_extent
      let f.s0.v1.__block_id_y.loop_max = f.s0.v1.loop_max
      let f.s0.v1.__block_id_y.loop_min = f.s0.v1.loop_min
      for<Parent> (f.s0.__outermost, f.s0.__outermost.loop_min, f.s0.__outermost.loop_extent) {
        parallel<Renderscript> (f.s0.v1.__block_id_y, f.s0.v1.__block_id_y.loop_min, f.s0.v1.__block_id_y.loop_extent) {
          let f.s0.v1 = f.s0.v1.__block_id_y
          parallel<Renderscript> (f.s0.v0.__block_id_x, f.s0.v0.__block_id_x.loop_min, f.s0.v0.__block_id_x.loop_extent) {
            let f.s0.v0 = f.s0.v0.__block_id_x
            f(f.s0.v0.__block_id_x, f.s0.v1.__block_id_y) = clamped(f.s0.v0.__block_id_x, f.s0.v1.__block_id_y)
          }
        }
      }
    }
    produce g {
      let g.s0.v1.loop_max = g.s0.v1.max
      let g.s0.v1.loop_min = g.s0.v1.min
      let g.s0.v1.loop_extent = ((g.s0.v1.max + 1) - g.s0.v1.min)
      let g.s0.v0.loop_max = g.s0.v0.max
      let g.s0.v0.loop_min = g.s0.v0.min
      let g.s0.v0.loop_extent = ((g.s0.v0.max + 1) - g.s0.v0.min)
      let g.s0.__outermost.loop_extent = 1
      let g.s0.__outermost.loop_max = 1
      let g.s0.__outermost.loop_min = 0
      let g.s0.v0.__block_id_x.loop_extent = g.s0.v0.loop_extent
      let g.s0.v0.__block_id_x.loop_max = g.s0.v0.loop_max
      let g.s0.v0.__block_id_x.loop_min = g.s0.v0.loop_min
      let g.s0.v1.__block_id_y.loop_extent = g.s0.v1.loop_extent
      let g.s0.v1.__block_id_y.loop_max = g.s0.v1.loop_max
      let g.s0.v1.__block_id_y.loop_min = g.s0.v1.loop_min
      for<Parent> (g.s0.__outermost, g.s0.__outermost.loop_min, g.s0.__outermost.loop_extent) {
        parallel<Renderscript> (g.s0.v1.__block_id_y, g.s0.v1.__block_id_y.loop_min, g.s0.v1.__block_id_y.loop_extent) {
          let g.s0.v1 = g.s0.v1.__block_id_y
          parallel<Renderscript> (g.s0.v0.__block_id_x, g.s0.v0.__block_id_x.loop_min, g.s0.v0.__block_id_x.loop_extent) {
            let g.s0.v0 = g.s0.v0.__block_id_x
            g(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y) = f(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y)
          }
        }
      }
    }
    0
  }
}

Inlining clamped



Input to letify (let clamped.v1 = f.s0.v1.__block_id_y in (let clamped.v0 = f.s0.v0.__block_id_x in input(max(min(clamped.v0, (input.extent.0 - 1)), 0), max(min(clamped.v1, (input.extent.1 - 1)), 0))))
Canonical form without lets input(max(min(f.s0.v0.__block_id_x, (input.extent.0 - 1)), 0), max(min(f.s0.v1.__block_id_y, (input.extent.1 - 1)), 0))
0: f.s0.v1.__block_id_y, 0
1: f.s0.v0.__block_id_x, 0
2: input.extent.0, 0
3: 1, 0
4: (input.extent.0 - 1), 0
5: min(f.s0.v0.__block_id_x, (input.extent.0 - 1)), 1
6: 0, 0
7: max(min(f.s0.v0.__block_id_x, (input.extent.0 - 1)), 0), 1
8: input.extent.1, 0
9: (input.extent.1 - 1), 0
10: min(f.s0.v1.__block_id_y, (input.extent.1 - 1)), 1
11: max(min(f.s0.v1.__block_id_y, (input.extent.1 - 1)), 0), 1
12: input(max(min(f.s0.v0.__block_id_x, (input.extent.0 - 1)), 0), max(min(f.s0.v1.__block_id_y, (input.extent.1 - 1)), 0)), 1
With variables input(max(min(f.s0.v0.__block_id_x, (input.extent.0 - 1)), 0), max(min(f.s0.v1.__block_id_y, (input.extent.1 - 1)), 0))
With lets: input(max(min(f.s0.v0.__block_id_x, (input.extent.0 - 1)), 0), max(min(f.s0.v1.__block_id_y, (input.extent.1 - 1)), 0))
for (.__root, 0, 1) {
  realize f([f.v0.min_realized, f.v0.extent_realized], [f.v1.min_realized, f.v1.extent_realized]) {
    produce f {
      let f.s0.v1.loop_max = f.s0.v1.max
      let f.s0.v1.loop_min = f.s0.v1.min
      let f.s0.v1.loop_extent = ((f.s0.v1.max + 1) - f.s0.v1.min)
      let f.s0.v0.loop_max = f.s0.v0.max
      let f.s0.v0.loop_min = f.s0.v0.min
      let f.s0.v0.loop_extent = ((f.s0.v0.max + 1) - f.s0.v0.min)
      let f.s0.__outermost.loop_extent = 1
      let f.s0.__outermost.loop_max = 1
      let f.s0.__outermost.loop_min = 0
      let f.s0.v0.__block_id_x.loop_extent = f.s0.v0.loop_extent
      let f.s0.v0.__block_id_x.loop_max = f.s0.v0.loop_max
      let f.s0.v0.__block_id_x.loop_min = f.s0.v0.loop_min
      let f.s0.v1.__block_id_y.loop_extent = f.s0.v1.loop_extent
      let f.s0.v1.__block_id_y.loop_max = f.s0.v1.loop_max
      let f.s0.v1.__block_id_y.loop_min = f.s0.v1.loop_min
      for<Parent> (f.s0.__outermost, f.s0.__outermost.loop_min, f.s0.__outermost.loop_extent) {
        parallel<Renderscript> (f.s0.v1.__block_id_y, f.s0.v1.__block_id_y.loop_min, f.s0.v1.__block_id_y.loop_extent) {
          let f.s0.v1 = f.s0.v1.__block_id_y
          parallel<Renderscript> (f.s0.v0.__block_id_x, f.s0.v0.__block_id_x.loop_min, f.s0.v0.__block_id_x.loop_extent) {
            let f.s0.v0 = f.s0.v0.__block_id_x
            f(f.s0.v0.__block_id_x, f.s0.v1.__block_id_y) = input(max(min(f.s0.v0.__block_id_x, (input.extent.0 - 1)), 0), max(min(f.s0.v1.__block_id_y, (input.extent.1 - 1)), 0))
          }
        }
      }
    }
    produce g {
      let g.s0.v1.loop_max = g.s0.v1.max
      let g.s0.v1.loop_min = g.s0.v1.min
      let g.s0.v1.loop_extent = ((g.s0.v1.max + 1) - g.s0.v1.min)
      let g.s0.v0.loop_max = g.s0.v0.max
      let g.s0.v0.loop_min = g.s0.v0.min
      let g.s0.v0.loop_extent = ((g.s0.v0.max + 1) - g.s0.v0.min)
      let g.s0.__outermost.loop_extent = 1
      let g.s0.__outermost.loop_max = 1
      let g.s0.__outermost.loop_min = 0
      let g.s0.v0.__block_id_x.loop_extent = g.s0.v0.loop_extent
      let g.s0.v0.__block_id_x.loop_max = g.s0.v0.loop_max
      let g.s0.v0.__block_id_x.loop_min = g.s0.v0.loop_min
      let g.s0.v1.__block_id_y.loop_extent = g.s0.v1.loop_extent
      let g.s0.v1.__block_id_y.loop_max = g.s0.v1.loop_max
      let g.s0.v1.__block_id_y.loop_min = g.s0.v1.loop_min
      for<Parent> (g.s0.__outermost, g.s0.__outermost.loop_min, g.s0.__outermost.loop_extent) {
        parallel<Renderscript> (g.s0.v1.__block_id_y, g.s0.v1.__block_id_y.loop_min, g.s0.v1.__block_id_y.loop_extent) {
          let g.s0.v1 = g.s0.v1.__block_id_y
          parallel<Renderscript> (g.s0.v0.__block_id_x, g.s0.v0.__block_id_x.loop_min, g.s0.v0.__block_id_x.loop_extent) {
            let g.s0.v0 = g.s0.v0.__block_id_x
            g(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y) = f(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y)
          }
        }
      }
    }
    0
  }
}

Lowering after creating initial loop nests:
realize f([f.v0.min_realized, f.v0.extent_realized], [f.v1.min_realized, f.v1.extent_realized]) {
  produce f {
    let f.s0.v1.loop_max = f.s0.v1.max
    let f.s0.v1.loop_min = f.s0.v1.min
    let f.s0.v1.loop_extent = ((f.s0.v1.max + 1) - f.s0.v1.min)
    let f.s0.v0.loop_max = f.s0.v0.max
    let f.s0.v0.loop_min = f.s0.v0.min
    let f.s0.v0.loop_extent = ((f.s0.v0.max + 1) - f.s0.v0.min)
    let f.s0.v0.__block_id_x.loop_extent = f.s0.v0.loop_extent
    let f.s0.v0.__block_id_x.loop_max = f.s0.v0.loop_max
    let f.s0.v0.__block_id_x.loop_min = f.s0.v0.loop_min
    let f.s0.v1.__block_id_y.loop_extent = f.s0.v1.loop_extent
    let f.s0.v1.__block_id_y.loop_max = f.s0.v1.loop_max
    let f.s0.v1.__block_id_y.loop_min = f.s0.v1.loop_min
    parallel<Renderscript> (f.s0.v1.__block_id_y, f.s0.v1.__block_id_y.loop_min, f.s0.v1.__block_id_y.loop_extent) {
      let f.s0.v1 = f.s0.v1.__block_id_y
      parallel<Renderscript> (f.s0.v0.__block_id_x, f.s0.v0.__block_id_x.loop_min, f.s0.v0.__block_id_x.loop_extent) {
        let f.s0.v0 = f.s0.v0.__block_id_x
        f(f.s0.v0.__block_id_x, f.s0.v1.__block_id_y) = input(max(min(f.s0.v0.__block_id_x, (input.extent.0 - 1)), 0), max(min(f.s0.v1.__block_id_y, (input.extent.1 - 1)), 0))
      }
    }
  }
  produce g {
    let g.s0.v1.loop_max = g.s0.v1.max
    let g.s0.v1.loop_min = g.s0.v1.min
    let g.s0.v1.loop_extent = ((g.s0.v1.max + 1) - g.s0.v1.min)
    let g.s0.v0.loop_max = g.s0.v0.max
    let g.s0.v0.loop_min = g.s0.v0.min
    let g.s0.v0.loop_extent = ((g.s0.v0.max + 1) - g.s0.v0.min)
    let g.s0.v0.__block_id_x.loop_extent = g.s0.v0.loop_extent
    let g.s0.v0.__block_id_x.loop_max = g.s0.v0.loop_max
    let g.s0.v0.__block_id_x.loop_min = g.s0.v0.loop_min
    let g.s0.v1.__block_id_y.loop_extent = g.s0.v1.loop_extent
    let g.s0.v1.__block_id_y.loop_max = g.s0.v1.loop_max
    let g.s0.v1.__block_id_y.loop_min = g.s0.v1.loop_min
    parallel<Renderscript> (g.s0.v1.__block_id_y, g.s0.v1.__block_id_y.loop_min, g.s0.v1.__block_id_y.loop_extent) {
      let g.s0.v1 = g.s0.v1.__block_id_y
      parallel<Renderscript> (g.s0.v0.__block_id_x, g.s0.v0.__block_id_x.loop_min, g.s0.v0.__block_id_x.loop_extent) {
        let g.s0.v0 = g.s0.v0.__block_id_x
        g(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y) = f(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y)
      }
    }
  }
  0
}

Injecting memoization...
Lowering after injecting memoization:
realize f([f.v0.min_realized, f.v0.extent_realized], [f.v1.min_realized, f.v1.extent_realized]) {
  produce f {
    let f.s0.v1.loop_max = f.s0.v1.max
    let f.s0.v1.loop_min = f.s0.v1.min
    let f.s0.v1.loop_extent = ((f.s0.v1.max + 1) - f.s0.v1.min)
    let f.s0.v0.loop_max = f.s0.v0.max
    let f.s0.v0.loop_min = f.s0.v0.min
    let f.s0.v0.loop_extent = ((f.s0.v0.max + 1) - f.s0.v0.min)
    let f.s0.v0.__block_id_x.loop_extent = f.s0.v0.loop_extent
    let f.s0.v0.__block_id_x.loop_max = f.s0.v0.loop_max
    let f.s0.v0.__block_id_x.loop_min = f.s0.v0.loop_min
    let f.s0.v1.__block_id_y.loop_extent = f.s0.v1.loop_extent
    let f.s0.v1.__block_id_y.loop_max = f.s0.v1.loop_max
    let f.s0.v1.__block_id_y.loop_min = f.s0.v1.loop_min
    parallel<Renderscript> (f.s0.v1.__block_id_y, f.s0.v1.__block_id_y.loop_min, f.s0.v1.__block_id_y.loop_extent) {
      let f.s0.v1 = f.s0.v1.__block_id_y
      parallel<Renderscript> (f.s0.v0.__block_id_x, f.s0.v0.__block_id_x.loop_min, f.s0.v0.__block_id_x.loop_extent) {
        let f.s0.v0 = f.s0.v0.__block_id_x
        f(f.s0.v0.__block_id_x, f.s0.v1.__block_id_y) = input(max(min(f.s0.v0.__block_id_x, (input.extent.0 - 1)), 0), max(min(f.s0.v1.__block_id_y, (input.extent.1 - 1)), 0))
      }
    }
  }
  produce g {
    let g.s0.v1.loop_max = g.s0.v1.max
    let g.s0.v1.loop_min = g.s0.v1.min
    let g.s0.v1.loop_extent = ((g.s0.v1.max + 1) - g.s0.v1.min)
    let g.s0.v0.loop_max = g.s0.v0.max
    let g.s0.v0.loop_min = g.s0.v0.min
    let g.s0.v0.loop_extent = ((g.s0.v0.max + 1) - g.s0.v0.min)
    let g.s0.v0.__block_id_x.loop_extent = g.s0.v0.loop_extent
    let g.s0.v0.__block_id_x.loop_max = g.s0.v0.loop_max
    let g.s0.v0.__block_id_x.loop_min = g.s0.v0.loop_min
    let g.s0.v1.__block_id_y.loop_extent = g.s0.v1.loop_extent
    let g.s0.v1.__block_id_y.loop_max = g.s0.v1.loop_max
    let g.s0.v1.__block_id_y.loop_min = g.s0.v1.loop_min
    parallel<Renderscript> (g.s0.v1.__block_id_y, g.s0.v1.__block_id_y.loop_min, g.s0.v1.__block_id_y.loop_extent) {
      let g.s0.v1 = g.s0.v1.__block_id_y
      parallel<Renderscript> (g.s0.v0.__block_id_x, g.s0.v0.__block_id_x.loop_min, g.s0.v0.__block_id_x.loop_extent) {
        let g.s0.v0 = g.s0.v0.__block_id_x
        g(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y) = f(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y)
      }
    }
  }
  0
}

Injecting tracing...
Lowering after injecting tracing:
realize f([f.v0.min_realized, f.v0.extent_realized], [f.v1.min_realized, f.v1.extent_realized]) {
  produce f {
    let f.s0.v1.loop_max = f.s0.v1.max
    let f.s0.v1.loop_min = f.s0.v1.min
    let f.s0.v1.loop_extent = ((f.s0.v1.max + 1) - f.s0.v1.min)
    let f.s0.v0.loop_max = f.s0.v0.max
    let f.s0.v0.loop_min = f.s0.v0.min
    let f.s0.v0.loop_extent = ((f.s0.v0.max + 1) - f.s0.v0.min)
    let f.s0.v0.__block_id_x.loop_extent = f.s0.v0.loop_extent
    let f.s0.v0.__block_id_x.loop_max = f.s0.v0.loop_max
    let f.s0.v0.__block_id_x.loop_min = f.s0.v0.loop_min
    let f.s0.v1.__block_id_y.loop_extent = f.s0.v1.loop_extent
    let f.s0.v1.__block_id_y.loop_max = f.s0.v1.loop_max
    let f.s0.v1.__block_id_y.loop_min = f.s0.v1.loop_min
    parallel<Renderscript> (f.s0.v1.__block_id_y, f.s0.v1.__block_id_y.loop_min, f.s0.v1.__block_id_y.loop_extent) {
      let f.s0.v1 = f.s0.v1.__block_id_y
      parallel<Renderscript> (f.s0.v0.__block_id_x, f.s0.v0.__block_id_x.loop_min, f.s0.v0.__block_id_x.loop_extent) {
        let f.s0.v0 = f.s0.v0.__block_id_x
        f(f.s0.v0.__block_id_x, f.s0.v1.__block_id_y) = input(max(min(f.s0.v0.__block_id_x, (input.extent.0 - 1)), 0), max(min(f.s0.v1.__block_id_y, (input.extent.1 - 1)), 0))
      }
    }
  }
  produce g {
    let g.s0.v1.loop_max = g.s0.v1.max
    let g.s0.v1.loop_min = g.s0.v1.min
    let g.s0.v1.loop_extent = ((g.s0.v1.max + 1) - g.s0.v1.min)
    let g.s0.v0.loop_max = g.s0.v0.max
    let g.s0.v0.loop_min = g.s0.v0.min
    let g.s0.v0.loop_extent = ((g.s0.v0.max + 1) - g.s0.v0.min)
    let g.s0.v0.__block_id_x.loop_extent = g.s0.v0.loop_extent
    let g.s0.v0.__block_id_x.loop_max = g.s0.v0.loop_max
    let g.s0.v0.__block_id_x.loop_min = g.s0.v0.loop_min
    let g.s0.v1.__block_id_y.loop_extent = g.s0.v1.loop_extent
    let g.s0.v1.__block_id_y.loop_max = g.s0.v1.loop_max
    let g.s0.v1.__block_id_y.loop_min = g.s0.v1.loop_min
    parallel<Renderscript> (g.s0.v1.__block_id_y, g.s0.v1.__block_id_y.loop_min, g.s0.v1.__block_id_y.loop_extent) {
      let g.s0.v1 = g.s0.v1.__block_id_y
      parallel<Renderscript> (g.s0.v0.__block_id_x, g.s0.v0.__block_id_x.loop_min, g.s0.v0.__block_id_x.loop_extent) {
        let g.s0.v0 = g.s0.v0.__block_id_x
        g(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y) = f(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y)
      }
    }
  }
  0
}

Injecting profiling...
Lowering after injecting profiling:
realize f([f.v0.min_realized, f.v0.extent_realized], [f.v1.min_realized, f.v1.extent_realized]) {
  produce f {
    let f.s0.v1.loop_max = f.s0.v1.max
    let f.s0.v1.loop_min = f.s0.v1.min
    let f.s0.v1.loop_extent = ((f.s0.v1.max + 1) - f.s0.v1.min)
    let f.s0.v0.loop_max = f.s0.v0.max
    let f.s0.v0.loop_min = f.s0.v0.min
    let f.s0.v0.loop_extent = ((f.s0.v0.max + 1) - f.s0.v0.min)
    let f.s0.v0.__block_id_x.loop_extent = f.s0.v0.loop_extent
    let f.s0.v0.__block_id_x.loop_max = f.s0.v0.loop_max
    let f.s0.v0.__block_id_x.loop_min = f.s0.v0.loop_min
    let f.s0.v1.__block_id_y.loop_extent = f.s0.v1.loop_extent
    let f.s0.v1.__block_id_y.loop_max = f.s0.v1.loop_max
    let f.s0.v1.__block_id_y.loop_min = f.s0.v1.loop_min
    parallel<Renderscript> (f.s0.v1.__block_id_y, f.s0.v1.__block_id_y.loop_min, f.s0.v1.__block_id_y.loop_extent) {
      let f.s0.v1 = f.s0.v1.__block_id_y
      parallel<Renderscript> (f.s0.v0.__block_id_x, f.s0.v0.__block_id_x.loop_min, f.s0.v0.__block_id_x.loop_extent) {
        let f.s0.v0 = f.s0.v0.__block_id_x
        f(f.s0.v0.__block_id_x, f.s0.v1.__block_id_y) = input(max(min(f.s0.v0.__block_id_x, (input.extent.0 - 1)), 0), max(min(f.s0.v1.__block_id_y, (input.extent.1 - 1)), 0))
      }
    }
  }
  produce g {
    let g.s0.v1.loop_max = g.s0.v1.max
    let g.s0.v1.loop_min = g.s0.v1.min
    let g.s0.v1.loop_extent = ((g.s0.v1.max + 1) - g.s0.v1.min)
    let g.s0.v0.loop_max = g.s0.v0.max
    let g.s0.v0.loop_min = g.s0.v0.min
    let g.s0.v0.loop_extent = ((g.s0.v0.max + 1) - g.s0.v0.min)
    let g.s0.v0.__block_id_x.loop_extent = g.s0.v0.loop_extent
    let g.s0.v0.__block_id_x.loop_max = g.s0.v0.loop_max
    let g.s0.v0.__block_id_x.loop_min = g.s0.v0.loop_min
    let g.s0.v1.__block_id_y.loop_extent = g.s0.v1.loop_extent
    let g.s0.v1.__block_id_y.loop_max = g.s0.v1.loop_max
    let g.s0.v1.__block_id_y.loop_min = g.s0.v1.loop_min
    parallel<Renderscript> (g.s0.v1.__block_id_y, g.s0.v1.__block_id_y.loop_min, g.s0.v1.__block_id_y.loop_extent) {
      let g.s0.v1 = g.s0.v1.__block_id_y
      parallel<Renderscript> (g.s0.v0.__block_id_x, g.s0.v0.__block_id_x.loop_min, g.s0.v0.__block_id_x.loop_extent) {
        let g.s0.v0 = g.s0.v0.__block_id_x
        g(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y) = f(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y)
      }
    }
  }
  0
}

Adding checks for parameters
Lowering after injecting parameter checks:
realize f([f.v0.min_realized, f.v0.extent_realized], [f.v1.min_realized, f.v1.extent_realized]) {
  produce f {
    let f.s0.v1.loop_max = f.s0.v1.max
    let f.s0.v1.loop_min = f.s0.v1.min
    let f.s0.v1.loop_extent = ((f.s0.v1.max + 1) - f.s0.v1.min)
    let f.s0.v0.loop_max = f.s0.v0.max
    let f.s0.v0.loop_min = f.s0.v0.min
    let f.s0.v0.loop_extent = ((f.s0.v0.max + 1) - f.s0.v0.min)
    let f.s0.v0.__block_id_x.loop_extent = f.s0.v0.loop_extent
    let f.s0.v0.__block_id_x.loop_max = f.s0.v0.loop_max
    let f.s0.v0.__block_id_x.loop_min = f.s0.v0.loop_min
    let f.s0.v1.__block_id_y.loop_extent = f.s0.v1.loop_extent
    let f.s0.v1.__block_id_y.loop_max = f.s0.v1.loop_max
    let f.s0.v1.__block_id_y.loop_min = f.s0.v1.loop_min
    parallel<Renderscript> (f.s0.v1.__block_id_y, f.s0.v1.__block_id_y.loop_min, f.s0.v1.__block_id_y.loop_extent) {
      let f.s0.v1 = f.s0.v1.__block_id_y
      parallel<Renderscript> (f.s0.v0.__block_id_x, f.s0.v0.__block_id_x.loop_min, f.s0.v0.__block_id_x.loop_extent) {
        let f.s0.v0 = f.s0.v0.__block_id_x
        f(f.s0.v0.__block_id_x, f.s0.v1.__block_id_y) = input(max(min(f.s0.v0.__block_id_x, (input.extent.0 - 1)), 0), max(min(f.s0.v1.__block_id_y, (input.extent.1 - 1)), 0))
      }
    }
  }
  produce g {
    let g.s0.v1.loop_max = g.s0.v1.max
    let g.s0.v1.loop_min = g.s0.v1.min
    let g.s0.v1.loop_extent = ((g.s0.v1.max + 1) - g.s0.v1.min)
    let g.s0.v0.loop_max = g.s0.v0.max
    let g.s0.v0.loop_min = g.s0.v0.min
    let g.s0.v0.loop_extent = ((g.s0.v0.max + 1) - g.s0.v0.min)
    let g.s0.v0.__block_id_x.loop_extent = g.s0.v0.loop_extent
    let g.s0.v0.__block_id_x.loop_max = g.s0.v0.loop_max
    let g.s0.v0.__block_id_x.loop_min = g.s0.v0.loop_min
    let g.s0.v1.__block_id_y.loop_extent = g.s0.v1.loop_extent
    let g.s0.v1.__block_id_y.loop_max = g.s0.v1.loop_max
    let g.s0.v1.__block_id_y.loop_min = g.s0.v1.loop_min
    parallel<Renderscript> (g.s0.v1.__block_id_y, g.s0.v1.__block_id_y.loop_min, g.s0.v1.__block_id_y.loop_extent) {
      let g.s0.v1 = g.s0.v1.__block_id_y
      parallel<Renderscript> (g.s0.v0.__block_id_x, g.s0.v0.__block_id_x.loop_min, g.s0.v0.__block_id_x.loop_extent) {
        let g.s0.v0 = g.s0.v0.__block_id_x
        g(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y) = f(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y)
      }
    }
  }
  0
}

Computing bounds of each function's value
input.extent.0 not in scope, so leaving it as-is
Bounds of min(v0, (input.extent.0 - 1))
(undefined), (input.extent.0 - 1)
Bounds of max(min(v0, (input.extent.0 - 1)), 0)
0, max((input.extent.0 - 1), 0)
Bounds on value 0 for func clamped are: (undefined), (undefined)
Bounds on value 0 for func f are: (undefined), (undefined)
Bounds on value 0 for func g are: (undefined), (undefined)
Adding checks for images
f.s0.v1.max not in scope, so leaving it as-is
f.s0.v1.min not in scope, so leaving it as-is
f.s0.v1.max not in scope, so leaving it as-is
f.s0.v1.min not in scope, so leaving it as-is
f.s0.v0.max not in scope, so leaving it as-is
f.s0.v0.min not in scope, so leaving it as-is
f.s0.v0.max not in scope, so leaving it as-is
f.s0.v0.min not in scope, so leaving it as-is
input.extent.0 not in scope, so leaving it as-is
Bounds of min(f.s0.v0.__block_id_x, (input.extent.0 - 1))
min(f.s0.v0.min, (input.extent.0 - 1)), min(f.s0.v0.max, (input.extent.0 - 1))
Bounds of max(min(f.s0.v0.__block_id_x, (input.extent.0 - 1)), 0)
max(min(f.s0.v0.min, (input.extent.0 - 1)), 0), max(min(f.s0.v0.max, (input.extent.0 - 1)), 0)
input.extent.1 not in scope, so leaving it as-is
Bounds of min(f.s0.v1.__block_id_y, (input.extent.1 - 1))
min(f.s0.v1.min, (input.extent.1 - 1)), min(f.s0.v1.max, (input.extent.1 - 1))
Bounds of max(min(f.s0.v1.__block_id_y, (input.extent.1 - 1)), 0)
max(min(f.s0.v1.min, (input.extent.1 - 1)), 0), max(min(f.s0.v1.max, (input.extent.1 - 1)), 0)
g.s0.v1.max not in scope, so leaving it as-is
g.s0.v1.min not in scope, so leaving it as-is
g.s0.v1.max not in scope, so leaving it as-is
g.s0.v1.min not in scope, so leaving it as-is
g.s0.v0.max not in scope, so leaving it as-is
g.s0.v0.min not in scope, so leaving it as-is
g.s0.v0.max not in scope, so leaving it as-is
g.s0.v0.min not in scope, so leaving it as-is
In image g region touched is:
Injecting constraints for g.0
Injecting constraints for g.1
In image input region touched is:
Injecting constraints for input.0
Injecting constraints for input.1
Lowering after injecting image checks:
let g.extent.0.required = ((g.s0.v0.max + 1) - g.s0.v0.min)
let g.min.0.required = g.s0.v0.min
let g.stride.0.required = 1
let g.extent.1.required = ((g.s0.v1.max + 1) - g.s0.v1.min)
let g.min.1.required = g.s0.v1.min
let g.stride.1.required = (g.stride.0.required*g.extent.0.required)
let input.extent.0.required = ((max(min(f.s0.v0.max, (input.extent.0 - 1)), 0) + 1) - max(min(f.s0.v0.min, (input.extent.0 - 1)), 0))
let input.min.0.required = max(min(f.s0.v0.min, (input.extent.0 - 1)), 0)
let input.stride.0.required = 1
let input.extent.1.required = ((max(min(f.s0.v1.max, (input.extent.1 - 1)), 0) + 1) - max(min(f.s0.v1.min, (input.extent.1 - 1)), 0))
let input.min.1.required = max(min(f.s0.v1.min, (input.extent.1 - 1)), 0)
let input.stride.1.required = (input.stride.0.required*input.extent.0.required)
let g.stride.0.constrained = 1
let input.stride.0.constrained = 1
let g.stride.0.proposed = 1
let g.min.0.proposed = g.min.0.required
let g.extent.0.proposed = g.extent.0.required
let g.stride.1.proposed = g.stride.1.required
let g.min.1.proposed = g.min.1.required
let g.extent.1.proposed = g.extent.1.required
let input.stride.0.proposed = 1
let input.min.0.proposed = input.min.0.required
let input.extent.0.proposed = input.extent.0.required
let input.stride.1.proposed = input.stride.1.required
let input.min.1.proposed = input.min.1.required
let input.extent.1.proposed = input.extent.1.required
assert((!g.host_and_dev_are_null || ((g.min.0.proposed <= g.min.0.required) && (((g.min.0.proposed + g.extent.0.proposed) - 1) >= ((g.min.0.required + g.extent.0.required) - 1)))), halide_error_constraints_make_required_region_smaller("Output buffer g", 0, g.min.0.proposed, ((g.min.0.proposed + g.extent.0.proposed) - 1), g.min.0.required, ((g.min.0.required + g.extent.0.required) - 1)))
assert((!g.host_and_dev_are_null || ((g.min.1.proposed <= g.min.1.required) && (((g.min.1.proposed + g.extent.1.proposed) - 1) >= ((g.min.1.required + g.extent.1.required) - 1)))), halide_error_constraints_make_required_region_smaller("Output buffer g", 1, g.min.1.proposed, ((g.min.1.proposed + g.extent.1.proposed) - 1), g.min.1.required, ((g.min.1.required + g.extent.1.required) - 1)))
assert((!input.host_and_dev_are_null || ((input.min.0.proposed <= input.min.0.required) && (((input.min.0.proposed + input.extent.0.proposed) - 1) >= ((input.min.0.required + input.extent.0.required) - 1)))), halide_error_constraints_make_required_region_smaller("Input buffer input", 0, input.min.0.proposed, ((input.min.0.proposed + input.extent.0.proposed) - 1), input.min.0.required, ((input.min.0.required + input.extent.0.required) - 1)))
assert((!input.host_and_dev_are_null || ((input.min.1.proposed <= input.min.1.required) && (((input.min.1.proposed + input.extent.1.proposed) - 1) >= ((input.min.1.required + input.extent.1.required) - 1)))), halide_error_constraints_make_required_region_smaller("Input buffer input", 1, input.min.1.proposed, ((input.min.1.proposed + input.extent.1.proposed) - 1), input.min.1.required, ((input.min.1.required + input.extent.1.required) - 1)))
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0.proposed, g.extent.0.proposed, g.stride.0.proposed, g.min.1.proposed, g.extent.1.proposed, g.stride.1.proposed)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.proposed, input.extent.0.proposed, input.stride.0.proposed, input.min.1.proposed, input.extent.1.proposed, input.stride.1.proposed)
}
if (!((uint1(0) || g.host_and_dev_are_null) || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((g.min.0 <= g.min.0.required) && (((g.min.0 + g.extent.0) - 1) >= ((g.min.0.required + g.extent.0.required) - 1))), halide_error_access_out_of_bounds("Output buffer g", 0, g.min.0.required, ((g.min.0.required + g.extent.0.required) - 1), g.min.0, ((g.min.0 + g.extent.0) - 1)))
  assert(((g.min.1 <= g.min.1.required) && (((g.min.1 + g.extent.1) - 1) >= ((g.min.1.required + g.extent.1.required) - 1))), halide_error_access_out_of_bounds("Output buffer g", 1, g.min.1.required, ((g.min.1.required + g.extent.1.required) - 1), g.min.1, ((g.min.1 + g.extent.1) - 1)))
  assert(((input.min.0 <= input.min.0.required) && (((input.min.0 + input.extent.0) - 1) >= ((input.min.0.required + input.extent.0.required) - 1))), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, ((input.min.0.required + input.extent.0.required) - 1), input.min.0, ((input.min.0 + input.extent.0) - 1)))
  assert(((input.min.1 <= input.min.1.required) && (((input.min.1 + input.extent.1) - 1) >= ((input.min.1.required + input.extent.1.required) - 1))), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, ((input.min.1.required + input.extent.1.required) - 1), input.min.1, ((input.min.1 + input.extent.1) - 1)))
  assert((g.stride.0 == g.stride.0.constrained), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", g.stride.0.constrained))
  assert((input.stride.0 == input.stride.0.constrained), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", input.stride.0.constrained))
  let g.total_extent.0 = int64(g.extent.0)
  let g.total_extent.1 = (int64(g.extent.1)*g.total_extent.0)
  let input.total_extent.0 = int64(input.extent.0)
  let input.total_extent.1 = (int64(input.extent.1)*input.total_extent.0)
  assert(((int64(g.extent.0)*int64(g.stride.0.constrained)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.0)*int64(g.stride.0.constrained)), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert(((int64(input.extent.0)*int64(input.stride.0.constrained)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.0)*int64(input.stride.0.constrained)), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  realize f([f.v0.min_realized, f.v0.extent_realized], [f.v1.min_realized, f.v1.extent_realized]) {
    produce f {
      let f.s0.v1.loop_max = f.s0.v1.max
      let f.s0.v1.loop_min = f.s0.v1.min
      let f.s0.v1.loop_extent = ((f.s0.v1.max + 1) - f.s0.v1.min)
      let f.s0.v0.loop_max = f.s0.v0.max
      let f.s0.v0.loop_min = f.s0.v0.min
      let f.s0.v0.loop_extent = ((f.s0.v0.max + 1) - f.s0.v0.min)
      let f.s0.v0.__block_id_x.loop_extent = f.s0.v0.loop_extent
      let f.s0.v0.__block_id_x.loop_max = f.s0.v0.loop_max
      let f.s0.v0.__block_id_x.loop_min = f.s0.v0.loop_min
      let f.s0.v1.__block_id_y.loop_extent = f.s0.v1.loop_extent
      let f.s0.v1.__block_id_y.loop_max = f.s0.v1.loop_max
      let f.s0.v1.__block_id_y.loop_min = f.s0.v1.loop_min
      parallel<Renderscript> (f.s0.v1.__block_id_y, f.s0.v1.__block_id_y.loop_min, f.s0.v1.__block_id_y.loop_extent) {
        let f.s0.v1 = f.s0.v1.__block_id_y
        parallel<Renderscript> (f.s0.v0.__block_id_x, f.s0.v0.__block_id_x.loop_min, f.s0.v0.__block_id_x.loop_extent) {
          let f.s0.v0 = f.s0.v0.__block_id_x
          f(f.s0.v0.__block_id_x, f.s0.v1.__block_id_y) = input(max(min(f.s0.v0.__block_id_x, (input.extent.0 - 1)), 0), max(min(f.s0.v1.__block_id_y, (input.extent.1 - 1)), 0))
        }
      }
    }
    produce g {
      let g.s0.v1.loop_max = g.s0.v1.max
      let g.s0.v1.loop_min = g.s0.v1.min
      let g.s0.v1.loop_extent = ((g.s0.v1.max + 1) - g.s0.v1.min)
      let g.s0.v0.loop_max = g.s0.v0.max
      let g.s0.v0.loop_min = g.s0.v0.min
      let g.s0.v0.loop_extent = ((g.s0.v0.max + 1) - g.s0.v0.min)
      let g.s0.v0.__block_id_x.loop_extent = g.s0.v0.loop_extent
      let g.s0.v0.__block_id_x.loop_max = g.s0.v0.loop_max
      let g.s0.v0.__block_id_x.loop_min = g.s0.v0.loop_min
      let g.s0.v1.__block_id_y.loop_extent = g.s0.v1.loop_extent
      let g.s0.v1.__block_id_y.loop_max = g.s0.v1.loop_max
      let g.s0.v1.__block_id_y.loop_min = g.s0.v1.loop_min
      parallel<Renderscript> (g.s0.v1.__block_id_y, g.s0.v1.__block_id_y.loop_min, g.s0.v1.__block_id_y.loop_extent) {
        let g.s0.v1 = g.s0.v1.__block_id_y
        parallel<Renderscript> (g.s0.v0.__block_id_x, g.s0.v0.__block_id_x.loop_min, g.s0.v0.__block_id_x.loop_extent) {
          let g.s0.v0 = g.s0.v0.__block_id_x
          g(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y) = f(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y)
        }
      }
    }
    0
  }
}

Performing computation bounds inference...



Input to letify (let clamped.v1 = v1 in (let clamped.v0 = v0 in input(max(min(clamped.v0, (input.extent.0 - 1)), 0), max(min(clamped.v1, (input.extent.1 - 1)), 0))))
Canonical form without lets input(max(min(v0, (input.extent.0 - 1)), 0), max(min(v1, (input.extent.1 - 1)), 0))
0: v1, 0
1: v0, 0
2: input.extent.0, 0
3: 1, 0
4: (input.extent.0 - 1), 0
5: min(v0, (input.extent.0 - 1)), 1
6: 0, 0
7: max(min(v0, (input.extent.0 - 1)), 0), 1
8: input.extent.1, 0
9: (input.extent.1 - 1), 0
10: min(v1, (input.extent.1 - 1)), 1
11: max(min(v1, (input.extent.1 - 1)), 0), 1
12: input(max(min(v0, (input.extent.0 - 1)), 0), max(min(v1, (input.extent.1 - 1)), 0)), 1
With variables input(max(min(v0, (input.extent.0 - 1)), 0), max(min(v1, (input.extent.1 - 1)), 0))
With lets: input(max(min(v0, (input.extent.0 - 1)), 0), max(min(v1, (input.extent.1 - 1)), 0))
input.extent.0 not in scope, so leaving it as-is
Bounds of min(v0, (input.extent.0 - 1))
min(f.s0.v0.min, (input.extent.0 - 1)), min(f.s0.v0.max, (input.extent.0 - 1))
Bounds of max(min(v0, (input.extent.0 - 1)), 0)
max(min(f.s0.v0.min, (input.extent.0 - 1)), 0), max(min(f.s0.v0.max, (input.extent.0 - 1)), 0)
input.extent.1 not in scope, so leaving it as-is
Bounds of min(v1, (input.extent.1 - 1))
min(f.s0.v1.min, (input.extent.1 - 1)), min(f.s0.v1.max, (input.extent.1 - 1))
Bounds of max(min(v1, (input.extent.1 - 1)), 0)
max(min(f.s0.v1.min, (input.extent.1 - 1)), 0), max(min(f.s0.v1.max, (input.extent.1 - 1)), 0)
f.s0.v0.__block_id_x not in scope, so leaving it as-is
f.s0.v1.__block_id_y not in scope, so leaving it as-is
g.s0.v0.__block_id_x not in scope, so leaving it as-is
g.s0.v1.__block_id_y not in scope, so leaving it as-is
Lowering after computation bounds inference:
let g.s0.v1.max = ((g.min.1 + g.extent.1) - 1)
let g.s0.v1.min = g.min.1
let g.s0.v0.max = ((g.min.0 + g.extent.0) - 1)
let g.s0.v0.min = g.min.0
let f.s0.v1.max = g.s0.v1.max
let f.s0.v1.min = g.s0.v1.min
let f.s0.v0.max = g.s0.v0.max
let f.s0.v0.min = g.s0.v0.min
let g.extent.0.required = ((g.s0.v0.max + 1) - g.s0.v0.min)
let g.min.0.required = g.s0.v0.min
let g.stride.0.required = 1
let g.extent.1.required = ((g.s0.v1.max + 1) - g.s0.v1.min)
let g.min.1.required = g.s0.v1.min
let g.stride.1.required = (g.stride.0.required*g.extent.0.required)
let input.extent.0.required = ((max(min(f.s0.v0.max, (input.extent.0 - 1)), 0) + 1) - max(min(f.s0.v0.min, (input.extent.0 - 1)), 0))
let input.min.0.required = max(min(f.s0.v0.min, (input.extent.0 - 1)), 0)
let input.stride.0.required = 1
let input.extent.1.required = ((max(min(f.s0.v1.max, (input.extent.1 - 1)), 0) + 1) - max(min(f.s0.v1.min, (input.extent.1 - 1)), 0))
let input.min.1.required = max(min(f.s0.v1.min, (input.extent.1 - 1)), 0)
let input.stride.1.required = (input.stride.0.required*input.extent.0.required)
let g.stride.0.constrained = 1
let input.stride.0.constrained = 1
let g.stride.0.proposed = 1
let g.min.0.proposed = g.min.0.required
let g.extent.0.proposed = g.extent.0.required
let g.stride.1.proposed = g.stride.1.required
let g.min.1.proposed = g.min.1.required
let g.extent.1.proposed = g.extent.1.required
let input.stride.0.proposed = 1
let input.min.0.proposed = input.min.0.required
let input.extent.0.proposed = input.extent.0.required
let input.stride.1.proposed = input.stride.1.required
let input.min.1.proposed = input.min.1.required
let input.extent.1.proposed = input.extent.1.required
assert((!g.host_and_dev_are_null || ((g.min.0.proposed <= g.min.0.required) && (((g.min.0.proposed + g.extent.0.proposed) - 1) >= ((g.min.0.required + g.extent.0.required) - 1)))), halide_error_constraints_make_required_region_smaller("Output buffer g", 0, g.min.0.proposed, ((g.min.0.proposed + g.extent.0.proposed) - 1), g.min.0.required, ((g.min.0.required + g.extent.0.required) - 1)))
assert((!g.host_and_dev_are_null || ((g.min.1.proposed <= g.min.1.required) && (((g.min.1.proposed + g.extent.1.proposed) - 1) >= ((g.min.1.required + g.extent.1.required) - 1)))), halide_error_constraints_make_required_region_smaller("Output buffer g", 1, g.min.1.proposed, ((g.min.1.proposed + g.extent.1.proposed) - 1), g.min.1.required, ((g.min.1.required + g.extent.1.required) - 1)))
assert((!input.host_and_dev_are_null || ((input.min.0.proposed <= input.min.0.required) && (((input.min.0.proposed + input.extent.0.proposed) - 1) >= ((input.min.0.required + input.extent.0.required) - 1)))), halide_error_constraints_make_required_region_smaller("Input buffer input", 0, input.min.0.proposed, ((input.min.0.proposed + input.extent.0.proposed) - 1), input.min.0.required, ((input.min.0.required + input.extent.0.required) - 1)))
assert((!input.host_and_dev_are_null || ((input.min.1.proposed <= input.min.1.required) && (((input.min.1.proposed + input.extent.1.proposed) - 1) >= ((input.min.1.required + input.extent.1.required) - 1)))), halide_error_constraints_make_required_region_smaller("Input buffer input", 1, input.min.1.proposed, ((input.min.1.proposed + input.extent.1.proposed) - 1), input.min.1.required, ((input.min.1.required + input.extent.1.required) - 1)))
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0.proposed, g.extent.0.proposed, g.stride.0.proposed, g.min.1.proposed, g.extent.1.proposed, g.stride.1.proposed)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.proposed, input.extent.0.proposed, input.stride.0.proposed, input.min.1.proposed, input.extent.1.proposed, input.stride.1.proposed)
}
if (!((uint1(0) || g.host_and_dev_are_null) || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((g.min.0 <= g.min.0.required) && (((g.min.0 + g.extent.0) - 1) >= ((g.min.0.required + g.extent.0.required) - 1))), halide_error_access_out_of_bounds("Output buffer g", 0, g.min.0.required, ((g.min.0.required + g.extent.0.required) - 1), g.min.0, ((g.min.0 + g.extent.0) - 1)))
  assert(((g.min.1 <= g.min.1.required) && (((g.min.1 + g.extent.1) - 1) >= ((g.min.1.required + g.extent.1.required) - 1))), halide_error_access_out_of_bounds("Output buffer g", 1, g.min.1.required, ((g.min.1.required + g.extent.1.required) - 1), g.min.1, ((g.min.1 + g.extent.1) - 1)))
  assert(((input.min.0 <= input.min.0.required) && (((input.min.0 + input.extent.0) - 1) >= ((input.min.0.required + input.extent.0.required) - 1))), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, ((input.min.0.required + input.extent.0.required) - 1), input.min.0, ((input.min.0 + input.extent.0) - 1)))
  assert(((input.min.1 <= input.min.1.required) && (((input.min.1 + input.extent.1) - 1) >= ((input.min.1.required + input.extent.1.required) - 1))), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, ((input.min.1.required + input.extent.1.required) - 1), input.min.1, ((input.min.1 + input.extent.1) - 1)))
  assert((g.stride.0 == g.stride.0.constrained), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", g.stride.0.constrained))
  assert((input.stride.0 == input.stride.0.constrained), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", input.stride.0.constrained))
  let g.total_extent.0 = int64(g.extent.0)
  let g.total_extent.1 = (int64(g.extent.1)*g.total_extent.0)
  let input.total_extent.0 = int64(input.extent.0)
  let input.total_extent.1 = (int64(input.extent.1)*input.total_extent.0)
  assert(((int64(g.extent.0)*int64(g.stride.0.constrained)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.0)*int64(g.stride.0.constrained)), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert(((int64(input.extent.0)*int64(input.stride.0.constrained)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.0)*int64(input.stride.0.constrained)), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  realize f([f.v0.min_realized, f.v0.extent_realized], [f.v1.min_realized, f.v1.extent_realized]) {
    produce f {
      let f.s0.v1.loop_max = f.s0.v1.max
      let f.s0.v1.loop_min = f.s0.v1.min
      let f.s0.v1.loop_extent = ((f.s0.v1.max + 1) - f.s0.v1.min)
      let f.s0.v0.loop_max = f.s0.v0.max
      let f.s0.v0.loop_min = f.s0.v0.min
      let f.s0.v0.loop_extent = ((f.s0.v0.max + 1) - f.s0.v0.min)
      let f.s0.v0.__block_id_x.loop_extent = f.s0.v0.loop_extent
      let f.s0.v0.__block_id_x.loop_max = f.s0.v0.loop_max
      let f.s0.v0.__block_id_x.loop_min = f.s0.v0.loop_min
      let f.s0.v1.__block_id_y.loop_extent = f.s0.v1.loop_extent
      let f.s0.v1.__block_id_y.loop_max = f.s0.v1.loop_max
      let f.s0.v1.__block_id_y.loop_min = f.s0.v1.loop_min
      parallel<Renderscript> (f.s0.v1.__block_id_y, f.s0.v1.__block_id_y.loop_min, f.s0.v1.__block_id_y.loop_extent) {
        let f.s0.v1 = f.s0.v1.__block_id_y
        parallel<Renderscript> (f.s0.v0.__block_id_x, f.s0.v0.__block_id_x.loop_min, f.s0.v0.__block_id_x.loop_extent) {
          let f.s0.v0 = f.s0.v0.__block_id_x
          f(f.s0.v0.__block_id_x, f.s0.v1.__block_id_y) = input(max(min(f.s0.v0.__block_id_x, (input.extent.0 - 1)), 0), max(min(f.s0.v1.__block_id_y, (input.extent.1 - 1)), 0))
        }
      }
    }
    produce g {
      let g.s0.v1.loop_max = g.s0.v1.max
      let g.s0.v1.loop_min = g.s0.v1.min
      let g.s0.v1.loop_extent = ((g.s0.v1.max + 1) - g.s0.v1.min)
      let g.s0.v0.loop_max = g.s0.v0.max
      let g.s0.v0.loop_min = g.s0.v0.min
      let g.s0.v0.loop_extent = ((g.s0.v0.max + 1) - g.s0.v0.min)
      let g.s0.v0.__block_id_x.loop_extent = g.s0.v0.loop_extent
      let g.s0.v0.__block_id_x.loop_max = g.s0.v0.loop_max
      let g.s0.v0.__block_id_x.loop_min = g.s0.v0.loop_min
      let g.s0.v1.__block_id_y.loop_extent = g.s0.v1.loop_extent
      let g.s0.v1.__block_id_y.loop_max = g.s0.v1.loop_max
      let g.s0.v1.__block_id_y.loop_min = g.s0.v1.loop_min
      parallel<Renderscript> (g.s0.v1.__block_id_y, g.s0.v1.__block_id_y.loop_min, g.s0.v1.__block_id_y.loop_extent) {
        let g.s0.v1 = g.s0.v1.__block_id_y
        parallel<Renderscript> (g.s0.v0.__block_id_x, g.s0.v0.__block_id_x.loop_min, g.s0.v0.__block_id_x.loop_extent) {
          let g.s0.v0 = g.s0.v0.__block_id_x
          g(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y) = f(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y)
        }
      }
    }
    0
  }
}

Performing sliding window optimization...
Lowering after sliding window:
let g.s0.v1.max = ((g.min.1 + g.extent.1) - 1)
let g.s0.v1.min = g.min.1
let g.s0.v0.max = ((g.min.0 + g.extent.0) - 1)
let g.s0.v0.min = g.min.0
let f.s0.v1.max = g.s0.v1.max
let f.s0.v1.min = g.s0.v1.min
let f.s0.v0.max = g.s0.v0.max
let f.s0.v0.min = g.s0.v0.min
let g.extent.0.required = ((g.s0.v0.max + 1) - g.s0.v0.min)
let g.min.0.required = g.s0.v0.min
let g.stride.0.required = 1
let g.extent.1.required = ((g.s0.v1.max + 1) - g.s0.v1.min)
let g.min.1.required = g.s0.v1.min
let g.stride.1.required = (g.stride.0.required*g.extent.0.required)
let input.extent.0.required = ((max(min(f.s0.v0.max, (input.extent.0 - 1)), 0) + 1) - max(min(f.s0.v0.min, (input.extent.0 - 1)), 0))
let input.min.0.required = max(min(f.s0.v0.min, (input.extent.0 - 1)), 0)
let input.stride.0.required = 1
let input.extent.1.required = ((max(min(f.s0.v1.max, (input.extent.1 - 1)), 0) + 1) - max(min(f.s0.v1.min, (input.extent.1 - 1)), 0))
let input.min.1.required = max(min(f.s0.v1.min, (input.extent.1 - 1)), 0)
let input.stride.1.required = (input.stride.0.required*input.extent.0.required)
let g.stride.0.constrained = 1
let input.stride.0.constrained = 1
let g.stride.0.proposed = 1
let g.min.0.proposed = g.min.0.required
let g.extent.0.proposed = g.extent.0.required
let g.stride.1.proposed = g.stride.1.required
let g.min.1.proposed = g.min.1.required
let g.extent.1.proposed = g.extent.1.required
let input.stride.0.proposed = 1
let input.min.0.proposed = input.min.0.required
let input.extent.0.proposed = input.extent.0.required
let input.stride.1.proposed = input.stride.1.required
let input.min.1.proposed = input.min.1.required
let input.extent.1.proposed = input.extent.1.required
assert((!g.host_and_dev_are_null || ((g.min.0.proposed <= g.min.0.required) && (((g.min.0.proposed + g.extent.0.proposed) - 1) >= ((g.min.0.required + g.extent.0.required) - 1)))), halide_error_constraints_make_required_region_smaller("Output buffer g", 0, g.min.0.proposed, ((g.min.0.proposed + g.extent.0.proposed) - 1), g.min.0.required, ((g.min.0.required + g.extent.0.required) - 1)))
assert((!g.host_and_dev_are_null || ((g.min.1.proposed <= g.min.1.required) && (((g.min.1.proposed + g.extent.1.proposed) - 1) >= ((g.min.1.required + g.extent.1.required) - 1)))), halide_error_constraints_make_required_region_smaller("Output buffer g", 1, g.min.1.proposed, ((g.min.1.proposed + g.extent.1.proposed) - 1), g.min.1.required, ((g.min.1.required + g.extent.1.required) - 1)))
assert((!input.host_and_dev_are_null || ((input.min.0.proposed <= input.min.0.required) && (((input.min.0.proposed + input.extent.0.proposed) - 1) >= ((input.min.0.required + input.extent.0.required) - 1)))), halide_error_constraints_make_required_region_smaller("Input buffer input", 0, input.min.0.proposed, ((input.min.0.proposed + input.extent.0.proposed) - 1), input.min.0.required, ((input.min.0.required + input.extent.0.required) - 1)))
assert((!input.host_and_dev_are_null || ((input.min.1.proposed <= input.min.1.required) && (((input.min.1.proposed + input.extent.1.proposed) - 1) >= ((input.min.1.required + input.extent.1.required) - 1)))), halide_error_constraints_make_required_region_smaller("Input buffer input", 1, input.min.1.proposed, ((input.min.1.proposed + input.extent.1.proposed) - 1), input.min.1.required, ((input.min.1.required + input.extent.1.required) - 1)))
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0.proposed, g.extent.0.proposed, g.stride.0.proposed, g.min.1.proposed, g.extent.1.proposed, g.stride.1.proposed)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.proposed, input.extent.0.proposed, input.stride.0.proposed, input.min.1.proposed, input.extent.1.proposed, input.stride.1.proposed)
}
if (!((uint1(0) || g.host_and_dev_are_null) || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((g.min.0 <= g.min.0.required) && (((g.min.0 + g.extent.0) - 1) >= ((g.min.0.required + g.extent.0.required) - 1))), halide_error_access_out_of_bounds("Output buffer g", 0, g.min.0.required, ((g.min.0.required + g.extent.0.required) - 1), g.min.0, ((g.min.0 + g.extent.0) - 1)))
  assert(((g.min.1 <= g.min.1.required) && (((g.min.1 + g.extent.1) - 1) >= ((g.min.1.required + g.extent.1.required) - 1))), halide_error_access_out_of_bounds("Output buffer g", 1, g.min.1.required, ((g.min.1.required + g.extent.1.required) - 1), g.min.1, ((g.min.1 + g.extent.1) - 1)))
  assert(((input.min.0 <= input.min.0.required) && (((input.min.0 + input.extent.0) - 1) >= ((input.min.0.required + input.extent.0.required) - 1))), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, ((input.min.0.required + input.extent.0.required) - 1), input.min.0, ((input.min.0 + input.extent.0) - 1)))
  assert(((input.min.1 <= input.min.1.required) && (((input.min.1 + input.extent.1) - 1) >= ((input.min.1.required + input.extent.1.required) - 1))), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, ((input.min.1.required + input.extent.1.required) - 1), input.min.1, ((input.min.1 + input.extent.1) - 1)))
  assert((g.stride.0 == g.stride.0.constrained), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", g.stride.0.constrained))
  assert((input.stride.0 == input.stride.0.constrained), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", input.stride.0.constrained))
  let g.total_extent.0 = int64(g.extent.0)
  let g.total_extent.1 = (int64(g.extent.1)*g.total_extent.0)
  let input.total_extent.0 = int64(input.extent.0)
  let input.total_extent.1 = (int64(input.extent.1)*input.total_extent.0)
  assert(((int64(g.extent.0)*int64(g.stride.0.constrained)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.0)*int64(g.stride.0.constrained)), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert(((int64(input.extent.0)*int64(input.stride.0.constrained)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.0)*int64(input.stride.0.constrained)), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  realize f([f.v0.min_realized, f.v0.extent_realized], [f.v1.min_realized, f.v1.extent_realized]) {
    produce f {
      let f.s0.v1.loop_max = f.s0.v1.max
      let f.s0.v1.loop_min = f.s0.v1.min
      let f.s0.v1.loop_extent = ((f.s0.v1.max + 1) - f.s0.v1.min)
      let f.s0.v0.loop_max = f.s0.v0.max
      let f.s0.v0.loop_min = f.s0.v0.min
      let f.s0.v0.loop_extent = ((f.s0.v0.max + 1) - f.s0.v0.min)
      let f.s0.v0.__block_id_x.loop_extent = f.s0.v0.loop_extent
      let f.s0.v0.__block_id_x.loop_max = f.s0.v0.loop_max
      let f.s0.v0.__block_id_x.loop_min = f.s0.v0.loop_min
      let f.s0.v1.__block_id_y.loop_extent = f.s0.v1.loop_extent
      let f.s0.v1.__block_id_y.loop_max = f.s0.v1.loop_max
      let f.s0.v1.__block_id_y.loop_min = f.s0.v1.loop_min
      parallel<Renderscript> (f.s0.v1.__block_id_y, f.s0.v1.__block_id_y.loop_min, f.s0.v1.__block_id_y.loop_extent) {
        let f.s0.v1 = f.s0.v1.__block_id_y
        parallel<Renderscript> (f.s0.v0.__block_id_x, f.s0.v0.__block_id_x.loop_min, f.s0.v0.__block_id_x.loop_extent) {
          let f.s0.v0 = f.s0.v0.__block_id_x
          f(f.s0.v0.__block_id_x, f.s0.v1.__block_id_y) = input(max(min(f.s0.v0.__block_id_x, (input.extent.0 - 1)), 0), max(min(f.s0.v1.__block_id_y, (input.extent.1 - 1)), 0))
        }
      }
    }
    produce g {
      let g.s0.v1.loop_max = g.s0.v1.max
      let g.s0.v1.loop_min = g.s0.v1.min
      let g.s0.v1.loop_extent = ((g.s0.v1.max + 1) - g.s0.v1.min)
      let g.s0.v0.loop_max = g.s0.v0.max
      let g.s0.v0.loop_min = g.s0.v0.min
      let g.s0.v0.loop_extent = ((g.s0.v0.max + 1) - g.s0.v0.min)
      let g.s0.v0.__block_id_x.loop_extent = g.s0.v0.loop_extent
      let g.s0.v0.__block_id_x.loop_max = g.s0.v0.loop_max
      let g.s0.v0.__block_id_x.loop_min = g.s0.v0.loop_min
      let g.s0.v1.__block_id_y.loop_extent = g.s0.v1.loop_extent
      let g.s0.v1.__block_id_y.loop_max = g.s0.v1.loop_max
      let g.s0.v1.__block_id_y.loop_min = g.s0.v1.loop_min
      parallel<Renderscript> (g.s0.v1.__block_id_y, g.s0.v1.__block_id_y.loop_min, g.s0.v1.__block_id_y.loop_extent) {
        let g.s0.v1 = g.s0.v1.__block_id_y
        parallel<Renderscript> (g.s0.v0.__block_id_x, g.s0.v0.__block_id_x.loop_min, g.s0.v0.__block_id_x.loop_extent) {
          let g.s0.v0 = g.s0.v0.__block_id_x
          g(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y) = f(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y)
        }
      }
    }
    0
  }
}

Performing allocation bounds inference...
f.s0.v1.max not in scope, so leaving it as-is
f.s0.v1.min not in scope, so leaving it as-is
f.s0.v1.max not in scope, so leaving it as-is
f.s0.v1.min not in scope, so leaving it as-is
f.s0.v0.max not in scope, so leaving it as-is
f.s0.v0.min not in scope, so leaving it as-is
f.s0.v0.max not in scope, so leaving it as-is
f.s0.v0.min not in scope, so leaving it as-is
input.extent.0 not in scope, so leaving it as-is
Bounds of min(f.s0.v0.__block_id_x, (input.extent.0 - 1))
min(f.s0.v0.min, (input.extent.0 - 1)), min(f.s0.v0.max, (input.extent.0 - 1))
Bounds of max(min(f.s0.v0.__block_id_x, (input.extent.0 - 1)), 0)
max(min(f.s0.v0.min, (input.extent.0 - 1)), 0), max(min(f.s0.v0.max, (input.extent.0 - 1)), 0)
input.extent.1 not in scope, so leaving it as-is
Bounds of min(f.s0.v1.__block_id_y, (input.extent.1 - 1))
min(f.s0.v1.min, (input.extent.1 - 1)), min(f.s0.v1.max, (input.extent.1 - 1))
Bounds of max(min(f.s0.v1.__block_id_y, (input.extent.1 - 1)), 0)
max(min(f.s0.v1.min, (input.extent.1 - 1)), 0), max(min(f.s0.v1.max, (input.extent.1 - 1)), 0)
g.s0.v1.max not in scope, so leaving it as-is
g.s0.v1.min not in scope, so leaving it as-is
g.s0.v1.max not in scope, so leaving it as-is
g.s0.v1.min not in scope, so leaving it as-is
g.s0.v0.max not in scope, so leaving it as-is
g.s0.v0.min not in scope, so leaving it as-is
g.s0.v0.max not in scope, so leaving it as-is
g.s0.v0.min not in scope, so leaving it as-is
Lowering after allocation bounds inference:
let g.s0.v1.max = ((g.min.1 + g.extent.1) - 1)
let g.s0.v1.min = g.min.1
let g.s0.v0.max = ((g.min.0 + g.extent.0) - 1)
let g.s0.v0.min = g.min.0
let f.s0.v1.max = g.s0.v1.max
let f.s0.v1.min = g.s0.v1.min
let f.s0.v0.max = g.s0.v0.max
let f.s0.v0.min = g.s0.v0.min
let g.extent.0.required = ((g.s0.v0.max + 1) - g.s0.v0.min)
let g.min.0.required = g.s0.v0.min
let g.stride.0.required = 1
let g.extent.1.required = ((g.s0.v1.max + 1) - g.s0.v1.min)
let g.min.1.required = g.s0.v1.min
let g.stride.1.required = (g.stride.0.required*g.extent.0.required)
let input.extent.0.required = ((max(min(f.s0.v0.max, (input.extent.0 - 1)), 0) + 1) - max(min(f.s0.v0.min, (input.extent.0 - 1)), 0))
let input.min.0.required = max(min(f.s0.v0.min, (input.extent.0 - 1)), 0)
let input.stride.0.required = 1
let input.extent.1.required = ((max(min(f.s0.v1.max, (input.extent.1 - 1)), 0) + 1) - max(min(f.s0.v1.min, (input.extent.1 - 1)), 0))
let input.min.1.required = max(min(f.s0.v1.min, (input.extent.1 - 1)), 0)
let input.stride.1.required = (input.stride.0.required*input.extent.0.required)
let g.stride.0.constrained = 1
let input.stride.0.constrained = 1
let g.stride.0.proposed = 1
let g.min.0.proposed = g.min.0.required
let g.extent.0.proposed = g.extent.0.required
let g.stride.1.proposed = g.stride.1.required
let g.min.1.proposed = g.min.1.required
let g.extent.1.proposed = g.extent.1.required
let input.stride.0.proposed = 1
let input.min.0.proposed = input.min.0.required
let input.extent.0.proposed = input.extent.0.required
let input.stride.1.proposed = input.stride.1.required
let input.min.1.proposed = input.min.1.required
let input.extent.1.proposed = input.extent.1.required
assert((!g.host_and_dev_are_null || ((g.min.0.proposed <= g.min.0.required) && (((g.min.0.proposed + g.extent.0.proposed) - 1) >= ((g.min.0.required + g.extent.0.required) - 1)))), halide_error_constraints_make_required_region_smaller("Output buffer g", 0, g.min.0.proposed, ((g.min.0.proposed + g.extent.0.proposed) - 1), g.min.0.required, ((g.min.0.required + g.extent.0.required) - 1)))
assert((!g.host_and_dev_are_null || ((g.min.1.proposed <= g.min.1.required) && (((g.min.1.proposed + g.extent.1.proposed) - 1) >= ((g.min.1.required + g.extent.1.required) - 1)))), halide_error_constraints_make_required_region_smaller("Output buffer g", 1, g.min.1.proposed, ((g.min.1.proposed + g.extent.1.proposed) - 1), g.min.1.required, ((g.min.1.required + g.extent.1.required) - 1)))
assert((!input.host_and_dev_are_null || ((input.min.0.proposed <= input.min.0.required) && (((input.min.0.proposed + input.extent.0.proposed) - 1) >= ((input.min.0.required + input.extent.0.required) - 1)))), halide_error_constraints_make_required_region_smaller("Input buffer input", 0, input.min.0.proposed, ((input.min.0.proposed + input.extent.0.proposed) - 1), input.min.0.required, ((input.min.0.required + input.extent.0.required) - 1)))
assert((!input.host_and_dev_are_null || ((input.min.1.proposed <= input.min.1.required) && (((input.min.1.proposed + input.extent.1.proposed) - 1) >= ((input.min.1.required + input.extent.1.required) - 1)))), halide_error_constraints_make_required_region_smaller("Input buffer input", 1, input.min.1.proposed, ((input.min.1.proposed + input.extent.1.proposed) - 1), input.min.1.required, ((input.min.1.required + input.extent.1.required) - 1)))
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0.proposed, g.extent.0.proposed, g.stride.0.proposed, g.min.1.proposed, g.extent.1.proposed, g.stride.1.proposed)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.proposed, input.extent.0.proposed, input.stride.0.proposed, input.min.1.proposed, input.extent.1.proposed, input.stride.1.proposed)
}
if (!((uint1(0) || g.host_and_dev_are_null) || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((g.min.0 <= g.min.0.required) && (((g.min.0 + g.extent.0) - 1) >= ((g.min.0.required + g.extent.0.required) - 1))), halide_error_access_out_of_bounds("Output buffer g", 0, g.min.0.required, ((g.min.0.required + g.extent.0.required) - 1), g.min.0, ((g.min.0 + g.extent.0) - 1)))
  assert(((g.min.1 <= g.min.1.required) && (((g.min.1 + g.extent.1) - 1) >= ((g.min.1.required + g.extent.1.required) - 1))), halide_error_access_out_of_bounds("Output buffer g", 1, g.min.1.required, ((g.min.1.required + g.extent.1.required) - 1), g.min.1, ((g.min.1 + g.extent.1) - 1)))
  assert(((input.min.0 <= input.min.0.required) && (((input.min.0 + input.extent.0) - 1) >= ((input.min.0.required + input.extent.0.required) - 1))), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, ((input.min.0.required + input.extent.0.required) - 1), input.min.0, ((input.min.0 + input.extent.0) - 1)))
  assert(((input.min.1 <= input.min.1.required) && (((input.min.1 + input.extent.1) - 1) >= ((input.min.1.required + input.extent.1.required) - 1))), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, ((input.min.1.required + input.extent.1.required) - 1), input.min.1, ((input.min.1 + input.extent.1) - 1)))
  assert((g.stride.0 == g.stride.0.constrained), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", g.stride.0.constrained))
  assert((input.stride.0 == input.stride.0.constrained), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", input.stride.0.constrained))
  let g.total_extent.0 = int64(g.extent.0)
  let g.total_extent.1 = (int64(g.extent.1)*g.total_extent.0)
  let input.total_extent.0 = int64(input.extent.0)
  let input.total_extent.1 = (int64(input.extent.1)*input.total_extent.0)
  assert(((int64(g.extent.0)*int64(g.stride.0.constrained)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.0)*int64(g.stride.0.constrained)), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert(((int64(input.extent.0)*int64(input.stride.0.constrained)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.0)*int64(input.stride.0.constrained)), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  let f.v1.max_realized = max(f.s0.v1.max, g.s0.v1.max)
  let f.v1.min_realized = min(f.s0.v1.min, g.s0.v1.min)
  let f.v1.extent_realized = ((max(f.s0.v1.max, g.s0.v1.max) - min(f.s0.v1.min, g.s0.v1.min)) + 1)
  let f.v0.max_realized = max(f.s0.v0.max, g.s0.v0.max)
  let f.v0.min_realized = min(f.s0.v0.min, g.s0.v0.min)
  let f.v0.extent_realized = ((max(f.s0.v0.max, g.s0.v0.max) - min(f.s0.v0.min, g.s0.v0.min)) + 1)
  realize f([f.v0.min_realized, f.v0.extent_realized], [f.v1.min_realized, f.v1.extent_realized]) {
    produce f {
      let f.s0.v1.loop_max = f.s0.v1.max
      let f.s0.v1.loop_min = f.s0.v1.min
      let f.s0.v1.loop_extent = ((f.s0.v1.max + 1) - f.s0.v1.min)
      let f.s0.v0.loop_max = f.s0.v0.max
      let f.s0.v0.loop_min = f.s0.v0.min
      let f.s0.v0.loop_extent = ((f.s0.v0.max + 1) - f.s0.v0.min)
      let f.s0.v0.__block_id_x.loop_extent = f.s0.v0.loop_extent
      let f.s0.v0.__block_id_x.loop_max = f.s0.v0.loop_max
      let f.s0.v0.__block_id_x.loop_min = f.s0.v0.loop_min
      let f.s0.v1.__block_id_y.loop_extent = f.s0.v1.loop_extent
      let f.s0.v1.__block_id_y.loop_max = f.s0.v1.loop_max
      let f.s0.v1.__block_id_y.loop_min = f.s0.v1.loop_min
      parallel<Renderscript> (f.s0.v1.__block_id_y, f.s0.v1.__block_id_y.loop_min, f.s0.v1.__block_id_y.loop_extent) {
        let f.s0.v1 = f.s0.v1.__block_id_y
        parallel<Renderscript> (f.s0.v0.__block_id_x, f.s0.v0.__block_id_x.loop_min, f.s0.v0.__block_id_x.loop_extent) {
          let f.s0.v0 = f.s0.v0.__block_id_x
          f(f.s0.v0.__block_id_x, f.s0.v1.__block_id_y) = input(max(min(f.s0.v0.__block_id_x, (input.extent.0 - 1)), 0), max(min(f.s0.v1.__block_id_y, (input.extent.1 - 1)), 0))
        }
      }
    }
    produce g {
      let g.s0.v1.loop_max = g.s0.v1.max
      let g.s0.v1.loop_min = g.s0.v1.min
      let g.s0.v1.loop_extent = ((g.s0.v1.max + 1) - g.s0.v1.min)
      let g.s0.v0.loop_max = g.s0.v0.max
      let g.s0.v0.loop_min = g.s0.v0.min
      let g.s0.v0.loop_extent = ((g.s0.v0.max + 1) - g.s0.v0.min)
      let g.s0.v0.__block_id_x.loop_extent = g.s0.v0.loop_extent
      let g.s0.v0.__block_id_x.loop_max = g.s0.v0.loop_max
      let g.s0.v0.__block_id_x.loop_min = g.s0.v0.loop_min
      let g.s0.v1.__block_id_y.loop_extent = g.s0.v1.loop_extent
      let g.s0.v1.__block_id_y.loop_max = g.s0.v1.loop_max
      let g.s0.v1.__block_id_y.loop_min = g.s0.v1.loop_min
      parallel<Renderscript> (g.s0.v1.__block_id_y, g.s0.v1.__block_id_y.loop_min, g.s0.v1.__block_id_y.loop_extent) {
        let g.s0.v1 = g.s0.v1.__block_id_y
        parallel<Renderscript> (g.s0.v0.__block_id_x, g.s0.v0.__block_id_x.loop_min, g.s0.v0.__block_id_x.loop_extent) {
          let g.s0.v0 = g.s0.v0.__block_id_x
          g(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y) = f(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y)
        }
      }
    }
    0
  }
}

Removing code that depends on undef values...
Lowering after removing code that depends on undef values:
let g.s0.v1.max = ((g.min.1 + g.extent.1) - 1)
let g.s0.v1.min = g.min.1
let g.s0.v0.max = ((g.min.0 + g.extent.0) - 1)
let g.s0.v0.min = g.min.0
let f.s0.v1.max = g.s0.v1.max
let f.s0.v1.min = g.s0.v1.min
let f.s0.v0.max = g.s0.v0.max
let f.s0.v0.min = g.s0.v0.min
let g.extent.0.required = ((g.s0.v0.max + 1) - g.s0.v0.min)
let g.min.0.required = g.s0.v0.min
let g.stride.0.required = 1
let g.extent.1.required = ((g.s0.v1.max + 1) - g.s0.v1.min)
let g.min.1.required = g.s0.v1.min
let g.stride.1.required = (g.stride.0.required*g.extent.0.required)
let input.extent.0.required = ((max(min(f.s0.v0.max, (input.extent.0 - 1)), 0) + 1) - max(min(f.s0.v0.min, (input.extent.0 - 1)), 0))
let input.min.0.required = max(min(f.s0.v0.min, (input.extent.0 - 1)), 0)
let input.stride.0.required = 1
let input.extent.1.required = ((max(min(f.s0.v1.max, (input.extent.1 - 1)), 0) + 1) - max(min(f.s0.v1.min, (input.extent.1 - 1)), 0))
let input.min.1.required = max(min(f.s0.v1.min, (input.extent.1 - 1)), 0)
let input.stride.1.required = (input.stride.0.required*input.extent.0.required)
let g.stride.0.constrained = 1
let input.stride.0.constrained = 1
let g.stride.0.proposed = 1
let g.min.0.proposed = g.min.0.required
let g.extent.0.proposed = g.extent.0.required
let g.stride.1.proposed = g.stride.1.required
let g.min.1.proposed = g.min.1.required
let g.extent.1.proposed = g.extent.1.required
let input.stride.0.proposed = 1
let input.min.0.proposed = input.min.0.required
let input.extent.0.proposed = input.extent.0.required
let input.stride.1.proposed = input.stride.1.required
let input.min.1.proposed = input.min.1.required
let input.extent.1.proposed = input.extent.1.required
assert((!g.host_and_dev_are_null || ((g.min.0.proposed <= g.min.0.required) && (((g.min.0.proposed + g.extent.0.proposed) - 1) >= ((g.min.0.required + g.extent.0.required) - 1)))), halide_error_constraints_make_required_region_smaller("Output buffer g", 0, g.min.0.proposed, ((g.min.0.proposed + g.extent.0.proposed) - 1), g.min.0.required, ((g.min.0.required + g.extent.0.required) - 1)))
assert((!g.host_and_dev_are_null || ((g.min.1.proposed <= g.min.1.required) && (((g.min.1.proposed + g.extent.1.proposed) - 1) >= ((g.min.1.required + g.extent.1.required) - 1)))), halide_error_constraints_make_required_region_smaller("Output buffer g", 1, g.min.1.proposed, ((g.min.1.proposed + g.extent.1.proposed) - 1), g.min.1.required, ((g.min.1.required + g.extent.1.required) - 1)))
assert((!input.host_and_dev_are_null || ((input.min.0.proposed <= input.min.0.required) && (((input.min.0.proposed + input.extent.0.proposed) - 1) >= ((input.min.0.required + input.extent.0.required) - 1)))), halide_error_constraints_make_required_region_smaller("Input buffer input", 0, input.min.0.proposed, ((input.min.0.proposed + input.extent.0.proposed) - 1), input.min.0.required, ((input.min.0.required + input.extent.0.required) - 1)))
assert((!input.host_and_dev_are_null || ((input.min.1.proposed <= input.min.1.required) && (((input.min.1.proposed + input.extent.1.proposed) - 1) >= ((input.min.1.required + input.extent.1.required) - 1)))), halide_error_constraints_make_required_region_smaller("Input buffer input", 1, input.min.1.proposed, ((input.min.1.proposed + input.extent.1.proposed) - 1), input.min.1.required, ((input.min.1.required + input.extent.1.required) - 1)))
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0.proposed, g.extent.0.proposed, g.stride.0.proposed, g.min.1.proposed, g.extent.1.proposed, g.stride.1.proposed)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.proposed, input.extent.0.proposed, input.stride.0.proposed, input.min.1.proposed, input.extent.1.proposed, input.stride.1.proposed)
}
if (!((uint1(0) || g.host_and_dev_are_null) || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((g.min.0 <= g.min.0.required) && (((g.min.0 + g.extent.0) - 1) >= ((g.min.0.required + g.extent.0.required) - 1))), halide_error_access_out_of_bounds("Output buffer g", 0, g.min.0.required, ((g.min.0.required + g.extent.0.required) - 1), g.min.0, ((g.min.0 + g.extent.0) - 1)))
  assert(((g.min.1 <= g.min.1.required) && (((g.min.1 + g.extent.1) - 1) >= ((g.min.1.required + g.extent.1.required) - 1))), halide_error_access_out_of_bounds("Output buffer g", 1, g.min.1.required, ((g.min.1.required + g.extent.1.required) - 1), g.min.1, ((g.min.1 + g.extent.1) - 1)))
  assert(((input.min.0 <= input.min.0.required) && (((input.min.0 + input.extent.0) - 1) >= ((input.min.0.required + input.extent.0.required) - 1))), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, ((input.min.0.required + input.extent.0.required) - 1), input.min.0, ((input.min.0 + input.extent.0) - 1)))
  assert(((input.min.1 <= input.min.1.required) && (((input.min.1 + input.extent.1) - 1) >= ((input.min.1.required + input.extent.1.required) - 1))), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, ((input.min.1.required + input.extent.1.required) - 1), input.min.1, ((input.min.1 + input.extent.1) - 1)))
  assert((g.stride.0 == g.stride.0.constrained), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", g.stride.0.constrained))
  assert((input.stride.0 == input.stride.0.constrained), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", input.stride.0.constrained))
  let g.total_extent.0 = int64(g.extent.0)
  let g.total_extent.1 = (int64(g.extent.1)*g.total_extent.0)
  let input.total_extent.0 = int64(input.extent.0)
  let input.total_extent.1 = (int64(input.extent.1)*input.total_extent.0)
  assert(((int64(g.extent.0)*int64(g.stride.0.constrained)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.0)*int64(g.stride.0.constrained)), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert(((int64(input.extent.0)*int64(input.stride.0.constrained)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.0)*int64(input.stride.0.constrained)), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  let f.v1.max_realized = max(f.s0.v1.max, g.s0.v1.max)
  let f.v1.min_realized = min(f.s0.v1.min, g.s0.v1.min)
  let f.v1.extent_realized = ((max(f.s0.v1.max, g.s0.v1.max) - min(f.s0.v1.min, g.s0.v1.min)) + 1)
  let f.v0.max_realized = max(f.s0.v0.max, g.s0.v0.max)
  let f.v0.min_realized = min(f.s0.v0.min, g.s0.v0.min)
  let f.v0.extent_realized = ((max(f.s0.v0.max, g.s0.v0.max) - min(f.s0.v0.min, g.s0.v0.min)) + 1)
  realize f([f.v0.min_realized, f.v0.extent_realized], [f.v1.min_realized, f.v1.extent_realized]) {
    produce f {
      let f.s0.v1.loop_max = f.s0.v1.max
      let f.s0.v1.loop_min = f.s0.v1.min
      let f.s0.v1.loop_extent = ((f.s0.v1.max + 1) - f.s0.v1.min)
      let f.s0.v0.loop_max = f.s0.v0.max
      let f.s0.v0.loop_min = f.s0.v0.min
      let f.s0.v0.loop_extent = ((f.s0.v0.max + 1) - f.s0.v0.min)
      let f.s0.v0.__block_id_x.loop_extent = f.s0.v0.loop_extent
      let f.s0.v0.__block_id_x.loop_max = f.s0.v0.loop_max
      let f.s0.v0.__block_id_x.loop_min = f.s0.v0.loop_min
      let f.s0.v1.__block_id_y.loop_extent = f.s0.v1.loop_extent
      let f.s0.v1.__block_id_y.loop_max = f.s0.v1.loop_max
      let f.s0.v1.__block_id_y.loop_min = f.s0.v1.loop_min
      parallel<Renderscript> (f.s0.v1.__block_id_y, f.s0.v1.__block_id_y.loop_min, f.s0.v1.__block_id_y.loop_extent) {
        let f.s0.v1 = f.s0.v1.__block_id_y
        parallel<Renderscript> (f.s0.v0.__block_id_x, f.s0.v0.__block_id_x.loop_min, f.s0.v0.__block_id_x.loop_extent) {
          let f.s0.v0 = f.s0.v0.__block_id_x
          f(f.s0.v0.__block_id_x, f.s0.v1.__block_id_y) = input(max(min(f.s0.v0.__block_id_x, (input.extent.0 - 1)), 0), max(min(f.s0.v1.__block_id_y, (input.extent.1 - 1)), 0))
        }
      }
    }
    produce g {
      let g.s0.v1.loop_max = g.s0.v1.max
      let g.s0.v1.loop_min = g.s0.v1.min
      let g.s0.v1.loop_extent = ((g.s0.v1.max + 1) - g.s0.v1.min)
      let g.s0.v0.loop_max = g.s0.v0.max
      let g.s0.v0.loop_min = g.s0.v0.min
      let g.s0.v0.loop_extent = ((g.s0.v0.max + 1) - g.s0.v0.min)
      let g.s0.v0.__block_id_x.loop_extent = g.s0.v0.loop_extent
      let g.s0.v0.__block_id_x.loop_max = g.s0.v0.loop_max
      let g.s0.v0.__block_id_x.loop_min = g.s0.v0.loop_min
      let g.s0.v1.__block_id_y.loop_extent = g.s0.v1.loop_extent
      let g.s0.v1.__block_id_y.loop_max = g.s0.v1.loop_max
      let g.s0.v1.__block_id_y.loop_min = g.s0.v1.loop_min
      parallel<Renderscript> (g.s0.v1.__block_id_y, g.s0.v1.__block_id_y.loop_min, g.s0.v1.__block_id_y.loop_extent) {
        let g.s0.v1 = g.s0.v1.__block_id_y
        parallel<Renderscript> (g.s0.v0.__block_id_x, g.s0.v0.__block_id_x.loop_min, g.s0.v0.__block_id_x.loop_extent) {
          let g.s0.v0 = g.s0.v0.__block_id_x
          g(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y) = f(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y)
        }
      }
    }
    0
  }
}


Uniquifying variable names...
Lowering after uniquifying variable names:
let g.s0.v1.max = ((g.min.1 + g.extent.1) - 1)
let g.s0.v1.min = g.min.1
let g.s0.v0.max = ((g.min.0 + g.extent.0) - 1)
let g.s0.v0.min = g.min.0
let f.s0.v1.max = g.s0.v1.max
let f.s0.v1.min = g.s0.v1.min
let f.s0.v0.max = g.s0.v0.max
let f.s0.v0.min = g.s0.v0.min
let g.extent.0.required = ((g.s0.v0.max + 1) - g.s0.v0.min)
let g.min.0.required = g.s0.v0.min
let g.stride.0.required = 1
let g.extent.1.required = ((g.s0.v1.max + 1) - g.s0.v1.min)
let g.min.1.required = g.s0.v1.min
let g.stride.1.required = (g.stride.0.required*g.extent.0.required)
let input.extent.0.required = ((max(min(f.s0.v0.max, (input.extent.0 - 1)), 0) + 1) - max(min(f.s0.v0.min, (input.extent.0 - 1)), 0))
let input.min.0.required = max(min(f.s0.v0.min, (input.extent.0 - 1)), 0)
let input.stride.0.required = 1
let input.extent.1.required = ((max(min(f.s0.v1.max, (input.extent.1 - 1)), 0) + 1) - max(min(f.s0.v1.min, (input.extent.1 - 1)), 0))
let input.min.1.required = max(min(f.s0.v1.min, (input.extent.1 - 1)), 0)
let input.stride.1.required = (input.stride.0.required*input.extent.0.required)
let g.stride.0.constrained = 1
let input.stride.0.constrained = 1
let g.stride.0.proposed = 1
let g.min.0.proposed = g.min.0.required
let g.extent.0.proposed = g.extent.0.required
let g.stride.1.proposed = g.stride.1.required
let g.min.1.proposed = g.min.1.required
let g.extent.1.proposed = g.extent.1.required
let input.stride.0.proposed = 1
let input.min.0.proposed = input.min.0.required
let input.extent.0.proposed = input.extent.0.required
let input.stride.1.proposed = input.stride.1.required
let input.min.1.proposed = input.min.1.required
let input.extent.1.proposed = input.extent.1.required
assert((!g.host_and_dev_are_null || ((g.min.0.proposed <= g.min.0.required) && (((g.min.0.proposed + g.extent.0.proposed) - 1) >= ((g.min.0.required + g.extent.0.required) - 1)))), halide_error_constraints_make_required_region_smaller("Output buffer g", 0, g.min.0.proposed, ((g.min.0.proposed + g.extent.0.proposed) - 1), g.min.0.required, ((g.min.0.required + g.extent.0.required) - 1)))
assert((!g.host_and_dev_are_null || ((g.min.1.proposed <= g.min.1.required) && (((g.min.1.proposed + g.extent.1.proposed) - 1) >= ((g.min.1.required + g.extent.1.required) - 1)))), halide_error_constraints_make_required_region_smaller("Output buffer g", 1, g.min.1.proposed, ((g.min.1.proposed + g.extent.1.proposed) - 1), g.min.1.required, ((g.min.1.required + g.extent.1.required) - 1)))
assert((!input.host_and_dev_are_null || ((input.min.0.proposed <= input.min.0.required) && (((input.min.0.proposed + input.extent.0.proposed) - 1) >= ((input.min.0.required + input.extent.0.required) - 1)))), halide_error_constraints_make_required_region_smaller("Input buffer input", 0, input.min.0.proposed, ((input.min.0.proposed + input.extent.0.proposed) - 1), input.min.0.required, ((input.min.0.required + input.extent.0.required) - 1)))
assert((!input.host_and_dev_are_null || ((input.min.1.proposed <= input.min.1.required) && (((input.min.1.proposed + input.extent.1.proposed) - 1) >= ((input.min.1.required + input.extent.1.required) - 1)))), halide_error_constraints_make_required_region_smaller("Input buffer input", 1, input.min.1.proposed, ((input.min.1.proposed + input.extent.1.proposed) - 1), input.min.1.required, ((input.min.1.required + input.extent.1.required) - 1)))
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0.proposed, g.extent.0.proposed, g.stride.0.proposed, g.min.1.proposed, g.extent.1.proposed, g.stride.1.proposed)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.proposed, input.extent.0.proposed, input.stride.0.proposed, input.min.1.proposed, input.extent.1.proposed, input.stride.1.proposed)
}
if (!((uint1(0) || g.host_and_dev_are_null) || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((g.min.0 <= g.min.0.required) && (((g.min.0 + g.extent.0) - 1) >= ((g.min.0.required + g.extent.0.required) - 1))), halide_error_access_out_of_bounds("Output buffer g", 0, g.min.0.required, ((g.min.0.required + g.extent.0.required) - 1), g.min.0, ((g.min.0 + g.extent.0) - 1)))
  assert(((g.min.1 <= g.min.1.required) && (((g.min.1 + g.extent.1) - 1) >= ((g.min.1.required + g.extent.1.required) - 1))), halide_error_access_out_of_bounds("Output buffer g", 1, g.min.1.required, ((g.min.1.required + g.extent.1.required) - 1), g.min.1, ((g.min.1 + g.extent.1) - 1)))
  assert(((input.min.0 <= input.min.0.required) && (((input.min.0 + input.extent.0) - 1) >= ((input.min.0.required + input.extent.0.required) - 1))), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, ((input.min.0.required + input.extent.0.required) - 1), input.min.0, ((input.min.0 + input.extent.0) - 1)))
  assert(((input.min.1 <= input.min.1.required) && (((input.min.1 + input.extent.1) - 1) >= ((input.min.1.required + input.extent.1.required) - 1))), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, ((input.min.1.required + input.extent.1.required) - 1), input.min.1, ((input.min.1 + input.extent.1) - 1)))
  assert((g.stride.0 == g.stride.0.constrained), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", g.stride.0.constrained))
  assert((input.stride.0 == input.stride.0.constrained), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", input.stride.0.constrained))
  let g.total_extent.0 = int64(g.extent.0)
  let g.total_extent.1 = (int64(g.extent.1)*g.total_extent.0)
  let input.total_extent.0 = int64(input.extent.0)
  let input.total_extent.1 = (int64(input.extent.1)*input.total_extent.0)
  assert(((int64(g.extent.0)*int64(g.stride.0.constrained)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.0)*int64(g.stride.0.constrained)), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert(((int64(input.extent.0)*int64(input.stride.0.constrained)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.0)*int64(input.stride.0.constrained)), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  let f.v1.max_realized = max(f.s0.v1.max, g.s0.v1.max)
  let f.v1.min_realized = min(f.s0.v1.min, g.s0.v1.min)
  let f.v1.extent_realized = ((max(f.s0.v1.max, g.s0.v1.max) - min(f.s0.v1.min, g.s0.v1.min)) + 1)
  let f.v0.max_realized = max(f.s0.v0.max, g.s0.v0.max)
  let f.v0.min_realized = min(f.s0.v0.min, g.s0.v0.min)
  let f.v0.extent_realized = ((max(f.s0.v0.max, g.s0.v0.max) - min(f.s0.v0.min, g.s0.v0.min)) + 1)
  realize f([f.v0.min_realized, f.v0.extent_realized], [f.v1.min_realized, f.v1.extent_realized]) {
    produce f {
      let f.s0.v1.loop_max = f.s0.v1.max
      let f.s0.v1.loop_min = f.s0.v1.min
      let f.s0.v1.loop_extent = ((f.s0.v1.max + 1) - f.s0.v1.min)
      let f.s0.v0.loop_max = f.s0.v0.max
      let f.s0.v0.loop_min = f.s0.v0.min
      let f.s0.v0.loop_extent = ((f.s0.v0.max + 1) - f.s0.v0.min)
      let f.s0.v0.__block_id_x.loop_extent = f.s0.v0.loop_extent
      let f.s0.v0.__block_id_x.loop_max = f.s0.v0.loop_max
      let f.s0.v0.__block_id_x.loop_min = f.s0.v0.loop_min
      let f.s0.v1.__block_id_y.loop_extent = f.s0.v1.loop_extent
      let f.s0.v1.__block_id_y.loop_max = f.s0.v1.loop_max
      let f.s0.v1.__block_id_y.loop_min = f.s0.v1.loop_min
      parallel<Renderscript> (f.s0.v1.__block_id_y, f.s0.v1.__block_id_y.loop_min, f.s0.v1.__block_id_y.loop_extent) {
        let f.s0.v1 = f.s0.v1.__block_id_y
        parallel<Renderscript> (f.s0.v0.__block_id_x, f.s0.v0.__block_id_x.loop_min, f.s0.v0.__block_id_x.loop_extent) {
          let f.s0.v0 = f.s0.v0.__block_id_x
          f(f.s0.v0.__block_id_x, f.s0.v1.__block_id_y) = input(max(min(f.s0.v0.__block_id_x, (input.extent.0 - 1)), 0), max(min(f.s0.v1.__block_id_y, (input.extent.1 - 1)), 0))
        }
      }
    }
    produce g {
      let g.s0.v1.loop_max = g.s0.v1.max
      let g.s0.v1.loop_min = g.s0.v1.min
      let g.s0.v1.loop_extent = ((g.s0.v1.max + 1) - g.s0.v1.min)
      let g.s0.v0.loop_max = g.s0.v0.max
      let g.s0.v0.loop_min = g.s0.v0.min
      let g.s0.v0.loop_extent = ((g.s0.v0.max + 1) - g.s0.v0.min)
      let g.s0.v0.__block_id_x.loop_extent = g.s0.v0.loop_extent
      let g.s0.v0.__block_id_x.loop_max = g.s0.v0.loop_max
      let g.s0.v0.__block_id_x.loop_min = g.s0.v0.loop_min
      let g.s0.v1.__block_id_y.loop_extent = g.s0.v1.loop_extent
      let g.s0.v1.__block_id_y.loop_max = g.s0.v1.loop_max
      let g.s0.v1.__block_id_y.loop_min = g.s0.v1.loop_min
      parallel<Renderscript> (g.s0.v1.__block_id_y, g.s0.v1.__block_id_y.loop_min, g.s0.v1.__block_id_y.loop_extent) {
        let g.s0.v1 = g.s0.v1.__block_id_y
        parallel<Renderscript> (g.s0.v0.__block_id_x, g.s0.v0.__block_id_x.loop_min, g.s0.v0.__block_id_x.loop_extent) {
          let g.s0.v0 = g.s0.v0.__block_id_x
          g(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y) = f(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y)
        }
      }
    }
    0
  }
}


Performing storage folding optimization...
Attempting to fold f
Lowering after storage folding:
let g.s0.v1.max = ((g.min.1 + g.extent.1) + -1)
let g.s0.v1.min = g.min.1
let g.s0.v0.max = ((g.min.0 + g.extent.0) + -1)
let g.s0.v0.min = g.min.0
let f.s0.v1.max = g.s0.v1.max
let f.s0.v1.min = g.s0.v1.min
let f.s0.v0.max = g.s0.v0.max
let f.s0.v0.min = g.s0.v0.min
let g.extent.0.required = ((g.s0.v0.max - g.s0.v0.min) + 1)
let g.min.0.required = g.s0.v0.min
let g.stride.0.required = 1
let g.extent.1.required = ((g.s0.v1.max - g.s0.v1.min) + 1)
let g.min.1.required = g.s0.v1.min
let g.stride.1.required = g.extent.0.required
let input.extent.0.required = ((max(min(f.s0.v0.max, (input.extent.0 + -1)), 0) - max(min(f.s0.v0.min, (input.extent.0 + -1)), 0)) + 1)
let input.min.0.required = max(min(f.s0.v0.min, (input.extent.0 + -1)), 0)
let input.stride.0.required = 1
let input.extent.1.required = ((max(min(f.s0.v1.max, (input.extent.1 + -1)), 0) - max(min(f.s0.v1.min, (input.extent.1 + -1)), 0)) + 1)
let input.min.1.required = max(min(f.s0.v1.min, (input.extent.1 + -1)), 0)
let input.stride.1.required = input.extent.0.required
let g.stride.0.constrained = 1
let input.stride.0.constrained = 1
let g.stride.0.proposed = 1
let g.min.0.proposed = g.min.0.required
let g.extent.0.proposed = g.extent.0.required
let g.stride.1.proposed = g.stride.1.required
let g.min.1.proposed = g.min.1.required
let g.extent.1.proposed = g.extent.1.required
let input.stride.0.proposed = 1
let input.min.0.proposed = input.min.0.required
let input.extent.0.proposed = input.extent.0.required
let input.stride.1.proposed = input.stride.1.required
let input.min.1.proposed = input.min.1.required
let input.extent.1.proposed = input.extent.1.required
assert((!g.host_and_dev_are_null || ((g.min.0.proposed <= g.min.0.required) && (((g.min.0.proposed + g.extent.0.proposed) - 1) >= ((g.min.0.required + g.extent.0.required) - 1)))), halide_error_constraints_make_required_region_smaller("Output buffer g", 0, g.min.0.proposed, ((g.min.0.proposed + g.extent.0.proposed) - 1), g.min.0.required, ((g.min.0.required + g.extent.0.required) - 1)))
assert((!g.host_and_dev_are_null || ((g.min.1.proposed <= g.min.1.required) && (((g.min.1.proposed + g.extent.1.proposed) - 1) >= ((g.min.1.required + g.extent.1.required) - 1)))), halide_error_constraints_make_required_region_smaller("Output buffer g", 1, g.min.1.proposed, ((g.min.1.proposed + g.extent.1.proposed) - 1), g.min.1.required, ((g.min.1.required + g.extent.1.required) - 1)))
assert((!input.host_and_dev_are_null || ((input.min.0.proposed <= input.min.0.required) && (((input.min.0.proposed + input.extent.0.proposed) - 1) >= ((input.min.0.required + input.extent.0.required) - 1)))), halide_error_constraints_make_required_region_smaller("Input buffer input", 0, input.min.0.proposed, ((input.min.0.proposed + input.extent.0.proposed) - 1), input.min.0.required, ((input.min.0.required + input.extent.0.required) - 1)))
assert((!input.host_and_dev_are_null || ((input.min.1.proposed <= input.min.1.required) && (((input.min.1.proposed + input.extent.1.proposed) - 1) >= ((input.min.1.required + input.extent.1.required) - 1)))), halide_error_constraints_make_required_region_smaller("Input buffer input", 1, input.min.1.proposed, ((input.min.1.proposed + input.extent.1.proposed) - 1), input.min.1.required, ((input.min.1.required + input.extent.1.required) - 1)))
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0.proposed, g.extent.0.proposed, 1, g.min.1.proposed, g.extent.1.proposed, g.stride.1.proposed)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.proposed, input.extent.0.proposed, 1, input.min.1.proposed, input.extent.1.proposed, input.stride.1.proposed)
}
if (!((uint1(0) || g.host_and_dev_are_null) || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((g.min.0 <= g.min.0.required) && (((g.min.0 + g.extent.0) - 1) >= ((g.min.0.required + g.extent.0.required) - 1))), halide_error_access_out_of_bounds("Output buffer g", 0, g.min.0.required, ((g.min.0.required + g.extent.0.required) - 1), g.min.0, ((g.min.0 + g.extent.0) - 1)))
  assert(((g.min.1 <= g.min.1.required) && (((g.min.1 + g.extent.1) - 1) >= ((g.min.1.required + g.extent.1.required) - 1))), halide_error_access_out_of_bounds("Output buffer g", 1, g.min.1.required, ((g.min.1.required + g.extent.1.required) - 1), g.min.1, ((g.min.1 + g.extent.1) - 1)))
  assert(((input.min.0 <= input.min.0.required) && (((input.min.0 + input.extent.0) - 1) >= ((input.min.0.required + input.extent.0.required) - 1))), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, ((input.min.0.required + input.extent.0.required) - 1), input.min.0, ((input.min.0 + input.extent.0) - 1)))
  assert(((input.min.1 <= input.min.1.required) && (((input.min.1 + input.extent.1) - 1) >= ((input.min.1.required + input.extent.1.required) - 1))), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, ((input.min.1.required + input.extent.1.required) - 1), input.min.1, ((input.min.1 + input.extent.1) - 1)))
  assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
  assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
  let g.total_extent.0 = int64(g.extent.0)
  let g.total_extent.1 = (int64(g.extent.1)*g.total_extent.0)
  let input.total_extent.0 = int64(input.extent.0)
  let input.total_extent.1 = (int64(input.extent.1)*input.total_extent.0)
  assert(((int64(g.extent.0)*int64(1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.0)*int64(1)), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert(((int64(input.extent.0)*int64(1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.0)*int64(1)), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  let f.v1.max_realized = max(f.s0.v1.max, g.s0.v1.max)
  let f.v1.min_realized = min(f.s0.v1.min, g.s0.v1.min)
  let f.v1.extent_realized = ((max(f.s0.v1.max, g.s0.v1.max) - min(f.s0.v1.min, g.s0.v1.min)) + 1)
  let f.v0.max_realized = max(f.s0.v0.max, g.s0.v0.max)
  let f.v0.min_realized = min(f.s0.v0.min, g.s0.v0.min)
  let f.v0.extent_realized = ((max(f.s0.v0.max, g.s0.v0.max) - min(f.s0.v0.min, g.s0.v0.min)) + 1)
  realize f([f.v0.min_realized, f.v0.extent_realized], [f.v1.min_realized, f.v1.extent_realized]) {
    produce f {
      let f.s0.v1.loop_max = f.s0.v1.max
      let f.s0.v1.loop_min = f.s0.v1.min
      let f.s0.v1.loop_extent = ((f.s0.v1.max - f.s0.v1.min) + 1)
      let f.s0.v0.loop_max = f.s0.v0.max
      let f.s0.v0.loop_min = f.s0.v0.min
      let f.s0.v0.loop_extent = ((f.s0.v0.max - f.s0.v0.min) + 1)
      let f.s0.v0.__block_id_x.loop_extent = f.s0.v0.loop_extent
      let f.s0.v0.__block_id_x.loop_max = f.s0.v0.loop_max
      let f.s0.v0.__block_id_x.loop_min = f.s0.v0.loop_min
      let f.s0.v1.__block_id_y.loop_extent = f.s0.v1.loop_extent
      let f.s0.v1.__block_id_y.loop_max = f.s0.v1.loop_max
      let f.s0.v1.__block_id_y.loop_min = f.s0.v1.loop_min
      parallel<Renderscript> (f.s0.v1.__block_id_y, f.s0.v1.__block_id_y.loop_min, f.s0.v1.__block_id_y.loop_extent) {
        let f.s0.v1 = f.s0.v1.__block_id_y
        parallel<Renderscript> (f.s0.v0.__block_id_x, f.s0.v0.__block_id_x.loop_min, f.s0.v0.__block_id_x.loop_extent) {
          let f.s0.v0 = f.s0.v0.__block_id_x
          f(f.s0.v0.__block_id_x, f.s0.v1.__block_id_y) = input(max(min(f.s0.v0.__block_id_x, (input.extent.0 - 1)), 0), max(min(f.s0.v1.__block_id_y, (input.extent.1 - 1)), 0))
        }
      }
    }
    produce g {
      let g.s0.v1.loop_max = g.s0.v1.max
      let g.s0.v1.loop_min = g.s0.v1.min
      let g.s0.v1.loop_extent = ((g.s0.v1.max - g.s0.v1.min) + 1)
      let g.s0.v0.loop_max = g.s0.v0.max
      let g.s0.v0.loop_min = g.s0.v0.min
      let g.s0.v0.loop_extent = ((g.s0.v0.max - g.s0.v0.min) + 1)
      let g.s0.v0.__block_id_x.loop_extent = g.s0.v0.loop_extent
      let g.s0.v0.__block_id_x.loop_max = g.s0.v0.loop_max
      let g.s0.v0.__block_id_x.loop_min = g.s0.v0.loop_min
      let g.s0.v1.__block_id_y.loop_extent = g.s0.v1.loop_extent
      let g.s0.v1.__block_id_y.loop_max = g.s0.v1.loop_max
      let g.s0.v1.__block_id_y.loop_min = g.s0.v1.loop_min
      parallel<Renderscript> (g.s0.v1.__block_id_y, g.s0.v1.__block_id_y.loop_min, g.s0.v1.__block_id_y.loop_extent) {
        let g.s0.v1 = g.s0.v1.__block_id_y
        parallel<Renderscript> (g.s0.v0.__block_id_x, g.s0.v0.__block_id_x.loop_min, g.s0.v0.__block_id_x.loop_extent) {
          let g.s0.v0 = g.s0.v0.__block_id_x
          g(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y) = f(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y)
        }
      }
    }
    0
  }
}

Injecting debug_to_file calls...
Lowering after injecting debug_to_file calls:
let g.s0.v1.max = ((g.min.1 + g.extent.1) + -1)
let g.s0.v1.min = g.min.1
let g.s0.v0.max = ((g.min.0 + g.extent.0) + -1)
let g.s0.v0.min = g.min.0
let f.s0.v1.max = g.s0.v1.max
let f.s0.v1.min = g.s0.v1.min
let f.s0.v0.max = g.s0.v0.max
let f.s0.v0.min = g.s0.v0.min
let g.extent.0.required = ((g.s0.v0.max - g.s0.v0.min) + 1)
let g.min.0.required = g.s0.v0.min
let g.stride.0.required = 1
let g.extent.1.required = ((g.s0.v1.max - g.s0.v1.min) + 1)
let g.min.1.required = g.s0.v1.min
let g.stride.1.required = g.extent.0.required
let input.extent.0.required = ((max(min(f.s0.v0.max, (input.extent.0 + -1)), 0) - max(min(f.s0.v0.min, (input.extent.0 + -1)), 0)) + 1)
let input.min.0.required = max(min(f.s0.v0.min, (input.extent.0 + -1)), 0)
let input.stride.0.required = 1
let input.extent.1.required = ((max(min(f.s0.v1.max, (input.extent.1 + -1)), 0) - max(min(f.s0.v1.min, (input.extent.1 + -1)), 0)) + 1)
let input.min.1.required = max(min(f.s0.v1.min, (input.extent.1 + -1)), 0)
let input.stride.1.required = input.extent.0.required
let g.stride.0.constrained = 1
let input.stride.0.constrained = 1
let g.stride.0.proposed = 1
let g.min.0.proposed = g.min.0.required
let g.extent.0.proposed = g.extent.0.required
let g.stride.1.proposed = g.stride.1.required
let g.min.1.proposed = g.min.1.required
let g.extent.1.proposed = g.extent.1.required
let input.stride.0.proposed = 1
let input.min.0.proposed = input.min.0.required
let input.extent.0.proposed = input.extent.0.required
let input.stride.1.proposed = input.stride.1.required
let input.min.1.proposed = input.min.1.required
let input.extent.1.proposed = input.extent.1.required
assert((!g.host_and_dev_are_null || ((g.min.0.proposed <= g.min.0.required) && (((g.min.0.proposed + g.extent.0.proposed) - 1) >= ((g.min.0.required + g.extent.0.required) - 1)))), halide_error_constraints_make_required_region_smaller("Output buffer g", 0, g.min.0.proposed, ((g.min.0.proposed + g.extent.0.proposed) - 1), g.min.0.required, ((g.min.0.required + g.extent.0.required) - 1)))
assert((!g.host_and_dev_are_null || ((g.min.1.proposed <= g.min.1.required) && (((g.min.1.proposed + g.extent.1.proposed) - 1) >= ((g.min.1.required + g.extent.1.required) - 1)))), halide_error_constraints_make_required_region_smaller("Output buffer g", 1, g.min.1.proposed, ((g.min.1.proposed + g.extent.1.proposed) - 1), g.min.1.required, ((g.min.1.required + g.extent.1.required) - 1)))
assert((!input.host_and_dev_are_null || ((input.min.0.proposed <= input.min.0.required) && (((input.min.0.proposed + input.extent.0.proposed) - 1) >= ((input.min.0.required + input.extent.0.required) - 1)))), halide_error_constraints_make_required_region_smaller("Input buffer input", 0, input.min.0.proposed, ((input.min.0.proposed + input.extent.0.proposed) - 1), input.min.0.required, ((input.min.0.required + input.extent.0.required) - 1)))
assert((!input.host_and_dev_are_null || ((input.min.1.proposed <= input.min.1.required) && (((input.min.1.proposed + input.extent.1.proposed) - 1) >= ((input.min.1.required + input.extent.1.required) - 1)))), halide_error_constraints_make_required_region_smaller("Input buffer input", 1, input.min.1.proposed, ((input.min.1.proposed + input.extent.1.proposed) - 1), input.min.1.required, ((input.min.1.required + input.extent.1.required) - 1)))
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0.proposed, g.extent.0.proposed, 1, g.min.1.proposed, g.extent.1.proposed, g.stride.1.proposed)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.proposed, input.extent.0.proposed, 1, input.min.1.proposed, input.extent.1.proposed, input.stride.1.proposed)
}
if (!((uint1(0) || g.host_and_dev_are_null) || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((g.min.0 <= g.min.0.required) && (((g.min.0 + g.extent.0) - 1) >= ((g.min.0.required + g.extent.0.required) - 1))), halide_error_access_out_of_bounds("Output buffer g", 0, g.min.0.required, ((g.min.0.required + g.extent.0.required) - 1), g.min.0, ((g.min.0 + g.extent.0) - 1)))
  assert(((g.min.1 <= g.min.1.required) && (((g.min.1 + g.extent.1) - 1) >= ((g.min.1.required + g.extent.1.required) - 1))), halide_error_access_out_of_bounds("Output buffer g", 1, g.min.1.required, ((g.min.1.required + g.extent.1.required) - 1), g.min.1, ((g.min.1 + g.extent.1) - 1)))
  assert(((input.min.0 <= input.min.0.required) && (((input.min.0 + input.extent.0) - 1) >= ((input.min.0.required + input.extent.0.required) - 1))), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, ((input.min.0.required + input.extent.0.required) - 1), input.min.0, ((input.min.0 + input.extent.0) - 1)))
  assert(((input.min.1 <= input.min.1.required) && (((input.min.1 + input.extent.1) - 1) >= ((input.min.1.required + input.extent.1.required) - 1))), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, ((input.min.1.required + input.extent.1.required) - 1), input.min.1, ((input.min.1 + input.extent.1) - 1)))
  assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
  assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
  let g.total_extent.0 = int64(g.extent.0)
  let g.total_extent.1 = (int64(g.extent.1)*g.total_extent.0)
  let input.total_extent.0 = int64(input.extent.0)
  let input.total_extent.1 = (int64(input.extent.1)*input.total_extent.0)
  assert(((int64(g.extent.0)*int64(1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.0)*int64(1)), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert(((int64(input.extent.0)*int64(1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.0)*int64(1)), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  let f.v1.max_realized = max(f.s0.v1.max, g.s0.v1.max)
  let f.v1.min_realized = min(f.s0.v1.min, g.s0.v1.min)
  let f.v1.extent_realized = ((max(f.s0.v1.max, g.s0.v1.max) - min(f.s0.v1.min, g.s0.v1.min)) + 1)
  let f.v0.max_realized = max(f.s0.v0.max, g.s0.v0.max)
  let f.v0.min_realized = min(f.s0.v0.min, g.s0.v0.min)
  let f.v0.extent_realized = ((max(f.s0.v0.max, g.s0.v0.max) - min(f.s0.v0.min, g.s0.v0.min)) + 1)
  realize f([f.v0.min_realized, f.v0.extent_realized], [f.v1.min_realized, f.v1.extent_realized]) {
    produce f {
      let f.s0.v1.loop_max = f.s0.v1.max
      let f.s0.v1.loop_min = f.s0.v1.min
      let f.s0.v1.loop_extent = ((f.s0.v1.max - f.s0.v1.min) + 1)
      let f.s0.v0.loop_max = f.s0.v0.max
      let f.s0.v0.loop_min = f.s0.v0.min
      let f.s0.v0.loop_extent = ((f.s0.v0.max - f.s0.v0.min) + 1)
      let f.s0.v0.__block_id_x.loop_extent = f.s0.v0.loop_extent
      let f.s0.v0.__block_id_x.loop_max = f.s0.v0.loop_max
      let f.s0.v0.__block_id_x.loop_min = f.s0.v0.loop_min
      let f.s0.v1.__block_id_y.loop_extent = f.s0.v1.loop_extent
      let f.s0.v1.__block_id_y.loop_max = f.s0.v1.loop_max
      let f.s0.v1.__block_id_y.loop_min = f.s0.v1.loop_min
      parallel<Renderscript> (f.s0.v1.__block_id_y, f.s0.v1.__block_id_y.loop_min, f.s0.v1.__block_id_y.loop_extent) {
        let f.s0.v1 = f.s0.v1.__block_id_y
        parallel<Renderscript> (f.s0.v0.__block_id_x, f.s0.v0.__block_id_x.loop_min, f.s0.v0.__block_id_x.loop_extent) {
          let f.s0.v0 = f.s0.v0.__block_id_x
          f(f.s0.v0.__block_id_x, f.s0.v1.__block_id_y) = input(max(min(f.s0.v0.__block_id_x, (input.extent.0 - 1)), 0), max(min(f.s0.v1.__block_id_y, (input.extent.1 - 1)), 0))
        }
      }
    }
    produce g {
      let g.s0.v1.loop_max = g.s0.v1.max
      let g.s0.v1.loop_min = g.s0.v1.min
      let g.s0.v1.loop_extent = ((g.s0.v1.max - g.s0.v1.min) + 1)
      let g.s0.v0.loop_max = g.s0.v0.max
      let g.s0.v0.loop_min = g.s0.v0.min
      let g.s0.v0.loop_extent = ((g.s0.v0.max - g.s0.v0.min) + 1)
      let g.s0.v0.__block_id_x.loop_extent = g.s0.v0.loop_extent
      let g.s0.v0.__block_id_x.loop_max = g.s0.v0.loop_max
      let g.s0.v0.__block_id_x.loop_min = g.s0.v0.loop_min
      let g.s0.v1.__block_id_y.loop_extent = g.s0.v1.loop_extent
      let g.s0.v1.__block_id_y.loop_max = g.s0.v1.loop_max
      let g.s0.v1.__block_id_y.loop_min = g.s0.v1.loop_min
      parallel<Renderscript> (g.s0.v1.__block_id_y, g.s0.v1.__block_id_y.loop_min, g.s0.v1.__block_id_y.loop_extent) {
        let g.s0.v1 = g.s0.v1.__block_id_y
        parallel<Renderscript> (g.s0.v0.__block_id_x, g.s0.v0.__block_id_x.loop_min, g.s0.v0.__block_id_x.loop_extent) {
          let g.s0.v0 = g.s0.v0.__block_id_x
          g(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y) = f(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y)
        }
      }
    }
    0
  }
}

Simplifying...
g.min.0.required not in scope, so leaving it as-is
g.min.0.proposed not in scope, so leaving it as-is
g.min.0.proposed not in scope, so leaving it as-is
g.extent.0.proposed not in scope, so leaving it as-is
g.min.0.required not in scope, so leaving it as-is
g.extent.0.required not in scope, so leaving it as-is
g.min.0.proposed not in scope, so leaving it as-is
g.extent.0.proposed not in scope, so leaving it as-is
g.min.0.required not in scope, so leaving it as-is
g.extent.0.required not in scope, so leaving it as-is
g.min.0.proposed not in scope, so leaving it as-is
g.extent.0.proposed not in scope, so leaving it as-is
g.min.0.required not in scope, so leaving it as-is
g.extent.0.required not in scope, so leaving it as-is
g.min.1.required not in scope, so leaving it as-is
g.min.1.proposed not in scope, so leaving it as-is
g.min.1.proposed not in scope, so leaving it as-is
g.extent.1.proposed not in scope, so leaving it as-is
g.min.1.required not in scope, so leaving it as-is
g.extent.1.required not in scope, so leaving it as-is
g.min.1.proposed not in scope, so leaving it as-is
g.extent.1.proposed not in scope, so leaving it as-is
g.min.1.required not in scope, so leaving it as-is
g.extent.1.required not in scope, so leaving it as-is
g.min.1.proposed not in scope, so leaving it as-is
g.extent.1.proposed not in scope, so leaving it as-is
g.min.1.required not in scope, so leaving it as-is
g.extent.1.required not in scope, so leaving it as-is
input.min.0.required not in scope, so leaving it as-is
input.min.0.proposed not in scope, so leaving it as-is
input.min.0.proposed not in scope, so leaving it as-is
input.extent.0.proposed not in scope, so leaving it as-is
input.min.0.required not in scope, so leaving it as-is
input.extent.0.required not in scope, so leaving it as-is
input.min.0.proposed not in scope, so leaving it as-is
input.extent.0.proposed not in scope, so leaving it as-is
input.min.0.required not in scope, so leaving it as-is
input.extent.0.required not in scope, so leaving it as-is
input.min.0.proposed not in scope, so leaving it as-is
input.extent.0.proposed not in scope, so leaving it as-is
input.min.0.required not in scope, so leaving it as-is
input.extent.0.required not in scope, so leaving it as-is
input.min.1.required not in scope, so leaving it as-is
input.min.1.proposed not in scope, so leaving it as-is
input.min.1.proposed not in scope, so leaving it as-is
input.extent.1.proposed not in scope, so leaving it as-is
input.min.1.required not in scope, so leaving it as-is
input.extent.1.required not in scope, so leaving it as-is
input.min.1.proposed not in scope, so leaving it as-is
input.extent.1.proposed not in scope, so leaving it as-is
input.min.1.required not in scope, so leaving it as-is
input.extent.1.required not in scope, so leaving it as-is
input.min.1.proposed not in scope, so leaving it as-is
input.extent.1.proposed not in scope, so leaving it as-is
input.min.1.required not in scope, so leaving it as-is
input.extent.1.required not in scope, so leaving it as-is
g.elem_size not in scope, so leaving it as-is
input.elem_size not in scope, so leaving it as-is
g.min.0.required not in scope, so leaving it as-is
g.min.0 not in scope, so leaving it as-is
g.min.0 not in scope, so leaving it as-is
g.extent.0 not in scope, so leaving it as-is
g.min.0.required not in scope, so leaving it as-is
g.extent.0.required not in scope, so leaving it as-is
g.min.0 not in scope, so leaving it as-is
g.extent.0 not in scope, so leaving it as-is
g.min.0.required not in scope, so leaving it as-is
g.extent.0.required not in scope, so leaving it as-is
g.min.0 not in scope, so leaving it as-is
g.extent.0 not in scope, so leaving it as-is
g.min.0.required not in scope, so leaving it as-is
g.extent.0.required not in scope, so leaving it as-is
g.min.1.required not in scope, so leaving it as-is
g.min.1 not in scope, so leaving it as-is
g.min.1 not in scope, so leaving it as-is
g.extent.1 not in scope, so leaving it as-is
g.min.1.required not in scope, so leaving it as-is
g.extent.1.required not in scope, so leaving it as-is
g.min.1 not in scope, so leaving it as-is
g.extent.1 not in scope, so leaving it as-is
g.min.1.required not in scope, so leaving it as-is
g.extent.1.required not in scope, so leaving it as-is
g.min.1 not in scope, so leaving it as-is
g.extent.1 not in scope, so leaving it as-is
g.min.1.required not in scope, so leaving it as-is
g.extent.1.required not in scope, so leaving it as-is
input.min.0.required not in scope, so leaving it as-is
input.min.0 not in scope, so leaving it as-is
input.min.0 not in scope, so leaving it as-is
input.extent.0 not in scope, so leaving it as-is
input.min.0.required not in scope, so leaving it as-is
input.extent.0.required not in scope, so leaving it as-is
input.min.0 not in scope, so leaving it as-is
input.extent.0 not in scope, so leaving it as-is
input.min.0.required not in scope, so leaving it as-is
input.extent.0.required not in scope, so leaving it as-is
input.min.0 not in scope, so leaving it as-is
input.extent.0 not in scope, so leaving it as-is
input.min.0.required not in scope, so leaving it as-is
input.extent.0.required not in scope, so leaving it as-is
input.min.1.required not in scope, so leaving it as-is
input.min.1 not in scope, so leaving it as-is
input.min.1 not in scope, so leaving it as-is
input.extent.1 not in scope, so leaving it as-is
input.min.1.required not in scope, so leaving it as-is
input.extent.1.required not in scope, so leaving it as-is
input.min.1 not in scope, so leaving it as-is
input.extent.1 not in scope, so leaving it as-is
input.min.1.required not in scope, so leaving it as-is
input.extent.1.required not in scope, so leaving it as-is
input.min.1 not in scope, so leaving it as-is
input.extent.1 not in scope, so leaving it as-is
input.min.1.required not in scope, so leaving it as-is
input.extent.1.required not in scope, so leaving it as-is
g.stride.0 not in scope, so leaving it as-is
input.stride.0 not in scope, so leaving it as-is
Lowering after first simplification:
let g.s0.v1.max = ((g.min.1 + g.extent.1) + -1)
let g.s0.v1.min = g.min.1
let g.s0.v0.max = ((g.min.0 + g.extent.0) + -1)
let g.s0.v0.min = g.min.0
let f.s0.v1.max = g.s0.v1.max
let f.s0.v1.min = g.s0.v1.min
let f.s0.v0.max = g.s0.v0.max
let f.s0.v0.min = g.s0.v0.min
let g.extent.0.required = ((g.s0.v0.max - g.s0.v0.min) + 1)
let g.min.0.required = g.s0.v0.min
let g.stride.0.required = 1
let g.extent.1.required = ((g.s0.v1.max - g.s0.v1.min) + 1)
let g.min.1.required = g.s0.v1.min
let g.stride.1.required = g.extent.0.required
let input.extent.0.required = ((max(min(f.s0.v0.max, (input.extent.0 + -1)), 0) - max(min(f.s0.v0.min, (input.extent.0 + -1)), 0)) + 1)
let input.min.0.required = max(min(f.s0.v0.min, (input.extent.0 + -1)), 0)
let input.stride.0.required = 1
let input.extent.1.required = ((max(min(f.s0.v1.max, (input.extent.1 + -1)), 0) - max(min(f.s0.v1.min, (input.extent.1 + -1)), 0)) + 1)
let input.min.1.required = max(min(f.s0.v1.min, (input.extent.1 + -1)), 0)
let input.stride.1.required = input.extent.0.required
let g.stride.0.constrained = 1
let input.stride.0.constrained = 1
let g.stride.0.proposed = 1
let g.min.0.proposed = g.min.0.required
let g.extent.0.proposed = g.extent.0.required
let g.stride.1.proposed = g.stride.1.required
let g.min.1.proposed = g.min.1.required
let g.extent.1.proposed = g.extent.1.required
let input.stride.0.proposed = 1
let input.min.0.proposed = input.min.0.required
let input.extent.0.proposed = input.extent.0.required
let input.stride.1.proposed = input.stride.1.required
let input.min.1.proposed = input.min.1.required
let input.extent.1.proposed = input.extent.1.required
assert((!g.host_and_dev_are_null || ((g.min.0.proposed <= g.min.0.required) && (((g.min.0.required + g.extent.0.required) - g.extent.0.proposed) <= g.min.0.proposed))), halide_error_constraints_make_required_region_smaller("Output buffer g", 0, g.min.0.proposed, ((g.min.0.proposed + g.extent.0.proposed) + -1), g.min.0.required, ((g.min.0.required + g.extent.0.required) + -1)))
assert((!g.host_and_dev_are_null || ((g.min.1.proposed <= g.min.1.required) && (((g.min.1.required + g.extent.1.required) - g.extent.1.proposed) <= g.min.1.proposed))), halide_error_constraints_make_required_region_smaller("Output buffer g", 1, g.min.1.proposed, ((g.min.1.proposed + g.extent.1.proposed) + -1), g.min.1.required, ((g.min.1.required + g.extent.1.required) + -1)))
assert((!input.host_and_dev_are_null || ((input.min.0.proposed <= input.min.0.required) && (((input.min.0.required + input.extent.0.required) - input.extent.0.proposed) <= input.min.0.proposed))), halide_error_constraints_make_required_region_smaller("Input buffer input", 0, input.min.0.proposed, ((input.min.0.proposed + input.extent.0.proposed) + -1), input.min.0.required, ((input.min.0.required + input.extent.0.required) + -1)))
assert((!input.host_and_dev_are_null || ((input.min.1.proposed <= input.min.1.required) && (((input.min.1.required + input.extent.1.required) - input.extent.1.proposed) <= input.min.1.proposed))), halide_error_constraints_make_required_region_smaller("Input buffer input", 1, input.min.1.proposed, ((input.min.1.proposed + input.extent.1.proposed) + -1), input.min.1.required, ((input.min.1.required + input.extent.1.required) + -1)))
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0.proposed, g.extent.0.proposed, 1, g.min.1.proposed, g.extent.1.proposed, g.stride.1.proposed)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.proposed, input.extent.0.proposed, 1, input.min.1.proposed, input.extent.1.proposed, input.stride.1.proposed)
}
if (!(g.host_and_dev_are_null || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((g.min.0 <= g.min.0.required) && (((g.min.0.required + g.extent.0.required) - g.extent.0) <= g.min.0)), halide_error_access_out_of_bounds("Output buffer g", 0, g.min.0.required, ((g.min.0.required + g.extent.0.required) + -1), g.min.0, ((g.min.0 + g.extent.0) + -1)))
  assert(((g.min.1 <= g.min.1.required) && (((g.min.1.required + g.extent.1.required) - g.extent.1) <= g.min.1)), halide_error_access_out_of_bounds("Output buffer g", 1, g.min.1.required, ((g.min.1.required + g.extent.1.required) + -1), g.min.1, ((g.min.1 + g.extent.1) + -1)))
  assert(((input.min.0 <= input.min.0.required) && (((input.min.0.required + input.extent.0.required) - input.extent.0) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, ((input.min.0.required + input.extent.0.required) + -1), input.min.0, ((input.min.0 + input.extent.0) + -1)))
  assert(((input.min.1 <= input.min.1.required) && (((input.min.1.required + input.extent.1.required) - input.extent.1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, ((input.min.1.required + input.extent.1.required) + -1), input.min.1, ((input.min.1 + input.extent.1) + -1)))
  assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
  assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
  let g.total_extent.0 = int64(g.extent.0)
  let g.total_extent.1 = (int64(g.extent.1)*g.total_extent.0)
  let input.total_extent.0 = int64(input.extent.0)
  let input.total_extent.1 = (int64(input.extent.1)*input.total_extent.0)
  assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  let f.v1.max_realized = max(f.s0.v1.max, g.s0.v1.max)
  let f.v1.min_realized = min(f.s0.v1.min, g.s0.v1.min)
  let f.v1.extent_realized = ((max(f.s0.v1.max, g.s0.v1.max) - min(f.s0.v1.min, g.s0.v1.min)) + 1)
  let f.v0.max_realized = max(f.s0.v0.max, g.s0.v0.max)
  let f.v0.min_realized = min(f.s0.v0.min, g.s0.v0.min)
  let f.v0.extent_realized = ((max(f.s0.v0.max, g.s0.v0.max) - min(f.s0.v0.min, g.s0.v0.min)) + 1)
  realize f([f.v0.min_realized, f.v0.extent_realized], [f.v1.min_realized, f.v1.extent_realized]) {
    produce f {
      let f.s0.v1.loop_max = f.s0.v1.max
      let f.s0.v1.loop_min = f.s0.v1.min
      let f.s0.v1.loop_extent = ((f.s0.v1.max - f.s0.v1.min) + 1)
      let f.s0.v0.loop_max = f.s0.v0.max
      let f.s0.v0.loop_min = f.s0.v0.min
      let f.s0.v0.loop_extent = ((f.s0.v0.max - f.s0.v0.min) + 1)
      let f.s0.v0.__block_id_x.loop_extent = f.s0.v0.loop_extent
      let f.s0.v0.__block_id_x.loop_max = f.s0.v0.loop_max
      let f.s0.v0.__block_id_x.loop_min = f.s0.v0.loop_min
      let f.s0.v1.__block_id_y.loop_extent = f.s0.v1.loop_extent
      let f.s0.v1.__block_id_y.loop_max = f.s0.v1.loop_max
      let f.s0.v1.__block_id_y.loop_min = f.s0.v1.loop_min
      parallel<Renderscript> (f.s0.v1.__block_id_y, f.s0.v1.__block_id_y.loop_min, f.s0.v1.__block_id_y.loop_extent) {
        let f.s0.v1 = f.s0.v1.__block_id_y
        parallel<Renderscript> (f.s0.v0.__block_id_x, f.s0.v0.__block_id_x.loop_min, f.s0.v0.__block_id_x.loop_extent) {
          let f.s0.v0 = f.s0.v0.__block_id_x
          f(f.s0.v0.__block_id_x, f.s0.v1.__block_id_y) = input(max(min(f.s0.v0.__block_id_x, (input.extent.0 + -1)), 0), max(min(f.s0.v1.__block_id_y, (input.extent.1 + -1)), 0))
        }
      }
    }
    produce g {
      let g.s0.v1.loop_max = g.s0.v1.max
      let g.s0.v1.loop_min = g.s0.v1.min
      let g.s0.v1.loop_extent = ((g.s0.v1.max - g.s0.v1.min) + 1)
      let g.s0.v0.loop_max = g.s0.v0.max
      let g.s0.v0.loop_min = g.s0.v0.min
      let g.s0.v0.loop_extent = ((g.s0.v0.max - g.s0.v0.min) + 1)
      let g.s0.v0.__block_id_x.loop_extent = g.s0.v0.loop_extent
      let g.s0.v0.__block_id_x.loop_max = g.s0.v0.loop_max
      let g.s0.v0.__block_id_x.loop_min = g.s0.v0.loop_min
      let g.s0.v1.__block_id_y.loop_extent = g.s0.v1.loop_extent
      let g.s0.v1.__block_id_y.loop_max = g.s0.v1.loop_max
      let g.s0.v1.__block_id_y.loop_min = g.s0.v1.loop_min
      parallel<Renderscript> (g.s0.v1.__block_id_y, g.s0.v1.__block_id_y.loop_min, g.s0.v1.__block_id_y.loop_extent) {
        let g.s0.v1 = g.s0.v1.__block_id_y
        parallel<Renderscript> (g.s0.v0.__block_id_x, g.s0.v0.__block_id_x.loop_min, g.s0.v0.__block_id_x.loop_extent) {
          let g.s0.v0 = g.s0.v0.__block_id_x
          g(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y) = f(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y)
        }
      }
    }
    0
  }
}


Dynamically skipping stages...
skip_stages checking f
skip_stages checking clamped
Lowering after dynamically skipping stages:
let g.s0.v1.max = ((g.min.1 + g.extent.1) + -1)
let g.s0.v1.min = g.min.1
let g.s0.v0.max = ((g.min.0 + g.extent.0) + -1)
let g.s0.v0.min = g.min.0
let f.s0.v1.max = g.s0.v1.max
let f.s0.v1.min = g.s0.v1.min
let f.s0.v0.max = g.s0.v0.max
let f.s0.v0.min = g.s0.v0.min
let g.extent.0.required = ((g.s0.v0.max - g.s0.v0.min) + 1)
let g.min.0.required = g.s0.v0.min
let g.stride.0.required = 1
let g.extent.1.required = ((g.s0.v1.max - g.s0.v1.min) + 1)
let g.min.1.required = g.s0.v1.min
let g.stride.1.required = g.extent.0.required
let input.extent.0.required = ((max(min(f.s0.v0.max, (input.extent.0 + -1)), 0) - max(min(f.s0.v0.min, (input.extent.0 + -1)), 0)) + 1)
let input.min.0.required = max(min(f.s0.v0.min, (input.extent.0 + -1)), 0)
let input.stride.0.required = 1
let input.extent.1.required = ((max(min(f.s0.v1.max, (input.extent.1 + -1)), 0) - max(min(f.s0.v1.min, (input.extent.1 + -1)), 0)) + 1)
let input.min.1.required = max(min(f.s0.v1.min, (input.extent.1 + -1)), 0)
let input.stride.1.required = input.extent.0.required
let g.stride.0.constrained = 1
let input.stride.0.constrained = 1
let g.stride.0.proposed = 1
let g.min.0.proposed = g.min.0.required
let g.extent.0.proposed = g.extent.0.required
let g.stride.1.proposed = g.stride.1.required
let g.min.1.proposed = g.min.1.required
let g.extent.1.proposed = g.extent.1.required
let input.stride.0.proposed = 1
let input.min.0.proposed = input.min.0.required
let input.extent.0.proposed = input.extent.0.required
let input.stride.1.proposed = input.stride.1.required
let input.min.1.proposed = input.min.1.required
let input.extent.1.proposed = input.extent.1.required
assert((!g.host_and_dev_are_null || ((g.min.0.proposed <= g.min.0.required) && (((g.min.0.required + g.extent.0.required) - g.extent.0.proposed) <= g.min.0.proposed))), halide_error_constraints_make_required_region_smaller("Output buffer g", 0, g.min.0.proposed, ((g.min.0.proposed + g.extent.0.proposed) + -1), g.min.0.required, ((g.min.0.required + g.extent.0.required) + -1)))
assert((!g.host_and_dev_are_null || ((g.min.1.proposed <= g.min.1.required) && (((g.min.1.required + g.extent.1.required) - g.extent.1.proposed) <= g.min.1.proposed))), halide_error_constraints_make_required_region_smaller("Output buffer g", 1, g.min.1.proposed, ((g.min.1.proposed + g.extent.1.proposed) + -1), g.min.1.required, ((g.min.1.required + g.extent.1.required) + -1)))
assert((!input.host_and_dev_are_null || ((input.min.0.proposed <= input.min.0.required) && (((input.min.0.required + input.extent.0.required) - input.extent.0.proposed) <= input.min.0.proposed))), halide_error_constraints_make_required_region_smaller("Input buffer input", 0, input.min.0.proposed, ((input.min.0.proposed + input.extent.0.proposed) + -1), input.min.0.required, ((input.min.0.required + input.extent.0.required) + -1)))
assert((!input.host_and_dev_are_null || ((input.min.1.proposed <= input.min.1.required) && (((input.min.1.required + input.extent.1.required) - input.extent.1.proposed) <= input.min.1.proposed))), halide_error_constraints_make_required_region_smaller("Input buffer input", 1, input.min.1.proposed, ((input.min.1.proposed + input.extent.1.proposed) + -1), input.min.1.required, ((input.min.1.required + input.extent.1.required) + -1)))
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0.proposed, g.extent.0.proposed, 1, g.min.1.proposed, g.extent.1.proposed, g.stride.1.proposed)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.proposed, input.extent.0.proposed, 1, input.min.1.proposed, input.extent.1.proposed, input.stride.1.proposed)
}
if (!(g.host_and_dev_are_null || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((g.min.0 <= g.min.0.required) && (((g.min.0.required + g.extent.0.required) - g.extent.0) <= g.min.0)), halide_error_access_out_of_bounds("Output buffer g", 0, g.min.0.required, ((g.min.0.required + g.extent.0.required) + -1), g.min.0, ((g.min.0 + g.extent.0) + -1)))
  assert(((g.min.1 <= g.min.1.required) && (((g.min.1.required + g.extent.1.required) - g.extent.1) <= g.min.1)), halide_error_access_out_of_bounds("Output buffer g", 1, g.min.1.required, ((g.min.1.required + g.extent.1.required) + -1), g.min.1, ((g.min.1 + g.extent.1) + -1)))
  assert(((input.min.0 <= input.min.0.required) && (((input.min.0.required + input.extent.0.required) - input.extent.0) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, ((input.min.0.required + input.extent.0.required) + -1), input.min.0, ((input.min.0 + input.extent.0) + -1)))
  assert(((input.min.1 <= input.min.1.required) && (((input.min.1.required + input.extent.1.required) - input.extent.1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, ((input.min.1.required + input.extent.1.required) + -1), input.min.1, ((input.min.1 + input.extent.1) + -1)))
  assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
  assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
  let g.total_extent.0 = int64(g.extent.0)
  let g.total_extent.1 = (int64(g.extent.1)*g.total_extent.0)
  let input.total_extent.0 = int64(input.extent.0)
  let input.total_extent.1 = (int64(input.extent.1)*input.total_extent.0)
  assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  let f.v1.max_realized = max(f.s0.v1.max, g.s0.v1.max)
  let f.v1.min_realized = min(f.s0.v1.min, g.s0.v1.min)
  let f.v1.extent_realized = ((max(f.s0.v1.max, g.s0.v1.max) - min(f.s0.v1.min, g.s0.v1.min)) + 1)
  let f.v0.max_realized = max(f.s0.v0.max, g.s0.v0.max)
  let f.v0.min_realized = min(f.s0.v0.min, g.s0.v0.min)
  let f.v0.extent_realized = ((max(f.s0.v0.max, g.s0.v0.max) - min(f.s0.v0.min, g.s0.v0.min)) + 1)
  realize f([f.v0.min_realized, f.v0.extent_realized], [f.v1.min_realized, f.v1.extent_realized]) {
    produce f {
      let f.s0.v1.loop_max = f.s0.v1.max
      let f.s0.v1.loop_min = f.s0.v1.min
      let f.s0.v1.loop_extent = ((f.s0.v1.max - f.s0.v1.min) + 1)
      let f.s0.v0.loop_max = f.s0.v0.max
      let f.s0.v0.loop_min = f.s0.v0.min
      let f.s0.v0.loop_extent = ((f.s0.v0.max - f.s0.v0.min) + 1)
      let f.s0.v0.__block_id_x.loop_extent = f.s0.v0.loop_extent
      let f.s0.v0.__block_id_x.loop_max = f.s0.v0.loop_max
      let f.s0.v0.__block_id_x.loop_min = f.s0.v0.loop_min
      let f.s0.v1.__block_id_y.loop_extent = f.s0.v1.loop_extent
      let f.s0.v1.__block_id_y.loop_max = f.s0.v1.loop_max
      let f.s0.v1.__block_id_y.loop_min = f.s0.v1.loop_min
      parallel<Renderscript> (f.s0.v1.__block_id_y, f.s0.v1.__block_id_y.loop_min, f.s0.v1.__block_id_y.loop_extent) {
        let f.s0.v1 = f.s0.v1.__block_id_y
        parallel<Renderscript> (f.s0.v0.__block_id_x, f.s0.v0.__block_id_x.loop_min, f.s0.v0.__block_id_x.loop_extent) {
          let f.s0.v0 = f.s0.v0.__block_id_x
          f(f.s0.v0.__block_id_x, f.s0.v1.__block_id_y) = input(max(min(f.s0.v0.__block_id_x, (input.extent.0 + -1)), 0), max(min(f.s0.v1.__block_id_y, (input.extent.1 + -1)), 0))
        }
      }
    }
    produce g {
      let g.s0.v1.loop_max = g.s0.v1.max
      let g.s0.v1.loop_min = g.s0.v1.min
      let g.s0.v1.loop_extent = ((g.s0.v1.max - g.s0.v1.min) + 1)
      let g.s0.v0.loop_max = g.s0.v0.max
      let g.s0.v0.loop_min = g.s0.v0.min
      let g.s0.v0.loop_extent = ((g.s0.v0.max - g.s0.v0.min) + 1)
      let g.s0.v0.__block_id_x.loop_extent = g.s0.v0.loop_extent
      let g.s0.v0.__block_id_x.loop_max = g.s0.v0.loop_max
      let g.s0.v0.__block_id_x.loop_min = g.s0.v0.loop_min
      let g.s0.v1.__block_id_y.loop_extent = g.s0.v1.loop_extent
      let g.s0.v1.__block_id_y.loop_max = g.s0.v1.loop_max
      let g.s0.v1.__block_id_y.loop_min = g.s0.v1.loop_min
      parallel<Renderscript> (g.s0.v1.__block_id_y, g.s0.v1.__block_id_y.loop_min, g.s0.v1.__block_id_y.loop_extent) {
        let g.s0.v1 = g.s0.v1.__block_id_y
        parallel<Renderscript> (g.s0.v0.__block_id_x, g.s0.v0.__block_id_x.loop_min, g.s0.v0.__block_id_x.loop_extent) {
          let g.s0.v0 = g.s0.v0.__block_id_x
          g(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y) = f(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y)
        }
      }
    }
    0
  }
}


Injecting image intrinsics...
InjectImageIntrinsics: inject_image_intrinsics stmt: let g.s0.v1.max = ((g.min.1 + g.extent.1) + -1)
let g.s0.v1.min = g.min.1
let g.s0.v0.max = ((g.min.0 + g.extent.0) + -1)
let g.s0.v0.min = g.min.0
let f.s0.v1.max = g.s0.v1.max
let f.s0.v1.min = g.s0.v1.min
let f.s0.v0.max = g.s0.v0.max
let f.s0.v0.min = g.s0.v0.min
let g.extent.0.required = ((g.s0.v0.max - g.s0.v0.min) + 1)
let g.min.0.required = g.s0.v0.min
let g.stride.0.required = 1
let g.extent.1.required = ((g.s0.v1.max - g.s0.v1.min) + 1)
let g.min.1.required = g.s0.v1.min
let g.stride.1.required = g.extent.0.required
let input.extent.0.required = ((max(min(f.s0.v0.max, (input.extent.0 + -1)), 0) - max(min(f.s0.v0.min, (input.extent.0 + -1)), 0)) + 1)
let input.min.0.required = max(min(f.s0.v0.min, (input.extent.0 + -1)), 0)
let input.stride.0.required = 1
let input.extent.1.required = ((max(min(f.s0.v1.max, (input.extent.1 + -1)), 0) - max(min(f.s0.v1.min, (input.extent.1 + -1)), 0)) + 1)
let input.min.1.required = max(min(f.s0.v1.min, (input.extent.1 + -1)), 0)
let input.stride.1.required = input.extent.0.required
let g.stride.0.constrained = 1
let input.stride.0.constrained = 1
let g.stride.0.proposed = 1
let g.min.0.proposed = g.min.0.required
let g.extent.0.proposed = g.extent.0.required
let g.stride.1.proposed = g.stride.1.required
let g.min.1.proposed = g.min.1.required
let g.extent.1.proposed = g.extent.1.required
let input.stride.0.proposed = 1
let input.min.0.proposed = input.min.0.required
let input.extent.0.proposed = input.extent.0.required
let input.stride.1.proposed = input.stride.1.required
let input.min.1.proposed = input.min.1.required
let input.extent.1.proposed = input.extent.1.required
assert((!g.host_and_dev_are_null || ((g.min.0.proposed <= g.min.0.required) && (((g.min.0.required + g.extent.0.required) - g.extent.0.proposed) <= g.min.0.proposed))), halide_error_constraints_make_required_region_smaller("Output buffer g", 0, g.min.0.proposed, ((g.min.0.proposed + g.extent.0.proposed) + -1), g.min.0.required, ((g.min.0.required + g.extent.0.required) + -1)))
assert((!g.host_and_dev_are_null || ((g.min.1.proposed <= g.min.1.required) && (((g.min.1.required + g.extent.1.required) - g.extent.1.proposed) <= g.min.1.proposed))), halide_error_constraints_make_required_region_smaller("Output buffer g", 1, g.min.1.proposed, ((g.min.1.proposed + g.extent.1.proposed) + -1), g.min.1.required, ((g.min.1.required + g.extent.1.required) + -1)))
assert((!input.host_and_dev_are_null || ((input.min.0.proposed <= input.min.0.required) && (((input.min.0.required + input.extent.0.required) - input.extent.0.proposed) <= input.min.0.proposed))), halide_error_constraints_make_required_region_smaller("Input buffer input", 0, input.min.0.proposed, ((input.min.0.proposed + input.extent.0.proposed) + -1), input.min.0.required, ((input.min.0.required + input.extent.0.required) + -1)))
assert((!input.host_and_dev_are_null || ((input.min.1.proposed <= input.min.1.required) && (((input.min.1.required + input.extent.1.required) - input.extent.1.proposed) <= input.min.1.proposed))), halide_error_constraints_make_required_region_smaller("Input buffer input", 1, input.min.1.proposed, ((input.min.1.proposed + input.extent.1.proposed) + -1), input.min.1.required, ((input.min.1.required + input.extent.1.required) + -1)))
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0.proposed, g.extent.0.proposed, 1, g.min.1.proposed, g.extent.1.proposed, g.stride.1.proposed)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.proposed, input.extent.0.proposed, 1, input.min.1.proposed, input.extent.1.proposed, input.stride.1.proposed)
}
if (!(g.host_and_dev_are_null || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((g.min.0 <= g.min.0.required) && (((g.min.0.required + g.extent.0.required) - g.extent.0) <= g.min.0)), halide_error_access_out_of_bounds("Output buffer g", 0, g.min.0.required, ((g.min.0.required + g.extent.0.required) + -1), g.min.0, ((g.min.0 + g.extent.0) + -1)))
  assert(((g.min.1 <= g.min.1.required) && (((g.min.1.required + g.extent.1.required) - g.extent.1) <= g.min.1)), halide_error_access_out_of_bounds("Output buffer g", 1, g.min.1.required, ((g.min.1.required + g.extent.1.required) + -1), g.min.1, ((g.min.1 + g.extent.1) + -1)))
  assert(((input.min.0 <= input.min.0.required) && (((input.min.0.required + input.extent.0.required) - input.extent.0) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, ((input.min.0.required + input.extent.0.required) + -1), input.min.0, ((input.min.0 + input.extent.0) + -1)))
  assert(((input.min.1 <= input.min.1.required) && (((input.min.1.required + input.extent.1.required) - input.extent.1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, ((input.min.1.required + input.extent.1.required) + -1), input.min.1, ((input.min.1 + input.extent.1) + -1)))
  assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
  assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
  let g.total_extent.0 = int64(g.extent.0)
  let g.total_extent.1 = (int64(g.extent.1)*g.total_extent.0)
  let input.total_extent.0 = int64(input.extent.0)
  let input.total_extent.1 = (int64(input.extent.1)*input.total_extent.0)
  assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  let f.v1.max_realized = max(f.s0.v1.max, g.s0.v1.max)
  let f.v1.min_realized = min(f.s0.v1.min, g.s0.v1.min)
  let f.v1.extent_realized = ((max(f.s0.v1.max, g.s0.v1.max) - min(f.s0.v1.min, g.s0.v1.min)) + 1)
  let f.v0.max_realized = max(f.s0.v0.max, g.s0.v0.max)
  let f.v0.min_realized = min(f.s0.v0.min, g.s0.v0.min)
  let f.v0.extent_realized = ((max(f.s0.v0.max, g.s0.v0.max) - min(f.s0.v0.min, g.s0.v0.min)) + 1)
  realize f([f.v0.min_realized, f.v0.extent_realized], [f.v1.min_realized, f.v1.extent_realized]) {
    produce f {
      let f.s0.v1.loop_max = f.s0.v1.max
      let f.s0.v1.loop_min = f.s0.v1.min
      let f.s0.v1.loop_extent = ((f.s0.v1.max - f.s0.v1.min) + 1)
      let f.s0.v0.loop_max = f.s0.v0.max
      let f.s0.v0.loop_min = f.s0.v0.min
      let f.s0.v0.loop_extent = ((f.s0.v0.max - f.s0.v0.min) + 1)
      let f.s0.v0.__block_id_x.loop_extent = f.s0.v0.loop_extent
      let f.s0.v0.__block_id_x.loop_max = f.s0.v0.loop_max
      let f.s0.v0.__block_id_x.loop_min = f.s0.v0.loop_min
      let f.s0.v1.__block_id_y.loop_extent = f.s0.v1.loop_extent
      let f.s0.v1.__block_id_y.loop_max = f.s0.v1.loop_max
      let f.s0.v1.__block_id_y.loop_min = f.s0.v1.loop_min
      parallel<Renderscript> (f.s0.v1.__block_id_y, f.s0.v1.__block_id_y.loop_min, f.s0.v1.__block_id_y.loop_extent) {
        let f.s0.v1 = f.s0.v1.__block_id_y
        parallel<Renderscript> (f.s0.v0.__block_id_x, f.s0.v0.__block_id_x.loop_min, f.s0.v0.__block_id_x.loop_extent) {
          let f.s0.v0 = f.s0.v0.__block_id_x
          f(f.s0.v0.__block_id_x, f.s0.v1.__block_id_y) = input(max(min(f.s0.v0.__block_id_x, (input.extent.0 + -1)), 0), max(min(f.s0.v1.__block_id_y, (input.extent.1 + -1)), 0))
        }
      }
    }
    produce g {
      let g.s0.v1.loop_max = g.s0.v1.max
      let g.s0.v1.loop_min = g.s0.v1.min
      let g.s0.v1.loop_extent = ((g.s0.v1.max - g.s0.v1.min) + 1)
      let g.s0.v0.loop_max = g.s0.v0.max
      let g.s0.v0.loop_min = g.s0.v0.min
      let g.s0.v0.loop_extent = ((g.s0.v0.max - g.s0.v0.min) + 1)
      let g.s0.v0.__block_id_x.loop_extent = g.s0.v0.loop_extent
      let g.s0.v0.__block_id_x.loop_max = g.s0.v0.loop_max
      let g.s0.v0.__block_id_x.loop_min = g.s0.v0.loop_min
      let g.s0.v1.__block_id_y.loop_extent = g.s0.v1.loop_extent
      let g.s0.v1.__block_id_y.loop_max = g.s0.v1.loop_max
      let g.s0.v1.__block_id_y.loop_min = g.s0.v1.loop_min
      parallel<Renderscript> (g.s0.v1.__block_id_y, g.s0.v1.__block_id_y.loop_min, g.s0.v1.__block_id_y.loop_extent) {
        let g.s0.v1 = g.s0.v1.__block_id_y
        parallel<Renderscript> (g.s0.v0.__block_id_x, g.s0.v0.__block_id_x.loop_min, g.s0.v0.__block_id_x.loop_extent) {
          let g.s0.v0 = g.s0.v0.__block_id_x
          g(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y) = f(g.s0.v0.__block_id_x, g.s0.v1.__block_id_y)
        }
      }
    }
    0
  }
}

Lowering after image intrinsics:
let g.s0.v1.max = ((g.min.1 + g.extent.1) + -1)
let g.s0.v1.min = g.min.1
let g.s0.v0.max = ((g.min.0 + g.extent.0) + -1)
let g.s0.v0.min = g.min.0
let f.s0.v1.max = g.s0.v1.max
let f.s0.v1.min = g.s0.v1.min
let f.s0.v0.max = g.s0.v0.max
let f.s0.v0.min = g.s0.v0.min
let g.extent.0.required = ((g.s0.v0.max - g.s0.v0.min) + 1)
let g.min.0.required = g.s0.v0.min
let g.stride.0.required = 1
let g.extent.1.required = ((g.s0.v1.max - g.s0.v1.min) + 1)
let g.min.1.required = g.s0.v1.min
let g.stride.1.required = g.extent.0.required
let input.extent.0.required = ((max(min(f.s0.v0.max, (input.extent.0 + -1)), 0) - max(min(f.s0.v0.min, (input.extent.0 + -1)), 0)) + 1)
let input.min.0.required = max(min(f.s0.v0.min, (input.extent.0 + -1)), 0)
let input.stride.0.required = 1
let input.extent.1.required = ((max(min(f.s0.v1.max, (input.extent.1 + -1)), 0) - max(min(f.s0.v1.min, (input.extent.1 + -1)), 0)) + 1)
let input.min.1.required = max(min(f.s0.v1.min, (input.extent.1 + -1)), 0)
let input.stride.1.required = input.extent.0.required
let g.stride.0.constrained = 1
let input.stride.0.constrained = 1
let g.stride.0.proposed = 1
let g.min.0.proposed = g.min.0.required
let g.extent.0.proposed = g.extent.0.required
let g.stride.1.proposed = g.stride.1.required
let g.min.1.proposed = g.min.1.required
let g.extent.1.proposed = g.extent.1.required
let input.stride.0.proposed = 1
let input.min.0.proposed = input.min.0.required
let input.extent.0.proposed = input.extent.0.required
let input.stride.1.proposed = input.stride.1.required
let input.min.1.proposed = input.min.1.required
let input.extent.1.proposed = input.extent.1.required
assert((!g.host_and_dev_are_null || ((g.min.0.proposed <= g.min.0.required) && (((g.min.0.required + g.extent.0.required) - g.extent.0.proposed) <= g.min.0.proposed))), halide_error_constraints_make_required_region_smaller("Output buffer g", 0, g.min.0.proposed, ((g.min.0.proposed + g.extent.0.proposed) + -1), g.min.0.required, ((g.min.0.required + g.extent.0.required) + -1)))
assert((!g.host_and_dev_are_null || ((g.min.1.proposed <= g.min.1.required) && (((g.min.1.required + g.extent.1.required) - g.extent.1.proposed) <= g.min.1.proposed))), halide_error_constraints_make_required_region_smaller("Output buffer g", 1, g.min.1.proposed, ((g.min.1.proposed + g.extent.1.proposed) + -1), g.min.1.required, ((g.min.1.required + g.extent.1.required) + -1)))
assert((!input.host_and_dev_are_null || ((input.min.0.proposed <= input.min.0.required) && (((input.min.0.required + input.extent.0.required) - input.extent.0.proposed) <= input.min.0.proposed))), halide_error_constraints_make_required_region_smaller("Input buffer input", 0, input.min.0.proposed, ((input.min.0.proposed + input.extent.0.proposed) + -1), input.min.0.required, ((input.min.0.required + input.extent.0.required) + -1)))
assert((!input.host_and_dev_are_null || ((input.min.1.proposed <= input.min.1.required) && (((input.min.1.required + input.extent.1.required) - input.extent.1.proposed) <= input.min.1.proposed))), halide_error_constraints_make_required_region_smaller("Input buffer input", 1, input.min.1.proposed, ((input.min.1.proposed + input.extent.1.proposed) + -1), input.min.1.required, ((input.min.1.required + input.extent.1.required) + -1)))
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0.proposed, g.extent.0.proposed, 1, g.min.1.proposed, g.extent.1.proposed, g.stride.1.proposed)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.proposed, input.extent.0.proposed, 1, input.min.1.proposed, input.extent.1.proposed, input.stride.1.proposed)
}
if (!(g.host_and_dev_are_null || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((g.min.0 <= g.min.0.required) && (((g.min.0.required + g.extent.0.required) - g.extent.0) <= g.min.0)), halide_error_access_out_of_bounds("Output buffer g", 0, g.min.0.required, ((g.min.0.required + g.extent.0.required) + -1), g.min.0, ((g.min.0 + g.extent.0) + -1)))
  assert(((g.min.1 <= g.min.1.required) && (((g.min.1.required + g.extent.1.required) - g.extent.1) <= g.min.1)), halide_error_access_out_of_bounds("Output buffer g", 1, g.min.1.required, ((g.min.1.required + g.extent.1.required) + -1), g.min.1, ((g.min.1 + g.extent.1) + -1)))
  assert(((input.min.0 <= input.min.0.required) && (((input.min.0.required + input.extent.0.required) - input.extent.0) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, ((input.min.0.required + input.extent.0.required) + -1), input.min.0, ((input.min.0 + input.extent.0) + -1)))
  assert(((input.min.1 <= input.min.1.required) && (((input.min.1.required + input.extent.1.required) - input.extent.1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, ((input.min.1.required + input.extent.1.required) + -1), input.min.1, ((input.min.1 + input.extent.1) + -1)))
  assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
  assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
  let g.total_extent.0 = int64(g.extent.0)
  let g.total_extent.1 = (int64(g.extent.1)*g.total_extent.0)
  let input.total_extent.0 = int64(input.extent.0)
  let input.total_extent.1 = (int64(input.extent.1)*input.total_extent.0)
  assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  let f.v1.max_realized = max(f.s0.v1.max, g.s0.v1.max)
  let f.v1.min_realized = min(f.s0.v1.min, g.s0.v1.min)
  let f.v1.extent_realized = ((max(f.s0.v1.max, g.s0.v1.max) - min(f.s0.v1.min, g.s0.v1.min)) + 1)
  let f.v0.max_realized = max(f.s0.v0.max, g.s0.v0.max)
  let f.v0.min_realized = min(f.s0.v0.min, g.s0.v0.min)
  let f.v0.extent_realized = ((max(f.s0.v0.max, g.s0.v0.max) - min(f.s0.v0.min, g.s0.v0.min)) + 1)
  realize f([f.v0.min_realized, f.v0.extent_realized], [f.v1.min_realized, f.v1.extent_realized]) {
    produce f {
      let f.s0.v1.loop_max = f.s0.v1.max
      let f.s0.v1.loop_min = f.s0.v1.min
      let f.s0.v1.loop_extent = ((f.s0.v1.max - f.s0.v1.min) + 1)
      let f.s0.v0.loop_max = f.s0.v0.max
      let f.s0.v0.loop_min = f.s0.v0.min
      let f.s0.v0.loop_extent = ((f.s0.v0.max - f.s0.v0.min) + 1)
      let f.s0.v0.__block_id_x.loop_extent = f.s0.v0.loop_extent
      let f.s0.v0.__block_id_x.loop_max = f.s0.v0.loop_max
      let f.s0.v0.__block_id_x.loop_min = f.s0.v0.loop_min
      let f.s0.v1.__block_id_y.loop_extent = f.s0.v1.loop_extent
      let f.s0.v1.__block_id_y.loop_max = f.s0.v1.loop_max
      let f.s0.v1.__block_id_y.loop_min = f.s0.v1.loop_min
      parallel<Renderscript> (f.s0.v1.__block_id_y, 0, f.s0.v1.__block_id_y.loop_extent) {
        let f.s0.v1 = (f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min)
        parallel<Renderscript> (f.s0.v0.__block_id_x, 0, f.s0.v0.__block_id_x.loop_extent) {
          let f.s0.v0 = (f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min)
          image_store("f", f.buffer, ((f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min) - f.min.0), ((f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min) - f.min.1), image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
        }
      }
    }
    produce g {
      let g.s0.v1.loop_max = g.s0.v1.max
      let g.s0.v1.loop_min = g.s0.v1.min
      let g.s0.v1.loop_extent = ((g.s0.v1.max - g.s0.v1.min) + 1)
      let g.s0.v0.loop_max = g.s0.v0.max
      let g.s0.v0.loop_min = g.s0.v0.min
      let g.s0.v0.loop_extent = ((g.s0.v0.max - g.s0.v0.min) + 1)
      let g.s0.v0.__block_id_x.loop_extent = g.s0.v0.loop_extent
      let g.s0.v0.__block_id_x.loop_max = g.s0.v0.loop_max
      let g.s0.v0.__block_id_x.loop_min = g.s0.v0.loop_min
      let g.s0.v1.__block_id_y.loop_extent = g.s0.v1.loop_extent
      let g.s0.v1.__block_id_y.loop_max = g.s0.v1.loop_max
      let g.s0.v1.__block_id_y.loop_min = g.s0.v1.loop_min
      parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.s0.v1.__block_id_y.loop_extent) {
        let g.s0.v1 = (g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min)
        parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.s0.v0.__block_id_x.loop_extent) {
          let g.s0.v0 = (g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min)
          image_store("g", g.buffer, ((g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min) - g.min.0), ((g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min) - g.min.1), image_load("f", f.buffer, ((g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min) - f.min.0), f.extent.0, ((g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min) - f.min.1), f.extent.1))
        }
      }
    }
    0
  }
}


Performing storage flattening...
unimplemented flatten_image_intrinsic called for 0x7f895af04a20unimplemented flatten_image_intrinsic called for 0x7f895af05850Lowering after storage flattening:
let g.s0.v1.max = ((g.min.1 + g.extent.1) + -1)
let g.s0.v1.min = g.min.1
let g.s0.v0.max = ((g.min.0 + g.extent.0) + -1)
let g.s0.v0.min = g.min.0
let f.s0.v1.max = g.s0.v1.max
let f.s0.v1.min = g.s0.v1.min
let f.s0.v0.max = g.s0.v0.max
let f.s0.v0.min = g.s0.v0.min
let g.extent.0.required = ((g.s0.v0.max - g.s0.v0.min) + 1)
let g.min.0.required = g.s0.v0.min
let g.stride.0.required = 1
let g.extent.1.required = ((g.s0.v1.max - g.s0.v1.min) + 1)
let g.min.1.required = g.s0.v1.min
let g.stride.1.required = g.extent.0.required
let input.extent.0.required = ((max(min(f.s0.v0.max, (input.extent.0 + -1)), 0) - max(min(f.s0.v0.min, (input.extent.0 + -1)), 0)) + 1)
let input.min.0.required = max(min(f.s0.v0.min, (input.extent.0 + -1)), 0)
let input.stride.0.required = 1
let input.extent.1.required = ((max(min(f.s0.v1.max, (input.extent.1 + -1)), 0) - max(min(f.s0.v1.min, (input.extent.1 + -1)), 0)) + 1)
let input.min.1.required = max(min(f.s0.v1.min, (input.extent.1 + -1)), 0)
let input.stride.1.required = input.extent.0.required
let g.stride.0.constrained = 1
let input.stride.0.constrained = 1
let g.stride.0.proposed = 1
let g.min.0.proposed = g.min.0.required
let g.extent.0.proposed = g.extent.0.required
let g.stride.1.proposed = g.stride.1.required
let g.min.1.proposed = g.min.1.required
let g.extent.1.proposed = g.extent.1.required
let input.stride.0.proposed = 1
let input.min.0.proposed = input.min.0.required
let input.extent.0.proposed = input.extent.0.required
let input.stride.1.proposed = input.stride.1.required
let input.min.1.proposed = input.min.1.required
let input.extent.1.proposed = input.extent.1.required
assert((!g.host_and_dev_are_null || ((g.min.0.proposed <= g.min.0.required) && (((g.min.0.required + g.extent.0.required) - g.extent.0.proposed) <= g.min.0.proposed))), halide_error_constraints_make_required_region_smaller("Output buffer g", 0, g.min.0.proposed, ((g.min.0.proposed + g.extent.0.proposed) + -1), g.min.0.required, ((g.min.0.required + g.extent.0.required) + -1)))
assert((!g.host_and_dev_are_null || ((g.min.1.proposed <= g.min.1.required) && (((g.min.1.required + g.extent.1.required) - g.extent.1.proposed) <= g.min.1.proposed))), halide_error_constraints_make_required_region_smaller("Output buffer g", 1, g.min.1.proposed, ((g.min.1.proposed + g.extent.1.proposed) + -1), g.min.1.required, ((g.min.1.required + g.extent.1.required) + -1)))
assert((!input.host_and_dev_are_null || ((input.min.0.proposed <= input.min.0.required) && (((input.min.0.required + input.extent.0.required) - input.extent.0.proposed) <= input.min.0.proposed))), halide_error_constraints_make_required_region_smaller("Input buffer input", 0, input.min.0.proposed, ((input.min.0.proposed + input.extent.0.proposed) + -1), input.min.0.required, ((input.min.0.required + input.extent.0.required) + -1)))
assert((!input.host_and_dev_are_null || ((input.min.1.proposed <= input.min.1.required) && (((input.min.1.required + input.extent.1.required) - input.extent.1.proposed) <= input.min.1.proposed))), halide_error_constraints_make_required_region_smaller("Input buffer input", 1, input.min.1.proposed, ((input.min.1.proposed + input.extent.1.proposed) + -1), input.min.1.required, ((input.min.1.required + input.extent.1.required) + -1)))
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0.proposed, g.extent.0.proposed, 1, g.min.1.proposed, g.extent.1.proposed, g.stride.1.proposed)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.proposed, input.extent.0.proposed, 1, input.min.1.proposed, input.extent.1.proposed, input.stride.1.proposed)
}
if (!(g.host_and_dev_are_null || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((g.min.0 <= g.min.0.required) && (((g.min.0.required + g.extent.0.required) - g.extent.0) <= g.min.0)), halide_error_access_out_of_bounds("Output buffer g", 0, g.min.0.required, ((g.min.0.required + g.extent.0.required) + -1), g.min.0, ((g.min.0 + g.extent.0) + -1)))
  assert(((g.min.1 <= g.min.1.required) && (((g.min.1.required + g.extent.1.required) - g.extent.1) <= g.min.1)), halide_error_access_out_of_bounds("Output buffer g", 1, g.min.1.required, ((g.min.1.required + g.extent.1.required) + -1), g.min.1, ((g.min.1 + g.extent.1) + -1)))
  assert(((input.min.0 <= input.min.0.required) && (((input.min.0.required + input.extent.0.required) - input.extent.0) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, ((input.min.0.required + input.extent.0.required) + -1), input.min.0, ((input.min.0 + input.extent.0) + -1)))
  assert(((input.min.1 <= input.min.1.required) && (((input.min.1.required + input.extent.1.required) - input.extent.1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, ((input.min.1.required + input.extent.1.required) + -1), input.min.1, ((input.min.1 + input.extent.1) + -1)))
  assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
  assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
  let g.total_extent.0 = int64(g.extent.0)
  let g.total_extent.1 = (int64(g.extent.1)*g.total_extent.0)
  let input.total_extent.0 = int64(input.extent.0)
  let input.total_extent.1 = (int64(input.extent.1)*input.total_extent.0)
  assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  let f.v1.max_realized = max(f.s0.v1.max, g.s0.v1.max)
  let f.v1.min_realized = min(f.s0.v1.min, g.s0.v1.min)
  let f.v1.extent_realized = ((max(f.s0.v1.max, g.s0.v1.max) - min(f.s0.v1.min, g.s0.v1.min)) + 1)
  let f.v0.max_realized = max(f.s0.v0.max, g.s0.v0.max)
  let f.v0.min_realized = min(f.s0.v0.min, g.s0.v0.min)
  let f.v0.extent_realized = ((max(f.s0.v0.max, g.s0.v0.max) - min(f.s0.v0.min, g.s0.v0.min)) + 1)
  let f.extent.0 = f.v0.extent_realized
  let f.min.0 = f.v0.min_realized
  let f.extent.1 = f.v1.extent_realized
  let f.min.1 = f.v1.min_realized
  let f.stride.0 = 1
  let f.stride.1 = (f.stride.0*f.extent.0)
  allocate f[uint32 * f.v0.extent_realized * f.v1.extent_realized]
  let f.buffer = create_buffer_t(address_of(f[0]), 4, f.min.0, f.extent.0, f.stride.0, f.min.1, f.extent.1, f.stride.1)
  produce f {
    let f.s0.v1.loop_max = f.s0.v1.max
    let f.s0.v1.loop_min = f.s0.v1.min
    let f.s0.v1.loop_extent = ((f.s0.v1.max - f.s0.v1.min) + 1)
    let f.s0.v0.loop_max = f.s0.v0.max
    let f.s0.v0.loop_min = f.s0.v0.min
    let f.s0.v0.loop_extent = ((f.s0.v0.max - f.s0.v0.min) + 1)
    let f.s0.v0.__block_id_x.loop_extent = f.s0.v0.loop_extent
    let f.s0.v0.__block_id_x.loop_max = f.s0.v0.loop_max
    let f.s0.v0.__block_id_x.loop_min = f.s0.v0.loop_min
    let f.s0.v1.__block_id_y.loop_extent = f.s0.v1.loop_extent
    let f.s0.v1.__block_id_y.loop_max = f.s0.v1.loop_max
    let f.s0.v1.__block_id_y.loop_min = f.s0.v1.loop_min
    parallel<Renderscript> (f.s0.v1.__block_id_y, 0, f.s0.v1.__block_id_y.loop_extent) {
      let f.s0.v1 = (f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min)
      parallel<Renderscript> (f.s0.v0.__block_id_x, 0, f.s0.v0.__block_id_x.loop_extent) {
        let f.s0.v0 = (f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min)
        image_store("f", f.buffer, ((f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min) - f.min.0), ((f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min) - f.min.1), image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
      }
    }
  }
  produce g {
    let g.s0.v1.loop_max = g.s0.v1.max
    let g.s0.v1.loop_min = g.s0.v1.min
    let g.s0.v1.loop_extent = ((g.s0.v1.max - g.s0.v1.min) + 1)
    let g.s0.v0.loop_max = g.s0.v0.max
    let g.s0.v0.loop_min = g.s0.v0.min
    let g.s0.v0.loop_extent = ((g.s0.v0.max - g.s0.v0.min) + 1)
    let g.s0.v0.__block_id_x.loop_extent = g.s0.v0.loop_extent
    let g.s0.v0.__block_id_x.loop_max = g.s0.v0.loop_max
    let g.s0.v0.__block_id_x.loop_min = g.s0.v0.loop_min
    let g.s0.v1.__block_id_y.loop_extent = g.s0.v1.loop_extent
    let g.s0.v1.__block_id_y.loop_max = g.s0.v1.loop_max
    let g.s0.v1.__block_id_y.loop_min = g.s0.v1.loop_min
    parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.s0.v1.__block_id_y.loop_extent) {
      let g.s0.v1 = (g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min)
      parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.s0.v0.__block_id_x.loop_extent) {
        let g.s0.v0 = (g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min)
        image_store("g", g.buffer, ((g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min) - g.min.0), ((g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min) - g.min.1), image_load("f", f.buffer, ((g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min) - f.min.0), f.extent.0, ((g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min) - f.min.1), f.extent.1))
      }
    }
  }
  0
}


Injecting host <-> dev buffer copies...
Buffers to track: Setting Allocate for loop f to 1
Buffers to track: switching from 1 to 6 for loop f.s0.v1.__block_id_y
Buffers to track: switching from 1 to 6 for loop g.s0.v1.__block_id_y
Tracking host <-> dev copies for the following buffers:
f
g
input
At loop level 

At loop level 

At loop level 

At loop level 

At loop level 

At loop level 

At loop level 

At loop level 

At loop level 

At loop level 

At loop level 

At loop level 

At loop level 

At loop level 

At loop level 

At loop level 

At loop level 

At loop level 

At loop level 

At loop level 

At loop level 

At loop level 

At loop level 

At loop level 

Switching from device_api 1 to op->device_api 6 in for loop f.s0.v1.__block_id_y
Adding image write via image_store for f.buffer
Adding image read via image_load for input.buffer
At loop level 
do_copies for f
Host current: 0 Device current: 0
Host touched: 1 Device touched: 0
Internal: 1 Device touching first: 0
Current device: 1
Device 6 wrote buffer
Needs copy to dev
Injecting device malloc for f on 6
do_copies for input
Host current: 0 Device current: 0
Host touched: 1 Device touched: 0
Internal: 0 Device touching first: 0
Current device: 1
Device 6 read buffer
Needs copy to dev

Switching from device_api 1 to op->device_api 6 in for loop g.s0.v1.__block_id_y
Adding image write via image_store for g.buffer
Adding image read via image_load for f.buffer
At loop level 
do_copies for f
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 1 Device touching first: 6
Current device: 6
Device 6 read buffer
Needs copy to dev
do_copies for g
Host current: 0 Device current: 0
Host touched: 1 Device touched: 0
Internal: 0 Device touching first: 0
Current device: 1
Device 6 wrote buffer
Needs copy to dev
do_copies for input
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6

At loop level 
do_copies for f
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 1 Device touching first: 6
Current device: 6
do_copies for g
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6
do_copies for input
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6

Injecting device copy for output g on 6
At loop level 
do_copies for f
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 1 Device touching first: 6
Current device: 6
do_copies for g
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6
do_copies for input
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6

At loop level 
do_copies for g
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6
do_copies for input
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6

At loop level 
do_copies for g
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6
do_copies for input
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6

At loop level 
do_copies for g
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6
do_copies for input
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6

At loop level 
do_copies for g
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6
do_copies for input
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6

At loop level 
do_copies for g
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6
do_copies for input
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6

At loop level 
do_copies for g
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6
do_copies for input
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6

At loop level 
do_copies for g
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6
do_copies for input
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6

At loop level 
do_copies for g
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6
do_copies for input
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6

At loop level 
do_copies for g
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6
do_copies for input
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6

At loop level 
do_copies for g
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6
do_copies for input
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6

At loop level 
do_copies for g
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6
do_copies for input
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6

At loop level 
do_copies for g
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6
do_copies for input
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6

At loop level 
do_copies for g
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6
do_copies for input
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6

At loop level 
do_copies for g
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6
do_copies for input
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6

At loop level 
do_copies for g
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6
do_copies for input
Host current: 0 Device current: 1
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 6
Current device: 6

At loop level 

At loop level 
do_copies for g
Host current: 0 Device current: 0
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 0
Current device: 1
do_copies for input
Host current: 0 Device current: 0
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 0
Current device: 1

At loop level 
do_copies for g
Host current: 0 Device current: 0
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 0
Current device: 1
do_copies for input
Host current: 0 Device current: 0
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 0
Current device: 1

At loop level 
do_copies for g
Host current: 0 Device current: 0
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 0
Current device: 1
do_copies for input
Host current: 0 Device current: 0
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 0
Current device: 1

At loop level 
do_copies for g
Host current: 0 Device current: 0
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 0
Current device: 1
do_copies for input
Host current: 0 Device current: 0
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 0
Current device: 1

At loop level 
do_copies for g
Host current: 0 Device current: 0
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 0
Current device: 1
do_copies for input
Host current: 0 Device current: 0
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 0
Current device: 1

At loop level 
do_copies for g
Host current: 0 Device current: 0
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 0
Current device: 1
do_copies for input
Host current: 0 Device current: 0
Host touched: 1 Device touched: 1
Internal: 0 Device touching first: 0
Current device: 1

Lowering after injecting host <-> dev buffer copies:
let g.s0.v1.max = ((g.min.1 + g.extent.1) + -1)
let g.s0.v1.min = g.min.1
let g.s0.v0.max = ((g.min.0 + g.extent.0) + -1)
let g.s0.v0.min = g.min.0
let f.s0.v1.max = g.s0.v1.max
let f.s0.v1.min = g.s0.v1.min
let f.s0.v0.max = g.s0.v0.max
let f.s0.v0.min = g.s0.v0.min
let g.extent.0.required = ((g.s0.v0.max - g.s0.v0.min) + 1)
let g.min.0.required = g.s0.v0.min
let g.stride.0.required = 1
let g.extent.1.required = ((g.s0.v1.max - g.s0.v1.min) + 1)
let g.min.1.required = g.s0.v1.min
let g.stride.1.required = g.extent.0.required
let input.extent.0.required = ((max(min(f.s0.v0.max, (input.extent.0 + -1)), 0) - max(min(f.s0.v0.min, (input.extent.0 + -1)), 0)) + 1)
let input.min.0.required = max(min(f.s0.v0.min, (input.extent.0 + -1)), 0)
let input.stride.0.required = 1
let input.extent.1.required = ((max(min(f.s0.v1.max, (input.extent.1 + -1)), 0) - max(min(f.s0.v1.min, (input.extent.1 + -1)), 0)) + 1)
let input.min.1.required = max(min(f.s0.v1.min, (input.extent.1 + -1)), 0)
let input.stride.1.required = input.extent.0.required
let g.stride.0.constrained = 1
let input.stride.0.constrained = 1
let g.stride.0.proposed = 1
let g.min.0.proposed = g.min.0.required
let g.extent.0.proposed = g.extent.0.required
let g.stride.1.proposed = g.stride.1.required
let g.min.1.proposed = g.min.1.required
let g.extent.1.proposed = g.extent.1.required
let input.stride.0.proposed = 1
let input.min.0.proposed = input.min.0.required
let input.extent.0.proposed = input.extent.0.required
let input.stride.1.proposed = input.stride.1.required
let input.min.1.proposed = input.min.1.required
let input.extent.1.proposed = input.extent.1.required
assert((!g.host_and_dev_are_null || ((g.min.0.proposed <= g.min.0.required) && (((g.min.0.required + g.extent.0.required) - g.extent.0.proposed) <= g.min.0.proposed))), halide_error_constraints_make_required_region_smaller("Output buffer g", 0, g.min.0.proposed, ((g.min.0.proposed + g.extent.0.proposed) + -1), g.min.0.required, ((g.min.0.required + g.extent.0.required) + -1)))
assert((!g.host_and_dev_are_null || ((g.min.1.proposed <= g.min.1.required) && (((g.min.1.required + g.extent.1.required) - g.extent.1.proposed) <= g.min.1.proposed))), halide_error_constraints_make_required_region_smaller("Output buffer g", 1, g.min.1.proposed, ((g.min.1.proposed + g.extent.1.proposed) + -1), g.min.1.required, ((g.min.1.required + g.extent.1.required) + -1)))
assert((!input.host_and_dev_are_null || ((input.min.0.proposed <= input.min.0.required) && (((input.min.0.required + input.extent.0.required) - input.extent.0.proposed) <= input.min.0.proposed))), halide_error_constraints_make_required_region_smaller("Input buffer input", 0, input.min.0.proposed, ((input.min.0.proposed + input.extent.0.proposed) + -1), input.min.0.required, ((input.min.0.required + input.extent.0.required) + -1)))
assert((!input.host_and_dev_are_null || ((input.min.1.proposed <= input.min.1.required) && (((input.min.1.required + input.extent.1.required) - input.extent.1.proposed) <= input.min.1.proposed))), halide_error_constraints_make_required_region_smaller("Input buffer input", 1, input.min.1.proposed, ((input.min.1.proposed + input.extent.1.proposed) + -1), input.min.1.required, ((input.min.1.required + input.extent.1.required) + -1)))
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0.proposed, g.extent.0.proposed, 1, g.min.1.proposed, g.extent.1.proposed, g.stride.1.proposed)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.proposed, input.extent.0.proposed, 1, input.min.1.proposed, input.extent.1.proposed, input.stride.1.proposed)
}
if (!(g.host_and_dev_are_null || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((g.min.0 <= g.min.0.required) && (((g.min.0.required + g.extent.0.required) - g.extent.0) <= g.min.0)), halide_error_access_out_of_bounds("Output buffer g", 0, g.min.0.required, ((g.min.0.required + g.extent.0.required) + -1), g.min.0, ((g.min.0 + g.extent.0) + -1)))
  assert(((g.min.1 <= g.min.1.required) && (((g.min.1.required + g.extent.1.required) - g.extent.1) <= g.min.1)), halide_error_access_out_of_bounds("Output buffer g", 1, g.min.1.required, ((g.min.1.required + g.extent.1.required) + -1), g.min.1, ((g.min.1 + g.extent.1) + -1)))
  assert(((input.min.0 <= input.min.0.required) && (((input.min.0.required + input.extent.0.required) - input.extent.0) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, ((input.min.0.required + input.extent.0.required) + -1), input.min.0, ((input.min.0 + input.extent.0) + -1)))
  assert(((input.min.1 <= input.min.1.required) && (((input.min.1.required + input.extent.1.required) - input.extent.1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, ((input.min.1.required + input.extent.1.required) + -1), input.min.1, ((input.min.1 + input.extent.1) + -1)))
  assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
  assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
  let g.total_extent.0 = int64(g.extent.0)
  let g.total_extent.1 = (int64(g.extent.1)*g.total_extent.0)
  let input.total_extent.0 = int64(input.extent.0)
  let input.total_extent.1 = (int64(input.extent.1)*input.total_extent.0)
  assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  let f.v1.max_realized = max(f.s0.v1.max, g.s0.v1.max)
  let f.v1.min_realized = min(f.s0.v1.min, g.s0.v1.min)
  let f.v1.extent_realized = ((max(f.s0.v1.max, g.s0.v1.max) - min(f.s0.v1.min, g.s0.v1.min)) + 1)
  let f.v0.max_realized = max(f.s0.v0.max, g.s0.v0.max)
  let f.v0.min_realized = min(f.s0.v0.min, g.s0.v0.min)
  let f.v0.extent_realized = ((max(f.s0.v0.max, g.s0.v0.max) - min(f.s0.v0.min, g.s0.v0.min)) + 1)
  let f.extent.0 = f.v0.extent_realized
  let f.min.0 = f.v0.min_realized
  let f.extent.1 = f.v1.extent_realized
  let f.min.1 = f.v1.min_realized
  let f.stride.0 = 1
  let f.stride.1 = (f.stride.0*f.extent.0)
  allocate f[uint32 * f.v0.extent_realized * f.v1.extent_realized]
  let f.buffer = create_buffer_t(address_of(f[0]), 4, f.min.0, f.extent.0, f.stride.0, f.min.1, f.extent.1, f.stride.1)
  produce f {
    let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
    let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
    assert((device_malloc_result == 0), device_malloc_result)
    let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result == 0), copy_to_device_result)
    let f.s0.v1.loop_max = f.s0.v1.max
    let f.s0.v1.loop_min = f.s0.v1.min
    let f.s0.v1.loop_extent = ((f.s0.v1.max - f.s0.v1.min) + 1)
    let f.s0.v0.loop_max = f.s0.v0.max
    let f.s0.v0.loop_min = f.s0.v0.min
    let f.s0.v0.loop_extent = ((f.s0.v0.max - f.s0.v0.min) + 1)
    let f.s0.v0.__block_id_x.loop_extent = f.s0.v0.loop_extent
    let f.s0.v0.__block_id_x.loop_max = f.s0.v0.loop_max
    let f.s0.v0.__block_id_x.loop_min = f.s0.v0.loop_min
    let f.s0.v1.__block_id_y.loop_extent = f.s0.v1.loop_extent
    let f.s0.v1.__block_id_y.loop_max = f.s0.v1.loop_max
    let f.s0.v1.__block_id_y.loop_min = f.s0.v1.loop_min
    parallel<Renderscript> (f.s0.v1.__block_id_y, 0, f.s0.v1.__block_id_y.loop_extent) {
      let f.s0.v1 = (f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min)
      parallel<Renderscript> (f.s0.v0.__block_id_x, 0, f.s0.v0.__block_id_x.loop_extent) {
        let f.s0.v0 = (f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min)
        image_store("f", f.buffer, ((f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min) - f.min.0), ((f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min) - f.min.1), image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
      }
    }
    set_dev_dirty(f.buffer, uint8(1))
  }
  let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
  produce g {
    let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
    let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
    let g.s0.v1.loop_max = g.s0.v1.max
    let g.s0.v1.loop_min = g.s0.v1.min
    let g.s0.v1.loop_extent = ((g.s0.v1.max - g.s0.v1.min) + 1)
    let g.s0.v0.loop_max = g.s0.v0.max
    let g.s0.v0.loop_min = g.s0.v0.min
    let g.s0.v0.loop_extent = ((g.s0.v0.max - g.s0.v0.min) + 1)
    let g.s0.v0.__block_id_x.loop_extent = g.s0.v0.loop_extent
    let g.s0.v0.__block_id_x.loop_max = g.s0.v0.loop_max
    let g.s0.v0.__block_id_x.loop_min = g.s0.v0.loop_min
    let g.s0.v1.__block_id_y.loop_extent = g.s0.v1.loop_extent
    let g.s0.v1.__block_id_y.loop_max = g.s0.v1.loop_max
    let g.s0.v1.__block_id_y.loop_min = g.s0.v1.loop_min
    parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.s0.v1.__block_id_y.loop_extent) {
      let g.s0.v1 = (g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min)
      parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.s0.v0.__block_id_x.loop_extent) {
        let g.s0.v0 = (g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min)
        image_store("g", g.buffer, ((g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min) - g.min.0), ((g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min) - g.min.1), image_load("f", f.buffer, ((g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min) - f.min.0), f.extent.0, ((g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min) - f.min.1), f.extent.1))
      }
    }
    set_dev_dirty(g.buffer, uint8(1))
  }
  0
}


Injecting per-block gpu synchronization...
f.s0.v1.__block_id_y.loop_extent not in scope, so leaving it as-is
f.s0.v0.__block_id_x.loop_extent not in scope, so leaving it as-is
f.s0.v0.__block_id_x not in scope, so leaving it as-is
f.s0.v0.__block_id_x.loop_min not in scope, so leaving it as-is
Fusing thread block:
let f.s0.v0 = (f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min)
image_store("f", f.buffer, ((f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min) - f.min.0), ((f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min) - f.min.1), image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))


Normalized dimensionality:
let f.s0.v0 = (f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min)
image_store("f", f.buffer, ((f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min) - f.min.0), ((f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min) - f.min.1), image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))


f.s0.v0.__block_id_x not in scope, so leaving it as-is
f.s0.v0.__block_id_x.loop_min not in scope, so leaving it as-is
Pulled out shared allocations:
let f.s0.v0 = (f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min)
image_store("f", f.buffer, ((f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min) - f.min.0), ((f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min) - f.min.1), image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))


Injected synchronization:
let f.s0.v0 = (f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min)
image_store("f", f.buffer, ((f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min) - f.min.0), ((f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min) - f.min.1), image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))


Replaced for with if:
let f.s0.v0 = (f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min)
image_store("f", f.buffer, ((f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min) - f.min.0), ((f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min) - f.min.1), image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))


Rewrapped in for loops:
parallel<Renderscript> (.__thread_id_x, 0, 1) {
  let f.s0.v0 = (f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min)
  image_store("f", f.buffer, ((f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min) - f.min.0), ((f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min) - f.min.1), image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
}


Add back in shared allocations:
let sentinel.shared_offset = 0
allocate __shared[uint8 * sentinel.shared_offset]
parallel<Renderscript> (.__thread_id_x, 0, 1) {
  let f.s0.v0 = (f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min)
  image_store("f", f.buffer, ((f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min) - f.min.0), ((f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min) - f.min.1), image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
}


g.s0.v1.__block_id_y.loop_extent not in scope, so leaving it as-is
g.s0.v0.__block_id_x.loop_extent not in scope, so leaving it as-is
g.s0.v0.__block_id_x not in scope, so leaving it as-is
g.s0.v0.__block_id_x.loop_min not in scope, so leaving it as-is
Fusing thread block:
let g.s0.v0 = (g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min)
image_store("g", g.buffer, ((g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min) - g.min.0), ((g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min) - g.min.1), image_load("f", f.buffer, ((g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min) - f.min.0), f.extent.0, ((g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min) - f.min.1), f.extent.1))


Normalized dimensionality:
let g.s0.v0 = (g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min)
image_store("g", g.buffer, ((g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min) - g.min.0), ((g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min) - g.min.1), image_load("f", f.buffer, ((g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min) - f.min.0), f.extent.0, ((g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min) - f.min.1), f.extent.1))


g.s0.v0.__block_id_x not in scope, so leaving it as-is
g.s0.v0.__block_id_x.loop_min not in scope, so leaving it as-is
Pulled out shared allocations:
let g.s0.v0 = (g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min)
image_store("g", g.buffer, ((g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min) - g.min.0), ((g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min) - g.min.1), image_load("f", f.buffer, ((g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min) - f.min.0), f.extent.0, ((g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min) - f.min.1), f.extent.1))


Injected synchronization:
let g.s0.v0 = (g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min)
image_store("g", g.buffer, ((g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min) - g.min.0), ((g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min) - g.min.1), image_load("f", f.buffer, ((g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min) - f.min.0), f.extent.0, ((g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min) - f.min.1), f.extent.1))


Replaced for with if:
let g.s0.v0 = (g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min)
image_store("g", g.buffer, ((g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min) - g.min.0), ((g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min) - g.min.1), image_load("f", f.buffer, ((g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min) - f.min.0), f.extent.0, ((g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min) - f.min.1), f.extent.1))


Rewrapped in for loops:
parallel<Renderscript> (.__thread_id_x, 0, 1) {
  let g.s0.v0 = (g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min)
  image_store("g", g.buffer, ((g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min) - g.min.0), ((g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min) - g.min.1), image_load("f", f.buffer, ((g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min) - f.min.0), f.extent.0, ((g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min) - f.min.1), f.extent.1))
}


Add back in shared allocations:
let sentinel.shared_offset = 0
allocate __shared[uint8 * sentinel.shared_offset]
parallel<Renderscript> (.__thread_id_x, 0, 1) {
  let g.s0.v0 = (g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min)
  image_store("g", g.buffer, ((g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min) - g.min.0), ((g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min) - g.min.1), image_load("f", f.buffer, ((g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min) - f.min.0), f.extent.0, ((g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min) - f.min.1), f.extent.1))
}


Lowering after injecting per-block gpu synchronization:
let g.s0.v1.max = ((g.min.1 + g.extent.1) + -1)
let g.s0.v1.min = g.min.1
let g.s0.v0.max = ((g.min.0 + g.extent.0) + -1)
let g.s0.v0.min = g.min.0
let f.s0.v1.max = g.s0.v1.max
let f.s0.v1.min = g.s0.v1.min
let f.s0.v0.max = g.s0.v0.max
let f.s0.v0.min = g.s0.v0.min
let g.extent.0.required = ((g.s0.v0.max - g.s0.v0.min) + 1)
let g.min.0.required = g.s0.v0.min
let g.stride.0.required = 1
let g.extent.1.required = ((g.s0.v1.max - g.s0.v1.min) + 1)
let g.min.1.required = g.s0.v1.min
let g.stride.1.required = g.extent.0.required
let input.extent.0.required = ((max(min(f.s0.v0.max, (input.extent.0 + -1)), 0) - max(min(f.s0.v0.min, (input.extent.0 + -1)), 0)) + 1)
let input.min.0.required = max(min(f.s0.v0.min, (input.extent.0 + -1)), 0)
let input.stride.0.required = 1
let input.extent.1.required = ((max(min(f.s0.v1.max, (input.extent.1 + -1)), 0) - max(min(f.s0.v1.min, (input.extent.1 + -1)), 0)) + 1)
let input.min.1.required = max(min(f.s0.v1.min, (input.extent.1 + -1)), 0)
let input.stride.1.required = input.extent.0.required
let g.stride.0.constrained = 1
let input.stride.0.constrained = 1
let g.stride.0.proposed = 1
let g.min.0.proposed = g.min.0.required
let g.extent.0.proposed = g.extent.0.required
let g.stride.1.proposed = g.stride.1.required
let g.min.1.proposed = g.min.1.required
let g.extent.1.proposed = g.extent.1.required
let input.stride.0.proposed = 1
let input.min.0.proposed = input.min.0.required
let input.extent.0.proposed = input.extent.0.required
let input.stride.1.proposed = input.stride.1.required
let input.min.1.proposed = input.min.1.required
let input.extent.1.proposed = input.extent.1.required
assert((!g.host_and_dev_are_null || ((g.min.0.proposed <= g.min.0.required) && (((g.min.0.required + g.extent.0.required) - g.extent.0.proposed) <= g.min.0.proposed))), halide_error_constraints_make_required_region_smaller("Output buffer g", 0, g.min.0.proposed, ((g.min.0.proposed + g.extent.0.proposed) + -1), g.min.0.required, ((g.min.0.required + g.extent.0.required) + -1)))
assert((!g.host_and_dev_are_null || ((g.min.1.proposed <= g.min.1.required) && (((g.min.1.required + g.extent.1.required) - g.extent.1.proposed) <= g.min.1.proposed))), halide_error_constraints_make_required_region_smaller("Output buffer g", 1, g.min.1.proposed, ((g.min.1.proposed + g.extent.1.proposed) + -1), g.min.1.required, ((g.min.1.required + g.extent.1.required) + -1)))
assert((!input.host_and_dev_are_null || ((input.min.0.proposed <= input.min.0.required) && (((input.min.0.required + input.extent.0.required) - input.extent.0.proposed) <= input.min.0.proposed))), halide_error_constraints_make_required_region_smaller("Input buffer input", 0, input.min.0.proposed, ((input.min.0.proposed + input.extent.0.proposed) + -1), input.min.0.required, ((input.min.0.required + input.extent.0.required) + -1)))
assert((!input.host_and_dev_are_null || ((input.min.1.proposed <= input.min.1.required) && (((input.min.1.required + input.extent.1.required) - input.extent.1.proposed) <= input.min.1.proposed))), halide_error_constraints_make_required_region_smaller("Input buffer input", 1, input.min.1.proposed, ((input.min.1.proposed + input.extent.1.proposed) + -1), input.min.1.required, ((input.min.1.required + input.extent.1.required) + -1)))
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0.proposed, g.extent.0.proposed, 1, g.min.1.proposed, g.extent.1.proposed, g.stride.1.proposed)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.proposed, input.extent.0.proposed, 1, input.min.1.proposed, input.extent.1.proposed, input.stride.1.proposed)
}
if (!(g.host_and_dev_are_null || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((g.min.0 <= g.min.0.required) && (((g.min.0.required + g.extent.0.required) - g.extent.0) <= g.min.0)), halide_error_access_out_of_bounds("Output buffer g", 0, g.min.0.required, ((g.min.0.required + g.extent.0.required) + -1), g.min.0, ((g.min.0 + g.extent.0) + -1)))
  assert(((g.min.1 <= g.min.1.required) && (((g.min.1.required + g.extent.1.required) - g.extent.1) <= g.min.1)), halide_error_access_out_of_bounds("Output buffer g", 1, g.min.1.required, ((g.min.1.required + g.extent.1.required) + -1), g.min.1, ((g.min.1 + g.extent.1) + -1)))
  assert(((input.min.0 <= input.min.0.required) && (((input.min.0.required + input.extent.0.required) - input.extent.0) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, ((input.min.0.required + input.extent.0.required) + -1), input.min.0, ((input.min.0 + input.extent.0) + -1)))
  assert(((input.min.1 <= input.min.1.required) && (((input.min.1.required + input.extent.1.required) - input.extent.1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, ((input.min.1.required + input.extent.1.required) + -1), input.min.1, ((input.min.1 + input.extent.1) + -1)))
  assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
  assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
  let g.total_extent.0 = int64(g.extent.0)
  let g.total_extent.1 = (int64(g.extent.1)*g.total_extent.0)
  let input.total_extent.0 = int64(input.extent.0)
  let input.total_extent.1 = (int64(input.extent.1)*input.total_extent.0)
  assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  let f.v1.max_realized = max(f.s0.v1.max, g.s0.v1.max)
  let f.v1.min_realized = min(f.s0.v1.min, g.s0.v1.min)
  let f.v1.extent_realized = ((max(f.s0.v1.max, g.s0.v1.max) - min(f.s0.v1.min, g.s0.v1.min)) + 1)
  let f.v0.max_realized = max(f.s0.v0.max, g.s0.v0.max)
  let f.v0.min_realized = min(f.s0.v0.min, g.s0.v0.min)
  let f.v0.extent_realized = ((max(f.s0.v0.max, g.s0.v0.max) - min(f.s0.v0.min, g.s0.v0.min)) + 1)
  let f.extent.0 = f.v0.extent_realized
  let f.min.0 = f.v0.min_realized
  let f.extent.1 = f.v1.extent_realized
  let f.min.1 = f.v1.min_realized
  let f.stride.0 = 1
  let f.stride.1 = (f.stride.0*f.extent.0)
  allocate f[uint32 * f.v0.extent_realized * f.v1.extent_realized]
  let f.buffer = create_buffer_t(address_of(f[0]), 4, f.min.0, f.extent.0, f.stride.0, f.min.1, f.extent.1, f.stride.1)
  produce f {
    let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
    let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
    assert((device_malloc_result == 0), device_malloc_result)
    let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result == 0), copy_to_device_result)
    let f.s0.v1.loop_max = f.s0.v1.max
    let f.s0.v1.loop_min = f.s0.v1.min
    let f.s0.v1.loop_extent = ((f.s0.v1.max - f.s0.v1.min) + 1)
    let f.s0.v0.loop_max = f.s0.v0.max
    let f.s0.v0.loop_min = f.s0.v0.min
    let f.s0.v0.loop_extent = ((f.s0.v0.max - f.s0.v0.min) + 1)
    let f.s0.v0.__block_id_x.loop_extent = f.s0.v0.loop_extent
    let f.s0.v0.__block_id_x.loop_max = f.s0.v0.loop_max
    let f.s0.v0.__block_id_x.loop_min = f.s0.v0.loop_min
    let f.s0.v1.__block_id_y.loop_extent = f.s0.v1.loop_extent
    let f.s0.v1.__block_id_y.loop_max = f.s0.v1.loop_max
    let f.s0.v1.__block_id_y.loop_min = f.s0.v1.loop_min
    parallel<Renderscript> (f.s0.v1.__block_id_y, 0, f.s0.v1.__block_id_y.loop_extent) {
      let f.s0.v1 = (f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min)
      parallel<Renderscript> (f.s0.v0.__block_id_x, 0, f.s0.v0.__block_id_x.loop_extent) {
        let sentinel.shared_offset = 0
        allocate __shared[uint8 * sentinel.shared_offset]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          let f.s0.v0 = (f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min)
          image_store("f", f.buffer, ((f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min) - f.min.0), ((f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min) - f.min.1), image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + f.s0.v0.__block_id_x.loop_min), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + f.s0.v1.__block_id_y.loop_min), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
        }
      }
    }
    set_dev_dirty(f.buffer, uint8(1))
  }
  let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
  produce g {
    let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
    let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
    let g.s0.v1.loop_max = g.s0.v1.max
    let g.s0.v1.loop_min = g.s0.v1.min
    let g.s0.v1.loop_extent = ((g.s0.v1.max - g.s0.v1.min) + 1)
    let g.s0.v0.loop_max = g.s0.v0.max
    let g.s0.v0.loop_min = g.s0.v0.min
    let g.s0.v0.loop_extent = ((g.s0.v0.max - g.s0.v0.min) + 1)
    let g.s0.v0.__block_id_x.loop_extent = g.s0.v0.loop_extent
    let g.s0.v0.__block_id_x.loop_max = g.s0.v0.loop_max
    let g.s0.v0.__block_id_x.loop_min = g.s0.v0.loop_min
    let g.s0.v1.__block_id_y.loop_extent = g.s0.v1.loop_extent
    let g.s0.v1.__block_id_y.loop_max = g.s0.v1.loop_max
    let g.s0.v1.__block_id_y.loop_min = g.s0.v1.loop_min
    parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.s0.v1.__block_id_y.loop_extent) {
      let g.s0.v1 = (g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min)
      parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.s0.v0.__block_id_x.loop_extent) {
        let sentinel.shared_offset = 0
        allocate __shared[uint8 * sentinel.shared_offset]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          let g.s0.v0 = (g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min)
          image_store("g", g.buffer, ((g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min) - g.min.0), ((g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min) - g.min.1), image_load("f", f.buffer, ((g.s0.v0.__block_id_x + g.s0.v0.__block_id_x.loop_min) - f.min.0), f.extent.0, ((g.s0.v1.__block_id_y + g.s0.v1.__block_id_y.loop_min) - f.min.1), f.extent.1))
        }
      }
    }
    set_dev_dirty(g.buffer, uint8(1))
  }
  0
}


Simplifying...
simplify let g.s0.v1.max = ((g.min.1 + g.extent.1) + -1) in ... g.s0.v1.max ...
new let g.s0.v1.max.s = (undefined) in ... ((g.min.1 + g.extent.1) + -1) ...
simplify let g.s0.v1.min = g.min.1 in ... g.s0.v1.min ...
new let g.s0.v1.min.s = (undefined) in ... g.min.1 ...
simplify let g.s0.v0.max = ((g.min.0 + g.extent.0) + -1) in ... g.s0.v0.max ...
new let g.s0.v0.max.s = (undefined) in ... ((g.min.0 + g.extent.0) + -1) ...
simplify let g.s0.v0.min = g.min.0 in ... g.s0.v0.min ...
new let g.s0.v0.min.s = (undefined) in ... g.min.0 ...
simplify let f.s0.v1.max = ((g.min.1 + g.extent.1) + -1) in ... f.s0.v1.max ...
new let f.s0.v1.max.s = (undefined) in ... ((g.min.1 + g.extent.1) + -1) ...
simplify let f.s0.v1.min = g.min.1 in ... f.s0.v1.min ...
new let f.s0.v1.min.s = (undefined) in ... g.min.1 ...
simplify let f.s0.v0.max = ((g.min.0 + g.extent.0) + -1) in ... f.s0.v0.max ...
new let f.s0.v0.max.s = (undefined) in ... ((g.min.0 + g.extent.0) + -1) ...
simplify let f.s0.v0.min = g.min.0 in ... f.s0.v0.min ...
new let f.s0.v0.min.s = (undefined) in ... g.min.0 ...
simplify let g.extent.0.required = g.extent.0 in ... g.extent.0.required ...
new let g.extent.0.required.s = (undefined) in ... g.extent.0 ...
simplify let g.min.0.required = g.min.0 in ... g.min.0.required ...
new let g.min.0.required.s = (undefined) in ... g.min.0 ...
simplify let g.stride.0.required = 1 in ... g.stride.0.required ...
new let g.stride.0.required.s = (undefined) in ... 1 ...
simplify let g.extent.1.required = g.extent.1 in ... g.extent.1.required ...
new let g.extent.1.required.s = (undefined) in ... g.extent.1 ...
simplify let g.min.1.required = g.min.1 in ... g.min.1.required ...
new let g.min.1.required.s = (undefined) in ... g.min.1 ...
simplify let g.stride.1.required = g.extent.0 in ... g.stride.1.required ...
new let g.stride.1.required.s = (undefined) in ... g.extent.0 ...
simplify let input.extent.0.required = ((max((min((g.min.0 + g.extent.0), input.extent.0) + -1), 0) - max(min(g.min.0, (input.extent.0 + -1)), 0)) + 1) in ... input.extent.0.required ...
new let input.extent.0.required.s = (max((min((g.min.0 + g.extent.0), input.extent.0) + -1), 0) - max(min(g.min.0, (input.extent.0 + -1)), 0)) in ... (input.extent.0.required.s + 1) ...
simplify let input.min.0.required = max(min(g.min.0, (input.extent.0 + -1)), 0) in ... input.min.0.required ...
simplify let input.stride.0.required = 1 in ... input.stride.0.required ...
new let input.stride.0.required.s = (undefined) in ... 1 ...
simplify let input.extent.1.required = ((max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0) - max(min(g.min.1, (input.extent.1 + -1)), 0)) + 1) in ... input.extent.1.required ...
new let input.extent.1.required.s = (max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0) - max(min(g.min.1, (input.extent.1 + -1)), 0)) in ... (input.extent.1.required.s + 1) ...
simplify let input.min.1.required = max(min(g.min.1, (input.extent.1 + -1)), 0) in ... input.min.1.required ...
simplify let input.stride.1.required = (input.extent.0.required.s + 1) in ... input.stride.1.required ...
new let input.stride.1.required.s = (undefined) in ... (input.extent.0.required.s + 1) ...
simplify let g.stride.0.constrained = 1 in ... g.stride.0.constrained ...
new let g.stride.0.constrained.s = (undefined) in ... 1 ...
simplify let input.stride.0.constrained = 1 in ... input.stride.0.constrained ...
new let input.stride.0.constrained.s = (undefined) in ... 1 ...
simplify let g.stride.0.proposed = 1 in ... g.stride.0.proposed ...
new let g.stride.0.proposed.s = (undefined) in ... 1 ...
simplify let g.min.0.proposed = g.min.0 in ... g.min.0.proposed ...
new let g.min.0.proposed.s = (undefined) in ... g.min.0 ...
simplify let g.extent.0.proposed = g.extent.0 in ... g.extent.0.proposed ...
new let g.extent.0.proposed.s = (undefined) in ... g.extent.0 ...
simplify let g.stride.1.proposed = g.extent.0 in ... g.stride.1.proposed ...
new let g.stride.1.proposed.s = (undefined) in ... g.extent.0 ...
simplify let g.min.1.proposed = g.min.1 in ... g.min.1.proposed ...
new let g.min.1.proposed.s = (undefined) in ... g.min.1 ...
simplify let g.extent.1.proposed = g.extent.1 in ... g.extent.1.proposed ...
new let g.extent.1.proposed.s = (undefined) in ... g.extent.1 ...
simplify let input.stride.0.proposed = 1 in ... input.stride.0.proposed ...
new let input.stride.0.proposed.s = (undefined) in ... 1 ...
simplify let input.min.0.proposed = input.min.0.required in ... input.min.0.proposed ...
new let input.min.0.proposed.s = (undefined) in ... input.min.0.required ...
simplify let input.extent.0.proposed = (input.extent.0.required.s + 1) in ... input.extent.0.proposed ...
new let input.extent.0.proposed.s = (undefined) in ... (input.extent.0.required.s + 1) ...
simplify let input.stride.1.proposed = (input.extent.0.required.s + 1) in ... input.stride.1.proposed ...
new let input.stride.1.proposed.s = (undefined) in ... (input.extent.0.required.s + 1) ...
simplify let input.min.1.proposed = input.min.1.required in ... input.min.1.proposed ...
new let input.min.1.proposed.s = (undefined) in ... input.min.1.required ...
simplify let input.extent.1.proposed = (input.extent.1.required.s + 1) in ... input.extent.1.proposed ...
new let input.extent.1.proposed.s = (undefined) in ... (input.extent.1.required.s + 1) ...
g.elem_size not in scope, so leaving it as-is
input.elem_size not in scope, so leaving it as-is
input.min.0.required not in scope, so leaving it as-is
input.min.0 not in scope, so leaving it as-is
input.min.0 not in scope, so leaving it as-is
input.extent.0 not in scope, so leaving it as-is
input.min.0.required not in scope, so leaving it as-is
input.extent.0.required.s not in scope, so leaving it as-is
input.min.1.required not in scope, so leaving it as-is
input.min.1 not in scope, so leaving it as-is
input.min.1 not in scope, so leaving it as-is
input.extent.1 not in scope, so leaving it as-is
input.min.1.required not in scope, so leaving it as-is
input.extent.1.required.s not in scope, so leaving it as-is
g.stride.0 not in scope, so leaving it as-is
input.stride.0 not in scope, so leaving it as-is
simplify let g.total_extent.0 = int64(g.extent.0) in ... g.total_extent.0 ...
new let g.total_extent.0.s = (undefined) in ... int64(g.extent.0) ...
simplify let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0)) in ... g.total_extent.1 ...
simplify let input.total_extent.0 = int64(input.extent.0) in ... input.total_extent.0 ...
new let input.total_extent.0.s = (undefined) in ... int64(input.extent.0) ...
simplify let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0)) in ... input.total_extent.1 ...
simplify let f.v1.max_realized = ((g.min.1 + g.extent.1) + -1) in ... f.v1.max_realized ...
new let f.v1.max_realized.s = (undefined) in ... ((g.min.1 + g.extent.1) + -1) ...
simplify let f.v1.min_realized = g.min.1 in ... f.v1.min_realized ...
new let f.v1.min_realized.s = (undefined) in ... g.min.1 ...
simplify let f.v1.extent_realized = g.extent.1 in ... f.v1.extent_realized ...
new let f.v1.extent_realized.s = (undefined) in ... g.extent.1 ...
simplify let f.v0.max_realized = ((g.min.0 + g.extent.0) + -1) in ... f.v0.max_realized ...
new let f.v0.max_realized.s = (undefined) in ... ((g.min.0 + g.extent.0) + -1) ...
simplify let f.v0.min_realized = g.min.0 in ... f.v0.min_realized ...
new let f.v0.min_realized.s = (undefined) in ... g.min.0 ...
simplify let f.v0.extent_realized = g.extent.0 in ... f.v0.extent_realized ...
new let f.v0.extent_realized.s = (undefined) in ... g.extent.0 ...
simplify let f.extent.0 = g.extent.0 in ... f.extent.0 ...
new let f.extent.0.s = (undefined) in ... g.extent.0 ...
simplify let f.min.0 = g.min.0 in ... f.min.0 ...
new let f.min.0.s = (undefined) in ... g.min.0 ...
simplify let f.extent.1 = g.extent.1 in ... f.extent.1 ...
new let f.extent.1.s = (undefined) in ... g.extent.1 ...
simplify let f.min.1 = g.min.1 in ... f.min.1 ...
new let f.min.1.s = (undefined) in ... g.min.1 ...
simplify let f.stride.0 = 1 in ... f.stride.0 ...
new let f.stride.0.s = (undefined) in ... 1 ...
simplify let f.stride.1 = g.extent.0 in ... f.stride.1 ...
new let f.stride.1.s = (undefined) in ... g.extent.0 ...
simplify let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0) in ... f.buffer ...
simplify let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$2 ...
copy_to_device_result$2 not in scope, so leaving it as-is
simplify let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface()) in ... device_malloc_result ...
device_malloc_result not in scope, so leaving it as-is
simplify let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result ...
copy_to_device_result not in scope, so leaving it as-is
simplify let f.s0.v1.loop_max = ((g.min.1 + g.extent.1) + -1) in ... f.s0.v1.loop_max ...
new let f.s0.v1.loop_max.s = (undefined) in ... ((g.min.1 + g.extent.1) + -1) ...
simplify let f.s0.v1.loop_min = g.min.1 in ... f.s0.v1.loop_min ...
new let f.s0.v1.loop_min.s = (undefined) in ... g.min.1 ...
simplify let f.s0.v1.loop_extent = g.extent.1 in ... f.s0.v1.loop_extent ...
new let f.s0.v1.loop_extent.s = (undefined) in ... g.extent.1 ...
simplify let f.s0.v0.loop_max = ((g.min.0 + g.extent.0) + -1) in ... f.s0.v0.loop_max ...
new let f.s0.v0.loop_max.s = (undefined) in ... ((g.min.0 + g.extent.0) + -1) ...
simplify let f.s0.v0.loop_min = g.min.0 in ... f.s0.v0.loop_min ...
new let f.s0.v0.loop_min.s = (undefined) in ... g.min.0 ...
simplify let f.s0.v0.loop_extent = g.extent.0 in ... f.s0.v0.loop_extent ...
new let f.s0.v0.loop_extent.s = (undefined) in ... g.extent.0 ...
simplify let f.s0.v0.__block_id_x.loop_extent = g.extent.0 in ... f.s0.v0.__block_id_x.loop_extent ...
new let f.s0.v0.__block_id_x.loop_extent.s = (undefined) in ... g.extent.0 ...
simplify let f.s0.v0.__block_id_x.loop_max = ((g.min.0 + g.extent.0) + -1) in ... f.s0.v0.__block_id_x.loop_max ...
new let f.s0.v0.__block_id_x.loop_max.s = (undefined) in ... ((g.min.0 + g.extent.0) + -1) ...
simplify let f.s0.v0.__block_id_x.loop_min = g.min.0 in ... f.s0.v0.__block_id_x.loop_min ...
new let f.s0.v0.__block_id_x.loop_min.s = (undefined) in ... g.min.0 ...
simplify let f.s0.v1.__block_id_y.loop_extent = g.extent.1 in ... f.s0.v1.__block_id_y.loop_extent ...
new let f.s0.v1.__block_id_y.loop_extent.s = (undefined) in ... g.extent.1 ...
simplify let f.s0.v1.__block_id_y.loop_max = ((g.min.1 + g.extent.1) + -1) in ... f.s0.v1.__block_id_y.loop_max ...
new let f.s0.v1.__block_id_y.loop_max.s = (undefined) in ... ((g.min.1 + g.extent.1) + -1) ...
simplify let f.s0.v1.__block_id_y.loop_min = g.min.1 in ... f.s0.v1.__block_id_y.loop_min ...
new let f.s0.v1.__block_id_y.loop_min.s = (undefined) in ... g.min.1 ...
simplify let f.s0.v1 = (f.s0.v1.__block_id_y + g.min.1) in ... f.s0.v1 ...
new let f.s0.v1.s = (undefined) in ... (f.s0.v1.__block_id_y + g.min.1) ...
simplify let sentinel.shared_offset = 0 in ... sentinel.shared_offset ...
new let sentinel.shared_offset.s = (undefined) in ... 0 ...
simplify let f.s0.v0 = (f.s0.v0.__block_id_x + g.min.0) in ... f.s0.v0 ...
new let f.s0.v0.s = (undefined) in ... (f.s0.v0.__block_id_x + g.min.0) ...
simplify let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$5 ...
copy_to_device_result$5 not in scope, so leaving it as-is
simplify let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$4 ...
copy_to_device_result$4 not in scope, so leaving it as-is
simplify let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$3 ...
copy_to_device_result$3 not in scope, so leaving it as-is
simplify let g.s0.v1.loop_max = ((g.min.1 + g.extent.1) + -1) in ... g.s0.v1.loop_max ...
new let g.s0.v1.loop_max.s = (undefined) in ... ((g.min.1 + g.extent.1) + -1) ...
simplify let g.s0.v1.loop_min = g.min.1 in ... g.s0.v1.loop_min ...
new let g.s0.v1.loop_min.s = (undefined) in ... g.min.1 ...
simplify let g.s0.v1.loop_extent = g.extent.1 in ... g.s0.v1.loop_extent ...
new let g.s0.v1.loop_extent.s = (undefined) in ... g.extent.1 ...
simplify let g.s0.v0.loop_max = ((g.min.0 + g.extent.0) + -1) in ... g.s0.v0.loop_max ...
new let g.s0.v0.loop_max.s = (undefined) in ... ((g.min.0 + g.extent.0) + -1) ...
simplify let g.s0.v0.loop_min = g.min.0 in ... g.s0.v0.loop_min ...
new let g.s0.v0.loop_min.s = (undefined) in ... g.min.0 ...
simplify let g.s0.v0.loop_extent = g.extent.0 in ... g.s0.v0.loop_extent ...
new let g.s0.v0.loop_extent.s = (undefined) in ... g.extent.0 ...
simplify let g.s0.v0.__block_id_x.loop_extent = g.extent.0 in ... g.s0.v0.__block_id_x.loop_extent ...
new let g.s0.v0.__block_id_x.loop_extent.s = (undefined) in ... g.extent.0 ...
simplify let g.s0.v0.__block_id_x.loop_max = ((g.min.0 + g.extent.0) + -1) in ... g.s0.v0.__block_id_x.loop_max ...
new let g.s0.v0.__block_id_x.loop_max.s = (undefined) in ... ((g.min.0 + g.extent.0) + -1) ...
simplify let g.s0.v0.__block_id_x.loop_min = g.min.0 in ... g.s0.v0.__block_id_x.loop_min ...
new let g.s0.v0.__block_id_x.loop_min.s = (undefined) in ... g.min.0 ...
simplify let g.s0.v1.__block_id_y.loop_extent = g.extent.1 in ... g.s0.v1.__block_id_y.loop_extent ...
new let g.s0.v1.__block_id_y.loop_extent.s = (undefined) in ... g.extent.1 ...
simplify let g.s0.v1.__block_id_y.loop_max = ((g.min.1 + g.extent.1) + -1) in ... g.s0.v1.__block_id_y.loop_max ...
new let g.s0.v1.__block_id_y.loop_max.s = (undefined) in ... ((g.min.1 + g.extent.1) + -1) ...
simplify let g.s0.v1.__block_id_y.loop_min = g.min.1 in ... g.s0.v1.__block_id_y.loop_min ...
new let g.s0.v1.__block_id_y.loop_min.s = (undefined) in ... g.min.1 ...
simplify let g.s0.v1 = (g.s0.v1.__block_id_y + g.min.1) in ... g.s0.v1 ...
new let g.s0.v1.s = (undefined) in ... (g.s0.v1.__block_id_y + g.min.1) ...
simplify let sentinel.shared_offset = 0 in ... sentinel.shared_offset ...
new let sentinel.shared_offset.s = (undefined) in ... 0 ...
simplify let g.s0.v0 = (g.s0.v0.__block_id_x + g.min.0) in ... g.s0.v0 ...
new let g.s0.v0.s = (undefined) in ... (g.s0.v0.__block_id_x + g.min.0) ...
Lowering after second simplifcation:
let input.extent.0.required.s = (max((min((g.min.0 + g.extent.0), input.extent.0) + -1), 0) - max(min(g.min.0, (input.extent.0 + -1)), 0))
let input.min.0.required = max(min(g.min.0, (input.extent.0 + -1)), 0)
let input.extent.1.required.s = (max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0) - max(min(g.min.1, (input.extent.1 + -1)), 0))
let input.min.1.required = max(min(g.min.1, (input.extent.1 + -1)), 0)
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.required, (input.extent.0.required.s + 1), 1, input.min.1.required, (input.extent.1.required.s + 1), (input.extent.0.required.s + 1))
}
if (!(g.host_and_dev_are_null || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((input.min.0 <= input.min.0.required) && ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, (input.min.0.required + input.extent.0.required.s), input.min.0, ((input.min.0 + input.extent.0) + -1)))
  assert(((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1)))
  assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
  assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
  let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0))
  let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0))
  assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  allocate f[uint32 * g.extent.0 * g.extent.1]
  let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
  produce f {
    let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
    let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
    assert((device_malloc_result == 0), device_malloc_result)
    let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result == 0), copy_to_device_result)
    parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
        }
      }
    }
    set_dev_dirty(f.buffer, uint8(1))
  }
  let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
  produce g {
    let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
    let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
    parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
        }
      }
    }
    set_dev_dirty(g.buffer, uint8(1))
  }
  0
}


Unrolling...
simplify let input.extent.0.required.s = (max((min((g.min.0 + g.extent.0), input.extent.0) + -1), 0) - max(min(g.min.0, (input.extent.0 + -1)), 0)) in ... input.extent.0.required.s ...
simplify let input.min.0.required = max(min(g.min.0, (input.extent.0 + -1)), 0) in ... input.min.0.required ...
simplify let input.extent.1.required.s = (max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0) - max(min(g.min.1, (input.extent.1 + -1)), 0)) in ... input.extent.1.required.s ...
simplify let input.min.1.required = max(min(g.min.1, (input.extent.1 + -1)), 0) in ... input.min.1.required ...
g.elem_size not in scope, so leaving it as-is
input.elem_size not in scope, so leaving it as-is
input.min.0.required not in scope, so leaving it as-is
input.min.0 not in scope, so leaving it as-is
input.min.0 not in scope, so leaving it as-is
input.extent.0 not in scope, so leaving it as-is
input.min.0.required not in scope, so leaving it as-is
input.extent.0.required.s not in scope, so leaving it as-is
input.min.1.required not in scope, so leaving it as-is
input.min.1 not in scope, so leaving it as-is
input.min.1 not in scope, so leaving it as-is
input.extent.1 not in scope, so leaving it as-is
input.min.1.required not in scope, so leaving it as-is
input.extent.1.required.s not in scope, so leaving it as-is
g.stride.0 not in scope, so leaving it as-is
input.stride.0 not in scope, so leaving it as-is
simplify let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0)) in ... g.total_extent.1 ...
simplify let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0)) in ... input.total_extent.1 ...
simplify let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0) in ... f.buffer ...
simplify let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$2 ...
copy_to_device_result$2 not in scope, so leaving it as-is
simplify let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface()) in ... device_malloc_result ...
device_malloc_result not in scope, so leaving it as-is
simplify let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result ...
copy_to_device_result not in scope, so leaving it as-is
simplify let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$5 ...
copy_to_device_result$5 not in scope, so leaving it as-is
simplify let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$4 ...
copy_to_device_result$4 not in scope, so leaving it as-is
simplify let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$3 ...
copy_to_device_result$3 not in scope, so leaving it as-is
Lowering after unrolling:
let input.extent.0.required.s = (max((min((g.min.0 + g.extent.0), input.extent.0) + -1), 0) - max(min(g.min.0, (input.extent.0 + -1)), 0))
let input.min.0.required = max(min(g.min.0, (input.extent.0 + -1)), 0)
let input.extent.1.required.s = (max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0) - max(min(g.min.1, (input.extent.1 + -1)), 0))
let input.min.1.required = max(min(g.min.1, (input.extent.1 + -1)), 0)
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.required, (input.extent.0.required.s + 1), 1, input.min.1.required, (input.extent.1.required.s + 1), (input.extent.0.required.s + 1))
}
if (!(g.host_and_dev_are_null || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((input.min.0 <= input.min.0.required) && ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, (input.min.0.required + input.extent.0.required.s), input.min.0, ((input.min.0 + input.extent.0) + -1)))
  assert(((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1)))
  assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
  assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
  let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0))
  let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0))
  assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  allocate f[uint32 * g.extent.0 * g.extent.1]
  let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
  produce f {
    let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
    let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
    assert((device_malloc_result == 0), device_malloc_result)
    let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result == 0), copy_to_device_result)
    parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
        }
      }
    }
    set_dev_dirty(f.buffer, uint8(1))
  }
  let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
  produce g {
    let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
    let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
    parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
        }
      }
    }
    set_dev_dirty(g.buffer, uint8(1))
  }
  0
}


Vectorizing...
simplify let input.extent.0.required.s = (max((min((g.min.0 + g.extent.0), input.extent.0) + -1), 0) - max(min(g.min.0, (input.extent.0 + -1)), 0)) in ... input.extent.0.required.s ...
simplify let input.min.0.required = max(min(g.min.0, (input.extent.0 + -1)), 0) in ... input.min.0.required ...
simplify let input.extent.1.required.s = (max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0) - max(min(g.min.1, (input.extent.1 + -1)), 0)) in ... input.extent.1.required.s ...
simplify let input.min.1.required = max(min(g.min.1, (input.extent.1 + -1)), 0) in ... input.min.1.required ...
g.elem_size not in scope, so leaving it as-is
input.elem_size not in scope, so leaving it as-is
input.min.0.required not in scope, so leaving it as-is
input.min.0 not in scope, so leaving it as-is
input.min.0 not in scope, so leaving it as-is
input.extent.0 not in scope, so leaving it as-is
input.min.0.required not in scope, so leaving it as-is
input.extent.0.required.s not in scope, so leaving it as-is
input.min.1.required not in scope, so leaving it as-is
input.min.1 not in scope, so leaving it as-is
input.min.1 not in scope, so leaving it as-is
input.extent.1 not in scope, so leaving it as-is
input.min.1.required not in scope, so leaving it as-is
input.extent.1.required.s not in scope, so leaving it as-is
g.stride.0 not in scope, so leaving it as-is
input.stride.0 not in scope, so leaving it as-is
simplify let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0)) in ... g.total_extent.1 ...
simplify let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0)) in ... input.total_extent.1 ...
simplify let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0) in ... f.buffer ...
simplify let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$2 ...
copy_to_device_result$2 not in scope, so leaving it as-is
simplify let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface()) in ... device_malloc_result ...
device_malloc_result not in scope, so leaving it as-is
simplify let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result ...
copy_to_device_result not in scope, so leaving it as-is
simplify let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$5 ...
copy_to_device_result$5 not in scope, so leaving it as-is
simplify let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$4 ...
copy_to_device_result$4 not in scope, so leaving it as-is
simplify let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$3 ...
copy_to_device_result$3 not in scope, so leaving it as-is
Lowering after vectorizing:
let input.extent.0.required.s = (max((min((g.min.0 + g.extent.0), input.extent.0) + -1), 0) - max(min(g.min.0, (input.extent.0 + -1)), 0))
let input.min.0.required = max(min(g.min.0, (input.extent.0 + -1)), 0)
let input.extent.1.required.s = (max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0) - max(min(g.min.1, (input.extent.1 + -1)), 0))
let input.min.1.required = max(min(g.min.1, (input.extent.1 + -1)), 0)
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.required, (input.extent.0.required.s + 1), 1, input.min.1.required, (input.extent.1.required.s + 1), (input.extent.0.required.s + 1))
}
if (!(g.host_and_dev_are_null || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((input.min.0 <= input.min.0.required) && ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, (input.min.0.required + input.extent.0.required.s), input.min.0, ((input.min.0 + input.extent.0) + -1)))
  assert(((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1)))
  assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
  assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
  let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0))
  let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0))
  assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  allocate f[uint32 * g.extent.0 * g.extent.1]
  let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
  produce f {
    let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
    let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
    assert((device_malloc_result == 0), device_malloc_result)
    let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result == 0), copy_to_device_result)
    parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
        }
      }
    }
    set_dev_dirty(f.buffer, uint8(1))
  }
  let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
  produce g {
    let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
    let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
    parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
        }
      }
    }
    set_dev_dirty(g.buffer, uint8(1))
  }
  0
}


Detecting vector interleavings...
simplify let input.extent.0.required.s = (max((min((g.min.0 + g.extent.0), input.extent.0) + -1), 0) - max(min(g.min.0, (input.extent.0 + -1)), 0)) in ... input.extent.0.required.s ...
simplify let input.min.0.required = max(min(g.min.0, (input.extent.0 + -1)), 0) in ... input.min.0.required ...
simplify let input.extent.1.required.s = (max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0) - max(min(g.min.1, (input.extent.1 + -1)), 0)) in ... input.extent.1.required.s ...
simplify let input.min.1.required = max(min(g.min.1, (input.extent.1 + -1)), 0) in ... input.min.1.required ...
g.elem_size not in scope, so leaving it as-is
input.elem_size not in scope, so leaving it as-is
input.min.0.required not in scope, so leaving it as-is
input.min.0 not in scope, so leaving it as-is
input.min.0 not in scope, so leaving it as-is
input.extent.0 not in scope, so leaving it as-is
input.min.0.required not in scope, so leaving it as-is
input.extent.0.required.s not in scope, so leaving it as-is
input.min.1.required not in scope, so leaving it as-is
input.min.1 not in scope, so leaving it as-is
input.min.1 not in scope, so leaving it as-is
input.extent.1 not in scope, so leaving it as-is
input.min.1.required not in scope, so leaving it as-is
input.extent.1.required.s not in scope, so leaving it as-is
g.stride.0 not in scope, so leaving it as-is
input.stride.0 not in scope, so leaving it as-is
simplify let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0)) in ... g.total_extent.1 ...
simplify let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0)) in ... input.total_extent.1 ...
simplify let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0) in ... f.buffer ...
simplify let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$2 ...
copy_to_device_result$2 not in scope, so leaving it as-is
simplify let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface()) in ... device_malloc_result ...
device_malloc_result not in scope, so leaving it as-is
simplify let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result ...
copy_to_device_result not in scope, so leaving it as-is
simplify let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$5 ...
copy_to_device_result$5 not in scope, so leaving it as-is
simplify let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$4 ...
copy_to_device_result$4 not in scope, so leaving it as-is
simplify let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$3 ...
copy_to_device_result$3 not in scope, so leaving it as-is
Lowering after rewriting vector interleavings:
let input.extent.0.required.s = (max((min((g.min.0 + g.extent.0), input.extent.0) + -1), 0) - max(min(g.min.0, (input.extent.0 + -1)), 0))
let input.min.0.required = max(min(g.min.0, (input.extent.0 + -1)), 0)
let input.extent.1.required.s = (max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0) - max(min(g.min.1, (input.extent.1 + -1)), 0))
let input.min.1.required = max(min(g.min.1, (input.extent.1 + -1)), 0)
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.required, (input.extent.0.required.s + 1), 1, input.min.1.required, (input.extent.1.required.s + 1), (input.extent.0.required.s + 1))
}
if (!(g.host_and_dev_are_null || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((input.min.0 <= input.min.0.required) && ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, (input.min.0.required + input.extent.0.required.s), input.min.0, ((input.min.0 + input.extent.0) + -1)))
  assert(((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1)))
  assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
  assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
  let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0))
  let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0))
  assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  allocate f[uint32 * g.extent.0 * g.extent.1]
  let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
  produce f {
    let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
    let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
    assert((device_malloc_result == 0), device_malloc_result)
    let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result == 0), copy_to_device_result)
    parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
        }
      }
    }
    set_dev_dirty(f.buffer, uint8(1))
  }
  let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
  produce g {
    let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
    let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
    parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
        }
      }
    }
    set_dev_dirty(g.buffer, uint8(1))
  }
  0
}


Partitioning loops to simplify boundary conditions...
simplify let input.extent.0.required.s = (max((min((g.min.0 + g.extent.0), input.extent.0) + -1), 0) - max(min(g.min.0, (input.extent.0 + -1)), 0)) in ... input.extent.0.required.s ...
simplify let input.min.0.required = max(min(g.min.0, (input.extent.0 + -1)), 0) in ... input.min.0.required ...
simplify let input.extent.1.required.s = (max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0) - max(min(g.min.1, (input.extent.1 + -1)), 0)) in ... input.extent.1.required.s ...
simplify let input.min.1.required = max(min(g.min.1, (input.extent.1 + -1)), 0) in ... input.min.1.required ...
g.elem_size not in scope, so leaving it as-is
input.elem_size not in scope, so leaving it as-is
input.min.0.required not in scope, so leaving it as-is
input.min.0 not in scope, so leaving it as-is
input.min.0 not in scope, so leaving it as-is
input.extent.0 not in scope, so leaving it as-is
input.min.0.required not in scope, so leaving it as-is
input.extent.0.required.s not in scope, so leaving it as-is
input.min.1.required not in scope, so leaving it as-is
input.min.1 not in scope, so leaving it as-is
input.min.1 not in scope, so leaving it as-is
input.extent.1 not in scope, so leaving it as-is
input.min.1.required not in scope, so leaving it as-is
input.extent.1.required.s not in scope, so leaving it as-is
g.stride.0 not in scope, so leaving it as-is
input.stride.0 not in scope, so leaving it as-is
simplify let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0)) in ... g.total_extent.1 ...
simplify let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0)) in ... input.total_extent.1 ...
simplify let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0) in ... f.buffer ...
simplify let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$2 ...
copy_to_device_result$2 not in scope, so leaving it as-is
simplify let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface()) in ... device_malloc_result ...
device_malloc_result not in scope, so leaving it as-is
simplify let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result ...
copy_to_device_result not in scope, so leaving it as-is
simplify let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$5 ...
copy_to_device_result$5 not in scope, so leaving it as-is
simplify let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$4 ...
copy_to_device_result$4 not in scope, so leaving it as-is
simplify let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$3 ...
copy_to_device_result$3 not in scope, so leaving it as-is
Lowering after partitioning loops:
let input.extent.0.required.s = (max((min((g.min.0 + g.extent.0), input.extent.0) + -1), 0) - max(min(g.min.0, (input.extent.0 + -1)), 0))
let input.min.0.required = max(min(g.min.0, (input.extent.0 + -1)), 0)
let input.extent.1.required.s = (max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0) - max(min(g.min.1, (input.extent.1 + -1)), 0))
let input.min.1.required = max(min(g.min.1, (input.extent.1 + -1)), 0)
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.required, (input.extent.0.required.s + 1), 1, input.min.1.required, (input.extent.1.required.s + 1), (input.extent.0.required.s + 1))
}
if (!(g.host_and_dev_are_null || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((input.min.0 <= input.min.0.required) && ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, (input.min.0.required + input.extent.0.required.s), input.min.0, ((input.min.0 + input.extent.0) + -1)))
  assert(((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1)))
  assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
  assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
  let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0))
  let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0))
  assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  allocate f[uint32 * g.extent.0 * g.extent.1]
  let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
  produce f {
    let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
    let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
    assert((device_malloc_result == 0), device_malloc_result)
    let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result == 0), copy_to_device_result)
    parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
        }
      }
    }
    set_dev_dirty(f.buffer, uint8(1))
  }
  let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
  produce g {
    let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
    let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
    parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
        }
      }
    }
    set_dev_dirty(g.buffer, uint8(1))
  }
  0
}


Injecting early frees...
Lowering after injecting early frees:
let input.extent.0.required.s = (max((min((g.min.0 + g.extent.0), input.extent.0) + -1), 0) - max(min(g.min.0, (input.extent.0 + -1)), 0))
let input.min.0.required = max(min(g.min.0, (input.extent.0 + -1)), 0)
let input.extent.1.required.s = (max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0) - max(min(g.min.1, (input.extent.1 + -1)), 0))
let input.min.1.required = max(min(g.min.1, (input.extent.1 + -1)), 0)
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.required, (input.extent.0.required.s + 1), 1, input.min.1.required, (input.extent.1.required.s + 1), (input.extent.0.required.s + 1))
}
if (!(g.host_and_dev_are_null || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((input.min.0 <= input.min.0.required) && ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, (input.min.0.required + input.extent.0.required.s), input.min.0, ((input.min.0 + input.extent.0) + -1)))
  assert(((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1)))
  assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
  assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
  let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0))
  let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0))
  assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  allocate f[uint32 * g.extent.0 * g.extent.1]
  let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
  produce f {
    let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
    let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
    assert((device_malloc_result == 0), device_malloc_result)
    let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result == 0), copy_to_device_result)
    parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
        }
        free __shared
      }
    }
    set_dev_dirty(f.buffer, uint8(1))
  }
  let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
  produce g {
    let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
    let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
    parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
        }
        free __shared
      }
    }
    free f
    set_dev_dirty(g.buffer, uint8(1))
  }
  0
}


Simplifying...



Input to letify (max((min((g.min.0 + g.extent.0), input.extent.0) + -1), 0) - max(min(g.min.0, (input.extent.0 + -1)), 0))
Canonical form without lets (max((min((g.min.0 + g.extent.0), input.extent.0) + -1), 0) - max(min(g.min.0, (input.extent.0 + -1)), 0))
0: g.min.0, 0
1: g.extent.0, 0
2: (g.min.0 + g.extent.0), 1
3: input.extent.0, 0
4: min((g.min.0 + g.extent.0), input.extent.0), 1
5: -1, 0
6: (min((g.min.0 + g.extent.0), input.extent.0) + -1), 0
7: 0, 0
8: max((min((g.min.0 + g.extent.0), input.extent.0) + -1), 0), 1
9: (input.extent.0 + -1), 0
10: min(g.min.0, (input.extent.0 + -1)), 1
11: max(min(g.min.0, (input.extent.0 + -1)), 0), 1
12: (max((min((g.min.0 + g.extent.0), input.extent.0) + -1), 0) - max(min(g.min.0, (input.extent.0 + -1)), 0)), 1
With variables (max((min((g.min.0 + g.extent.0), input.extent.0) + -1), 0) - max(min(g.min.0, (input.extent.0 + -1)), 0))
With lets: (max((min((g.min.0 + g.extent.0), input.extent.0) + -1), 0) - max(min(g.min.0, (input.extent.0 + -1)), 0))



Input to letify max(min(g.min.0, (input.extent.0 + -1)), 0)
Canonical form without lets max(min(g.min.0, (input.extent.0 + -1)), 0)
0: g.min.0, 0
1: input.extent.0, 0
2: -1, 0
3: (input.extent.0 + -1), 0
4: min(g.min.0, (input.extent.0 + -1)), 1
5: 0, 0
6: max(min(g.min.0, (input.extent.0 + -1)), 0), 1
With variables max(min(g.min.0, (input.extent.0 + -1)), 0)
With lets: max(min(g.min.0, (input.extent.0 + -1)), 0)



Input to letify (max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0) - max(min(g.min.1, (input.extent.1 + -1)), 0))
Canonical form without lets (max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0) - max(min(g.min.1, (input.extent.1 + -1)), 0))
0: g.min.1, 0
1: g.extent.1, 0
2: (g.min.1 + g.extent.1), 1
3: input.extent.1, 0
4: min((g.min.1 + g.extent.1), input.extent.1), 1
5: -1, 0
6: (min((g.min.1 + g.extent.1), input.extent.1) + -1), 0
7: 0, 0
8: max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0), 1
9: (input.extent.1 + -1), 0
10: min(g.min.1, (input.extent.1 + -1)), 1
11: max(min(g.min.1, (input.extent.1 + -1)), 0), 1
12: (max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0) - max(min(g.min.1, (input.extent.1 + -1)), 0)), 1
With variables (max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0) - max(min(g.min.1, (input.extent.1 + -1)), 0))
With lets: (max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0) - max(min(g.min.1, (input.extent.1 + -1)), 0))



Input to letify max(min(g.min.1, (input.extent.1 + -1)), 0)
Canonical form without lets max(min(g.min.1, (input.extent.1 + -1)), 0)
0: g.min.1, 0
1: input.extent.1, 0
2: -1, 0
3: (input.extent.1 + -1), 0
4: min(g.min.1, (input.extent.1 + -1)), 1
5: 0, 0
6: max(min(g.min.1, (input.extent.1 + -1)), 0), 1
With variables max(min(g.min.1, (input.extent.1 + -1)), 0)
With lets: max(min(g.min.1, (input.extent.1 + -1)), 0)



Input to letify rewrite_buffer(g.buffer, 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
Canonical form without lets rewrite_buffer(g.buffer, 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
0: g.buffer, 0
1: 4, 0
2: g.min.0, 0
3: g.extent.0, 0
4: 1, 0
5: g.min.1, 0
6: g.extent.1, 0
7: rewrite_buffer(g.buffer, 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0), 1
With variables rewrite_buffer(g.buffer, 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
With lets: rewrite_buffer(g.buffer, 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)



Input to letify rewrite_buffer(input.buffer, 4, input.min.0.required, (input.extent.0.required.s + 1), 1, input.min.1.required, (input.extent.1.required.s + 1), (input.extent.0.required.s + 1))
Canonical form without lets rewrite_buffer(input.buffer, 4, input.min.0.required, (input.extent.0.required.s + 1), 1, input.min.1.required, (input.extent.1.required.s + 1), (input.extent.0.required.s + 1))
0: input.buffer, 0
1: 4, 0
2: input.min.0.required, 0
3: input.extent.0.required.s, 0
4: 1, 0
5: (input.extent.0.required.s + 1), 0
6: input.min.1.required, 0
7: input.extent.1.required.s, 0
8: (input.extent.1.required.s + 1), 0
9: rewrite_buffer(input.buffer, 4, input.min.0.required, (input.extent.0.required.s + 1), 1, input.min.1.required, (input.extent.1.required.s + 1), (input.extent.0.required.s + 1)), 1
With variables rewrite_buffer(input.buffer, 4, input.min.0.required, (input.extent.0.required.s + 1), 1, input.min.1.required, (input.extent.1.required.s + 1), (input.extent.0.required.s + 1))
With lets: rewrite_buffer(input.buffer, 4, input.min.0.required, (input.extent.0.required.s + 1), 1, input.min.1.required, (input.extent.1.required.s + 1), (input.extent.0.required.s + 1))



Input to letify !(g.host_and_dev_are_null || input.host_and_dev_are_null)
Canonical form without lets !(g.host_and_dev_are_null || input.host_and_dev_are_null)
0: g.host_and_dev_are_null, 0
1: input.host_and_dev_are_null, 0
2: (g.host_and_dev_are_null || input.host_and_dev_are_null), 1
3: !(g.host_and_dev_are_null || input.host_and_dev_are_null), 1
With variables !(g.host_and_dev_are_null || input.host_and_dev_are_null)
With lets: !(g.host_and_dev_are_null || input.host_and_dev_are_null)



Input to letify (g.elem_size == 4)
Canonical form without lets (g.elem_size == 4)
0: g.elem_size, 0
1: 4, 0
2: (g.elem_size == 4), 1
With variables (g.elem_size == 4)
With lets: (g.elem_size == 4)



Input to letify halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4)
Canonical form without lets halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4)
0: "Output buffer g", 0
1: "uint32", 0
2: g.elem_size, 0
3: 4, 0
4: halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4), 1
With variables halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4)
With lets: halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4)



Input to letify (input.elem_size == 4)
Canonical form without lets (input.elem_size == 4)
0: input.elem_size, 0
1: 4, 0
2: (input.elem_size == 4), 1
With variables (input.elem_size == 4)
With lets: (input.elem_size == 4)



Input to letify halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4)
Canonical form without lets halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4)
0: "Input buffer input", 0
1: "uint32", 0
2: input.elem_size, 0
3: 4, 0
4: halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4), 1
With variables halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4)
With lets: halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4)



Input to letify ((input.min.0 <= input.min.0.required) && ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0))
Canonical form without lets ((input.min.0 <= input.min.0.required) && ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0))
0: input.min.0, 0
1: input.min.0.required, 0
2: (input.min.0 <= input.min.0.required), 1
3: input.extent.0.required.s, 0
4: (input.min.0.required + input.extent.0.required.s), 1
5: input.extent.0, 0
6: ((input.min.0.required + input.extent.0.required.s) - input.extent.0), 1
7: 1, 0
8: (((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1), 0
9: ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0), 1
10: ((input.min.0 <= input.min.0.required) && ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0)), 1
With variables ((input.min.0 <= input.min.0.required) && ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0))
With lets: ((input.min.0 <= input.min.0.required) && ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0))



Input to letify halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, (input.min.0.required + input.extent.0.required.s), input.min.0, ((input.min.0 + input.extent.0) + -1))
Canonical form without lets halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, (input.min.0.required + input.extent.0.required.s), input.min.0, ((input.min.0 + input.extent.0) + -1))
0: "Input buffer input", 0
1: 0, 0
2: input.min.0.required, 0
3: input.extent.0.required.s, 0
4: (input.min.0.required + input.extent.0.required.s), 1
5: input.min.0, 0
6: input.extent.0, 0
7: (input.min.0 + input.extent.0), 1
8: -1, 0
9: ((input.min.0 + input.extent.0) + -1), 0
10: halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, (input.min.0.required + input.extent.0.required.s), input.min.0, ((input.min.0 + input.extent.0) + -1)), 1
With variables halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, (input.min.0.required + input.extent.0.required.s), input.min.0, ((input.min.0 + input.extent.0) + -1))
With lets: halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, (input.min.0.required + input.extent.0.required.s), input.min.0, ((input.min.0 + input.extent.0) + -1))



Input to letify ((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1))
Canonical form without lets ((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1))
0: input.min.1, 0
1: input.min.1.required, 0
2: (input.min.1 <= input.min.1.required), 1
3: input.extent.1.required.s, 0
4: (input.min.1.required + input.extent.1.required.s), 1
5: input.extent.1, 0
6: ((input.min.1.required + input.extent.1.required.s) - input.extent.1), 1
7: 1, 0
8: (((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1), 0
9: ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1), 1
10: ((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1)), 1
With variables ((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1))
With lets: ((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1))



Input to letify halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1))
Canonical form without lets halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1))
0: "Input buffer input", 0
1: 1, 0
2: input.min.1.required, 0
3: input.extent.1.required.s, 0
4: (input.min.1.required + input.extent.1.required.s), 1
5: input.min.1, 0
6: input.extent.1, 0
7: (input.min.1 + input.extent.1), 1
8: -1, 0
9: ((input.min.1 + input.extent.1) + -1), 0
10: halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1)), 1
With variables halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1))
With lets: halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1))



Input to letify (g.stride.0 == 1)
Canonical form without lets (g.stride.0 == 1)
0: g.stride.0, 0
1: 1, 0
2: (g.stride.0 == 1), 1
With variables (g.stride.0 == 1)
With lets: (g.stride.0 == 1)



Input to letify halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1)
Canonical form without lets halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1)
0: "g.stride.0", 0
1: g.stride.0, 0
2: "1", 0
3: 1, 0
4: halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1), 1
With variables halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1)
With lets: halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1)



Input to letify (input.stride.0 == 1)
Canonical form without lets (input.stride.0 == 1)
0: input.stride.0, 0
1: 1, 0
2: (input.stride.0 == 1), 1
With variables (input.stride.0 == 1)
With lets: (input.stride.0 == 1)



Input to letify halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1)
Canonical form without lets halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1)
0: "input.stride.0", 0
1: input.stride.0, 0
2: "1", 0
3: 1, 0
4: halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1), 1
With variables halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1)
With lets: halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1)



Input to letify (int64(g.extent.1)*int64(g.extent.0))
Canonical form without lets (int64(g.extent.1)*int64(g.extent.0))
0: g.extent.1, 0
1: int64(g.extent.1), 0
2: g.extent.0, 0
3: int64(g.extent.0), 0
4: (int64(g.extent.1)*int64(g.extent.0)), 1
With variables (int64(g.extent.1)*int64(g.extent.0))
With lets: (int64(g.extent.1)*int64(g.extent.0))



Input to letify (int64(input.extent.1)*int64(input.extent.0))
Canonical form without lets (int64(input.extent.1)*int64(input.extent.0))
0: input.extent.1, 0
1: int64(input.extent.1), 0
2: input.extent.0, 0
3: int64(input.extent.0), 0
4: (int64(input.extent.1)*int64(input.extent.0)), 1
With variables (int64(input.extent.1)*int64(input.extent.0))
With lets: (int64(input.extent.1)*int64(input.extent.0))



Input to letify (int64(g.extent.0) <= int64(2147483647))
Canonical form without lets (int64(g.extent.0) <= int64(2147483647))
0: g.extent.0, 0
1: int64(g.extent.0), 0
2: 2147483647, 0
3: int64(2147483647), 0
4: (int64(g.extent.0) <= int64(2147483647)), 1
With variables (int64(g.extent.0) <= int64(2147483647))
With lets: (int64(g.extent.0) <= int64(2147483647))



Input to letify halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647))
Canonical form without lets halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647))
0: "g", 0
1: g.extent.0, 0
2: int64(g.extent.0), 0
3: 2147483647, 0
4: int64(2147483647), 0
5: halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)), 1
With variables halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647))
With lets: halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647))



Input to letify ((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647))
Canonical form without lets ((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647))
0: g.extent.1, 0
1: int64(g.extent.1), 0
2: g.stride.1, 0
3: int64(g.stride.1), 0
4: (int64(g.extent.1)*int64(g.stride.1)), 1
5: 2147483647, 0
6: int64(2147483647), 0
7: ((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), 1
With variables ((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647))
With lets: ((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647))



Input to letify halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647))
Canonical form without lets halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647))
0: "g", 0
1: g.extent.1, 0
2: int64(g.extent.1), 0
3: g.stride.1, 0
4: int64(g.stride.1), 0
5: (int64(g.extent.1)*int64(g.stride.1)), 1
6: 2147483647, 0
7: int64(2147483647), 0
8: halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)), 1
With variables halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647))
With lets: halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647))



Input to letify (g.total_extent.1 <= int64(2147483647))
Canonical form without lets (g.total_extent.1 <= int64(2147483647))
0: g.total_extent.1, 0
1: 2147483647, 0
2: int64(2147483647), 0
3: (g.total_extent.1 <= int64(2147483647)), 1
With variables (g.total_extent.1 <= int64(2147483647))
With lets: (g.total_extent.1 <= int64(2147483647))



Input to letify halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647))
Canonical form without lets halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647))
0: "g", 0
1: g.total_extent.1, 0
2: 2147483647, 0
3: int64(2147483647), 0
4: halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)), 1
With variables halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647))
With lets: halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647))



Input to letify (int64(input.extent.0) <= int64(2147483647))
Canonical form without lets (int64(input.extent.0) <= int64(2147483647))
0: input.extent.0, 0
1: int64(input.extent.0), 0
2: 2147483647, 0
3: int64(2147483647), 0
4: (int64(input.extent.0) <= int64(2147483647)), 1
With variables (int64(input.extent.0) <= int64(2147483647))
With lets: (int64(input.extent.0) <= int64(2147483647))



Input to letify halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647))
Canonical form without lets halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647))
0: "input", 0
1: input.extent.0, 0
2: int64(input.extent.0), 0
3: 2147483647, 0
4: int64(2147483647), 0
5: halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)), 1
With variables halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647))
With lets: halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647))



Input to letify ((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647))
Canonical form without lets ((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647))
0: input.extent.1, 0
1: int64(input.extent.1), 0
2: input.stride.1, 0
3: int64(input.stride.1), 0
4: (int64(input.extent.1)*int64(input.stride.1)), 1
5: 2147483647, 0
6: int64(2147483647), 0
7: ((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), 1
With variables ((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647))
With lets: ((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647))



Input to letify halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647))
Canonical form without lets halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647))
0: "input", 0
1: input.extent.1, 0
2: int64(input.extent.1), 0
3: input.stride.1, 0
4: int64(input.stride.1), 0
5: (int64(input.extent.1)*int64(input.stride.1)), 1
6: 2147483647, 0
7: int64(2147483647), 0
8: halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)), 1
With variables halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647))
With lets: halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647))



Input to letify (input.total_extent.1 <= int64(2147483647))
Canonical form without lets (input.total_extent.1 <= int64(2147483647))
0: input.total_extent.1, 0
1: 2147483647, 0
2: int64(2147483647), 0
3: (input.total_extent.1 <= int64(2147483647)), 1
With variables (input.total_extent.1 <= int64(2147483647))
With lets: (input.total_extent.1 <= int64(2147483647))



Input to letify halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647))
Canonical form without lets halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647))
0: "input", 0
1: input.total_extent.1, 0
2: 2147483647, 0
3: int64(2147483647), 0
4: halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)), 1
With variables halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647))
With lets: halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647))



Input to letify create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
Canonical form without lets create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
0: 0, 0
1: f[0], 1
2: address_of(f[0]), 1
3: 4, 0
4: g.min.0, 0
5: g.extent.0, 0
6: 1, 0
7: g.min.1, 0
8: g.extent.1, 0
9: create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0), 1
With variables create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
With lets: create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)



Input to letify halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
Canonical form without lets halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
0: input.buffer, 0
1: halide_renderscript_device_interface(), 1
2: halide_copy_to_device(input.buffer, halide_renderscript_device_interface()), 1
With variables halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
With lets: halide_copy_to_device(input.buffer, halide_renderscript_device_interface())



Input to letify (copy_to_device_result$2 == 0)
Canonical form without lets (copy_to_device_result$2 == 0)
0: copy_to_device_result$2, 0
1: 0, 0
2: (copy_to_device_result$2 == 0), 1
With variables (copy_to_device_result$2 == 0)
With lets: (copy_to_device_result$2 == 0)



Input to letify halide_device_malloc(f.buffer, halide_renderscript_device_interface())
Canonical form without lets halide_device_malloc(f.buffer, halide_renderscript_device_interface())
0: f.buffer, 0
1: halide_renderscript_device_interface(), 1
2: halide_device_malloc(f.buffer, halide_renderscript_device_interface()), 1
With variables halide_device_malloc(f.buffer, halide_renderscript_device_interface())
With lets: halide_device_malloc(f.buffer, halide_renderscript_device_interface())



Input to letify (device_malloc_result == 0)
Canonical form without lets (device_malloc_result == 0)
0: device_malloc_result, 0
1: 0, 0
2: (device_malloc_result == 0), 1
With variables (device_malloc_result == 0)
With lets: (device_malloc_result == 0)



Input to letify halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
Canonical form without lets halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
0: f.buffer, 0
1: halide_renderscript_device_interface(), 1
2: halide_copy_to_device(f.buffer, halide_renderscript_device_interface()), 1
With variables halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
With lets: halide_copy_to_device(f.buffer, halide_renderscript_device_interface())



Input to letify (copy_to_device_result == 0)
Canonical form without lets (copy_to_device_result == 0)
0: copy_to_device_result, 0
1: 0, 0
2: (copy_to_device_result == 0), 1
With variables (copy_to_device_result == 0)
With lets: (copy_to_device_result == 0)



Input to letify image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
Canonical form without lets image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
0: "f", 0
1: f.buffer, 0
2: f.s0.v0.__block_id_x, 0
3: f.s0.v1.__block_id_y, 0
4: "input", 0
5: input.buffer, 0
6: g.min.0, 0
7: (f.s0.v0.__block_id_x + g.min.0), 1
8: input.extent.0, 0
9: -1, 0
10: (input.extent.0 + -1), 0
11: min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 1
12: 0, 0
13: max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0), 1
14: input.min.0, 0
15: (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), 1
16: g.min.1, 0
17: (f.s0.v1.__block_id_y + g.min.1), 1
18: input.extent.1, 0
19: (input.extent.1 + -1), 0
20: min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 1
21: max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0), 1
22: input.min.1, 0
23: (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), 1
24: image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1), 1
25: image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1)), 1
With variables image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
With lets: image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))



Input to letify set_dev_dirty(f.buffer, uint8(1))
Canonical form without lets set_dev_dirty(f.buffer, uint8(1))
0: f.buffer, 0
1: 1, 0
2: uint8(1), 0
3: set_dev_dirty(f.buffer, uint8(1)), 1
With variables set_dev_dirty(f.buffer, uint8(1))
With lets: set_dev_dirty(f.buffer, uint8(1))



Input to letify halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
Canonical form without lets halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
0: g.buffer, 0
1: halide_renderscript_device_interface(), 1
2: halide_copy_to_device(g.buffer, halide_renderscript_device_interface()), 1
With variables halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
With lets: halide_copy_to_device(g.buffer, halide_renderscript_device_interface())



Input to letify (copy_to_device_result$5 == 0)
Canonical form without lets (copy_to_device_result$5 == 0)
0: copy_to_device_result$5, 0
1: 0, 0
2: (copy_to_device_result$5 == 0), 1
With variables (copy_to_device_result$5 == 0)
With lets: (copy_to_device_result$5 == 0)



Input to letify halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
Canonical form without lets halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
0: g.buffer, 0
1: halide_renderscript_device_interface(), 1
2: halide_copy_to_device(g.buffer, halide_renderscript_device_interface()), 1
With variables halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
With lets: halide_copy_to_device(g.buffer, halide_renderscript_device_interface())



Input to letify (copy_to_device_result$4 == 0)
Canonical form without lets (copy_to_device_result$4 == 0)
0: copy_to_device_result$4, 0
1: 0, 0
2: (copy_to_device_result$4 == 0), 1
With variables (copy_to_device_result$4 == 0)
With lets: (copy_to_device_result$4 == 0)



Input to letify halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
Canonical form without lets halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
0: f.buffer, 0
1: halide_renderscript_device_interface(), 1
2: halide_copy_to_device(f.buffer, halide_renderscript_device_interface()), 1
With variables halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
With lets: halide_copy_to_device(f.buffer, halide_renderscript_device_interface())



Input to letify (copy_to_device_result$3 == 0)
Canonical form without lets (copy_to_device_result$3 == 0)
0: copy_to_device_result$3, 0
1: 0, 0
2: (copy_to_device_result$3 == 0), 1
With variables (copy_to_device_result$3 == 0)
With lets: (copy_to_device_result$3 == 0)



Input to letify image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
Canonical form without lets image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
0: "g", 0
1: g.buffer, 0
2: g.s0.v0.__block_id_x, 0
3: g.s0.v1.__block_id_y, 0
4: "f", 0
5: f.buffer, 0
6: g.extent.0, 0
7: g.extent.1, 0
8: image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1), 1
9: image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1)), 1
With variables image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
With lets: image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))



Input to letify set_dev_dirty(g.buffer, uint8(1))
Canonical form without lets set_dev_dirty(g.buffer, uint8(1))
0: g.buffer, 0
1: 1, 0
2: uint8(1), 0
3: set_dev_dirty(g.buffer, uint8(1)), 1
With variables set_dev_dirty(g.buffer, uint8(1))
With lets: set_dev_dirty(g.buffer, uint8(1))
simplify let input.extent.0.required.s = (max((min((g.min.0 + g.extent.0), input.extent.0) + -1), 0) - max(min(g.min.0, (input.extent.0 + -1)), 0)) in ... input.extent.0.required.s ...
simplify let input.min.0.required = max(min(g.min.0, (input.extent.0 + -1)), 0) in ... input.min.0.required ...
simplify let input.extent.1.required.s = (max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0) - max(min(g.min.1, (input.extent.1 + -1)), 0)) in ... input.extent.1.required.s ...
simplify let input.min.1.required = max(min(g.min.1, (input.extent.1 + -1)), 0) in ... input.min.1.required ...
g.elem_size not in scope, so leaving it as-is
input.elem_size not in scope, so leaving it as-is
input.min.0.required not in scope, so leaving it as-is
input.min.0 not in scope, so leaving it as-is
input.min.0 not in scope, so leaving it as-is
input.extent.0 not in scope, so leaving it as-is
input.min.0.required not in scope, so leaving it as-is
input.extent.0.required.s not in scope, so leaving it as-is
input.min.1.required not in scope, so leaving it as-is
input.min.1 not in scope, so leaving it as-is
input.min.1 not in scope, so leaving it as-is
input.extent.1 not in scope, so leaving it as-is
input.min.1.required not in scope, so leaving it as-is
input.extent.1.required.s not in scope, so leaving it as-is
g.stride.0 not in scope, so leaving it as-is
input.stride.0 not in scope, so leaving it as-is
simplify let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0)) in ... g.total_extent.1 ...
simplify let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0)) in ... input.total_extent.1 ...
simplify let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0) in ... f.buffer ...
simplify let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$2 ...
copy_to_device_result$2 not in scope, so leaving it as-is
simplify let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface()) in ... device_malloc_result ...
device_malloc_result not in scope, so leaving it as-is
simplify let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result ...
copy_to_device_result not in scope, so leaving it as-is
simplify let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$5 ...
copy_to_device_result$5 not in scope, so leaving it as-is
simplify let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$4 ...
copy_to_device_result$4 not in scope, so leaving it as-is
simplify let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface()) in ... copy_to_device_result$3 ...
copy_to_device_result$3 not in scope, so leaving it as-is
Lowering after final simplification:
let input.extent.0.required.s = (max((min((g.min.0 + g.extent.0), input.extent.0) + -1), 0) - max(min(g.min.0, (input.extent.0 + -1)), 0))
let input.min.0.required = max(min(g.min.0, (input.extent.0 + -1)), 0)
let input.extent.1.required.s = (max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0) - max(min(g.min.1, (input.extent.1 + -1)), 0))
let input.min.1.required = max(min(g.min.1, (input.extent.1 + -1)), 0)
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.required, (input.extent.0.required.s + 1), 1, input.min.1.required, (input.extent.1.required.s + 1), (input.extent.0.required.s + 1))
}
if (!(g.host_and_dev_are_null || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((input.min.0 <= input.min.0.required) && ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, (input.min.0.required + input.extent.0.required.s), input.min.0, ((input.min.0 + input.extent.0) + -1)))
  assert(((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1)))
  assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
  assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
  let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0))
  let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0))
  assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  allocate f[uint32 * g.extent.0 * g.extent.1]
  let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
  produce f {
    let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
    let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
    assert((device_malloc_result == 0), device_malloc_result)
    let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result == 0), copy_to_device_result)
    parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
        }
        free __shared
      }
    }
    set_dev_dirty(f.buffer, uint8(1))
  }
  let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
  produce g {
    let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
    let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
    parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
        }
        free __shared
      }
    }
    free f
    set_dev_dirty(g.buffer, uint8(1))
  }
  0
}


Inferred argument: uint32 input
Inferred argument: handle64 __user_context
Constructing Renderscript device codegen
Created CodeGen_Renderscript_Dev for target arm-32-android-debug-armv7s-rs
Target triple of initial module: armv7s--linux-eabi
Generating llvm bitcode...
CodeGen_Renderscript_Dev::init_module
CodeGen_Renderscript_Dev::init_module
Generating llvm bitcode for function __test_arm...
Codegen: int32, halide_error_buffer_argument_is_null("input")
Codegen: handle64, "input"
Found halide_error_buffer_argument_is_null
Adding user_context to halide_error_buffer_argument_is_null args
Codegen: int32, halide_error_buffer_argument_is_null("g")
Codegen: handle64, "g"
Found halide_error_buffer_argument_is_null
Adding user_context to halide_error_buffer_argument_is_null args
Codegen: int32, (max((min((g.min.0 + g.extent.0), input.extent.0) + -1), 0) - max(min(g.min.0, (input.extent.0 + -1)), 0))
Codegen: int32, max((min((g.min.0 + g.extent.0), input.extent.0) + -1), 0)
Codegen: int32, (min((g.min.0 + g.extent.0), input.extent.0) + -1)
Codegen: int32, min((g.min.0 + g.extent.0), input.extent.0)
Codegen: int32, (g.min.0 + g.extent.0)
Codegen: int32, g.min.0
Codegen: int32, g.extent.0
Codegen: int32, input.extent.0
Codegen: int32, -1
Codegen: int32, 0
Codegen: int32, max(min(g.min.0, (input.extent.0 + -1)), 0)
Codegen: int32, min(g.min.0, (input.extent.0 + -1))
Codegen: int32, g.min.0
Codegen: int32, (input.extent.0 + -1)
Codegen: int32, input.extent.0
Codegen: int32, -1
Codegen: int32, 0
Codegen: let input.min.0.required = max(min(g.min.0, (input.extent.0 + -1)), 0)
let input.extent.1.required.s = (max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0) - max(min(g.min.1, (input.extent.1 + -1)), 0))
let input.min.1.required = max(min(g.min.1, (input.extent.1 + -1)), 0)
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.required, (input.extent.0.required.s + 1), 1, input.min.1.required, (input.extent.1.required.s + 1), (input.extent.0.required.s + 1))
}
if (!(g.host_and_dev_are_null || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((input.min.0 <= input.min.0.required) && ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, (input.min.0.required + input.extent.0.required.s), input.min.0, ((input.min.0 + input.extent.0) + -1)))
  assert(((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1)))
  assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
  assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
  let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0))
  let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0))
  assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  allocate f[uint32 * g.extent.0 * g.extent.1]
  let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
  produce f {
    let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
    let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
    assert((device_malloc_result == 0), device_malloc_result)
    let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result == 0), copy_to_device_result)
    parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
        }
        free __shared
      }
    }
    set_dev_dirty(f.buffer, uint8(1))
  }
  let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
  produce g {
    let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
    let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
    parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
        }
        free __shared
      }
    }
    free f
    set_dev_dirty(g.buffer, uint8(1))
  }
  0
}

Codegen: int32, max(min(g.min.0, (input.extent.0 + -1)), 0)
Codegen: int32, min(g.min.0, (input.extent.0 + -1))
Codegen: int32, g.min.0
Codegen: int32, (input.extent.0 + -1)
Codegen: int32, input.extent.0
Codegen: int32, -1
Codegen: int32, 0
Codegen: let input.extent.1.required.s = (max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0) - max(min(g.min.1, (input.extent.1 + -1)), 0))
let input.min.1.required = max(min(g.min.1, (input.extent.1 + -1)), 0)
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.required, (input.extent.0.required.s + 1), 1, input.min.1.required, (input.extent.1.required.s + 1), (input.extent.0.required.s + 1))
}
if (!(g.host_and_dev_are_null || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((input.min.0 <= input.min.0.required) && ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, (input.min.0.required + input.extent.0.required.s), input.min.0, ((input.min.0 + input.extent.0) + -1)))
  assert(((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1)))
  assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
  assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
  let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0))
  let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0))
  assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  allocate f[uint32 * g.extent.0 * g.extent.1]
  let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
  produce f {
    let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
    let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
    assert((device_malloc_result == 0), device_malloc_result)
    let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result == 0), copy_to_device_result)
    parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
        }
        free __shared
      }
    }
    set_dev_dirty(f.buffer, uint8(1))
  }
  let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
  produce g {
    let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
    let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
    parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
        }
        free __shared
      }
    }
    free f
    set_dev_dirty(g.buffer, uint8(1))
  }
  0
}

Codegen: int32, (max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0) - max(min(g.min.1, (input.extent.1 + -1)), 0))
Codegen: int32, max((min((g.min.1 + g.extent.1), input.extent.1) + -1), 0)
Codegen: int32, (min((g.min.1 + g.extent.1), input.extent.1) + -1)
Codegen: int32, min((g.min.1 + g.extent.1), input.extent.1)
Codegen: int32, (g.min.1 + g.extent.1)
Codegen: int32, g.min.1
Codegen: int32, g.extent.1
Codegen: int32, input.extent.1
Codegen: int32, -1
Codegen: int32, 0
Codegen: int32, max(min(g.min.1, (input.extent.1 + -1)), 0)
Codegen: int32, min(g.min.1, (input.extent.1 + -1))
Codegen: int32, g.min.1
Codegen: int32, (input.extent.1 + -1)
Codegen: int32, input.extent.1
Codegen: int32, -1
Codegen: int32, 0
Codegen: let input.min.1.required = max(min(g.min.1, (input.extent.1 + -1)), 0)
if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.required, (input.extent.0.required.s + 1), 1, input.min.1.required, (input.extent.1.required.s + 1), (input.extent.0.required.s + 1))
}
if (!(g.host_and_dev_are_null || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((input.min.0 <= input.min.0.required) && ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, (input.min.0.required + input.extent.0.required.s), input.min.0, ((input.min.0 + input.extent.0) + -1)))
  assert(((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1)))
  assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
  assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
  let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0))
  let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0))
  assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  allocate f[uint32 * g.extent.0 * g.extent.1]
  let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
  produce f {
    let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
    let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
    assert((device_malloc_result == 0), device_malloc_result)
    let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result == 0), copy_to_device_result)
    parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
        }
        free __shared
      }
    }
    set_dev_dirty(f.buffer, uint8(1))
  }
  let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
  produce g {
    let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
    let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
    parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
        }
        free __shared
      }
    }
    free f
    set_dev_dirty(g.buffer, uint8(1))
  }
  0
}

Codegen: int32, max(min(g.min.1, (input.extent.1 + -1)), 0)
Codegen: int32, min(g.min.1, (input.extent.1 + -1))
Codegen: int32, g.min.1
Codegen: int32, (input.extent.1 + -1)
Codegen: int32, input.extent.1
Codegen: int32, -1
Codegen: int32, 0
Codegen: if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
}
if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.required, (input.extent.0.required.s + 1), 1, input.min.1.required, (input.extent.1.required.s + 1), (input.extent.0.required.s + 1))
}
if (!(g.host_and_dev_are_null || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((input.min.0 <= input.min.0.required) && ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, (input.min.0.required + input.extent.0.required.s), input.min.0, ((input.min.0 + input.extent.0) + -1)))
  assert(((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1)))
  assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
  assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
  let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0))
  let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0))
  assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  allocate f[uint32 * g.extent.0 * g.extent.1]
  let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
  produce f {
    let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
    let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
    assert((device_malloc_result == 0), device_malloc_result)
    let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result == 0), copy_to_device_result)
    parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
        }
        free __shared
      }
    }
    set_dev_dirty(f.buffer, uint8(1))
  }
  let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
  produce g {
    let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
    let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
    parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
        }
        free __shared
      }
    }
    free f
    set_dev_dirty(g.buffer, uint8(1))
  }
  0
}

Codegen: if (g.host_and_dev_are_null) {
  rewrite_buffer(g.buffer, 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
}

Codegen: uint1, g.host_and_dev_are_null
Codegen: rewrite_buffer(g.buffer, 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)

Codegen: uint1, rewrite_buffer(g.buffer, 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
Codegen: handle64, g.buffer
Codegen: int32, 4
Codegen: int32, g.min.0
Codegen: int32, g.extent.0
Codegen: int32, 1
Codegen: int32, g.min.1
Codegen: int32, g.extent.1
Codegen: int32, g.extent.0
Codegen: uint1, uint1(1)
Codegen: int32, 1
Codegen: if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.required, (input.extent.0.required.s + 1), 1, input.min.1.required, (input.extent.1.required.s + 1), (input.extent.0.required.s + 1))
}
if (!(g.host_and_dev_are_null || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((input.min.0 <= input.min.0.required) && ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, (input.min.0.required + input.extent.0.required.s), input.min.0, ((input.min.0 + input.extent.0) + -1)))
  assert(((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1)))
  assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
  assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
  let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0))
  let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0))
  assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  allocate f[uint32 * g.extent.0 * g.extent.1]
  let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
  produce f {
    let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
    let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
    assert((device_malloc_result == 0), device_malloc_result)
    let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result == 0), copy_to_device_result)
    parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
        }
        free __shared
      }
    }
    set_dev_dirty(f.buffer, uint8(1))
  }
  let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
  produce g {
    let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
    let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
    parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
        }
        free __shared
      }
    }
    free f
    set_dev_dirty(g.buffer, uint8(1))
  }
  0
}

Codegen: if (input.host_and_dev_are_null) {
  rewrite_buffer(input.buffer, 4, input.min.0.required, (input.extent.0.required.s + 1), 1, input.min.1.required, (input.extent.1.required.s + 1), (input.extent.0.required.s + 1))
}

Codegen: uint1, input.host_and_dev_are_null
Codegen: rewrite_buffer(input.buffer, 4, input.min.0.required, (input.extent.0.required.s + 1), 1, input.min.1.required, (input.extent.1.required.s + 1), (input.extent.0.required.s + 1))

Codegen: uint1, rewrite_buffer(input.buffer, 4, input.min.0.required, (input.extent.0.required.s + 1), 1, input.min.1.required, (input.extent.1.required.s + 1), (input.extent.0.required.s + 1))
Codegen: handle64, input.buffer
Codegen: int32, 4
Codegen: int32, input.min.0.required
Codegen: int32, (input.extent.0.required.s + 1)
Codegen: int32, input.extent.0.required.s
Codegen: int32, 1
Codegen: int32, 1
Codegen: int32, input.min.1.required
Codegen: int32, (input.extent.1.required.s + 1)
Codegen: int32, input.extent.1.required.s
Codegen: int32, 1
Codegen: int32, (input.extent.0.required.s + 1)
Codegen: int32, input.extent.0.required.s
Codegen: int32, 1
Codegen: uint1, uint1(1)
Codegen: int32, 1
Codegen: if (!(g.host_and_dev_are_null || input.host_and_dev_are_null)) {
  assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
  assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
  assert(((input.min.0 <= input.min.0.required) && ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, (input.min.0.required + input.extent.0.required.s), input.min.0, ((input.min.0 + input.extent.0) + -1)))
  assert(((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1)))
  assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
  assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
  let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0))
  let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0))
  assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
  assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
  assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
  assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
  assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
  assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
  allocate f[uint32 * g.extent.0 * g.extent.1]
  let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
  produce f {
    let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
    let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
    assert((device_malloc_result == 0), device_malloc_result)
    let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result == 0), copy_to_device_result)
    parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
        }
        free __shared
      }
    }
    set_dev_dirty(f.buffer, uint8(1))
  }
  let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
  produce g {
    let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
    let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
    assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
    parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
      parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
        allocate __shared[uint8 * 0]
        parallel<Renderscript> (.__thread_id_x, 0, 1) {
          image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
        }
        free __shared
      }
    }
    free f
    set_dev_dirty(g.buffer, uint8(1))
  }
  0
}

Codegen: uint1, !(g.host_and_dev_are_null || input.host_and_dev_are_null)
Codegen: uint1, (g.host_and_dev_are_null || input.host_and_dev_are_null)
Codegen: uint1, g.host_and_dev_are_null
Codegen: uint1, input.host_and_dev_are_null
Codegen: assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))
assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
assert(((input.min.0 <= input.min.0.required) && ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, (input.min.0.required + input.extent.0.required.s), input.min.0, ((input.min.0 + input.extent.0) + -1)))
assert(((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1)))
assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0))
let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0))
assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
allocate f[uint32 * g.extent.0 * g.extent.1]
let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
produce f {
  let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
  let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
  assert((device_malloc_result == 0), device_malloc_result)
  let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result == 0), copy_to_device_result)
  parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
      }
      free __shared
    }
  }
  set_dev_dirty(f.buffer, uint8(1))
}
let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
produce g {
  let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
  let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
  parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
      }
      free __shared
    }
  }
  free f
  set_dev_dirty(g.buffer, uint8(1))
}
0

Codegen: assert((g.elem_size == 4), halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4))

Codegen: uint1, (g.elem_size == 4)
Codegen: int32, g.elem_size
Codegen: int32, 4
Codegen: int32, halide_error_bad_elem_size("Output buffer g", "uint32", g.elem_size, 4)
Codegen: handle64, "Output buffer g"
Codegen: handle64, "uint32"
Codegen: int32, g.elem_size
Codegen: int32, 4
Found halide_error_bad_elem_size
Adding user_context to halide_error_bad_elem_size args
Codegen: assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))
assert(((input.min.0 <= input.min.0.required) && ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, (input.min.0.required + input.extent.0.required.s), input.min.0, ((input.min.0 + input.extent.0) + -1)))
assert(((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1)))
assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0))
let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0))
assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
allocate f[uint32 * g.extent.0 * g.extent.1]
let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
produce f {
  let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
  let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
  assert((device_malloc_result == 0), device_malloc_result)
  let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result == 0), copy_to_device_result)
  parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
      }
      free __shared
    }
  }
  set_dev_dirty(f.buffer, uint8(1))
}
let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
produce g {
  let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
  let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
  parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
      }
      free __shared
    }
  }
  free f
  set_dev_dirty(g.buffer, uint8(1))
}
0

Codegen: assert((input.elem_size == 4), halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4))

Codegen: uint1, (input.elem_size == 4)
Codegen: int32, input.elem_size
Codegen: int32, 4
Codegen: int32, halide_error_bad_elem_size("Input buffer input", "uint32", input.elem_size, 4)
Codegen: handle64, "Input buffer input"
Codegen: handle64, "uint32"
Codegen: int32, input.elem_size
Codegen: int32, 4
Found halide_error_bad_elem_size
Adding user_context to halide_error_bad_elem_size args
Codegen: assert(((input.min.0 <= input.min.0.required) && ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, (input.min.0.required + input.extent.0.required.s), input.min.0, ((input.min.0 + input.extent.0) + -1)))
assert(((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1)))
assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0))
let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0))
assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
allocate f[uint32 * g.extent.0 * g.extent.1]
let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
produce f {
  let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
  let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
  assert((device_malloc_result == 0), device_malloc_result)
  let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result == 0), copy_to_device_result)
  parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
      }
      free __shared
    }
  }
  set_dev_dirty(f.buffer, uint8(1))
}
let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
produce g {
  let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
  let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
  parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
      }
      free __shared
    }
  }
  free f
  set_dev_dirty(g.buffer, uint8(1))
}
0

Codegen: assert(((input.min.0 <= input.min.0.required) && ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0)), halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, (input.min.0.required + input.extent.0.required.s), input.min.0, ((input.min.0 + input.extent.0) + -1)))

Codegen: uint1, ((input.min.0 <= input.min.0.required) && ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0))
Codegen: uint1, (input.min.0 <= input.min.0.required)
Codegen: int32, input.min.0
Codegen: int32, input.min.0.required
Codegen: uint1, ((((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1) <= input.min.0)
Codegen: int32, (((input.min.0.required + input.extent.0.required.s) - input.extent.0) + 1)
Codegen: int32, ((input.min.0.required + input.extent.0.required.s) - input.extent.0)
Codegen: int32, (input.min.0.required + input.extent.0.required.s)
Codegen: int32, input.min.0.required
Codegen: int32, input.extent.0.required.s
Codegen: int32, input.extent.0
Codegen: int32, 1
Codegen: int32, input.min.0
Codegen: int32, halide_error_access_out_of_bounds("Input buffer input", 0, input.min.0.required, (input.min.0.required + input.extent.0.required.s), input.min.0, ((input.min.0 + input.extent.0) + -1))
Codegen: handle64, "Input buffer input"
Codegen: int32, 0
Codegen: int32, input.min.0.required
Codegen: int32, (input.min.0.required + input.extent.0.required.s)
Codegen: int32, input.min.0.required
Codegen: int32, input.extent.0.required.s
Codegen: int32, input.min.0
Codegen: int32, ((input.min.0 + input.extent.0) + -1)
Codegen: int32, (input.min.0 + input.extent.0)
Codegen: int32, input.min.0
Codegen: int32, input.extent.0
Codegen: int32, -1
Found halide_error_access_out_of_bounds
Adding user_context to halide_error_access_out_of_bounds args
Codegen: assert(((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1)))
assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0))
let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0))
assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
allocate f[uint32 * g.extent.0 * g.extent.1]
let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
produce f {
  let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
  let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
  assert((device_malloc_result == 0), device_malloc_result)
  let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result == 0), copy_to_device_result)
  parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
      }
      free __shared
    }
  }
  set_dev_dirty(f.buffer, uint8(1))
}
let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
produce g {
  let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
  let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
  parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
      }
      free __shared
    }
  }
  free f
  set_dev_dirty(g.buffer, uint8(1))
}
0

Codegen: assert(((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1)), halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1)))

Codegen: uint1, ((input.min.1 <= input.min.1.required) && ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1))
Codegen: uint1, (input.min.1 <= input.min.1.required)
Codegen: int32, input.min.1
Codegen: int32, input.min.1.required
Codegen: uint1, ((((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1) <= input.min.1)
Codegen: int32, (((input.min.1.required + input.extent.1.required.s) - input.extent.1) + 1)
Codegen: int32, ((input.min.1.required + input.extent.1.required.s) - input.extent.1)
Codegen: int32, (input.min.1.required + input.extent.1.required.s)
Codegen: int32, input.min.1.required
Codegen: int32, input.extent.1.required.s
Codegen: int32, input.extent.1
Codegen: int32, 1
Codegen: int32, input.min.1
Codegen: int32, halide_error_access_out_of_bounds("Input buffer input", 1, input.min.1.required, (input.min.1.required + input.extent.1.required.s), input.min.1, ((input.min.1 + input.extent.1) + -1))
Codegen: handle64, "Input buffer input"
Codegen: int32, 1
Codegen: int32, input.min.1.required
Codegen: int32, (input.min.1.required + input.extent.1.required.s)
Codegen: int32, input.min.1.required
Codegen: int32, input.extent.1.required.s
Codegen: int32, input.min.1
Codegen: int32, ((input.min.1 + input.extent.1) + -1)
Codegen: int32, (input.min.1 + input.extent.1)
Codegen: int32, input.min.1
Codegen: int32, input.extent.1
Codegen: int32, -1
Found halide_error_access_out_of_bounds
Adding user_context to halide_error_access_out_of_bounds args
Codegen: assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))
assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0))
let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0))
assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
allocate f[uint32 * g.extent.0 * g.extent.1]
let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
produce f {
  let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
  let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
  assert((device_malloc_result == 0), device_malloc_result)
  let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result == 0), copy_to_device_result)
  parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
      }
      free __shared
    }
  }
  set_dev_dirty(f.buffer, uint8(1))
}
let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
produce g {
  let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
  let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
  parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
      }
      free __shared
    }
  }
  free f
  set_dev_dirty(g.buffer, uint8(1))
}
0

Codegen: assert((g.stride.0 == 1), halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1))

Codegen: uint1, (g.stride.0 == 1)
Codegen: int32, g.stride.0
Codegen: int32, 1
Codegen: int32, halide_error_constraint_violated("g.stride.0", g.stride.0, "1", 1)
Codegen: handle64, "g.stride.0"
Codegen: int32, g.stride.0
Codegen: handle64, "1"
Codegen: int32, 1
Found halide_error_constraint_violated
Adding user_context to halide_error_constraint_violated args
Codegen: assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))
let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0))
let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0))
assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
allocate f[uint32 * g.extent.0 * g.extent.1]
let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
produce f {
  let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
  let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
  assert((device_malloc_result == 0), device_malloc_result)
  let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result == 0), copy_to_device_result)
  parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
      }
      free __shared
    }
  }
  set_dev_dirty(f.buffer, uint8(1))
}
let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
produce g {
  let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
  let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
  parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
      }
      free __shared
    }
  }
  free f
  set_dev_dirty(g.buffer, uint8(1))
}
0

Codegen: assert((input.stride.0 == 1), halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1))

Codegen: uint1, (input.stride.0 == 1)
Codegen: int32, input.stride.0
Codegen: int32, 1
Codegen: int32, halide_error_constraint_violated("input.stride.0", input.stride.0, "1", 1)
Codegen: handle64, "input.stride.0"
Codegen: int32, input.stride.0
Codegen: handle64, "1"
Codegen: int32, 1
Found halide_error_constraint_violated
Adding user_context to halide_error_constraint_violated args
Codegen: let g.total_extent.1 = (int64(g.extent.1)*int64(g.extent.0))
let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0))
assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
allocate f[uint32 * g.extent.0 * g.extent.1]
let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
produce f {
  let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
  let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
  assert((device_malloc_result == 0), device_malloc_result)
  let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result == 0), copy_to_device_result)
  parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
      }
      free __shared
    }
  }
  set_dev_dirty(f.buffer, uint8(1))
}
let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
produce g {
  let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
  let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
  parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
      }
      free __shared
    }
  }
  free f
  set_dev_dirty(g.buffer, uint8(1))
}
0

Codegen: int64, (int64(g.extent.1)*int64(g.extent.0))
Codegen: int64, int64(g.extent.1)
Codegen: int32, g.extent.1
Codegen: int64, int64(g.extent.0)
Codegen: int32, g.extent.0
Codegen: let input.total_extent.1 = (int64(input.extent.1)*int64(input.extent.0))
assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
allocate f[uint32 * g.extent.0 * g.extent.1]
let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
produce f {
  let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
  let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
  assert((device_malloc_result == 0), device_malloc_result)
  let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result == 0), copy_to_device_result)
  parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
      }
      free __shared
    }
  }
  set_dev_dirty(f.buffer, uint8(1))
}
let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
produce g {
  let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
  let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
  parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
      }
      free __shared
    }
  }
  free f
  set_dev_dirty(g.buffer, uint8(1))
}
0

Codegen: int64, (int64(input.extent.1)*int64(input.extent.0))
Codegen: int64, int64(input.extent.1)
Codegen: int32, input.extent.1
Codegen: int64, int64(input.extent.0)
Codegen: int32, input.extent.0
Codegen: assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))
assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
allocate f[uint32 * g.extent.0 * g.extent.1]
let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
produce f {
  let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
  let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
  assert((device_malloc_result == 0), device_malloc_result)
  let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result == 0), copy_to_device_result)
  parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
      }
      free __shared
    }
  }
  set_dev_dirty(f.buffer, uint8(1))
}
let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
produce g {
  let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
  let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
  parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
      }
      free __shared
    }
  }
  free f
  set_dev_dirty(g.buffer, uint8(1))
}
0

Codegen: assert((int64(g.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647)))

Codegen: uint1, (int64(g.extent.0) <= int64(2147483647))
Codegen: int64, int64(g.extent.0)
Codegen: int32, g.extent.0
Codegen: int64, int64(2147483647)
Codegen: int32, 2147483647
Codegen: int32, halide_error_buffer_allocation_too_large("g", int64(g.extent.0), int64(2147483647))
Codegen: handle64, "g"
Codegen: int64, int64(g.extent.0)
Codegen: int32, g.extent.0
Codegen: int64, int64(2147483647)
Codegen: int32, 2147483647
Found halide_error_buffer_allocation_too_large
Adding user_context to halide_error_buffer_allocation_too_large args
Codegen: assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))
assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
allocate f[uint32 * g.extent.0 * g.extent.1]
let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
produce f {
  let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
  let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
  assert((device_malloc_result == 0), device_malloc_result)
  let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result == 0), copy_to_device_result)
  parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
      }
      free __shared
    }
  }
  set_dev_dirty(f.buffer, uint8(1))
}
let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
produce g {
  let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
  let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
  parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
      }
      free __shared
    }
  }
  free f
  set_dev_dirty(g.buffer, uint8(1))
}
0

Codegen: assert(((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647)))

Codegen: uint1, ((int64(g.extent.1)*int64(g.stride.1)) <= int64(2147483647))
Codegen: int64, (int64(g.extent.1)*int64(g.stride.1))
Codegen: int64, int64(g.extent.1)
Codegen: int32, g.extent.1
Codegen: int64, int64(g.stride.1)
Codegen: int32, g.stride.1
Codegen: int64, int64(2147483647)
Codegen: int32, 2147483647
Codegen: int32, halide_error_buffer_allocation_too_large("g", (int64(g.extent.1)*int64(g.stride.1)), int64(2147483647))
Codegen: handle64, "g"
Codegen: int64, (int64(g.extent.1)*int64(g.stride.1))
Codegen: int64, int64(g.extent.1)
Codegen: int32, g.extent.1
Codegen: int64, int64(g.stride.1)
Codegen: int32, g.stride.1
Codegen: int64, int64(2147483647)
Codegen: int32, 2147483647
Found halide_error_buffer_allocation_too_large
Adding user_context to halide_error_buffer_allocation_too_large args
Codegen: assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))
assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
allocate f[uint32 * g.extent.0 * g.extent.1]
let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
produce f {
  let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
  let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
  assert((device_malloc_result == 0), device_malloc_result)
  let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result == 0), copy_to_device_result)
  parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
      }
      free __shared
    }
  }
  set_dev_dirty(f.buffer, uint8(1))
}
let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
produce g {
  let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
  let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
  parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
      }
      free __shared
    }
  }
  free f
  set_dev_dirty(g.buffer, uint8(1))
}
0

Codegen: assert((g.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647)))

Codegen: uint1, (g.total_extent.1 <= int64(2147483647))
Codegen: int64, g.total_extent.1
Codegen: int64, int64(2147483647)
Codegen: int32, 2147483647
Codegen: int32, halide_error_buffer_extents_too_large("g", g.total_extent.1, int64(2147483647))
Codegen: handle64, "g"
Codegen: int64, g.total_extent.1
Codegen: int64, int64(2147483647)
Codegen: int32, 2147483647
Found halide_error_buffer_extents_too_large
Adding user_context to halide_error_buffer_extents_too_large args
Codegen: assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))
assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
allocate f[uint32 * g.extent.0 * g.extent.1]
let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
produce f {
  let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
  let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
  assert((device_malloc_result == 0), device_malloc_result)
  let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result == 0), copy_to_device_result)
  parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
      }
      free __shared
    }
  }
  set_dev_dirty(f.buffer, uint8(1))
}
let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
produce g {
  let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
  let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
  parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
      }
      free __shared
    }
  }
  free f
  set_dev_dirty(g.buffer, uint8(1))
}
0

Codegen: assert((int64(input.extent.0) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647)))

Codegen: uint1, (int64(input.extent.0) <= int64(2147483647))
Codegen: int64, int64(input.extent.0)
Codegen: int32, input.extent.0
Codegen: int64, int64(2147483647)
Codegen: int32, 2147483647
Codegen: int32, halide_error_buffer_allocation_too_large("input", int64(input.extent.0), int64(2147483647))
Codegen: handle64, "input"
Codegen: int64, int64(input.extent.0)
Codegen: int32, input.extent.0
Codegen: int64, int64(2147483647)
Codegen: int32, 2147483647
Found halide_error_buffer_allocation_too_large
Adding user_context to halide_error_buffer_allocation_too_large args
Codegen: assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))
assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
allocate f[uint32 * g.extent.0 * g.extent.1]
let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
produce f {
  let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
  let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
  assert((device_malloc_result == 0), device_malloc_result)
  let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result == 0), copy_to_device_result)
  parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
      }
      free __shared
    }
  }
  set_dev_dirty(f.buffer, uint8(1))
}
let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
produce g {
  let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
  let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
  parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
      }
      free __shared
    }
  }
  free f
  set_dev_dirty(g.buffer, uint8(1))
}
0

Codegen: assert(((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647)), halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647)))

Codegen: uint1, ((int64(input.extent.1)*int64(input.stride.1)) <= int64(2147483647))
Codegen: int64, (int64(input.extent.1)*int64(input.stride.1))
Codegen: int64, int64(input.extent.1)
Codegen: int32, input.extent.1
Codegen: int64, int64(input.stride.1)
Codegen: int32, input.stride.1
Codegen: int64, int64(2147483647)
Codegen: int32, 2147483647
Codegen: int32, halide_error_buffer_allocation_too_large("input", (int64(input.extent.1)*int64(input.stride.1)), int64(2147483647))
Codegen: handle64, "input"
Codegen: int64, (int64(input.extent.1)*int64(input.stride.1))
Codegen: int64, int64(input.extent.1)
Codegen: int32, input.extent.1
Codegen: int64, int64(input.stride.1)
Codegen: int32, input.stride.1
Codegen: int64, int64(2147483647)
Codegen: int32, 2147483647
Found halide_error_buffer_allocation_too_large
Adding user_context to halide_error_buffer_allocation_too_large args
Codegen: assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))
allocate f[uint32 * g.extent.0 * g.extent.1]
let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
produce f {
  let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
  let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
  assert((device_malloc_result == 0), device_malloc_result)
  let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result == 0), copy_to_device_result)
  parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
      }
      free __shared
    }
  }
  set_dev_dirty(f.buffer, uint8(1))
}
let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
produce g {
  let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
  let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
  parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
      }
      free __shared
    }
  }
  free f
  set_dev_dirty(g.buffer, uint8(1))
}
0

Codegen: assert((input.total_extent.1 <= int64(2147483647)), halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647)))

Codegen: uint1, (input.total_extent.1 <= int64(2147483647))
Codegen: int64, input.total_extent.1
Codegen: int64, int64(2147483647)
Codegen: int32, 2147483647
Codegen: int32, halide_error_buffer_extents_too_large("input", input.total_extent.1, int64(2147483647))
Codegen: handle64, "input"
Codegen: int64, input.total_extent.1
Codegen: int64, int64(2147483647)
Codegen: int32, 2147483647
Found halide_error_buffer_extents_too_large
Adding user_context to halide_error_buffer_extents_too_large args
Codegen: allocate f[uint32 * g.extent.0 * g.extent.1]
let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
produce f {
  let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
  let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
  assert((device_malloc_result == 0), device_malloc_result)
  let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result == 0), copy_to_device_result)
  parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
      }
      free __shared
    }
  }
  set_dev_dirty(f.buffer, uint8(1))
}
let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
produce g {
  let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
  let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
  parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
      }
      free __shared
    }
  }
  free f
  set_dev_dirty(g.buffer, uint8(1))
}
0

Codegen: uint1, (max((int64(4)*int64(g.extent.0)), ((int64(4)*int64(g.extent.0))*int64(g.extent.1))) <= int64(2147483647))
Codegen: int64, max((int64(4)*int64(g.extent.0)), ((int64(4)*int64(g.extent.0))*int64(g.extent.1)))
Codegen: int64, (int64(4)*int64(g.extent.0))
Codegen: int64, int64(4)
Codegen: int32, 4
Codegen: int64, int64(g.extent.0)
Codegen: int32, g.extent.0
Codegen: int64, ((int64(4)*int64(g.extent.0))*int64(g.extent.1))
Codegen: int64, (int64(4)*int64(g.extent.0))
Codegen: int64, int64(4)
Codegen: int32, 4
Codegen: int64, int64(g.extent.0)
Codegen: int32, g.extent.0
Codegen: int64, int64(g.extent.1)
Codegen: int32, g.extent.1
Codegen: int64, int64(2147483647)
Codegen: int32, 2147483647
Codegen: int32, halide_error_buffer_allocation_too_large("f", ((int64(4)*int64(g.extent.0))*int64(g.extent.1)), int64(2147483647))
Codegen: handle64, "f"
Codegen: int64, ((int64(4)*int64(g.extent.0))*int64(g.extent.1))
Codegen: int64, (int64(4)*int64(g.extent.0))
Codegen: int64, int64(4)
Codegen: int32, 4
Codegen: int64, int64(g.extent.0)
Codegen: int32, g.extent.0
Codegen: int64, int64(g.extent.1)
Codegen: int32, g.extent.1
Codegen: int64, int64(2147483647)
Codegen: int32, 2147483647
Found halide_error_buffer_allocation_too_large
Adding user_context to halide_error_buffer_allocation_too_large args
Codegen: int32, int32(((int64(4)*int64(g.extent.0))*int64(g.extent.1)))
Codegen: int64, ((int64(4)*int64(g.extent.0))*int64(g.extent.1))
Codegen: int64, (int64(4)*int64(g.extent.0))
Codegen: int64, int64(4)
Codegen: int32, 4
Codegen: int64, int64(g.extent.0)
Codegen: int32, g.extent.0
Codegen: int64, int64(g.extent.1)
Codegen: int32, g.extent.1
Codegen: uint1, uint1(1)
Codegen: int32, 1
Creating call to halide_malloc for allocation f of size 4 x g.extent.0 x g.extent.1
Codegen: int32, halide_error_out_of_memory()
Found halide_error_out_of_memory
Adding user_context to halide_error_out_of_memory args
Pushing allocation called f.host onto the symbol table
Codegen: let f.buffer = create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
produce f {
  let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
  let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
  assert((device_malloc_result == 0), device_malloc_result)
  let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result == 0), copy_to_device_result)
  parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
      }
      free __shared
    }
  }
  set_dev_dirty(f.buffer, uint8(1))
}
let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
produce g {
  let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
  let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
  parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
      }
      free __shared
    }
  }
  free f
  set_dev_dirty(g.buffer, uint8(1))
}
0

Codegen: handle64, create_buffer_t(address_of(f[0]), 4, g.min.0, g.extent.0, 1, g.min.1, g.extent.1, g.extent.0)
Codegen: handle64, address_of(f[0])
Codegen: int32, 0
Codegen: int32, 4
Codegen: int32, g.min.0
Codegen: int32, g.extent.0
Codegen: int32, 1
Codegen: int32, g.min.1
Codegen: int32, g.extent.1
Codegen: int32, g.extent.0
Codegen: produce f {
  let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
  let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
  assert((device_malloc_result == 0), device_malloc_result)
  let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result == 0), copy_to_device_result)
  parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
      }
      free __shared
    }
  }
  set_dev_dirty(f.buffer, uint8(1))
}
let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
produce g {
  let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
  let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
  parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
      }
      free __shared
    }
  }
  free f
  set_dev_dirty(g.buffer, uint8(1))
}
0

Codegen: let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$2 == 0), copy_to_device_result$2)
let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
assert((device_malloc_result == 0), device_malloc_result)
let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result == 0), copy_to_device_result)
parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
  parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
    allocate __shared[uint8 * 0]
    parallel<Renderscript> (.__thread_id_x, 0, 1) {
      image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
    }
    free __shared
  }
}
set_dev_dirty(f.buffer, uint8(1))

Codegen: let copy_to_device_result$2 = halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$2 == 0), copy_to_device_result$2)

Codegen: int32, halide_copy_to_device(input.buffer, halide_renderscript_device_interface())
Codegen: handle64, input.buffer
Codegen: handle64, halide_renderscript_device_interface()
Found halide_renderscript_device_interface
Found halide_copy_to_device
Adding user_context to halide_copy_to_device args
Codegen: assert((copy_to_device_result$2 == 0), copy_to_device_result$2)

Codegen: uint1, (copy_to_device_result$2 == 0)
Codegen: int32, copy_to_device_result$2
Codegen: int32, 0
Codegen: int32, copy_to_device_result$2
Codegen: let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
assert((device_malloc_result == 0), device_malloc_result)
let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result == 0), copy_to_device_result)
parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
  parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
    allocate __shared[uint8 * 0]
    parallel<Renderscript> (.__thread_id_x, 0, 1) {
      image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
    }
    free __shared
  }
}
set_dev_dirty(f.buffer, uint8(1))

Codegen: let device_malloc_result = halide_device_malloc(f.buffer, halide_renderscript_device_interface())
assert((device_malloc_result == 0), device_malloc_result)

Codegen: int32, halide_device_malloc(f.buffer, halide_renderscript_device_interface())
Codegen: handle64, f.buffer
Codegen: handle64, halide_renderscript_device_interface()
Found halide_renderscript_device_interface
Found halide_device_malloc
Adding user_context to halide_device_malloc args
Codegen: assert((device_malloc_result == 0), device_malloc_result)

Codegen: uint1, (device_malloc_result == 0)
Codegen: int32, device_malloc_result
Codegen: int32, 0
Codegen: int32, device_malloc_result
Codegen: let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result == 0), copy_to_device_result)
parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
  parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
    allocate __shared[uint8 * 0]
    parallel<Renderscript> (.__thread_id_x, 0, 1) {
      image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
    }
    free __shared
  }
}
set_dev_dirty(f.buffer, uint8(1))

Codegen: let copy_to_device_result = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result == 0), copy_to_device_result)

Codegen: int32, halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
Codegen: handle64, f.buffer
Codegen: handle64, halide_renderscript_device_interface()
Found halide_renderscript_device_interface
Found halide_copy_to_device
Adding user_context to halide_copy_to_device args
Codegen: assert((copy_to_device_result == 0), copy_to_device_result)

Codegen: uint1, (copy_to_device_result == 0)
Codegen: int32, copy_to_device_result
Codegen: int32, 0
Codegen: int32, copy_to_device_result
Codegen: parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
  parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
    allocate __shared[uint8 * 0]
    parallel<Renderscript> (.__thread_id_x, 0, 1) {
      image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
    }
    free __shared
  }
}
set_dev_dirty(f.buffer, uint8(1))

Codegen: parallel<Renderscript> (f.s0.v1.__block_id_y, 0, g.extent.1) {
  parallel<Renderscript> (f.s0.v0.__block_id_x, 0, g.extent.0) {
    allocate __shared[uint8 * 0]
    parallel<Renderscript> (.__thread_id_x, 0, 1) {
      image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
    }
    free __shared
  }
}

Kernel launch: f.s0.v1.__block_id_y
g.extent.1 not in scope, so leaving it as-is
Extracted bounds for op->name:f.s0.v1.__block_id_y are [0..((0 + g.extent.1) - 1)]
g.extent.0 not in scope, so leaving it as-is
Extracted bounds for op->name:f.s0.v0.__block_id_x are [0..((0 + g.extent.0) - 1)]
Kernel bounds: (1, 1, 1, 1) threads, (g.extent.0, g.extent.1, 1, 1) blocks
Codegen: int32, 0
Adding g.extent.1 to closure
Adding g.extent.0 to closure
Not adding f.buffer to closure
Not adding f.s0.v0.__block_id_x to closure
Not adding f.s0.v1.__block_id_y to closure
Not adding input.buffer to closure
Not adding f.s0.v0.__block_id_x to closure
Adding g.min.0 to closure
Adding input.extent.0 to closure
Adding input.min.0 to closure
Adding input.extent.0 to closure
Not adding f.s0.v1.__block_id_y to closure
Adding g.min.1 to closure
Adding input.extent.1 to closure
Adding input.min.1 to closure
Adding input.extent.1 to closure
var: g.extent.0
var: g.extent.1
var: g.min.0
var: g.min.1
var: input.extent.0
var: input.extent.1
var: input.min.0
var: input.min.1
buffer: f 0 (write)
buffer: input 0 (read)
In CodeGen_Renderscript_Dev::add_kernel name=kernel_f_s0_v1___block_id_y
CodeGen_Renderscript_Dev arg[0].name=g.extent.0
args[0] = {name=g.extent.0 is_buffer=0 dimensions=0 type=int32}
CodeGen_Renderscript_Dev arg[1].name=g.extent.1
args[1] = {name=g.extent.1 is_buffer=0 dimensions=0 type=int32}
CodeGen_Renderscript_Dev arg[2].name=g.min.0
args[2] = {name=g.min.0 is_buffer=0 dimensions=0 type=int32}
CodeGen_Renderscript_Dev arg[3].name=g.min.1
args[3] = {name=g.min.1 is_buffer=0 dimensions=0 type=int32}
CodeGen_Renderscript_Dev arg[4].name=input.extent.0
args[4] = {name=input.extent.0 is_buffer=0 dimensions=0 type=int32}
CodeGen_Renderscript_Dev arg[5].name=input.extent.1
args[5] = {name=input.extent.1 is_buffer=0 dimensions=0 type=int32}
CodeGen_Renderscript_Dev arg[6].name=input.min.0
args[6] = {name=input.min.0 is_buffer=0 dimensions=0 type=int32}
CodeGen_Renderscript_Dev arg[7].name=input.min.1
args[7] = {name=input.min.1 is_buffer=0 dimensions=0 type=int32}
CodeGen_Renderscript_Dev arg[8].name=input
args[8] = {name=input is_buffer=1 dimensions=0 type=uint32}
CodeGen_Renderscript_Dev arg[9].name=f
  this is our output buffer type
args[9] = {name=f is_buffer=1 dimensions=0 type=uint32}
  adding argument type at 0: f.s0.v0.__block_id_x
  adding argument type at 1: f.s0.v1.__block_id_y
  adding argument type at 2: 
  adding argument type at 3: 
  adding kernel function parameter f.s0.v0.__block_id_x with type i32
  adding kernel function parameter f.s0.v1.__block_id_y with type i32
Pushing global symbol g.extent.0 into sym table
Pushing global symbol g.extent.0 into sym table
Pushing global symbol g.extent.1 into sym table
Pushing global symbol g.extent.1 into sym table
Pushing global symbol g.min.0 into sym table
Pushing global symbol g.min.0 into sym table
Pushing global symbol g.min.1 into sym table
Pushing global symbol g.min.1 into sym table
Pushing global symbol input.extent.0 into sym table
Pushing global symbol input.extent.0 into sym table
Pushing global symbol input.extent.1 into sym table
Pushing global symbol input.extent.1 into sym table
Pushing global symbol input.min.0 into sym table
Pushing global symbol input.min.0 into sym table
Pushing global symbol input.min.1 into sym table
Pushing global symbol input.min.1 into sym table
Pushing global symbol input into sym table
Pushing global symbol f into sym table
Generating llvm bitcode for kernel...
RS: Visiting for loop, loop->name is f.s0.v1.__block_id_y is_gpu_var? 1
RS: Visiting for loop, loop->name is f.s0.v0.__block_id_x is_gpu_var? 1
RS: Allocate __shared on device
Codegen: parallel<Renderscript> (.__thread_id_x, 0, 1) {
  image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
}
free __shared

Codegen: parallel<Renderscript> (.__thread_id_x, 0, 1) {
  image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
}

RS: Visiting for loop, loop->name is .__thread_id_x is_gpu_var? 1
Codegen: uint32, image_store("f", f.buffer, f.s0.v0.__block_id_x, f.s0.v1.__block_id_y, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
Codegen: int32, f.s0.v0.__block_id_x
Codegen: int32, f.s0.v1.__block_id_y
Codegen: uint32, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1)
Codegen: int32, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0)
Codegen: int32, max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0)
Codegen: int32, min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1))
Codegen: int32, (f.s0.v0.__block_id_x + g.min.0)
Codegen: int32, f.s0.v0.__block_id_x
Codegen: int32, g.min.0
Codegen: int32, (input.extent.0 + -1)
Codegen: int32, input.extent.0
Codegen: int32, -1
Codegen: int32, 0
Codegen: int32, input.min.0
Codegen: int32, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1)
Codegen: int32, max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0)
Codegen: int32, min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1))
Codegen: int32, (f.s0.v1.__block_id_y + g.min.1)
Codegen: int32, f.s0.v1.__block_id_y
Codegen: int32, g.min.1
Codegen: int32, (input.extent.1 + -1)
Codegen: int32, input.extent.1
Codegen: int32, -1
Codegen: int32, 0
Codegen: int32, input.min.1
Generating 1byte-wide has_c=0 call with 3 args:
 #1:[1 x i32]
  %input = load [1 x i32], [1 x i32]* bitcast (%struct.rs_allocation* @input to [1 x i32]*), align 4
 #2:i32
  %6 = sub nsw i32 %5, %input.min.07
 #3:i32
  %13 = sub nsw i32 %12, %input.min.18
fetch_GetElement_func type.code=1 type.width=1
Generating 1byte-wide has_c=0 call with 4 args:
 #1:[1 x i32]
  %f = load [1 x i32], [1 x i32]* bitcast (%struct.rs_allocation* @f to [1 x i32]*), align 4
 #2:i32
  %14 = call i32 @_Z18rsGetElementAt_int13rs_allocationjj([1 x i32] %input, i32 %6, i32 %13)
 #3:i32
i32 %f.s0.v0.__block_id_x
 #4:i32
i32 %f.s0.v1.__block_id_y
Codegen: float32, float32(image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1))
Codegen: uint32, image_load("input", input.buffer, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0), input.extent.0, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1), input.extent.1)
Codegen: int32, (max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0) - input.min.0)
Codegen: int32, max(min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1)), 0)
Codegen: int32, min((f.s0.v0.__block_id_x + g.min.0), (input.extent.0 + -1))
Codegen: int32, (f.s0.v0.__block_id_x + g.min.0)
Codegen: int32, f.s0.v0.__block_id_x
Codegen: int32, g.min.0
Codegen: int32, (input.extent.0 + -1)
Codegen: int32, input.extent.0
Codegen: int32, -1
Codegen: int32, 0
Codegen: int32, input.min.0
Codegen: int32, (max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0) - input.min.1)
Codegen: int32, max(min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1)), 0)
Codegen: int32, min((f.s0.v1.__block_id_y + g.min.1), (input.extent.1 + -1))
Codegen: int32, (f.s0.v1.__block_id_y + g.min.1)
Codegen: int32, f.s0.v1.__block_id_y
Codegen: int32, g.min.1
Codegen: int32, (input.extent.1 + -1)
Codegen: int32, input.extent.1
Codegen: int32, -1
Codegen: int32, 0
Codegen: int32, input.min.1
Generating 1byte-wide has_c=0 call with 3 args:
 #1:[1 x i32]
  %input = load [1 x i32], [1 x i32]* bitcast (%struct.rs_allocation* @input to [1 x i32]*), align 4
 #2:i32
  %21 = sub nsw i32 %20, %input.min.07
 #3:i32
  %28 = sub nsw i32 %27, %input.min.18
fetch_GetElement_func type.code=1 type.width=1
Codegen: float32, float32(f.s0.v0.__block_id_x)
Codegen: int32, f.s0.v0.__block_id_x
Codegen: float32, float32(f.s0.v1.__block_id_y)
Codegen: int32, f.s0.v1.__block_id_y
fetch_SetElement_func type.code=1 type.width=1 type.bytes=4 func_name:_Z18rsSetElementAt_int13rs_allocationijj func:0x7f895ae4ffc8
Codegen: free __shared

RS: Free on device
Done generating llvm bitcode for RS
Compiled launch to kernel "1" with 10 args 
CodeGen_GPU_Host get_user_context returned 0x7f895ad26920
Created device module state global variable
Codegen: int32, g.extent.0
Codegen: int32, g.extent.1
Codegen: int32, 1
Codegen: int32, 1
Codegen: int32, 1
Codegen: int32, 1
Codegen: int32, 0
Codegen: set_dev_dirty(f.buffer, uint8(1))

Codegen: int32, set_dev_dirty(f.buffer, uint8(1))
Codegen: handle64, f.buffer
Codegen: uint8, uint8(1)
Codegen: int32, 1
Codegen: let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$5 == 0), copy_to_device_result$5)
produce g {
  let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
  let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
  parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
      }
      free __shared
    }
  }
  free f
  set_dev_dirty(g.buffer, uint8(1))
}
0

Codegen: let copy_to_device_result$5 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$5 == 0), copy_to_device_result$5)

Codegen: int32, halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
Codegen: handle64, g.buffer
Codegen: handle64, halide_renderscript_device_interface()
Found halide_renderscript_device_interface
Found halide_copy_to_device
Adding user_context to halide_copy_to_device args
Codegen: assert((copy_to_device_result$5 == 0), copy_to_device_result$5)

Codegen: uint1, (copy_to_device_result$5 == 0)
Codegen: int32, copy_to_device_result$5
Codegen: int32, 0
Codegen: int32, copy_to_device_result$5
Codegen: produce g {
  let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
  let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
  assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
  parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
    parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
      allocate __shared[uint8 * 0]
      parallel<Renderscript> (.__thread_id_x, 0, 1) {
        image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
      }
      free __shared
    }
  }
  free f
  set_dev_dirty(g.buffer, uint8(1))
}
0

Codegen: let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$4 == 0), copy_to_device_result$4)
let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
  parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
    allocate __shared[uint8 * 0]
    parallel<Renderscript> (.__thread_id_x, 0, 1) {
      image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
    }
    free __shared
  }
}
free f
set_dev_dirty(g.buffer, uint8(1))

Codegen: let copy_to_device_result$4 = halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$4 == 0), copy_to_device_result$4)

Codegen: int32, halide_copy_to_device(g.buffer, halide_renderscript_device_interface())
Codegen: handle64, g.buffer
Codegen: handle64, halide_renderscript_device_interface()
Found halide_renderscript_device_interface
Found halide_copy_to_device
Adding user_context to halide_copy_to_device args
Codegen: assert((copy_to_device_result$4 == 0), copy_to_device_result$4)

Codegen: uint1, (copy_to_device_result$4 == 0)
Codegen: int32, copy_to_device_result$4
Codegen: int32, 0
Codegen: int32, copy_to_device_result$4
Codegen: let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$3 == 0), copy_to_device_result$3)
parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
  parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
    allocate __shared[uint8 * 0]
    parallel<Renderscript> (.__thread_id_x, 0, 1) {
      image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
    }
    free __shared
  }
}
free f
set_dev_dirty(g.buffer, uint8(1))

Codegen: let copy_to_device_result$3 = halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
assert((copy_to_device_result$3 == 0), copy_to_device_result$3)

Codegen: int32, halide_copy_to_device(f.buffer, halide_renderscript_device_interface())
Codegen: handle64, f.buffer
Codegen: handle64, halide_renderscript_device_interface()
Found halide_renderscript_device_interface
Found halide_copy_to_device
Adding user_context to halide_copy_to_device args
Codegen: assert((copy_to_device_result$3 == 0), copy_to_device_result$3)

Codegen: uint1, (copy_to_device_result$3 == 0)
Codegen: int32, copy_to_device_result$3
Codegen: int32, 0
Codegen: int32, copy_to_device_result$3
Codegen: parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
  parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
    allocate __shared[uint8 * 0]
    parallel<Renderscript> (.__thread_id_x, 0, 1) {
      image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
    }
    free __shared
  }
}
free f
set_dev_dirty(g.buffer, uint8(1))

Codegen: parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
  parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
    allocate __shared[uint8 * 0]
    parallel<Renderscript> (.__thread_id_x, 0, 1) {
      image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
    }
    free __shared
  }
}
free f

Codegen: parallel<Renderscript> (g.s0.v1.__block_id_y, 0, g.extent.1) {
  parallel<Renderscript> (g.s0.v0.__block_id_x, 0, g.extent.0) {
    allocate __shared[uint8 * 0]
    parallel<Renderscript> (.__thread_id_x, 0, 1) {
      image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
    }
    free __shared
  }
}

Kernel launch: g.s0.v1.__block_id_y
g.extent.1 not in scope, so leaving it as-is
Extracted bounds for op->name:g.s0.v1.__block_id_y are [0..((0 + g.extent.1) - 1)]
g.extent.0 not in scope, so leaving it as-is
Extracted bounds for op->name:g.s0.v0.__block_id_x are [0..((0 + g.extent.0) - 1)]
Kernel bounds: (1, 1, 1, 1) threads, (g.extent.0, g.extent.1, 1, 1) blocks
Codegen: int32, 0
Adding g.extent.1 to closure
Adding g.extent.0 to closure
Not adding g.buffer to closure
Not adding g.s0.v0.__block_id_x to closure
Not adding g.s0.v1.__block_id_y to closure
Not adding f.buffer to closure
Not adding g.s0.v0.__block_id_x to closure
Adding g.extent.0 to closure
Not adding g.s0.v1.__block_id_y to closure
Adding g.extent.1 to closure
var: g.extent.0
var: g.extent.1
buffer: f 0 (read)
buffer: g 0 (write)
In CodeGen_Renderscript_Dev::add_kernel name=kernel_g_s0_v1___block_id_y
CodeGen_Renderscript_Dev arg[0].name=g.extent.0
CodeGen_Renderscript_Dev arg[1].name=g.extent.1
CodeGen_Renderscript_Dev arg[2].name=f
CodeGen_Renderscript_Dev arg[3].name=g
  this is our output buffer type
args[3] = {name=g is_buffer=1 dimensions=0 type=uint32}
  adding argument type at 0: g.s0.v0.__block_id_x
  adding argument type at 1: g.s0.v1.__block_id_y
  adding argument type at 2: 
  adding argument type at 3: 
  adding kernel function parameter g.s0.v0.__block_id_x with type i32
  adding kernel function parameter g.s0.v1.__block_id_y with type i32
Pushing global symbol g.extent.0 into sym table
Pushing global symbol g.extent.1 into sym table
Pushing global symbol f into sym table
Pushing global symbol g into sym table
Generating llvm bitcode for kernel...
RS: Visiting for loop, loop->name is g.s0.v1.__block_id_y is_gpu_var? 1
RS: Visiting for loop, loop->name is g.s0.v0.__block_id_x is_gpu_var? 1
RS: Allocate __shared on device
Codegen: parallel<Renderscript> (.__thread_id_x, 0, 1) {
  image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
}
free __shared

Codegen: parallel<Renderscript> (.__thread_id_x, 0, 1) {
  image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
}

RS: Visiting for loop, loop->name is .__thread_id_x is_gpu_var? 1
Codegen: uint32, image_store("g", g.buffer, g.s0.v0.__block_id_x, g.s0.v1.__block_id_y, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
Codegen: int32, g.s0.v0.__block_id_x
Codegen: int32, g.s0.v1.__block_id_y
Codegen: uint32, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1)
Codegen: int32, g.s0.v0.__block_id_x
Codegen: int32, g.s0.v1.__block_id_y
Generating 1byte-wide has_c=0 call with 3 args:
 #1:[1 x i32]
  %f = load [1 x i32], [1 x i32]* bitcast (%struct.rs_allocation* @f to [1 x i32]*), align 4
 #2:i32
i32 %g.s0.v0.__block_id_x
 #3:i32
i32 %g.s0.v1.__block_id_y
fetch_GetElement_func type.code=1 type.width=1
Generating 1byte-wide has_c=0 call with 4 args:
 #1:[1 x i32]
  %g = load [1 x i32], [1 x i32]* bitcast (%struct.rs_allocation* @g to [1 x i32]*), align 4
 #2:i32
  %0 = call i32 @_Z18rsGetElementAt_int13rs_allocationjj([1 x i32] %f, i32 %g.s0.v0.__block_id_x, i32 %g.s0.v1.__block_id_y)
 #3:i32
i32 %g.s0.v0.__block_id_x
 #4:i32
i32 %g.s0.v1.__block_id_y
Codegen: float32, float32(image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1))
Codegen: uint32, image_load("f", f.buffer, g.s0.v0.__block_id_x, g.extent.0, g.s0.v1.__block_id_y, g.extent.1)
Codegen: int32, g.s0.v0.__block_id_x
Codegen: int32, g.s0.v1.__block_id_y
Generating 1byte-wide has_c=0 call with 3 args:
 #1:[1 x i32]
  %f = load [1 x i32], [1 x i32]* bitcast (%struct.rs_allocation* @f to [1 x i32]*), align 4
 #2:i32
i32 %g.s0.v0.__block_id_x
 #3:i32
i32 %g.s0.v1.__block_id_y
fetch_GetElement_func type.code=1 type.width=1
Codegen: float32, float32(g.s0.v0.__block_id_x)
Codegen: int32, g.s0.v0.__block_id_x
Codegen: float32, float32(g.s0.v1.__block_id_y)
Codegen: int32, g.s0.v1.__block_id_y
fetch_SetElement_func type.code=1 type.width=1 type.bytes=4 func_name:_Z18rsSetElementAt_int13rs_allocationijj func:0x7f895ae4ffc8
Codegen: free __shared

RS: Free on device
Done generating llvm bitcode for RS
Compiled launch to kernel "2" with 4 args 
CodeGen_GPU_Host get_user_context returned 0x7f895ad26920
Codegen: int32, g.extent.0
Codegen: int32, g.extent.1
Codegen: int32, 1
Codegen: int32, 1
Codegen: int32, 1
Codegen: int32, 1
Codegen: int32, 0
Codegen: free f

Codegen: set_dev_dirty(g.buffer, uint8(1))

Codegen: int32, set_dev_dirty(g.buffer, uint8(1))
Codegen: handle64, g.buffer
Codegen: uint8, uint8(1)
Codegen: int32, 1
Codegen: 0

Codegen: int32, 0
0x7f895ad172f0
Generating init_kernels for renderscript
Optimizing module
; ModuleID = 'renderscript_dev_ll'
target datalayout = "e-m:e-p:32:32-i64:64-v128:64:128-n32-S64"
target triple = "armv7-none-linux-gnueabi"

%struct.rs_allocation = type { i32* }

@g.extent.0 = common global i32 0, align 4
@g.extent.1 = common global i32 0, align 4
@g.min.0 = common global i32 0, align 4
@g.min.1 = common global i32 0, align 4
@input.extent.0 = common global i32 0, align 4
@input.extent.1 = common global i32 0, align 4
@input.min.0 = common global i32 0, align 4
@input.min.1 = common global i32 0, align 4
@input = common global %struct.rs_allocation zeroinitializer, align 4
@f = common global %struct.rs_allocation zeroinitializer, align 4
@str = private constant [2 x i8] c"f\00", align 32
@g = common global %struct.rs_allocation zeroinitializer, align 4
@str.1 = private constant [2 x i8] c"g\00", align 32

declare i32 @_Z18rsGetElementAt_int13rs_allocationjj([1 x i32], i32, i32)

declare void @_Z18rsSetElementAt_int13rs_allocationijj([1 x i32], i32, i32, i32)

declare void @_Z7rsDebugPKcfff(i8*, float, float, float)

define void @kernel_f_s0_v1___block_id_y(i32 %in, i32 %f.s0.v0.__block_id_x, i32 %f.s0.v1.__block_id_y) {
entry:
  %g.min.03 = load i32, i32* @g.min.0, align 4
  %g.min.14 = load i32, i32* @g.min.1, align 4
  %input.extent.05 = load i32, i32* @input.extent.0, align 4
  %input.extent.16 = load i32, i32* @input.extent.1, align 4
  %input.min.07 = load i32, i32* @input.min.0, align 4
  %input.min.18 = load i32, i32* @input.min.1, align 4
  %input.unpack = load i32, i32* bitcast (%struct.rs_allocation* @input to i32*), align 4
  %input9 = insertvalue [1 x i32] undef, i32 %input.unpack, 0
  %f.unpack = load i32, i32* bitcast (%struct.rs_allocation* @f to i32*), align 4
  %0 = add nsw i32 %g.min.03, %f.s0.v0.__block_id_x
  %1 = add nsw i32 %input.extent.05, -1
  %2 = icmp slt i32 %0, %1
  %3 = select i1 %2, i32 %0, i32 %1
  %4 = icmp slt i32 %3, 0
  %5 = select i1 %4, i32 0, i32 %3
  %6 = sub nsw i32 %5, %input.min.07
  %7 = add nsw i32 %g.min.14, %f.s0.v1.__block_id_y
  %8 = add nsw i32 %input.extent.16, -1
  %9 = icmp slt i32 %7, %8
  %10 = select i1 %9, i32 %7, i32 %8
  %11 = icmp slt i32 %10, 0
  %12 = select i1 %11, i32 0, i32 %10
  %13 = sub nsw i32 %12, %input.min.18
  %14 = tail call i32 @_Z18rsGetElementAt_int13rs_allocationjj([1 x i32] %input9, i32 %6, i32 %13)
  %f10 = insertvalue [1 x i32] undef, i32 %f.unpack, 0
  %15 = tail call i32 @_Z18rsGetElementAt_int13rs_allocationjj([1 x i32] %input9, i32 %6, i32 %13)
  %16 = uitofp i32 %15 to float
  %17 = sitofp i32 %f.s0.v0.__block_id_x to float
  %18 = sitofp i32 %f.s0.v1.__block_id_y to float
  tail call void @_Z7rsDebugPKcfff(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str, i32 0, i32 0), float %16, float %17, float %18)
  tail call void @_Z18rsSetElementAt_int13rs_allocationijj([1 x i32] %f10, i32 %14, i32 0, i32 0)
  ret void
}

define void @kernel_g_s0_v1___block_id_y(i32 %in, i32 %g.s0.v0.__block_id_x, i32 %g.s0.v1.__block_id_y) {
entry:
  %f.unpack = load i32, i32* bitcast (%struct.rs_allocation* @f to i32*), align 4
  %f1 = insertvalue [1 x i32] undef, i32 %f.unpack, 0
  %g.unpack = load i32, i32* bitcast (%struct.rs_allocation* @g to i32*), align 4
  %0 = tail call i32 @_Z18rsGetElementAt_int13rs_allocationjj([1 x i32] %f1, i32 %g.s0.v0.__block_id_x, i32 %g.s0.v1.__block_id_y)
  %g2 = insertvalue [1 x i32] undef, i32 %g.unpack, 0
  %1 = tail call i32 @_Z18rsGetElementAt_int13rs_allocationjj([1 x i32] %f1, i32 %g.s0.v0.__block_id_x, i32 %g.s0.v1.__block_id_y)
  %2 = uitofp i32 %1 to float
  %3 = sitofp i32 %g.s0.v0.__block_id_x to float
  %4 = sitofp i32 %g.s0.v1.__block_id_y to float
  tail call void @_Z7rsDebugPKcfff(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.1, i32 0, i32 0), float %2, float %3, float %4)
  tail call void @_Z18rsSetElementAt_int13rs_allocationijj([1 x i32] %g2, i32 %0, i32 0, i32 0)
  ret void
}

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}
!\23pragma = !{!3, !4}
!\23rs_export_foreach_name = !{!5, !6, !7}
!\23rs_export_foreach = !{!8, !9, !9}
!\23rs_export_var = !{!10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20}
!\23rs_object_slots = !{!21, !22, !23}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 1, !"min_enum_size", i32 4}
!2 = !{!"clang version 3.6 "}
!3 = !{!"version", !"1"}
!4 = !{!"rs_fp_relaxed", !""}
!5 = !{!"root"}
!6 = !{!"kernel_f_s0_v1___block_id_y"}
!7 = !{!"kernel_g_s0_v1___block_id_y"}
!8 = !{!"0"}
!9 = !{!"57"}
!10 = !{!"g.extent.0", !"6"}
!11 = !{!"g.extent.1", !"6"}
!12 = !{!"g.min.0", !"6"}
!13 = !{!"g.min.1", !"6"}
!14 = !{!"input.extent.0", !"6"}
!15 = !{!"input.extent.1", !"6"}
!16 = !{!"input.min.0", !"6"}
!17 = !{!"input.min.1", !"6"}
!18 = !{!"input", !"20"}
!19 = !{!"f", !"20"}
!20 = !{!"g", !"20"}
!21 = !{!"8"}
!22 = !{!"9"}
!23 = !{!"10"}
CodeGen_Renderscript_Dev::compile_to_src resultant module:
; ModuleID = 'renderscript_dev_ll'
target datalayout = "e-m:e-p:32:32-i64:64-v128:64:128-n32-S64"
target triple = "armv7-none-linux-gnueabi"

%struct.rs_allocation = type { i32* }

@g.extent.0 = common global i32 0, align 4
@g.extent.1 = common global i32 0, align 4
@g.min.0 = common global i32 0, align 4
@g.min.1 = common global i32 0, align 4
@input.extent.0 = common global i32 0, align 4
@input.extent.1 = common global i32 0, align 4
@input.min.0 = common global i32 0, align 4
@input.min.1 = common global i32 0, align 4
@input = common global %struct.rs_allocation zeroinitializer, align 4
@f = common global %struct.rs_allocation zeroinitializer, align 4
@str = private constant [2 x i8] c"f\00", align 32
@g = common global %struct.rs_allocation zeroinitializer, align 4
@str.1 = private constant [2 x i8] c"g\00", align 32

declare i32 @_Z18rsGetElementAt_int13rs_allocationjj([1 x i32], i32, i32)

declare void @_Z18rsSetElementAt_int13rs_allocationijj([1 x i32], i32, i32, i32)

declare void @_Z7rsDebugPKcfff(i8*, float, float, float)

define void @kernel_f_s0_v1___block_id_y(i32 %in, i32 %f.s0.v0.__block_id_x, i32 %f.s0.v1.__block_id_y) {
entry:
  %g.min.03 = load i32, i32* @g.min.0, align 4
  %g.min.14 = load i32, i32* @g.min.1, align 4
  %input.extent.05 = load i32, i32* @input.extent.0, align 4
  %input.extent.16 = load i32, i32* @input.extent.1, align 4
  %input.min.07 = load i32, i32* @input.min.0, align 4
  %input.min.18 = load i32, i32* @input.min.1, align 4
  %input.unpack = load i32, i32* bitcast (%struct.rs_allocation* @input to i32*), align 4
  %input9 = insertvalue [1 x i32] undef, i32 %input.unpack, 0
  %f.unpack = load i32, i32* bitcast (%struct.rs_allocation* @f to i32*), align 4
  %0 = add nsw i32 %g.min.03, %f.s0.v0.__block_id_x
  %1 = add nsw i32 %input.extent.05, -1
  %2 = icmp slt i32 %0, %1
  %3 = select i1 %2, i32 %0, i32 %1
  %4 = icmp slt i32 %3, 0
  %5 = select i1 %4, i32 0, i32 %3
  %6 = sub nsw i32 %5, %input.min.07
  %7 = add nsw i32 %g.min.14, %f.s0.v1.__block_id_y
  %8 = add nsw i32 %input.extent.16, -1
  %9 = icmp slt i32 %7, %8
  %10 = select i1 %9, i32 %7, i32 %8
  %11 = icmp slt i32 %10, 0
  %12 = select i1 %11, i32 0, i32 %10
  %13 = sub nsw i32 %12, %input.min.18
  %14 = tail call i32 @_Z18rsGetElementAt_int13rs_allocationjj([1 x i32] %input9, i32 %6, i32 %13)
  %f10 = insertvalue [1 x i32] undef, i32 %f.unpack, 0
  %15 = tail call i32 @_Z18rsGetElementAt_int13rs_allocationjj([1 x i32] %input9, i32 %6, i32 %13)
  %16 = uitofp i32 %15 to float
  %17 = sitofp i32 %f.s0.v0.__block_id_x to float
  %18 = sitofp i32 %f.s0.v1.__block_id_y to float
  tail call void @_Z7rsDebugPKcfff(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str, i32 0, i32 0), float %16, float %17, float %18)
  tail call void @_Z18rsSetElementAt_int13rs_allocationijj([1 x i32] %f10, i32 %14, i32 0, i32 0)
  ret void
}

define void @kernel_g_s0_v1___block_id_y(i32 %in, i32 %g.s0.v0.__block_id_x, i32 %g.s0.v1.__block_id_y) {
entry:
  %f.unpack = load i32, i32* bitcast (%struct.rs_allocation* @f to i32*), align 4
  %f1 = insertvalue [1 x i32] undef, i32 %f.unpack, 0
  %g.unpack = load i32, i32* bitcast (%struct.rs_allocation* @g to i32*), align 4
  %0 = tail call i32 @_Z18rsGetElementAt_int13rs_allocationjj([1 x i32] %f1, i32 %g.s0.v0.__block_id_x, i32 %g.s0.v1.__block_id_y)
  %g2 = insertvalue [1 x i32] undef, i32 %g.unpack, 0
  %1 = tail call i32 @_Z18rsGetElementAt_int13rs_allocationjj([1 x i32] %f1, i32 %g.s0.v0.__block_id_x, i32 %g.s0.v1.__block_id_y)
  %2 = uitofp i32 %1 to float
  %3 = sitofp i32 %g.s0.v0.__block_id_x to float
  %4 = sitofp i32 %g.s0.v1.__block_id_y to float
  tail call void @_Z7rsDebugPKcfff(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.1, i32 0, i32 0), float %2, float %3, float %4)
  tail call void @_Z18rsSetElementAt_int13rs_allocationijj([1 x i32] %g2, i32 %0, i32 0, i32 0)
  ret void
}

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}
!\23pragma = !{!3, !4}
!\23rs_export_foreach_name = !{!5, !6, !7}
!\23rs_export_foreach = !{!8, !9, !9}
!\23rs_export_var = !{!10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20}
!\23rs_object_slots = !{!21, !22, !23}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 1, !"min_enum_size", i32 4}
!2 = !{!"clang version 3.6 "}
!3 = !{!"version", !"1"}
!4 = !{!"rs_fp_relaxed", !""}
!5 = !{!"root"}
!6 = !{!"kernel_f_s0_v1___block_id_y"}
!7 = !{!"kernel_g_s0_v1___block_id_y"}
!8 = !{!"0"}
!9 = !{!"57"}
!10 = !{!"g.extent.0", !"6"}
!11 = !{!"g.extent.1", !"6"}
!12 = !{!"g.min.0", !"6"}
!13 = !{!"g.min.1", !"6"}
!14 = !{!"input.extent.0", !"6"}
!15 = !{!"input.extent.1", !"6"}
!16 = !{!"input.min.0", !"6"}
!17 = !{!"input.min.1", !"6"}
!18 = !{!"input", !"20"}
!19 = !{!"f", !"20"}
!20 = !{!"g", !"20"}
!21 = !{!"8"}
!22 = !{!"9"}
!23 = !{!"10"}
RS kernel:
2032 bytes
CodeGen_CPU_Host compile_func user_context:i8* null
CodeGen_Renderscript_Dev::init_module
CodeGen_Renderscript_Dev::init_module
Generating llvm bitcode for function test_arm...
Codegen: int32, halide_error_buffer_argument_is_null("input")
Codegen: handle64, "input"
Found halide_error_buffer_argument_is_null
Adding user_context to halide_error_buffer_argument_is_null args
Codegen: int32, halide_error_buffer_argument_is_null("g")
Codegen: handle64, "g"
Found halide_error_buffer_argument_is_null
Adding user_context to halide_error_buffer_argument_is_null args
Codegen: int32, __test_arm(input.buffer, g.buffer)
Codegen: handle64, input.buffer
Codegen: handle64, g.buffer
Found __test_arm
Codegen: assert((__test_arm_result == 0), __test_arm_result)

Codegen: uint1, (__test_arm_result == 0)
Codegen: int32, __test_arm_result
Codegen: int32, 0
Codegen: int32, __test_arm_result
0x7f895ad172f0
Creating call from wrapper to actual function
0x7f895ad172f0
Done generating llvm bitcode
Optimizing module
; ModuleID = 'halide_module_test_arm'
target datalayout = "e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armv7s--linux-eabi"

%struct.timespec = type { i32, i32 }
%"struct.Halide::Runtime::Internal::halide_work_queue_t" = type { %struct.pthread_mutex_t, %"struct.Halide::Runtime::Internal::work"*, i32, i32, %struct.pthread_cond_t, %struct.pthread_cond_t, %struct.pthread_cond_t, [64 x i32], i8 }
%struct.pthread_mutex_t = type { [8 x i64] }
%"struct.Halide::Runtime::Internal::work" = type { %"struct.Halide::Runtime::Internal::work"*, i32 (i8*, i32, i8*)*, i8*, i32, i32, i8*, i32, i32 }
%struct.pthread_cond_t = type { [6 x i64] }
%struct.halide_trace_event = type { i8*, i32, i32, i32, i32, i32, i32, i8*, i32, i32* }
%"struct.Halide::Runtime::Internal::CacheEntry" = type { %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"*, i32, i8*, i32, i32, %struct.buffer_t, [1 x %struct.buffer_t] }
%struct.buffer_t = type { i64, i8*, [4 x i32], [4 x i32], [4 x i32], i32, i8, i8, [6 x i8] }
%"struct.Halide::Runtime::Internal::list_head_t" = type { %struct.pthread_mutex_t, %struct._halide_runtime_internal_registered_filter_t* }
%struct._halide_runtime_internal_registered_filter_t = type { i8*, %struct.halide_filter_metadata_t*, i32 (i8**)* }
%struct.halide_filter_metadata_t = type { i32, i32, %struct.halide_filter_argument_t*, i8*, i8* }
%struct.halide_filter_argument_t = type { i8*, i32, i32, i32, i32, %struct.halide_scalar_value_t*, %struct.halide_scalar_value_t*, %struct.halide_scalar_value_t* }
%struct.halide_scalar_value_t = type { %union.anon.0 }
%union.anon.0 = type { i64 }
%struct.dispatchTable = type { void (i8*, i8*, i32)*, i8* (i8*, i8*)*, void (i8*, i8*, i32*, i32)*, void (i8*, i8*, i32*, i32)*, void (i8*, i8*, i32*, i8**, i32*, i32)*, i8* ()*, void (i8*)*, void (i8*, i32, i32)*, i8* (i8*, i32, i32, i32, i32)*, void (i8*, i8*, i8**)*, void (i8*)*, i32 (i8*, i8*, i32, i32*, i32, i32*, i32)*, i32 (i8*, i32*, i32, i32*, i32)*, void (i8*, i32, i8*, i32)*, void (i8*)*, void (i8*)*, i8* (i8*, i8*, i32, i32, i32, i1, i1, i32)*, i8* (i8*, i8*, i32, i32, i32)*, i8* (i8*, i8*, i32, i8*, i32, i32)*, i8* (i8*, i8*, i32, i8*, i32, i32)*, i8* (i8*, i8*)*, void (i8*, i8*, i8*)*, i8* (i8*, i8*, i8*, i8**, i32, i32*, i32, i32*, i32, i8**, i32, i8**, i32)*, i8* (i8*, i8*, i8*, i32, i8**, i32, i32*, i32, i32*, i32)*, void (i8*, i8*, i32, i32, i32)*, void (i8*, i8*, i8*, i32, i32)*, void (i8*)*, void (i8*, i32)*, void (i8*, i32)*, void (i8*, i8*, i8*, i32)*, void (i8*, i8*)*, i8* (i8*, i32, i32, i1, i32)*, i8* (i8*, i8**, i32, i8**, i32, i32*, i32*, i32)*, void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i32, i32, i32, i8*, i32)*, void (i8*, i8*, i32, i32, i8*, i32, i32)*, void (i8*, i8*, i32, i32, i32, i32, i8*, i32, i32)*, void (i8*, i8*, i32, i32, i32, i32, i32, i32, i8*, i32, i32)*, void (i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32)*, void (i8*, i8*)*, void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i32, i32, i32, i8*, i32)*, void (i8*, i8*, i32, i32, i32, i32, i8*, i32, i32)*, void (i8*, i8*, i32, i32, i32, i32, i32, i32, i8*, i32, i32)*, void (i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32)*, void (i8*, i8*, i32)*, void (i8*, i8*, i32)*, void (i8*, i8*, i32, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32)*, void (i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32)*, i8* (i8*, i32, i32, i32, i32, i32, float)*, void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i32)*, void (i8*, i8*, i32, i8*, i32)*, void (i8*, i8*, i32, i8*, i8*, i8*, i32, %struct.RsScriptCall*, i32)*, void (i8*, i8*, i32, i32)*, void (i8*, i8*, i32, i8*)*, void (i8*, i8*, i32, i64)*, void (i8*, i8*, i32, float)*, void (i8*, i8*, i32, double)*, void (i8*, i8*, i32, i8*, i32)*, void (i8*, i8*, i32, i8*, i32)*, void (i8*, i8*, i32, i8*, i32, i8*, i32*, i32)*, i8* (i8*, i8*, i32, i8*, i32, i8*, i32)*, i8* (i8*, i32, i8*)*, i8* (i8*, i8*, i32, i32)*, i8* (i8*, i8*, i32)*, i8* (i8*, i8*, i32)*, i8* (i8*, i8**, i32, i8**, i32, i8**, i32, i8**, i32, i8**, i32)*, i8* (i8*, i8*, i32, i8*, i32, i8**, i32)*, void (i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*)*, i8* (i8*, i8*, i32, i32, i32, i32, i32*, i32)* }
%struct.RsScriptCall = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.Halide::Runtime::Internal::Renderscript::module_state" = type { i8*, %"struct.Halide::Runtime::Internal::Renderscript::module_state"* }
%struct.halide_device_interface = type { void ()*, void ()*, i32 (i8*, %struct.buffer_t*)*, i32 (i8*, %struct.buffer_t*)*, i32 (i8*, %struct.buffer_t*)*, i32 (i8*)*, i32 (i8*, %struct.buffer_t*)*, i32 (i8*, %struct.buffer_t*)* }
%struct.pthread_attr_t = type { i32, i8*, i32, i32, i32, i32 }
%"struct.Halide::Runtime::Internal::ScopedSpinLock" = type { i32* }
%"class.Halide::Runtime::Internal::(anonymous namespace)::Printer" = type { i8*, i8*, i8*, i8* }
%"struct.Halide::Runtime::Internal::halide_tiff_header" = type <{ i16, i16, i32, i16, [15 x %"struct.Halide::Runtime::Internal::tiff_tag"], i32, [2 x i32], [2 x i32] }>
%"struct.Halide::Runtime::Internal::tiff_tag" = type { i16, i16, i32, %union.anon }
%union.anon = type { i32 }
%"struct.Halide::Runtime::Internal::ScopedMutexLock" = type { %struct.pthread_mutex_t* }
%"struct.Halide::Runtime::Internal::device_handle_wrapper" = type { i64, %struct.halide_device_interface* }
%"class.Halide::Runtime::Internal::Renderscript::Context" = type { i8*, i8*, i8*, i32 }

$_ZN6Halide7Runtime8Internal12Renderscript7Context6loadSOEPKc = comdat any

@halide_reference_clock_inited = linkonce global i8 0, align 1
@halide_reference_clock = linkonce global %struct.timespec zeroinitializer, align 4
@.str = private unnamed_addr constant [7 x i8] c"halide\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@_ZN6Halide7Runtime8Internal18halide_num_threadsE = linkonce global i32 0, align 4
@_ZN6Halide7Runtime8Internal30halide_thread_pool_initializedE = linkonce global i8 0, align 1
@_ZN6Halide7Runtime8Internal17halide_work_queueE = linkonce global %"struct.Halide::Runtime::Internal::halide_work_queue_t" zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal21halide_custom_do_taskE = linkonce global i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* @_ZN6Halide7Runtime8Internal15default_do_taskEPvPFiS2_iPhEiS3_, align 4
@_ZN6Halide7Runtime8Internal24halide_custom_do_par_forE = linkonce global i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* @_ZN6Halide7Runtime8Internal18default_do_par_forEPvPFiS2_iPhEiiS3_, align 4
@llvm.global_dtors = appending global [4 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @halide_posix_thread_pool_cleanup, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* @halide_trace_cleanup, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* @halide_cache_cleanup, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* @halide_renderscript_cleanup, i8* null }]
@.str.2 = private unnamed_addr constant [15 x i8] c"HL_NUM_THREADS\00", align 1
@.str.1.3 = private unnamed_addr constant [14 x i8] c"HL_NUMTHREADS\00", align 1
@_ZN6Halide7Runtime8Internal17halide_gpu_deviceE = linkonce global i32 0, align 4
@_ZN6Halide7Runtime8Internal22halide_gpu_device_lockE = linkonce global i32 0, align 4
@_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE = linkonce global i8 0, align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"HL_GPU_DEVICE\00", align 1
@_ZN6Halide7Runtime8Internal17halide_trace_fileE = linkonce global i32 0, align 4
@_ZN6Halide7Runtime8Internal22halide_trace_file_lockE = linkonce global i32 0, align 4
@_ZN6Halide7Runtime8Internal29halide_trace_file_initializedE = linkonce global i8 0, align 1
@_ZN6Halide7Runtime8Internal35halide_trace_file_internally_openedE = linkonce global i8 0, align 1
@_ZN6Halide7Runtime8Internal19halide_custom_traceE = linkonce global i32 (i8*, %struct.halide_trace_event*)* @_ZN6Halide7Runtime8Internal13default_traceEPvPK18halide_trace_event, align 4
@_ZZN6Halide7Runtime8Internal13default_traceEPvPK18halide_trace_eventE3ids = internal global i32 1, align 4
@.str.7 = private unnamed_addr constant [50 x i8] c"total_bytes <= 4096 && \22Tracing packet too large\22\00", align 1
@.str.1.8 = private unnamed_addr constant [54 x i8] c"written == total_bytes && \22Can't write to trace file\22\00", align 1
@.str.2.9 = private unnamed_addr constant [39 x i8] c"print_bits <= 64 && \22Tracing bad type\22\00", align 1
@_ZZN6Halide7Runtime8Internal13default_traceEPvPK18halide_trace_eventE11event_types = private unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5.10, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7.11, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i32 0, i32 0)], align 4
@.str.14 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c">, <\00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c">)\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c" = <\00", align 1
@.str.21 = private unnamed_addr constant [41 x i8] c"print_bits >= 32 && \22Tracing a bad type\22\00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"HL_TRACE_FILE\00", align 1
@.str.25 = private unnamed_addr constant [42 x i8] c"(fd > 0) && \22Failed to open trace file\5Cn\22\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"Load\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"Store\00", align 1
@.str.5.10 = private unnamed_addr constant [18 x i8] c"Begin realization\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"End realization\00", align 1
@.str.7.11 = private unnamed_addr constant [8 x i8] c"Produce\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"Update\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"Consume\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"End consume\00", align 1
@_ZN6Halide7Runtime8Internal30pixel_type_to_tiff_sample_typeE = linkonce global [10 x i16] [i16 3, i16 3, i16 1, i16 2, i16 1, i16 2, i16 1, i16 2, i16 1, i16 2], align 2
@.str.26 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@_ZN6Halide7Runtime8Internal13custom_mallocE = linkonce global i8* (i8*, i32)* @_ZN6Halide7Runtime8Internal14default_mallocEPvj, align 4
@_ZN6Halide7Runtime8Internal11custom_freeE = linkonce global void (i8*, i8*)* @_ZN6Halide7Runtime8Internal12default_freeEPvS2_, align 4
@_ZN6Halide7Runtime8Internal20halide_error_handlerE = linkonce global void (i8*, i8*)* @_ZN6Halide7Runtime8Internal21default_error_handlerEPvPKc, align 4
@.str.43 = private unnamed_addr constant [8 x i8] c"Error: \00", align 1
@.str.1.44 = private unnamed_addr constant [41 x i8] c"Bounds inference call to external stage \00", align 1
@.str.2.45 = private unnamed_addr constant [27 x i8] c" returned non-zero value: \00", align 1
@.str.3.46 = private unnamed_addr constant [24 x i8] c"Call to external stage \00", align 1
@.str.4.47 = private unnamed_addr constant [18 x i8] c"Bounds given for \00", align 1
@.str.5.48 = private unnamed_addr constant [5 x i8] c" in \00", align 1
@.str.6.49 = private unnamed_addr constant [8 x i8] c" (from \00", align 1
@.str.7.50 = private unnamed_addr constant [5 x i8] c" to \00", align 1
@.str.8.51 = private unnamed_addr constant [38 x i8] c") do not cover required region (from \00", align 1
@.str.9.52 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.10.53 = private unnamed_addr constant [11 x i8] c" has type \00", align 1
@.str.11.54 = private unnamed_addr constant [43 x i8] c" but elem_size of the buffer passed in is \00", align 1
@.str.12.55 = private unnamed_addr constant [13 x i8] c" instead of \00", align 1
@.str.13.56 = private unnamed_addr constant [17 x i8] c" is accessed at \00", align 1
@.str.14.57 = private unnamed_addr constant [28 x i8] c", which is before the min (\00", align 1
@.str.15.58 = private unnamed_addr constant [16 x i8] c") in dimension \00", align 1
@.str.16.59 = private unnamed_addr constant [28 x i8] c", which is beyond the max (\00", align 1
@.str.17.60 = private unnamed_addr constant [29 x i8] c"Total allocation for buffer \00", align 1
@.str.18.61 = private unnamed_addr constant [5 x i8] c" is \00", align 1
@.str.19.62 = private unnamed_addr constant [37 x i8] c", which exceeds the maximum size of \00", align 1
@.str.20.63 = private unnamed_addr constant [31 x i8] c"Product of extents for buffer \00", align 1
@.str.21.64 = private unnamed_addr constant [29 x i8] c"Applying the constraints on \00", align 1
@.str.22.65 = private unnamed_addr constant [42 x i8] c" to the required region made it smaller. \00", align 1
@.str.23.66 = private unnamed_addr constant [16 x i8] c"Required size: \00", align 1
@.str.24.67 = private unnamed_addr constant [3 x i8] c". \00", align 1
@.str.25.68 = private unnamed_addr constant [19 x i8] c"Constrained size: \00", align 1
@.str.27 = private unnamed_addr constant [22 x i8] c"Constraint violated: \00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c") == \00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"Parameter \00", align 1
@.str.31 = private unnamed_addr constant [23 x i8] c" but must be at least \00", align 1
@.str.32 = private unnamed_addr constant [22 x i8] c" but must be at most \00", align 1
@.str.33 = private unnamed_addr constant [44 x i8] c"Out of memory (halide_malloc returned NULL)\00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"Buffer argument \00", align 1
@.str.35 = private unnamed_addr constant [9 x i8] c" is NULL\00", align 1
@.str.36 = private unnamed_addr constant [25 x i8] c"Failed to dump function \00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c" to file \00", align 1
@.str.38 = private unnamed_addr constant [13 x i8] c" with error \00", align 1
@_ZN6Halide7Runtime8Internal19halide_custom_printE = linkonce global void (i8*, i8*)* @_ZN6Halide7Runtime8Internal17halide_print_implEPvPKc, align 4
@_ZN6Halide7Runtime8Internal16memoization_lockE = linkonce global %struct.pthread_mutex_t zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal13cache_entriesE = linkonce global [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*] zeroinitializer, align 4
@_ZN6Halide7Runtime8Internal18most_recently_usedE = linkonce global %"struct.Halide::Runtime::Internal::CacheEntry"* null, align 4
@_ZN6Halide7Runtime8Internal19least_recently_usedE = linkonce global %"struct.Halide::Runtime::Internal::CacheEntry"* null, align 4
@_ZN6Halide7Runtime8Internal14max_cache_sizeE = linkonce global i64 1048576, align 8
@_ZN6Halide7Runtime8Internal18current_cache_sizeE = linkonce global i64 0, align 8
@.str.73 = private unnamed_addr constant [31 x i8] c"from.elem_size == to.elem_size\00", align 1
@.str.1.74 = private unnamed_addr constant [31 x i8] c"from.extent[i] == to.extent[i]\00", align 1
@.str.2.75 = private unnamed_addr constant [31 x i8] c"from.stride[i] == to.stride[i]\00", align 1
@.str.3.76 = private unnamed_addr constant [14 x i8] c"entry != NULL\00", align 1
@.str.4.77 = private unnamed_addr constant [27 x i8] c"entry->more_recent != NULL\00", align 1
@.str.5.78 = private unnamed_addr constant [29 x i8] c"least_recently_used == entry\00", align 1
@.str.89 = private unnamed_addr constant [5 x i8] c"-nan\00", align 1
@.str.1.90 = private unnamed_addr constant [4 x i8] c"nan\00", align 1
@.str.2.91 = private unnamed_addr constant [5 x i8] c"-inf\00", align 1
@.str.3.92 = private unnamed_addr constant [4 x i8] c"inf\00", align 1
@.str.4.93 = private unnamed_addr constant [14 x i8] c"-0.000000e+00\00", align 1
@.str.5.94 = private unnamed_addr constant [13 x i8] c"0.000000e+00\00", align 1
@.str.6.95 = private unnamed_addr constant [10 x i8] c"-0.000000\00", align 1
@.str.7.96 = private unnamed_addr constant [9 x i8] c"0.000000\00", align 1
@.str.8.97 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.9.98 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.10.99 = private unnamed_addr constant [3 x i8] c"e+\00", align 1
@.str.11.100 = private unnamed_addr constant [3 x i8] c"e-\00", align 1
@.str.12.101 = private unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 1
@_ZN6Halide7Runtime8Internal17device_copy_mutexE = linkonce global %struct.pthread_mutex_t zeroinitializer, align 8
@.str.104 = private unnamed_addr constant [29 x i8] c"copy_to_host_already_locked \00", align 1
@.str.1.105 = private unnamed_addr constant [20 x i8] c" dev_dirty is true\0A\00", align 1
@.str.2.106 = private unnamed_addr constant [36 x i8] c" dev_dirty and host_dirty are true\0A\00", align 1
@.str.3.107 = private unnamed_addr constant [20 x i8] c" interface is NULL\0A\00", align 1
@.str.4.108 = private unnamed_addr constant [60 x i8] c"copy_to_host_already_locked copy_to_host completed for buf \00", align 1
@.str.5.109 = private unnamed_addr constant [14 x i8] c" with result \00", align 1
@.str.6.110 = private unnamed_addr constant [12 x i8] c". buf->dev=\00", align 1
@.str.8.112 = private unnamed_addr constant [40 x i8] c" device copy_to_host returned an error\0A\00", align 1
@.str.9.113 = private unnamed_addr constant [39 x i8] c"Creating device wrapper for interface \00", align 1
@.str.10.114 = private unnamed_addr constant [9 x i8] c" handle \00", align 1
@.str.11.115 = private unnamed_addr constant [10 x i8] c" wrapper \00", align 1
@.str.12.116 = private unnamed_addr constant [39 x i8] c"Deleting device wrapper for interface \00", align 1
@.str.13.117 = private unnamed_addr constant [16 x i8] c" device_handle \00", align 1
@.str.14.118 = private unnamed_addr constant [10 x i8] c" at addr \00", align 1
@.str.15.119 = private unnamed_addr constant [40 x i8] c"Getting device handle for NULL wrapper\0A\00", align 1
@.str.16.120 = private unnamed_addr constant [37 x i8] c"Getting device handle for interface \00", align 1
@.str.17.121 = private unnamed_addr constant [21 x i8] c"halide_copy_to_host \00", align 1
@.str.18.122 = private unnamed_addr constant [26 x i8] c"halide_copy_to_host done \00", align 1
@.str.19.123 = private unnamed_addr constant [3 x i8] c" \0A\00", align 1
@.str.20.124 = private unnamed_addr constant [23 x i8] c"halide_copy_to_device \00", align 1
@.str.21.125 = private unnamed_addr constant [9 x i8] c", host: \00", align 1
@.str.22.126 = private unnamed_addr constant [8 x i8] c", dev: \00", align 1
@.str.23.127 = private unnamed_addr constant [15 x i8] c", host_dirty: \00", align 1
@.str.24.128 = private unnamed_addr constant [13 x i8] c", dev_dirty:\00", align 1
@.str.25.129 = private unnamed_addr constant [21 x i8] c" no interface error\0A\00", align 1
@.str.26.130 = private unnamed_addr constant [32 x i8] c" flipping buffer to new device\0A\00", align 1
@.str.27.131 = private unnamed_addr constant [17 x i8] c"!buf->host_dirty\00", align 1
@.str.28.132 = private unnamed_addr constant [45 x i8] c" flipping buffer halide_copy_to_host failed\0A\00", align 1
@.str.29.133 = private unnamed_addr constant [44 x i8] c" flipping buffer halide_device_free failed\0A\00", align 1
@.str.30.134 = private unnamed_addr constant [60 x i8] c" halide_copy_to_device call to halide_device_malloc failed\0A\00", align 1
@.str.31.135 = private unnamed_addr constant [16 x i8] c" host is dirty\0A\00", align 1
@.str.32.136 = private unnamed_addr constant [26 x i8] c" dev_dirty is true error\0A\00", align 1
@.str.33.137 = private unnamed_addr constant [41 x i8] c"device copy_to_device returned an error\0A\00", align 1
@.str.41 = private unnamed_addr constant [21 x i8] c"halide_device_free: \00", align 1
@.str.42 = private unnamed_addr constant [10 x i8] c" buf dev \00", align 1
@.str.36.138 = private unnamed_addr constant [12 x i8] c" interface \00", align 1
@.str.43.139 = private unnamed_addr constant [41 x i8] c"halide_device_free: freed device result=\00", align 1
@.str.44 = private unnamed_addr constant [71 x i8] c"halide_device_free: released module. Now buf->dev should be 0. Is it? \00", align 1
@.str.45 = private unnamed_addr constant [14 x i8] c"buf->dev == 0\00", align 1
@.str.35.140 = private unnamed_addr constant [42 x i8] c"halide_device_malloc started>>> buffer_t=\00", align 1
@.str.37.141 = private unnamed_addr constant [8 x i8] c" host: \00", align 1
@.str.38.142 = private unnamed_addr constant [25 x i8] c" buf current interface: \00", align 1
@.str.39 = private unnamed_addr constant [52 x i8] c"halide_malloc doesn't support switching interfaces\0A\00", align 1
@.str.40 = private unnamed_addr constant [43 x i8] c"halide_device_malloc finished<<< buffer_t \00", align 1
@.str.34.143 = private unnamed_addr constant [48 x i8] c"halide_device_sync on buffer with no interface\0A\00", align 1
@_ZN6Halide7Runtime8Internal9list_headE = linkonce global %"struct.Halide::Runtime::Internal::list_head_t" zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal12Renderscript7contextE = linkonce global i8* null, align 4
@_ZN6Halide7Runtime8Internal12Renderscript6deviceE = linkonce global i8* null, align 4
@_ZN6Halide7Runtime8Internal12Renderscript11thread_lockE = linkonce global i32 0, align 4
@halide_renderscript_cache_dir = linkonce global i8* null, align 4
@_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE = linkonce global %struct.dispatchTable* null, align 4
@_ZN6Halide7Runtime8Internal12Renderscript10state_listE = linkonce global %"struct.Halide::Runtime::Internal::Renderscript::module_state"* null, align 4
@_ZN6Halide7Runtime8Internal12Renderscript29renderscript_device_interfaceE = linkonce global %struct.halide_device_interface { void ()* @_ZN6Halide7Runtime8Internal21halide_use_jit_moduleEv, void ()* @_ZN6Halide7Runtime8Internal25halide_release_jit_moduleEv, i32 (i8*, %struct.buffer_t*)* @halide_renderscript_device_malloc, i32 (i8*, %struct.buffer_t*)* @halide_renderscript_device_free, i32 (i8*, %struct.buffer_t*)* @halide_renderscript_device_sync, i32 (i8*)* @halide_renderscript_device_release, i32 (i8*, %struct.buffer_t*)* @halide_renderscript_copy_to_host, i32 (i8*, %struct.buffer_t*)* @halide_renderscript_copy_to_device }, align 4
@.str.145 = private unnamed_addr constant [12 x i8] c"dev != NULL\00", align 1
@.str.1.146 = private unnamed_addr constant [12 x i8] c"ctx != NULL\00", align 1
@.str.6.147 = private unnamed_addr constant [21 x i8] c"debug.rs.forcecompat\00", align 1
@.str.278 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.7.148 = private unnamed_addr constant [9 x i8] c"libRS.so\00", align 1
@.str.8.149 = private unnamed_addr constant [16 x i8] c"libRSSupport.so\00", align 1
@.str.9.150 = private unnamed_addr constant [10 x i8] c"halide_rs\00", align 1
@.str.10.151 = private unnamed_addr constant [44 x i8] c"Failed to load libRS.so and libRSSupport.so\00", align 1
@.str.11.152 = private unnamed_addr constant [23 x i8] c"Device creation failed\00", align 1
@.str.12.153 = private unnamed_addr constant [18 x i8] c"Created device %p\00", align 1
@.str.14.154 = private unnamed_addr constant [24 x i8] c"Context creation failed\00", align 1
@.str.15.155 = private unnamed_addr constant [19 x i8] c"Created context %p\00", align 1
@.str.4.156 = private unnamed_addr constant [26 x i8] c"HL_RENDERSCRIPT_CACHE_DIR\00", align 1
@.str.5.157 = private unnamed_addr constant [12 x i8] c"/mnt/sdcard\00", align 1
@.str.16.158 = private unnamed_addr constant [21 x i8] c"rsaAllocationGetType\00", align 1
@.str.17.159 = private unnamed_addr constant [50 x i8] c"Couldn't initialize dispatchTab.AllocationGetType\00", align 1
@.str.18.160 = private unnamed_addr constant [21 x i8] c"rsaTypeGetNativeData\00", align 1
@.str.19.161 = private unnamed_addr constant [50 x i8] c"Couldn't initialize dispatchTab.TypeGetNativeData\00", align 1
@.str.20.162 = private unnamed_addr constant [24 x i8] c"rsaElementGetNativeData\00", align 1
@.str.21.163 = private unnamed_addr constant [53 x i8] c"Couldn't initialize dispatchTab.ElementGetNativeData\00", align 1
@.str.22.164 = private unnamed_addr constant [25 x i8] c"rsaElementGetSubElements\00", align 1
@.str.23.165 = private unnamed_addr constant [54 x i8] c"Couldn't initialize dispatchTab.ElementGetSubElements\00", align 1
@.str.24.166 = private unnamed_addr constant [15 x i8] c"rsDeviceCreate\00", align 1
@.str.25.167 = private unnamed_addr constant [45 x i8] c"Couldn't initialize dispatchTab.DeviceCreate\00", align 1
@.str.26.168 = private unnamed_addr constant [16 x i8] c"rsDeviceDestroy\00", align 1
@.str.27.169 = private unnamed_addr constant [46 x i8] c"Couldn't initialize dispatchTab.DeviceDestroy\00", align 1
@.str.28.170 = private unnamed_addr constant [18 x i8] c"rsDeviceSetConfig\00", align 1
@.str.29.171 = private unnamed_addr constant [48 x i8] c"Couldn't initialize dispatchTab.DeviceSetConfig\00", align 1
@.str.30.172 = private unnamed_addr constant [16 x i8] c"rsContextCreate\00", align 1
@.str.31.173 = private unnamed_addr constant [46 x i8] c"Couldn't initialize dispatchTab.ContextCreate\00", align 1
@.str.32.174 = private unnamed_addr constant [11 x i8] c"rsaGetName\00", align 1
@.str.33.175 = private unnamed_addr constant [40 x i8] c"Couldn't initialize dispatchTab.GetName\00", align 1
@.str.34.176 = private unnamed_addr constant [17 x i8] c"rsContextDestroy\00", align 1
@.str.35.177 = private unnamed_addr constant [47 x i8] c"Couldn't initialize dispatchTab.ContextDestroy\00", align 1
@.str.36.178 = private unnamed_addr constant [20 x i8] c"rsContextGetMessage\00", align 1
@.str.37.179 = private unnamed_addr constant [50 x i8] c"Couldn't initialize dispatchTab.ContextGetMessage\00", align 1
@.str.38.180 = private unnamed_addr constant [21 x i8] c"rsContextPeekMessage\00", align 1
@.str.39.181 = private unnamed_addr constant [51 x i8] c"Couldn't initialize dispatchTab.ContextPeekMessage\00", align 1
@.str.40.182 = private unnamed_addr constant [21 x i8] c"rsContextSendMessage\00", align 1
@.str.41.183 = private unnamed_addr constant [51 x i8] c"Couldn't initialize dispatchTab.ContextSendMessage\00", align 1
@.str.42.184 = private unnamed_addr constant [22 x i8] c"rsContextInitToClient\00", align 1
@.str.43.185 = private unnamed_addr constant [52 x i8] c"Couldn't initialize dispatchTab.ContextInitToClient\00", align 1
@.str.44.186 = private unnamed_addr constant [24 x i8] c"rsContextDeinitToClient\00", align 1
@.str.45.187 = private unnamed_addr constant [54 x i8] c"Couldn't initialize dispatchTab.ContextDeinitToClient\00", align 1
@.str.46 = private unnamed_addr constant [13 x i8] c"rsTypeCreate\00", align 1
@.str.47 = private unnamed_addr constant [43 x i8] c"Couldn't initialize dispatchTab.TypeCreate\00", align 1
@.str.48 = private unnamed_addr constant [24 x i8] c"rsAllocationCreateTyped\00", align 1
@.str.49 = private unnamed_addr constant [54 x i8] c"Couldn't initialize dispatchTab.AllocationCreateTyped\00", align 1
@.str.50 = private unnamed_addr constant [29 x i8] c"rsAllocationCreateFromBitmap\00", align 1
@.str.51 = private unnamed_addr constant [59 x i8] c"Couldn't initialize dispatchTab.AllocationCreateFromBitmap\00", align 1
@.str.52 = private unnamed_addr constant [33 x i8] c"rsAllocationCubeCreateFromBitmap\00", align 1
@.str.53 = private unnamed_addr constant [63 x i8] c"Couldn't initialize dispatchTab.AllocationCubeCreateFromBitmap\00", align 1
@.str.54 = private unnamed_addr constant [23 x i8] c"rsAllocationGetSurface\00", align 1
@.str.55 = private unnamed_addr constant [53 x i8] c"Couldn't initialize dispatchTab.AllocationGetSurface\00", align 1
@.str.56 = private unnamed_addr constant [23 x i8] c"rsAllocationSetSurface\00", align 1
@.str.57 = private unnamed_addr constant [53 x i8] c"Couldn't initialize dispatchTab.AllocationSetSurface\00", align 1
@.str.58 = private unnamed_addr constant [16 x i8] c"rsContextFinish\00", align 1
@.str.59 = private unnamed_addr constant [46 x i8] c"Couldn't initialize dispatchTab.ContextFinish\00", align 1
@.str.60 = private unnamed_addr constant [14 x i8] c"rsContextDump\00", align 1
@.str.61 = private unnamed_addr constant [44 x i8] c"Couldn't initialize dispatchTab.ContextDump\00", align 1
@.str.62 = private unnamed_addr constant [21 x i8] c"rsContextSetPriority\00", align 1
@.str.63 = private unnamed_addr constant [51 x i8] c"Couldn't initialize dispatchTab.ContextSetPriority\00", align 1
@.str.64 = private unnamed_addr constant [13 x i8] c"rsAssignName\00", align 1
@.str.65 = private unnamed_addr constant [43 x i8] c"Couldn't initialize dispatchTab.AssignName\00", align 1
@.str.66 = private unnamed_addr constant [13 x i8] c"rsObjDestroy\00", align 1
@.str.67 = private unnamed_addr constant [43 x i8] c"Couldn't initialize dispatchTab.ObjDestroy\00", align 1
@.str.68 = private unnamed_addr constant [16 x i8] c"rsElementCreate\00", align 1
@.str.69 = private unnamed_addr constant [46 x i8] c"Couldn't initialize dispatchTab.ElementCreate\00", align 1
@.str.70 = private unnamed_addr constant [17 x i8] c"rsElementCreate2\00", align 1
@.str.71 = private unnamed_addr constant [47 x i8] c"Couldn't initialize dispatchTab.ElementCreate2\00", align 1
@.str.72 = private unnamed_addr constant [25 x i8] c"rsAllocationCopyToBitmap\00", align 1
@.str.73.188 = private unnamed_addr constant [55 x i8] c"Couldn't initialize dispatchTab.AllocationCopyToBitmap\00", align 1
@.str.74 = private unnamed_addr constant [19 x i8] c"rsAllocation1DData\00", align 1
@.str.75 = private unnamed_addr constant [49 x i8] c"Couldn't initialize dispatchTab.Allocation1DData\00", align 1
@.str.76 = private unnamed_addr constant [26 x i8] c"rsAllocation1DElementData\00", align 1
@.str.77 = private unnamed_addr constant [56 x i8] c"Couldn't initialize dispatchTab.Allocation1DElementData\00", align 1
@.str.78 = private unnamed_addr constant [19 x i8] c"rsAllocation2DData\00", align 1
@.str.79 = private unnamed_addr constant [49 x i8] c"Couldn't initialize dispatchTab.Allocation2DData\00", align 1
@.str.80 = private unnamed_addr constant [19 x i8] c"rsAllocation3DData\00", align 1
@.str.81 = private unnamed_addr constant [49 x i8] c"Couldn't initialize dispatchTab.Allocation3DData\00", align 1
@.str.82 = private unnamed_addr constant [28 x i8] c"rsAllocationGenerateMipmaps\00", align 1
@.str.83 = private unnamed_addr constant [58 x i8] c"Couldn't initialize dispatchTab.AllocationGenerateMipmaps\00", align 1
@.str.84 = private unnamed_addr constant [17 x i8] c"rsAllocationRead\00", align 1
@.str.85 = private unnamed_addr constant [47 x i8] c"Couldn't initialize dispatchTab.AllocationRead\00", align 1
@.str.86 = private unnamed_addr constant [19 x i8] c"rsAllocation1DRead\00", align 1
@.str.87 = private unnamed_addr constant [49 x i8] c"Couldn't initialize dispatchTab.Allocation1DRead\00", align 1
@.str.88 = private unnamed_addr constant [19 x i8] c"rsAllocation2DRead\00", align 1
@.str.89.189 = private unnamed_addr constant [49 x i8] c"Couldn't initialize dispatchTab.Allocation2DRead\00", align 1
@.str.90 = private unnamed_addr constant [20 x i8] c"rsAllocationSyncAll\00", align 1
@.str.91 = private unnamed_addr constant [50 x i8] c"Couldn't initialize dispatchTab.AllocationSyncAll\00", align 1
@.str.92 = private unnamed_addr constant [21 x i8] c"rsAllocationResize1D\00", align 1
@.str.93 = private unnamed_addr constant [51 x i8] c"Couldn't initialize dispatchTab.AllocationResize1D\00", align 1
@.str.94 = private unnamed_addr constant [24 x i8] c"rsAllocationCopy2DRange\00", align 1
@.str.95 = private unnamed_addr constant [54 x i8] c"Couldn't initialize dispatchTab.AllocationCopy2DRange\00", align 1
@.str.96 = private unnamed_addr constant [24 x i8] c"rsAllocationCopy3DRange\00", align 1
@.str.97 = private unnamed_addr constant [54 x i8] c"Couldn't initialize dispatchTab.AllocationCopy3DRange\00", align 1
@.str.98 = private unnamed_addr constant [16 x i8] c"rsSamplerCreate\00", align 1
@.str.99 = private unnamed_addr constant [46 x i8] c"Couldn't initialize dispatchTab.SamplerCreate\00", align 1
@.str.100 = private unnamed_addr constant [23 x i8] c"rsScriptBindAllocation\00", align 1
@.str.101 = private unnamed_addr constant [53 x i8] c"Couldn't initialize dispatchTab.ScriptBindAllocation\00", align 1
@.str.102 = private unnamed_addr constant [20 x i8] c"rsScriptSetTimeZone\00", align 1
@.str.103 = private unnamed_addr constant [50 x i8] c"Couldn't initialize dispatchTab.ScriptSetTimeZone\00", align 1
@.str.104.190 = private unnamed_addr constant [15 x i8] c"rsScriptInvoke\00", align 1
@.str.105 = private unnamed_addr constant [45 x i8] c"Couldn't initialize dispatchTab.ScriptInvoke\00", align 1
@.str.106 = private unnamed_addr constant [16 x i8] c"rsScriptInvokeV\00", align 1
@.str.107 = private unnamed_addr constant [46 x i8] c"Couldn't initialize dispatchTab.ScriptInvokeV\00", align 1
@.str.108 = private unnamed_addr constant [16 x i8] c"rsScriptForEach\00", align 1
@.str.109 = private unnamed_addr constant [46 x i8] c"Couldn't initialize dispatchTab.ScriptForEach\00", align 1
@.str.110 = private unnamed_addr constant [16 x i8] c"rsScriptSetVarI\00", align 1
@.str.111 = private unnamed_addr constant [46 x i8] c"Couldn't initialize dispatchTab.ScriptSetVarI\00", align 1
@.str.112 = private unnamed_addr constant [18 x i8] c"rsScriptSetVarObj\00", align 1
@.str.113 = private unnamed_addr constant [48 x i8] c"Couldn't initialize dispatchTab.ScriptSetVarObj\00", align 1
@.str.114 = private unnamed_addr constant [16 x i8] c"rsScriptSetVarJ\00", align 1
@.str.115 = private unnamed_addr constant [46 x i8] c"Couldn't initialize dispatchTab.ScriptSetVarJ\00", align 1
@.str.116 = private unnamed_addr constant [16 x i8] c"rsScriptSetVarF\00", align 1
@.str.117 = private unnamed_addr constant [46 x i8] c"Couldn't initialize dispatchTab.ScriptSetVarF\00", align 1
@.str.118 = private unnamed_addr constant [16 x i8] c"rsScriptSetVarD\00", align 1
@.str.119 = private unnamed_addr constant [46 x i8] c"Couldn't initialize dispatchTab.ScriptSetVarD\00", align 1
@.str.120 = private unnamed_addr constant [16 x i8] c"rsScriptSetVarV\00", align 1
@.str.121 = private unnamed_addr constant [46 x i8] c"Couldn't initialize dispatchTab.ScriptSetVarV\00", align 1
@.str.122 = private unnamed_addr constant [16 x i8] c"rsScriptGetVarV\00", align 1
@.str.123 = private unnamed_addr constant [46 x i8] c"Couldn't initialize dispatchTab.ScriptGetVarV\00", align 1
@.str.124 = private unnamed_addr constant [17 x i8] c"rsScriptSetVarVE\00", align 1
@.str.125 = private unnamed_addr constant [47 x i8] c"Couldn't initialize dispatchTab.ScriptSetVarVE\00", align 1
@.str.126 = private unnamed_addr constant [16 x i8] c"rsScriptCCreate\00", align 1
@.str.127 = private unnamed_addr constant [46 x i8] c"Couldn't initialize dispatchTab.ScriptCCreate\00", align 1
@.str.128 = private unnamed_addr constant [24 x i8] c"rsScriptIntrinsicCreate\00", align 1
@.str.129 = private unnamed_addr constant [54 x i8] c"Couldn't initialize dispatchTab.ScriptIntrinsicCreate\00", align 1
@.str.130 = private unnamed_addr constant [23 x i8] c"rsScriptKernelIDCreate\00", align 1
@.str.131 = private unnamed_addr constant [53 x i8] c"Couldn't initialize dispatchTab.ScriptKernelIDCreate\00", align 1
@.str.132 = private unnamed_addr constant [22 x i8] c"rsScriptFieldIDCreate\00", align 1
@.str.133 = private unnamed_addr constant [52 x i8] c"Couldn't initialize dispatchTab.ScriptFieldIDCreate\00", align 1
@.str.134 = private unnamed_addr constant [20 x i8] c"rsScriptGroupCreate\00", align 1
@.str.135 = private unnamed_addr constant [50 x i8] c"Couldn't initialize dispatchTab.ScriptGroupCreate\00", align 1
@.str.136 = private unnamed_addr constant [23 x i8] c"rsScriptGroupSetOutput\00", align 1
@.str.137 = private unnamed_addr constant [53 x i8] c"Couldn't initialize dispatchTab.ScriptGroupSetOutput\00", align 1
@.str.138 = private unnamed_addr constant [22 x i8] c"rsScriptGroupSetInput\00", align 1
@.str.139 = private unnamed_addr constant [52 x i8] c"Couldn't initialize dispatchTab.ScriptGroupSetInput\00", align 1
@.str.140 = private unnamed_addr constant [21 x i8] c"rsScriptGroupExecute\00", align 1
@.str.141 = private unnamed_addr constant [51 x i8] c"Couldn't initialize dispatchTab.ScriptGroupExecute\00", align 1
@.str.142 = private unnamed_addr constant [19 x i8] c"rsAllocationIoSend\00", align 1
@.str.143 = private unnamed_addr constant [49 x i8] c"Couldn't initialize dispatchTab.AllocationIoSend\00", align 1
@.str.144 = private unnamed_addr constant [22 x i8] c"rsAllocationIoReceive\00", align 1
@.str.145.191 = private unnamed_addr constant [52 x i8] c"Couldn't initialize dispatchTab.AllocationIoReceive\00", align 1
@.str.146 = private unnamed_addr constant [23 x i8] c"rsAllocationGetPointer\00", align 1
@.str.147 = private unnamed_addr constant [53 x i8] c"Couldn't initialize dispatchTab.AllocationGetPointer\00", align 1
@.str.148 = private unnamed_addr constant [23 x i8] c"rsScriptInvokeIDCreate\00", align 1
@.str.149 = private unnamed_addr constant [53 x i8] c"Couldn't initialize dispatchTab.ScriptInvokeIDCreate\00", align 1
@.str.150 = private unnamed_addr constant [16 x i8] c"rsClosureCreate\00", align 1
@.str.151 = private unnamed_addr constant [46 x i8] c"Couldn't initialize dispatchTab.ClosureCreate\00", align 1
@.str.152 = private unnamed_addr constant [22 x i8] c"rsInvokeClosureCreate\00", align 1
@.str.153 = private unnamed_addr constant [52 x i8] c"Couldn't initialize dispatchTab.InvokeClosureCreate\00", align 1
@.str.154 = private unnamed_addr constant [16 x i8] c"rsClosureSetArg\00", align 1
@.str.155 = private unnamed_addr constant [46 x i8] c"Couldn't initialize dispatchTab.ClosureSetArg\00", align 1
@.str.156 = private unnamed_addr constant [19 x i8] c"rsClosureSetGlobal\00", align 1
@.str.157 = private unnamed_addr constant [49 x i8] c"Couldn't initialize dispatchTab.ClosureSetGlobal\00", align 1
@.str.158 = private unnamed_addr constant [21 x i8] c"rsScriptGroup2Create\00", align 1
@.str.159 = private unnamed_addr constant [51 x i8] c"Couldn't initialize dispatchTab.ScriptGroup2Create\00", align 1
@.str.160 = private unnamed_addr constant [24 x i8] c"rsAllocationElementData\00", align 1
@.str.161 = private unnamed_addr constant [54 x i8] c"Couldn't initialize dispatchTab.AllocationElementData\00", align 1
@.str.162 = private unnamed_addr constant [24 x i8] c"rsAllocationElementRead\00", align 1
@.str.163 = private unnamed_addr constant [54 x i8] c"Couldn't initialize dispatchTab.AllocationElementRead\00", align 1
@.str.164 = private unnamed_addr constant [19 x i8] c"rsAllocation3DRead\00", align 1
@.str.165 = private unnamed_addr constant [49 x i8] c"Couldn't initialize dispatchTab.Allocation3DRead\00", align 1
@.str.166 = private unnamed_addr constant [59 x i8] c"RS: halide_renderscript_initialize_kernels (user_context: \00", align 1
@.str.167 = private unnamed_addr constant [14 x i8] c", state_ptr: \00", align 1
@.str.168 = private unnamed_addr constant [12 x i8] c", program: \00", align 1
@.str.169 = private unnamed_addr constant [9 x i8] c", size: \00", align 1
@.str.170 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.283 = private unnamed_addr constant [13 x i8] c"mDev != NULL\00", align 1
@.str.284 = private unnamed_addr constant [17 x i8] c"mContext != NULL\00", align 1
@.str.171 = private unnamed_addr constant [45 x i8] c"RS: halide_renderscript_init_kernels failed \00", align 1
@.str.172 = private unnamed_addr constant [31 x i8] c"to create RSContext. error is \00", align 1
@.str.173 = private unnamed_addr constant [49 x i8] c"RS:halide_renderscript_init_kernels cacheDir is \00", align 1
@.str.174 = private unnamed_addr constant [27 x i8] c"halide_renderscript_kernel\00", align 1
@.str.175 = private unnamed_addr constant [52 x i8] c"RS:halide_renderscript_init_kernels created script \00", align 1
@.str.176 = private unnamed_addr constant [11 x i8] c"    Time: \00", align 1
@.str.177 = private unnamed_addr constant [5 x i8] c" ms\0A\00", align 1
@.str.178 = private unnamed_addr constant [52 x i8] c"RS: halide_renderscript_device_free (user_context: \00", align 1
@.str.179 = private unnamed_addr constant [8 x i8] c", buf: \00", align 1
@.str.180 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.181 = private unnamed_addr constant [36 x i8] c"    non-implemented RS device free \00", align 1
@.str.182 = private unnamed_addr constant [55 x i8] c"RS: halide_renderscript_device_release (user_context: \00", align 1
@.str.183 = private unnamed_addr constant [50 x i8] c"RS: halide_renderscript_device_release failed to \00", align 1
@.str.184 = private unnamed_addr constant [26 x i8] c"create Context. error is \00", align 1
@.str.185 = private unnamed_addr constant [37 x i8] c"    non-implemented RS ModuleUnload \00", align 1
@.str.186 = private unnamed_addr constant [35 x i8] c"    non-implemented RS CtxDestroy \00", align 1
@.str.187 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.188 = private unnamed_addr constant [54 x i8] c"RS: halide_renderscript_device_malloc (user_context: \00", align 1
@.str.189 = private unnamed_addr constant [75 x i8] c"  renderscript_device_malloc: This buffer already has a device allocation\0A\00", align 1
@.str.190 = private unnamed_addr constant [89 x i8] c"buf->stride[0] >= 0 && buf->stride[1] >= 0 && buf->stride[2] >= 0 && buf->stride[3] >= 0\00", align 1
@.str.191 = private unnamed_addr constant [14 x i8] c"  allocating \00", align 1
@.str.192 = private unnamed_addr constant [12 x i8] c"interleaved\00", align 1
@.str.193 = private unnamed_addr constant [7 x i8] c"planar\00", align 1
@.str.194 = private unnamed_addr constant [12 x i8] c" buffer of \00", align 1
@.str.195 = private unnamed_addr constant [9 x i8] c" bytes, \00", align 1
@.str.196 = private unnamed_addr constant [10 x i8] c"extents: \00", align 1
@.str.197 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.198 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.199 = private unnamed_addr constant [10 x i8] c"strides: \00", align 1
@.str.200 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.201 = private unnamed_addr constant [21 x i8] c" bytes per element)\0A\00", align 1
@.str.202 = private unnamed_addr constant [42 x i8] c"    RS: Unsupported element type of size \00", align 1
@.str.203 = private unnamed_addr constant [34 x i8] c"    Created 2d 4-vectorized type \00", align 1
@.str.204 = private unnamed_addr constant [28 x i8] c"    Created 3d scalar type \00", align 1
@.str.205 = private unnamed_addr constant [42 x i8] c"        RS: AllocationCreateTyped failed\0A\00", align 1
@.str.206 = private unnamed_addr constant [28 x i8] c"        Created allocation \00", align 1
@.str.207 = private unnamed_addr constant [11 x i8] c" for type \00", align 1
@.str.208 = private unnamed_addr constant [18 x i8] c" we just created\0A\00", align 1
@.str.209 = private unnamed_addr constant [54 x i8] c"        RS: out of memory allocating device wrapper.\0A\00", align 1
@.str.210 = private unnamed_addr constant [60 x i8] c"            Allocated dev_buffer(same thing as allocation) \00", align 1
@.str.211 = private unnamed_addr constant [23 x i8] c"                Time: \00", align 1
@.str.212 = private unnamed_addr constant [55 x i8] c"RS: halide_renderscript_copy_to_device (user_context: \00", align 1
@.str.213 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.214 = private unnamed_addr constant [6 x i8] c"plain\00", align 1
@.str.215 = private unnamed_addr constant [16 x i8] c" buffer_t buf: \00", align 1
@.str.216 = private unnamed_addr constant [22 x i8] c"buf->host && buf->dev\00", align 1
@.str.217 = private unnamed_addr constant [31 x i8] c"RS: copied to device buf->dev=\00", align 1
@.str.218 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.219 = private unnamed_addr constant [14 x i8] c" 4-byte float\00", align 1
@.str.220 = private unnamed_addr constant [14 x i8] c" 2-byte short\00", align 1
@.str.221 = private unnamed_addr constant [7 x i8] c" from \00", align 1
@.str.222 = private unnamed_addr constant [4 x i8] c" = \00", align 1
@.str.223 = private unnamed_addr constant [39 x i8] c"RS: halide_copy_to_host user_context: \00", align 1
@.str.224 = private unnamed_addr constant [7 x i8] c" buf: \00", align 1
@.str.225 = private unnamed_addr constant [13 x i8] c" interface: \00", align 1
@.str.226 = private unnamed_addr constant [11 x i8] c" dev_buf: \00", align 1
@.str.227 = private unnamed_addr constant [43 x i8] c"RS: trying to copy from device buf->dev = \00", align 1
@.str.228 = private unnamed_addr constant [13 x i8] c" bytes into \00", align 1
@.str.229 = private unnamed_addr constant [24 x i8] c"AllocationSyncAll done\0A\00", align 1
@.str.230 = private unnamed_addr constant [44 x i8] c"Context::dispatch->Allocation2DRead != NULL\00", align 1
@.str.231 = private unnamed_addr constant [37 x i8] c"Starting Allocation2DRead byte size=\00", align 1
@.str.232 = private unnamed_addr constant [15 x i8] c" hosts stride=\00", align 1
@.str.233 = private unnamed_addr constant [12 x i8] c"  byteSize=\00", align 1
@.str.234 = private unnamed_addr constant [15 x i8] c"  hostsStride=\00", align 1
@.str.235 = private unnamed_addr constant [30 x i8] c"  done with Allocation2DRead\0A\00", align 1
@.str.236 = private unnamed_addr constant [26 x i8] c"staring Allocation3DRead(\00", align 1
@.str.237 = private unnamed_addr constant [5 x i8] c")(w=\00", align 1
@.str.238 = private unnamed_addr constant [4 x i8] c" h=\00", align 1
@.str.239 = private unnamed_addr constant [4 x i8] c" d=\00", align 1
@.str.240 = private unnamed_addr constant [12 x i8] c" buf->host=\00", align 1
@.str.241 = private unnamed_addr constant [8 x i8] c" bytes=\00", align 1
@.str.242 = private unnamed_addr constant [9 x i8] c" stride=\00", align 1
@.str.243 = private unnamed_addr constant [5 x i8] c"...\0A\00", align 1
@.str.244 = private unnamed_addr constant [44 x i8] c"Context::dispatch->Allocation3DRead != NULL\00", align 1
@.str.245 = private unnamed_addr constant [23 x i8] c"Allocation3DRead done\0A\00", align 1
@.str.246 = private unnamed_addr constant [24 x i8] c"RS: copied from device \00", align 1
@.str.247 = private unnamed_addr constant [14 x i8] c" dev handle: \00", align 1
@.str.248 = private unnamed_addr constant [7 x i8] c" into \00", align 1
@.str.249 = private unnamed_addr constant [15 x i8] c" 4-byte float \00", align 1
@.str.250 = private unnamed_addr constant [52 x i8] c"RS: halide_renderscript_device_sync (user_context: \00", align 1
@.str.251 = private unnamed_addr constant [44 x i8] c"RS: halide_renderscript_run (user_context: \00", align 1
@.str.252 = private unnamed_addr constant [8 x i8] c"entry: \00", align 1
@.str.253 = private unnamed_addr constant [9 x i8] c"blocks: \00", align 1
@.str.254 = private unnamed_addr constant [10 x i8] c"threads: \00", align 1
@.str.255 = private unnamed_addr constant [8 x i8] c"shmem: \00", align 1
@.str.256 = private unnamed_addr constant [14 x i8] c"Got context.\0A\00", align 1
@.str.257 = private unnamed_addr constant [10 x i8] c"state_ptr\00", align 1
@.str.258 = private unnamed_addr constant [12 x i8] c"Got module \00", align 1
@.str.259 = private unnamed_addr constant [7 x i8] c"module\00", align 1
@.str.260 = private unnamed_addr constant [32 x i8] c"RS:    halide_renderscript_run \00", align 1
@.str.261 = private unnamed_addr constant [3 x i8] c" [\00", align 1
@.str.262 = private unnamed_addr constant [7 x i8] c" ...] \00", align 1
@.str.263 = private unnamed_addr constant [19 x i8] c"and this is buffer\00", align 1
@.str.264 = private unnamed_addr constant [21 x i8] c"this is not a buffer\00", align 1
@.str.265 = private unnamed_addr constant [53 x i8] c"RS: halide_renderscript_run starting script at slot \00", align 1
@.str.266 = private unnamed_addr constant [11 x i8] c" now with \00", align 1
@.str.267 = private unnamed_addr constant [9 x i8] c" script \00", align 1
@.str.268 = private unnamed_addr constant [9 x i8] c" input: \00", align 1
@.str.269 = private unnamed_addr constant [10 x i8] c" output: \00", align 1
@.str.270 = private unnamed_addr constant [25 x i8] c"ScriptForEach completed\0A\00", align 1
@.str.271 = private unnamed_addr constant [25 x i8] c"ContextFinish completed\0A\00", align 1
@.str.272 = private unnamed_addr constant [34 x i8] c"SyncAll for output_arg completed\0A\00", align 1
@.str.279 = private unnamed_addr constant [23 x i8] c"couldn't dlopen %s, %s\00", align 1
@.str.280 = private unnamed_addr constant [21 x i8] c"ro.build.version.sdk\00", align 1
@.str.281 = private unnamed_addr constant [16 x i8] c"%s init failed!\00", align 1
@.str.282 = private unnamed_addr constant [23 x i8] c"Successfully loaded %s\00", align 1
@str = private constant [6 x i8] c"input\00", align 32
@str.192 = private constant [2 x i8] c"g\00", align 32
@str.193 = private constant [16 x i8] c"Output buffer g\00", align 32
@str.194 = private constant [7 x i8] c"uint32\00", align 32
@str.195 = private constant [19 x i8] c"Input buffer input\00", align 32
@str.196 = private constant [11 x i8] c"g.stride.0\00", align 32
@str.198 = private constant [15 x i8] c"input.stride.0\00", align 32
@str.199 = private constant [2 x i8] c"f\00", align 32
@entry_name = private constant [2 x i8] c"1\00", align 32
@module_state___test_arm_renderscript = internal global i8* null
@entry_name.200 = private unnamed_addr constant [2 x i8] c"2\00"
@halide___test_arm_renderscript_kernel_src = private constant [2076 x i8] c"\DE\C0\17\0B\00\00\00\00,\00\00\00\F0\07\00\00\00\00\00\00\15\00\00\00\00\00\00\00\01@\04\00m\07\00\00\02@\04\00\03\00\00\00BC\C0\DE!\0C\00\00\F9\01\00\00\01\10\00\00\12\00\00\00\07\81#\91A\C8\04I\06\1029\92\01\84\0C%\05\08\19\1E\04\8Bb\80\14E\02B\92\0BB\A4\102\148\08\18I\0A2D$H\0A\90!#\C4R\80\0C\19!r$\07\C8H\11b\A8\A0\A8@\C6\F0\01\00\00\00\89 \00\00\18\00\00\002\22H\09 d\85\04\93\22\A4\84\04\93\22\E3\84\A1\90\14\12L\8A\8C\0B\84\A4L\10Ts\04`@\E0(i\8A(a\F2#\E9\07\96\C5\11\80\09q\1A\14\04\12s\04H\0A\10*\19\00\0A\01\0E\00\84F\00J\A1\0E\00\80\16\91\19\80R\A8\E6\9C\A3W\08\05\00\A08\100G\10\00\00\00\13\B0p\90\87v\B0\87;h\03wx\07w(\876`\87tp\87z\C0\8768\07w\A8\87r\08\07qH\87\0DhP\0Em\D0\0EzP\0Em\00\0Fz0\07r\A0\07s \07m\90\0Ev@\07z`\07t\D0\06\F6\10\07r\80\07z`\07t\A0\07q \07x\D0\06\EE0\07r\D0\06\B3`\07t\A0\F3@\86\042Bd\04`L8\C6\84cL8\C6\84cL8\C6\84cL8\C6\84\E3d8N\86\A3kiN\86\A3o\E9!J\02\04\00\00\00\00\00\0CQ\18 \00\00\00\00\00`\88\02\01\01\00\00\00\00\00C\14\09\00\00\00\00\00\00\18\A2H\00\00\00\00\00\00@\16\08\00\0A\00\00\002\1E\98\14\19\11L\90\8C\09&G\C6\04C\02#\00%P\08D\CA9`\04\A0\98\03H\8C\00P\D9\A0\D8\C0\00\00\00y\18\00\00\87\00\00\00\1A\03L\90F\02\134D\00&*wchar_sizeC\04\80\1Ab\00\D3\14\00\14\9B\B64\B7\AF2\B7\BA\B6\AF\B94\BD\B2!\060M\04@Q\1Ac\0Bs;\03\B1+\93\9BK{s\03\99q\B1\01\19\22L\06\0F\BB2\B9\B9\B477\061C\88\09\99\126rs_fp_relaxed\04\86\10\D321$\E4\DE\DE\E8\86\08\93\C3m\ADL\CE\AD\8C\ED\CB\ECk\0E\E6\CB.\E6\EB\EBK\8C\EDml\ED+\8D\EC+o\880A\DC\D6\CA\E4\DC\CA\D8\BE\CE\BE\E6`\BE\ECb\BE\BE\BE\C4\D8\DE\C6\D6\BE\D2\C8\BE\F2\86\08\93\C4\00f\880Q\14jn\86\08\93E\E5\CC\A5\0C\8F\AE\CC\8D\CE\05\86\81\CD\10b\C2\A6\8C\CA\99K\19\1E]\99\1B\9DK\CC\10b\DA\A6\8C\C7\99K[\9A\9B\0B\CC\10b\EA\A6\8C\C7\99K[\9A\9BK\CC\10b\FA\A6\8CN\9A\1B\5C\1D\9DK\19\1E]\99\1B\9D\0B\CC\10b\0A\83)\A3\93\E6\06WG\E7R\86GW\E6F\E7\123\84\98\C6`\CA\B8\A4\B9\C1\D5\D1\B9\B4\A5\B9\B9\C0\0C!\A62\982.input.min.1C\88\E9\0C\A6\8CE\9A\1B\5C\1D\1D\05\19\98!\C4\94\06\93\1A00\1BBLl0\A9\01\83\B3!\C4\E4\06\93\1A0\C0\19\22Lp\C0 g\880\C9\01\85\18\98!\C2D\07\8D\D8\D8\EC\DA\5C\DA\DE\C8\EA\D8\CA\5C\CC\D8\C2\CE\E6\A6\08CQ\85\8D\CD\AE\CD%\8D\AC\CC\8DnJp\F4\18\81\93\0B;k\0B\9B\22(M\AF\11\B9\B9\AF2<\B879\BA/\B37\B9\B2\B01\B4/\B7\B0\B6\B2)\C3\13M\95F\E4\E6\BE\CA\F0\E0\DE\E4\E8\BE\CC\DE\E4\CA\C2\C6\D0\A6\0C\D5u\D5\19\91\9B\FB*\C3\83{\93\A3\FB\B2\0B\93\9B\B2h\9C\07\06b@\06f\80\06k\D0\06oPhDn\EE\EBML\ADl\8C\EEk\8E\ED\8Dnn\CA\10\07sP\07\00\00\00\00y\18\00\00B\00\00\003\08\80\1C\C4\E1\1Cf\14\01=\88C8\84\C3\8CB\80\07yx\07s\98q\0C\E6\00\0F\ED\10\0E\F4\80\0E3\0CB\1E\C2\C1\1D\CE\A1\1Cf0\05=\88C8\84\83\1B\CC\03=\C8C=\8C\03=\CCx\8Ctp\07{\08\07yH\87pp\07zp\03vx\87p \87\19\CC\11\0E\EC\90\0E\E10\0Fn0\0F\E3\F0\0E\F0P\0E3\10\C4\1D\DE!\1C\D8!\1D\C2a\1Ef0\89;\BC\83;\D0C9\B4\03<\BC\83<\84\03;\CC\F0\14v`\07{h\077h\87rh\077\80\87p\90\87p`\07v(\07v\F8\05vx\87w\80\87_\08\87q\18\87r\98\87y\98\81,\EE\F0\0E\EE\E0\0E\F5\C0\0E\EC0\03b\C8\A1\1C\E4\A1\1C\CC\A1\1C\E4\A1\1C\DCa\1C\CA!\1C\C4\81\1D\CAa\06\D6\90C9\C8C9\98C9\C8C9\B8\C38\94C8\88\03;\94\C3/\BC\83<\FC\82;\D4\03;\B0\03\00\00q \00\00:\00\00\00f\B0 \CDCM>\834>m\07\0B\D2<\D4\E43H\E3\D7\E6\80\06\FF\5C\F3\91\C4\12\93\B7\10\0C\D1L\DA\F4#\CDT\DF\91\F4\03\CB\E2\08\C0\848\0D\92$\06\A0\18>qMD3\F9\B45\9C\C1?\D7|$\81\C4\E4-\04C4\936\FDH3\D5w$\FD\C0\B28\020!N\93$\86P \CDCMF\E0 \CDCM>qMD3\F9\B4\09\1C\86\CF \8DO\1B\C4\A6\10QC,\7F\F1K\F4_\D5\FF\FF\07\8B#(?2\FC\98\05(\86O\5C\13\D1L~m\0A\834EV\E0 \CDCM>qMD3\F9\B5\0D\1C\86\CF \8D_[BP\D8B`\D8\03\F4\CF{$uD@\19))\14Ea\0C\854E~m\11\9BBD\0D\B1\FC\C6/\D1\7FU\FF\FF\1F,\8E\A0\FC\C8\F0c\00\00\00\00a \00\00V\00\00\00\13\04A,\10\00\00\00\06\00\00\00\04j\80\82\ED@\B0\1D\09tf\00\A8\0De\18\0A \01\12\00\00\00\00$\0C\1A\06\11\83\8AA\C6\A0c\D07f\1B\C2 \0D\00\02\83ac\C0\81\C0\CA\C0\03\C1p\03\1B\B4\01\1AL7\B0A\1B\B8\C1p\C3\1BHh0\DD \BD\01\1CX\1C\9CA\08\8C\0C:\10\98\19x \18n\98\03:@\83\E9\869\A0\83:\18n\B0\03\09\0D\A6\1B$;\B8\03\C3\034\08\C1\88\81\01\04\8D\1A\C8A\1E\CC6\84\C1\1A\00#\06\06\104j \07yp|\E0\EA8g\D79\1B18\80\E0\11\83>\F0\83?\1818\80\C0\D9\03=\90$\0C\07\02\00\00\00$\00\00\00\96\C2 \CDCM>\D5<\80\A0\18\07U\F8\12\EDW\B4\FF\FF\C1\E2\08\CA\8F\0C\FFe\1DT\E1K\B4_\D5\FE\FF\07\8B#(?2\FC\98\95<H\F3P\93O\5C\13\D1L>\9D\DB\08b\F8\0C\D2\F8\F4m$\88\E13H\E3\D7\B8\ED\0CEM\9B\8A\814\0F5\F5f\F2 \CDCM>qMD3\F9\B5~\00\05\D1L\11f+H\E1S\CD\03\08\8Am\08Hc(\0C\D2<\D4\E43H\E3\D7\BC\9D0H\F3P\93\CF \8DO\EF\00\00\00\00\00\00\00a \00\00,\00\00\00\13\04A,\10\00\00\00\05\00\00\00\14lG\82\EDX\A03\03@m(\C3`\00\09\90\00\00\00\E4\8D\D9\060\10\03\80\BE1b`\00A3\06\5C7\DB\00\06d\00\8C\18\18@\D0\8C\01\D7\DD\19\B8:\CE\D9u\CEF\0C\0E x\C2\00\0D\D2@\0DF\0C\0E p\CC\A0\0C$\09\C3\81\00\00\12\00\00\00F\82\18>\D5<\80\A0\1C@A4S\84\19\07e\F8\12\EDW\B4\FF\FF\C1\E2\08\CA\8F\0C\FFe\1B\02\D2X\07e\F8\12\EDW\B5\FF\FF\C1\E2\08\CA\8F\0C?f&\82a\9B\08R\F8T\F3\00\82b#BQ\03\00\00\00\00\00\00\00\00\00\00\00", align 32
@0 = private constant [2 x %struct.halide_filter_argument_t] [%struct.halide_filter_argument_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str, i32 0, i32 0), i32 1, i32 2, i32 1, i32 32, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null }, %struct.halide_filter_argument_t { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.192, i32 0, i32 0), i32 2, i32 2, i32 1, i32 32, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null }]
@str.201 = private constant [31 x i8] c"arm-32-android-debug-armv7s-rs\00", align 32
@str.202 = private constant [9 x i8] c"test_arm\00", align 32
@test_arm_metadata = constant %struct.halide_filter_metadata_t { i32 0, i32 2, %struct.halide_filter_argument_t* getelementptr inbounds ([2 x %struct.halide_filter_argument_t], [2 x %struct.halide_filter_argument_t]* @0, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @str.201, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.202, i32 0, i32 0) }

; Function Attrs: nounwind
define weak i32 @halide_start_clock(i8* %user_context) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !20, metadata !2613), !dbg !2614
  %0 = load i8, i8* @halide_reference_clock_inited, align 1, !dbg !2615, !tbaa !2617, !range !2621
  %tobool = icmp eq i8 %0, 0, !dbg !2615
  br i1 %tobool, label %if.then, label %if.end, !dbg !2622

if.then:                                          ; preds = %entry
  %call = tail call i32 (i32, ...) @syscall(i32 263, i32 0, %struct.timespec* nonnull @halide_reference_clock) #6, !dbg !2623
  store i8 1, i8* @halide_reference_clock_inited, align 1, !dbg !2625, !tbaa !2617
  br label %if.end, !dbg !2626

if.end:                                           ; preds = %if.then, %entry
  ret i32 0, !dbg !2627
}

declare i32 @syscall(i32, ...) #1

; Function Attrs: nounwind
define weak i64 @halide_current_time_ns(i8* %user_context) #0 {
entry:
  %now = alloca %struct.timespec, align 4
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !25, metadata !2613), !dbg !2628
  %0 = bitcast %struct.timespec* %now to i8*, !dbg !2629
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2629
  tail call void @llvm.dbg.value(metadata %struct.timespec* %now, i64 0, metadata !26, metadata !2613), !dbg !2630
  %call = call i32 (i32, ...) @syscall(i32 263, i32 0, %struct.timespec* nonnull %now) #6, !dbg !2631
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %now, i32 0, i32 0, !dbg !2632
  %1 = load i32, i32* %tv_sec, align 4, !dbg !2632, !tbaa !2633
  %2 = load i32, i32* getelementptr inbounds (%struct.timespec, %struct.timespec* @halide_reference_clock, i32 0, i32 0), align 4, !dbg !2636, !tbaa !2633
  %sub = sub nsw i32 %1, %2, !dbg !2637
  %conv = sext i32 %sub to i64, !dbg !2638
  %mul = mul nsw i64 %conv, 1000000000, !dbg !2639
  call void @llvm.dbg.value(metadata i64 %mul, i64 0, metadata !27, metadata !2613), !dbg !2640
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %now, i32 0, i32 1, !dbg !2641
  %3 = load i32, i32* %tv_nsec, align 4, !dbg !2641, !tbaa !2642
  %4 = load i32, i32* getelementptr inbounds (%struct.timespec, %struct.timespec* @halide_reference_clock, i32 0, i32 1), align 4, !dbg !2643, !tbaa !2642
  %sub1 = sub nsw i32 %3, %4, !dbg !2644
  %conv2 = sext i32 %sub1 to i64, !dbg !2645
  call void @llvm.dbg.value(metadata i64 %conv2, i64 0, metadata !28, metadata !2613), !dbg !2646
  %add = add nsw i64 %conv2, %mul, !dbg !2647
  call void @llvm.lifetime.end(i64 8, i8* %0) #2, !dbg !2648
  ret i64 %add, !dbg !2649
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #3

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal17halide_print_implEPvPKc(i8* %user_context, i8* %str) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !50, metadata !2613), !dbg !2650
  tail call void @llvm.dbg.value(metadata i8* %str, i64 0, metadata !51, metadata !2613), !dbg !2651
  %call = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i8* %str) #6, !dbg !2652
  ret void, !dbg !2653
}

declare i32 @__android_log_print(i32, i8*, i8*, ...) #1

; Function Attrs: nounwind
define weak i32 @halide_host_cpu_count() #0 {
entry:
  %call = tail call i32 @sysconf(i32 97) #6, !dbg !2654
  ret i32 %call, !dbg !2655
}

declare i32 @sysconf(i32) #1

; Function Attrs: nounwind
define linkonce i32 @_ZN6Halide7Runtime8Internal15default_do_taskEPvPFiS2_iPhEiS3_(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %idx, i8* %closure) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !132, metadata !2613), !dbg !2656
  tail call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %f, i64 0, metadata !133, metadata !2613), !dbg !2657
  tail call void @llvm.dbg.value(metadata i32 %idx, i64 0, metadata !134, metadata !2613), !dbg !2658
  tail call void @llvm.dbg.value(metadata i8* %closure, i64 0, metadata !135, metadata !2613), !dbg !2659
  %call = tail call i32 %f(i8* %user_context, i32 %idx, i8* %closure) #6, !dbg !2660
  ret i32 %call, !dbg !2661
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nounwind
define linkonce i8* @_ZN6Halide7Runtime8Internal20halide_worker_threadEPv(i8* %void_arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %void_arg, i64 0, metadata !140, metadata !2613), !dbg !2662
  %0 = bitcast i8* %void_arg to %"struct.Halide::Runtime::Internal::work"*, !dbg !2663
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::work"* %0, i64 0, metadata !141, metadata !2613), !dbg !2664
  %call = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 0)) #6, !dbg !2665
  %active_workers.i = getelementptr inbounds i8, i8* %void_arg, i32 24, !dbg !2666
  %1 = bitcast i8* %active_workers.i to i32*, !dbg !2666
  %cmp = icmp eq i8* %void_arg, null, !dbg !2670
  %next.i = getelementptr inbounds i8, i8* %void_arg, i32 12, !dbg !2671
  %2 = bitcast i8* %next.i to i32*, !dbg !2671
  %max.i = getelementptr inbounds i8, i8* %void_arg, i32 16, !dbg !2672
  %3 = bitcast i8* %max.i to i32*, !dbg !2672
  br i1 %cmp, label %cond.false.preheader, label %cond.true.us

cond.false.preheader:                             ; preds = %entry
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i64 0, metadata !232, metadata !2613), !dbg !2673
  %4 = load i8, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 8), align 8, !dbg !2675, !tbaa !2676, !range !2621
  %lnot.i.79 = icmp eq i8 %4, 0, !dbg !2682
  br i1 %lnot.i.79, label %while.body, label %while.end, !dbg !2683

cond.true.us:                                     ; preds = %if.end.25.us, %_ZN6Halide7Runtime8Internal4work7runningEv.exit74.us, %if.then.30.us, %if.then.4.us, %entry
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::work"* %0, i64 0, metadata !229, metadata !2613), !dbg !2686
  %5 = load i32, i32* %2, align 4, !dbg !2671, !tbaa !2687
  %6 = load i32, i32* %3, align 4, !dbg !2672, !tbaa !2689
  %cmp.i.us = icmp slt i32 %5, %6, !dbg !2690
  br i1 %cmp.i.us, label %while.body.us, label %cond.end.us, !dbg !2691

cond.end.us:                                      ; preds = %cond.true.us
  %7 = load i32, i32* %1, align 4, !dbg !2666, !tbaa !2692
  %cmp2.i.us = icmp sgt i32 %7, 0, !dbg !2693
  br i1 %cmp2.i.us, label %while.body.us, label %while.end, !dbg !2683

while.body.us:                                    ; preds = %cond.end.us, %cond.true.us
  %8 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 1), align 8, !dbg !2694, !tbaa !2695
  %cmp3.us = icmp eq %"struct.Halide::Runtime::Internal::work"* %8, null, !dbg !2696
  br i1 %cmp3.us, label %if.then.4.us, label %if.else.12.us, !dbg !2697

if.else.12.us:                                    ; preds = %while.body.us
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::work"* %8, i64 0, metadata !142, metadata !2613), !dbg !2698
  tail call void @llvm.dbg.declare(metadata %"struct.Halide::Runtime::Internal::work"* undef, metadata !146, metadata !2613), !dbg !2699
  %myjob.sroa.3.0..sroa_idx38.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %8, i32 0, i32 1, !dbg !2700
  %myjob.sroa.3.0.copyload.us = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %myjob.sroa.3.0..sroa_idx38.us, align 4, !dbg !2700
  tail call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %myjob.sroa.3.0.copyload.us, i64 0, metadata !146, metadata !2701), !dbg !2699
  %myjob.sroa.4.0..sroa_idx40.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %8, i32 0, i32 2, !dbg !2700
  %myjob.sroa.4.0.copyload.us = load i8*, i8** %myjob.sroa.4.0..sroa_idx40.us, align 4, !dbg !2700
  tail call void @llvm.dbg.value(metadata i8* %myjob.sroa.4.0.copyload.us, i64 0, metadata !146, metadata !2702), !dbg !2699
  %myjob.sroa.5.0..sroa_idx42.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %8, i32 0, i32 3, !dbg !2700
  %myjob.sroa.5.0.copyload.us = load i32, i32* %myjob.sroa.5.0..sroa_idx42.us, align 4, !dbg !2700
  tail call void @llvm.dbg.value(metadata i32 %myjob.sroa.5.0.copyload.us, i64 0, metadata !146, metadata !2703), !dbg !2699
  %myjob.sroa.6.0..sroa_idx44.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %8, i32 0, i32 4, !dbg !2700
  %myjob.sroa.646.0..sroa_idx47.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %8, i32 0, i32 5, !dbg !2700
  %myjob.sroa.646.0.copyload.us = load i8*, i8** %myjob.sroa.646.0..sroa_idx47.us, align 4, !dbg !2700
  tail call void @llvm.dbg.value(metadata i8* %myjob.sroa.646.0.copyload.us, i64 0, metadata !146, metadata !2704), !dbg !2699
  %myjob.sroa.7.0..sroa_idx.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %8, i32 0, i32 6, !dbg !2700
  %inc13.us = add nsw i32 %myjob.sroa.5.0.copyload.us, 1, !dbg !2705
  store i32 %inc13.us, i32* %myjob.sroa.5.0..sroa_idx42.us, align 4, !dbg !2705, !tbaa !2687
  %9 = load i32, i32* %myjob.sroa.6.0..sroa_idx44.us, align 4, !dbg !2706, !tbaa !2689
  %cmp15.us = icmp eq i32 %inc13.us, %9, !dbg !2708
  br i1 %cmp15.us, label %if.then.16.us, label %if.end.17.us, !dbg !2709

if.then.16.us:                                    ; preds = %if.else.12.us
  %10 = bitcast %"struct.Halide::Runtime::Internal::work"* %8 to i32*, !dbg !2710
  %11 = load i32, i32* %10, align 4, !dbg !2710, !tbaa !2712
  store i32 %11, i32* bitcast (%"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 1) to i32*), align 8, !dbg !2713, !tbaa !2695
  br label %if.end.17.us, !dbg !2714

if.end.17.us:                                     ; preds = %if.then.16.us, %if.else.12.us
  %12 = load i32, i32* %myjob.sroa.7.0..sroa_idx.us, align 4, !dbg !2715, !tbaa !2692
  %inc18.us = add nsw i32 %12, 1, !dbg !2715
  store i32 %inc18.us, i32* %myjob.sroa.7.0..sroa_idx.us, align 4, !dbg !2715, !tbaa !2692
  %call19.us = tail call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 0)) #6, !dbg !2716
  %call21.us = tail call i32 @halide_do_task(i8* %myjob.sroa.4.0.copyload.us, i32 (i8*, i32, i8*)* %myjob.sroa.3.0.copyload.us, i32 %myjob.sroa.5.0.copyload.us, i8* %myjob.sroa.646.0.copyload.us) #7, !dbg !2717
  tail call void @llvm.dbg.value(metadata i32 %call21.us, i64 0, metadata !147, metadata !2613), !dbg !2718
  %call22.us = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 0)) #6, !dbg !2719
  %tobool23.us = icmp eq i32 %call21.us, 0, !dbg !2720
  br i1 %tobool23.us, label %if.end.25.us, label %if.then.24.us, !dbg !2722

if.then.24.us:                                    ; preds = %if.end.17.us
  %exit_status.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %8, i32 0, i32 7, !dbg !2723
  store i32 %call21.us, i32* %exit_status.us, align 4, !dbg !2725, !tbaa !2726
  br label %if.end.25.us, !dbg !2727

if.end.25.us:                                     ; preds = %if.then.24.us, %if.end.17.us
  %13 = load i32, i32* %myjob.sroa.7.0..sroa_idx.us, align 4, !dbg !2728, !tbaa !2692
  %dec27.us = add nsw i32 %13, -1, !dbg !2728
  store i32 %dec27.us, i32* %myjob.sroa.7.0..sroa_idx.us, align 4, !dbg !2728, !tbaa !2692
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::work"* %8, i64 0, metadata !229, metadata !2613), !dbg !2729
  %14 = load i32, i32* %myjob.sroa.5.0..sroa_idx42.us, align 4, !dbg !2732, !tbaa !2687
  %15 = load i32, i32* %myjob.sroa.6.0..sroa_idx44.us, align 4, !dbg !2733, !tbaa !2689
  %cmp.i.70.us = icmp slt i32 %14, %15, !dbg !2734
  br i1 %cmp.i.70.us, label %cond.true.us, label %_ZN6Halide7Runtime8Internal4work7runningEv.exit74.us, !dbg !2735

_ZN6Halide7Runtime8Internal4work7runningEv.exit74.us: ; preds = %if.end.25.us
  %cmp2.i.72.us = icmp sgt i32 %13, 1, !dbg !2736
  %cmp29.us = icmp eq %"struct.Halide::Runtime::Internal::work"* %8, %0, !dbg !2737
  %or.cond.us = or i1 %cmp29.us, %cmp2.i.72.us, !dbg !2738
  br i1 %or.cond.us, label %cond.true.us, label %if.then.30.us, !dbg !2738

if.then.30.us:                                    ; preds = %_ZN6Halide7Runtime8Internal4work7runningEv.exit74.us
  %call31.us = tail call i32 @pthread_cond_broadcast(%struct.pthread_cond_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 4)) #6, !dbg !2739
  br label %cond.true.us, !dbg !2741

if.then.4.us:                                     ; preds = %while.body.us
  %call5.us = tail call i32 @pthread_cond_wait(%struct.pthread_cond_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 4), %struct.pthread_mutex_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 0)) #6, !dbg !2742
  br label %cond.true.us, !dbg !2746

while.body:                                       ; preds = %cond.false.preheader, %cond.false.backedge
  %16 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 1), align 8, !dbg !2694, !tbaa !2695
  %cmp3 = icmp eq %"struct.Halide::Runtime::Internal::work"* %16, null, !dbg !2696
  br i1 %cmp3, label %if.else, label %if.else.12, !dbg !2697

if.else:                                          ; preds = %while.body
  %17 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 2), align 4, !dbg !2747, !tbaa !2749
  %18 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 3), align 8, !dbg !2750, !tbaa !2751
  %cmp6 = icmp sgt i32 %17, %18, !dbg !2752
  br i1 %cmp6, label %if.else.9, label %if.then.7, !dbg !2753

if.then.7:                                        ; preds = %if.else
  %call8 = tail call i32 @pthread_cond_wait(%struct.pthread_cond_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 5), %struct.pthread_mutex_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 0)) #6, !dbg !2754
  br label %cond.false.backedge, !dbg !2756

if.else.9:                                        ; preds = %if.else
  %dec = add nsw i32 %17, -1, !dbg !2757
  store i32 %dec, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 2), align 4, !dbg !2757, !tbaa !2749
  %call10 = tail call i32 @pthread_cond_wait(%struct.pthread_cond_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 6), %struct.pthread_mutex_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 0)) #6, !dbg !2759
  %19 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 2), align 4, !dbg !2760, !tbaa !2749
  %inc = add nsw i32 %19, 1, !dbg !2760
  store i32 %inc, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 2), align 4, !dbg !2760, !tbaa !2749
  br label %cond.false.backedge

cond.false.backedge:                              ; preds = %if.then.30, %_ZN6Halide7Runtime8Internal4work7runningEv.exit74, %if.end.25, %if.else.9, %if.then.7
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i64 0, metadata !232, metadata !2613), !dbg !2673
  %20 = load i8, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 8), align 8, !dbg !2675, !tbaa !2676, !range !2621
  %lnot.i = icmp eq i8 %20, 0, !dbg !2682
  br i1 %lnot.i, label %while.body, label %while.end, !dbg !2683

if.else.12:                                       ; preds = %while.body
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::work"* %16, i64 0, metadata !142, metadata !2613), !dbg !2698
  tail call void @llvm.dbg.declare(metadata %"struct.Halide::Runtime::Internal::work"* undef, metadata !146, metadata !2613), !dbg !2699
  %myjob.sroa.3.0..sroa_idx38 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %16, i32 0, i32 1, !dbg !2700
  %myjob.sroa.3.0.copyload = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %myjob.sroa.3.0..sroa_idx38, align 4, !dbg !2700
  tail call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %myjob.sroa.3.0.copyload, i64 0, metadata !146, metadata !2701), !dbg !2699
  %myjob.sroa.4.0..sroa_idx40 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %16, i32 0, i32 2, !dbg !2700
  %myjob.sroa.4.0.copyload = load i8*, i8** %myjob.sroa.4.0..sroa_idx40, align 4, !dbg !2700
  tail call void @llvm.dbg.value(metadata i8* %myjob.sroa.4.0.copyload, i64 0, metadata !146, metadata !2702), !dbg !2699
  %myjob.sroa.5.0..sroa_idx42 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %16, i32 0, i32 3, !dbg !2700
  %myjob.sroa.5.0.copyload = load i32, i32* %myjob.sroa.5.0..sroa_idx42, align 4, !dbg !2700
  tail call void @llvm.dbg.value(metadata i32 %myjob.sroa.5.0.copyload, i64 0, metadata !146, metadata !2703), !dbg !2699
  %myjob.sroa.6.0..sroa_idx44 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %16, i32 0, i32 4, !dbg !2700
  %myjob.sroa.646.0..sroa_idx47 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %16, i32 0, i32 5, !dbg !2700
  %myjob.sroa.646.0.copyload = load i8*, i8** %myjob.sroa.646.0..sroa_idx47, align 4, !dbg !2700
  tail call void @llvm.dbg.value(metadata i8* %myjob.sroa.646.0.copyload, i64 0, metadata !146, metadata !2704), !dbg !2699
  %myjob.sroa.7.0..sroa_idx = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %16, i32 0, i32 6, !dbg !2700
  %inc13 = add nsw i32 %myjob.sroa.5.0.copyload, 1, !dbg !2705
  store i32 %inc13, i32* %myjob.sroa.5.0..sroa_idx42, align 4, !dbg !2705, !tbaa !2687
  %21 = load i32, i32* %myjob.sroa.6.0..sroa_idx44, align 4, !dbg !2706, !tbaa !2689
  %cmp15 = icmp eq i32 %inc13, %21, !dbg !2708
  br i1 %cmp15, label %if.then.16, label %if.end.17, !dbg !2709

if.then.16:                                       ; preds = %if.else.12
  %22 = bitcast %"struct.Halide::Runtime::Internal::work"* %16 to i32*, !dbg !2710
  %23 = load i32, i32* %22, align 4, !dbg !2710, !tbaa !2712
  store i32 %23, i32* bitcast (%"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 1) to i32*), align 8, !dbg !2713, !tbaa !2695
  br label %if.end.17, !dbg !2714

if.end.17:                                        ; preds = %if.then.16, %if.else.12
  %24 = load i32, i32* %myjob.sroa.7.0..sroa_idx, align 4, !dbg !2715, !tbaa !2692
  %inc18 = add nsw i32 %24, 1, !dbg !2715
  store i32 %inc18, i32* %myjob.sroa.7.0..sroa_idx, align 4, !dbg !2715, !tbaa !2692
  %call19 = tail call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 0)) #6, !dbg !2716
  %call21 = tail call i32 @halide_do_task(i8* %myjob.sroa.4.0.copyload, i32 (i8*, i32, i8*)* %myjob.sroa.3.0.copyload, i32 %myjob.sroa.5.0.copyload, i8* %myjob.sroa.646.0.copyload) #7, !dbg !2717
  tail call void @llvm.dbg.value(metadata i32 %call21, i64 0, metadata !147, metadata !2613), !dbg !2718
  %call22 = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 0)) #6, !dbg !2719
  %tobool23 = icmp eq i32 %call21, 0, !dbg !2720
  br i1 %tobool23, label %if.end.25, label %if.then.24, !dbg !2722

if.then.24:                                       ; preds = %if.end.17
  %exit_status = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %16, i32 0, i32 7, !dbg !2723
  store i32 %call21, i32* %exit_status, align 4, !dbg !2725, !tbaa !2726
  br label %if.end.25, !dbg !2727

if.end.25:                                        ; preds = %if.then.24, %if.end.17
  %25 = load i32, i32* %myjob.sroa.7.0..sroa_idx, align 4, !dbg !2728, !tbaa !2692
  %dec27 = add nsw i32 %25, -1, !dbg !2728
  store i32 %dec27, i32* %myjob.sroa.7.0..sroa_idx, align 4, !dbg !2728, !tbaa !2692
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::work"* %16, i64 0, metadata !229, metadata !2613), !dbg !2729
  %26 = load i32, i32* %myjob.sroa.5.0..sroa_idx42, align 4, !dbg !2732, !tbaa !2687
  %27 = load i32, i32* %myjob.sroa.6.0..sroa_idx44, align 4, !dbg !2733, !tbaa !2689
  %cmp.i.70 = icmp slt i32 %26, %27, !dbg !2734
  br i1 %cmp.i.70, label %cond.false.backedge, label %_ZN6Halide7Runtime8Internal4work7runningEv.exit74, !dbg !2735

_ZN6Halide7Runtime8Internal4work7runningEv.exit74: ; preds = %if.end.25
  %cmp2.i.72 = icmp sgt i32 %25, 1, !dbg !2736
  %cmp29 = icmp eq %"struct.Halide::Runtime::Internal::work"* %16, %0, !dbg !2737
  %or.cond = or i1 %cmp29, %cmp2.i.72, !dbg !2738
  br i1 %or.cond, label %cond.false.backedge, label %if.then.30, !dbg !2738

if.then.30:                                       ; preds = %_ZN6Halide7Runtime8Internal4work7runningEv.exit74
  %call31 = tail call i32 @pthread_cond_broadcast(%struct.pthread_cond_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 4)) #6, !dbg !2739
  br label %cond.false.backedge, !dbg !2741

while.end:                                        ; preds = %cond.end.us, %cond.false.backedge, %cond.false.preheader
  %call34 = tail call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 0)) #6, !dbg !2761
  ret i8* null, !dbg !2762
}

declare i32 @pthread_mutex_lock(%struct.pthread_mutex_t*) #1

declare i32 @pthread_cond_wait(%struct.pthread_cond_t*, %struct.pthread_mutex_t*) #1

declare i32 @pthread_mutex_unlock(%struct.pthread_mutex_t*) #1

; Function Attrs: nounwind
define weak i32 @halide_do_task(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %idx, i8* %closure) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !214, metadata !2613), !dbg !2763
  tail call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %f, i64 0, metadata !215, metadata !2613), !dbg !2764
  tail call void @llvm.dbg.value(metadata i32 %idx, i64 0, metadata !216, metadata !2613), !dbg !2765
  tail call void @llvm.dbg.value(metadata i8* %closure, i64 0, metadata !217, metadata !2613), !dbg !2766
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)** @_ZN6Halide7Runtime8Internal21halide_custom_do_taskE, align 4, !dbg !2767, !tbaa !2768
  %call = tail call i32 %0(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %idx, i8* %closure) #6, !dbg !2769
  ret i32 %call, !dbg !2770
}

declare i32 @pthread_cond_broadcast(%struct.pthread_cond_t*) #1

; Function Attrs: nounwind
define linkonce i32 @_ZN6Halide7Runtime8Internal18default_do_par_forEPvPFiS2_iPhEiiS3_(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %min, i32 %size, i8* %closure) #0 {
entry:
  %job = alloca %"struct.Halide::Runtime::Internal::work", align 4
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !152, metadata !2613), !dbg !2771
  tail call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %f, i64 0, metadata !153, metadata !2613), !dbg !2772
  tail call void @llvm.dbg.value(metadata i32 %min, i64 0, metadata !154, metadata !2613), !dbg !2773
  tail call void @llvm.dbg.value(metadata i32 %size, i64 0, metadata !155, metadata !2613), !dbg !2774
  tail call void @llvm.dbg.value(metadata i8* %closure, i64 0, metadata !156, metadata !2613), !dbg !2775
  %call = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 0)) #6, !dbg !2776
  %0 = load i8, i8* @_ZN6Halide7Runtime8Internal30halide_thread_pool_initializedE, align 1, !dbg !2777, !tbaa !2617, !range !2621
  %tobool = icmp eq i8 %0, 0, !dbg !2777
  br i1 %tobool, label %if.then, label %entry.if.end.24_crit_edge, !dbg !2778

entry.if.end.24_crit_edge:                        ; preds = %entry
  %.pre = load i32, i32* @_ZN6Halide7Runtime8Internal18halide_num_threadsE, align 4
  %.pre59 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 2), align 4, !dbg !2779, !tbaa !2749
  br label %if.end.24, !dbg !2778

if.then:                                          ; preds = %entry
  store i8 0, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 8), align 8, !dbg !2780, !tbaa !2676
  %call1 = tail call i32 @pthread_cond_init(%struct.pthread_cond_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 4), i32* null) #6, !dbg !2781
  %call2 = tail call i32 @pthread_cond_init(%struct.pthread_cond_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 5), i32* null) #6, !dbg !2782
  %call3 = tail call i32 @pthread_cond_init(%struct.pthread_cond_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 6), i32* null) #6, !dbg !2783
  store %"struct.Halide::Runtime::Internal::work"* null, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 1), align 8, !dbg !2784, !tbaa !2695
  %1 = load i32, i32* @_ZN6Halide7Runtime8Internal18halide_num_threadsE, align 4, !dbg !2785, !tbaa !2786
  %tobool4 = icmp eq i32 %1, 0, !dbg !2785
  br i1 %tobool4, label %if.then.5, label %if.end.15, !dbg !2787

if.then.5:                                        ; preds = %if.then
  %call6 = tail call i8* @getenv(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i32 0, i32 0)) #6, !dbg !2788
  tail call void @llvm.dbg.value(metadata i8* %call6, i64 0, metadata !157, metadata !2613), !dbg !2789
  %tobool7 = icmp eq i8* %call6, null, !dbg !2790
  br i1 %tobool7, label %if.end, label %if.then.11, !dbg !2792

if.end:                                           ; preds = %if.then.5
  %call9 = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.3, i32 0, i32 0)) #6, !dbg !2793
  tail call void @llvm.dbg.value(metadata i8* %call9, i64 0, metadata !157, metadata !2613), !dbg !2789
  %tobool10 = icmp eq i8* %call9, null, !dbg !2795
  br i1 %tobool10, label %if.else, label %if.then.11, !dbg !2797

if.then.11:                                       ; preds = %if.end, %if.then.5
  %threads_str.054 = phi i8* [ %call9, %if.end ], [ %call6, %if.then.5 ]
  %call12 = tail call i32 @atoi(i8* %threads_str.054) #6, !dbg !2798
  br label %if.end.14, !dbg !2800

if.else:                                          ; preds = %if.end
  %call13 = tail call i32 @halide_host_cpu_count() #6, !dbg !2801
  br label %if.end.14

if.end.14:                                        ; preds = %if.else, %if.then.11
  %storemerge = phi i32 [ %call13, %if.else ], [ %call12, %if.then.11 ]
  store i32 %storemerge, i32* @_ZN6Halide7Runtime8Internal18halide_num_threadsE, align 4, !dbg !2803, !tbaa !2786
  br label %if.end.15, !dbg !2804

if.end.15:                                        ; preds = %if.end.14, %if.then
  %2 = phi i32 [ %1, %if.then ], [ %storemerge, %if.end.14 ], !dbg !2805
  %cmp = icmp sgt i32 %2, 64, !dbg !2807
  br i1 %cmp, label %for.cond.preheader.thread, label %if.else.17, !dbg !2808

for.cond.preheader.thread:                        ; preds = %if.end.15
  store i32 64, i32* @_ZN6Halide7Runtime8Internal18halide_num_threadsE, align 4, !dbg !2809, !tbaa !2786
  br label %for.body, !dbg !2811

if.else.17:                                       ; preds = %if.end.15
  %cmp18 = icmp slt i32 %2, 1, !dbg !2812
  br i1 %cmp18, label %for.cond.preheader.thread61, label %for.cond.preheader, !dbg !2814

for.cond.preheader.thread61:                      ; preds = %if.else.17
  store i32 1, i32* @_ZN6Halide7Runtime8Internal18halide_num_threadsE, align 4, !dbg !2815, !tbaa !2786
  br label %for.cond.cleanup, !dbg !2811

for.cond.preheader:                               ; preds = %if.else.17
  %cmp22.56 = icmp sgt i32 %2, 1, !dbg !2817
  br i1 %cmp22.56, label %for.body, label %for.cond.cleanup, !dbg !2811

for.cond.cleanup:                                 ; preds = %for.body, %for.cond.preheader, %for.cond.preheader.thread61
  %.lcssa = phi i32 [ 1, %for.cond.preheader ], [ 1, %for.cond.preheader.thread61 ], [ %3, %for.body ]
  store i32 %.lcssa, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 2), align 4, !dbg !2819, !tbaa !2749
  store i8 1, i8* @_ZN6Halide7Runtime8Internal30halide_thread_pool_initializedE, align 1, !dbg !2820, !tbaa !2617
  br label %if.end.24, !dbg !2821

for.body:                                         ; preds = %for.cond.preheader.thread, %for.cond.preheader, %for.body
  %i.057 = phi i32 [ %inc, %for.body ], [ 0, %for.cond.preheader ], [ 0, %for.cond.preheader.thread ]
  %add.ptr = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 7, i32 %i.057, !dbg !2822
  %call23 = tail call i32 @pthread_create(i32* %add.ptr, %struct.pthread_attr_t* null, i8* (i8*)* nonnull @_ZN6Halide7Runtime8Internal20halide_worker_threadEPv, i8* null) #6, !dbg !2824
  %inc = add nuw nsw i32 %i.057, 1, !dbg !2825
  tail call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !163, metadata !2613), !dbg !2826
  %3 = load i32, i32* @_ZN6Halide7Runtime8Internal18halide_num_threadsE, align 4, !dbg !2827, !tbaa !2786
  %sub = add nsw i32 %3, -1, !dbg !2828
  %cmp22 = icmp slt i32 %inc, %sub, !dbg !2817
  br i1 %cmp22, label %for.body, label %for.cond.cleanup, !dbg !2811

if.end.24:                                        ; preds = %for.cond.cleanup, %entry.if.end.24_crit_edge
  %4 = phi i32 [ %.pre59, %entry.if.end.24_crit_edge ], [ %.lcssa, %for.cond.cleanup ], !dbg !2779
  %5 = phi i32 [ %.pre, %entry.if.end.24_crit_edge ], [ %.lcssa, %for.cond.cleanup ]
  %6 = bitcast %"struct.Halide::Runtime::Internal::work"* %job to i8*, !dbg !2829
  call void @llvm.lifetime.start(i64 32, i8* %6) #2, !dbg !2829
  %f25 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i32 0, i32 1, !dbg !2830
  store i32 (i8*, i32, i8*)* %f, i32 (i8*, i32, i8*)** %f25, align 4, !dbg !2831, !tbaa !2832
  %user_context26 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i32 0, i32 2, !dbg !2833
  store i8* %user_context, i8** %user_context26, align 4, !dbg !2834, !tbaa !2835
  %next = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i32 0, i32 3, !dbg !2836
  store i32 %min, i32* %next, align 4, !dbg !2837, !tbaa !2687
  %add = add nsw i32 %size, %min, !dbg !2838
  %max = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i32 0, i32 4, !dbg !2839
  store i32 %add, i32* %max, align 4, !dbg !2840, !tbaa !2689
  %closure27 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i32 0, i32 5, !dbg !2841
  store i8* %closure, i8** %closure27, align 4, !dbg !2842, !tbaa !2843
  %exit_status = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i32 0, i32 7, !dbg !2844
  store i32 0, i32* %exit_status, align 4, !dbg !2845, !tbaa !2726
  %active_workers = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i32 0, i32 6, !dbg !2846
  store i32 0, i32* %active_workers, align 4, !dbg !2847, !tbaa !2692
  %7 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 1), align 8, !dbg !2848, !tbaa !2695
  %tobool28 = icmp eq %"struct.Halide::Runtime::Internal::work"* %7, null, !dbg !2850
  %cmp29 = icmp sgt i32 %5, %size, !dbg !2851
  %or.cond = and i1 %cmp29, %tobool28, !dbg !2852
  %storemerge.52 = select i1 %or.cond, i32 %size, i32 %5, !dbg !2852
  store i32 %storemerge.52, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 3), align 8, !dbg !2853, !tbaa !2751
  %cmp33 = icmp slt i32 %4, %size, !dbg !2855
  %next_job = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i32 0, i32 0, !dbg !2856
  store %"struct.Halide::Runtime::Internal::work"* %7, %"struct.Halide::Runtime::Internal::work"** %next_job, align 4, !dbg !2857, !tbaa !2712
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::work"* %job, i64 0, metadata !165, metadata !2613), !dbg !2858
  store %"struct.Halide::Runtime::Internal::work"* %job, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 1), align 8, !dbg !2859, !tbaa !2695
  %call34 = call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 0)) #6, !dbg !2860
  %call35 = call i32 @pthread_cond_broadcast(%struct.pthread_cond_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 5)) #6, !dbg !2861
  br i1 %cmp33, label %if.then.37, label %if.end.39, !dbg !2862

if.then.37:                                       ; preds = %if.end.24
  %call38 = call i32 @pthread_cond_broadcast(%struct.pthread_cond_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 6)) #6, !dbg !2863
  br label %if.end.39, !dbg !2866

if.end.39:                                        ; preds = %if.then.37, %if.end.24
  %call40 = call i8* @_ZN6Halide7Runtime8Internal20halide_worker_threadEPv(i8* %6) #7, !dbg !2867
  %8 = load i32, i32* %exit_status, align 4, !dbg !2868, !tbaa !2726
  call void @llvm.lifetime.end(i64 32, i8* %6) #2, !dbg !2869
  ret i32 %8, !dbg !2870
}

declare i32 @pthread_cond_init(%struct.pthread_cond_t*, i32*) #1

; Function Attrs: nounwind readonly
declare i8* @getenv(i8* nocapture) #4

; Function Attrs: nounwind readonly
declare i32 @atoi(i8* nocapture) #4

declare i32 @pthread_create(i32*, %struct.pthread_attr_t*, i8* (i8*)*, i8*) #1

; Function Attrs: nounwind
define weak void @halide_mutex_cleanup(%struct.pthread_mutex_t* %mutex_arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.pthread_mutex_t* %mutex_arg, i64 0, metadata !172, metadata !2613), !dbg !2871
  tail call void @llvm.dbg.value(metadata %struct.pthread_mutex_t* %mutex_arg, i64 0, metadata !173, metadata !2613), !dbg !2872
  %call = tail call i32 @pthread_mutex_destroy(%struct.pthread_mutex_t* %mutex_arg) #6, !dbg !2873
  %0 = bitcast %struct.pthread_mutex_t* %mutex_arg to i8*, !dbg !2874
  %call1 = tail call i8* @memset(i8* %0, i32 0, i32 64) #6, !dbg !2875
  ret void, !dbg !2876
}

declare i32 @pthread_mutex_destroy(%struct.pthread_mutex_t*) #1

declare i8* @memset(i8*, i32, i32) #1

; Function Attrs: nounwind
define weak void @halide_mutex_lock(%struct.pthread_mutex_t* %mutex_arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.pthread_mutex_t* %mutex_arg, i64 0, metadata !176, metadata !2613), !dbg !2877
  tail call void @llvm.dbg.value(metadata %struct.pthread_mutex_t* %mutex_arg, i64 0, metadata !177, metadata !2613), !dbg !2878
  %call = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* %mutex_arg) #6, !dbg !2879
  ret void, !dbg !2880
}

; Function Attrs: nounwind
define weak void @halide_mutex_unlock(%struct.pthread_mutex_t* %mutex_arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.pthread_mutex_t* %mutex_arg, i64 0, metadata !180, metadata !2613), !dbg !2881
  tail call void @llvm.dbg.value(metadata %struct.pthread_mutex_t* %mutex_arg, i64 0, metadata !181, metadata !2613), !dbg !2882
  %call = tail call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* %mutex_arg) #6, !dbg !2883
  ret void, !dbg !2884
}

; Function Attrs: nounwind
define weak void @halide_shutdown_thread_pool() #0 {
entry:
  %retval = alloca i8*, align 4
  %0 = load i8, i8* @_ZN6Halide7Runtime8Internal30halide_thread_pool_initializedE, align 1, !dbg !2885, !tbaa !2617, !range !2621
  %tobool = icmp eq i8 %0, 0, !dbg !2885
  br i1 %tobool, label %return, label %if.end, !dbg !2887

if.end:                                           ; preds = %entry
  %call = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 0)) #6, !dbg !2888
  store i8 1, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 8), align 8, !dbg !2889, !tbaa !2676
  %call1 = tail call i32 @pthread_cond_broadcast(%struct.pthread_cond_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 4)) #6, !dbg !2890
  %call2 = tail call i32 @pthread_cond_broadcast(%struct.pthread_cond_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 5)) #6, !dbg !2891
  %call3 = tail call i32 @pthread_cond_broadcast(%struct.pthread_cond_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 6)) #6, !dbg !2892
  %call4 = tail call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 0)) #6, !dbg !2893
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !186, metadata !2613), !dbg !2894
  %1 = load i32, i32* @_ZN6Halide7Runtime8Internal18halide_num_threadsE, align 4, !dbg !2895, !tbaa !2786
  %cmp.15 = icmp sgt i32 %1, 1, !dbg !2896
  br i1 %cmp.15, label %for.body.lr.ph, label %for.cond.cleanup, !dbg !2897

for.body.lr.ph:                                   ; preds = %if.end
  %2 = bitcast i8** %retval to i8*, !dbg !2898
  br label %for.body, !dbg !2897

for.cond.cleanup:                                 ; preds = %for.body, %if.end
  %call6 = call i32 @pthread_mutex_destroy(%struct.pthread_mutex_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 0)) #6, !dbg !2899
  %call7 = call i32 @pthread_mutex_init(%struct.pthread_mutex_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 0), i32* null) #6, !dbg !2900
  %call8 = call i32 @pthread_cond_destroy(%struct.pthread_cond_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 4)) #6, !dbg !2901
  %call9 = call i32 @pthread_cond_destroy(%struct.pthread_cond_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 5)) #6, !dbg !2902
  %call10 = call i32 @pthread_cond_destroy(%struct.pthread_cond_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 6)) #6, !dbg !2903
  store i8 0, i8* @_ZN6Halide7Runtime8Internal30halide_thread_pool_initializedE, align 1, !dbg !2904, !tbaa !2617
  br label %return, !dbg !2905

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %i.016 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !2898
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_work_queue_t", %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE, i32 0, i32 7, i32 %i.016, !dbg !2906
  %3 = load i32, i32* %arrayidx, align 4, !dbg !2906, !tbaa !2907
  call void @llvm.dbg.value(metadata i8** %retval, i64 0, metadata !188, metadata !2613), !dbg !2908
  %call5 = call i32 @pthread_join(i32 %3, i8** nonnull %retval) #6, !dbg !2909
  call void @llvm.lifetime.end(i64 4, i8* %2) #2, !dbg !2910
  %inc = add nuw nsw i32 %i.016, 1, !dbg !2911
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !186, metadata !2613), !dbg !2894
  %4 = load i32, i32* @_ZN6Halide7Runtime8Internal18halide_num_threadsE, align 4, !dbg !2895, !tbaa !2786
  %sub = add nsw i32 %4, -1, !dbg !2912
  %cmp = icmp slt i32 %inc, %sub, !dbg !2896
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !dbg !2897

return:                                           ; preds = %for.cond.cleanup, %entry
  ret void, !dbg !2913
}

declare i32 @pthread_join(i32, i8**) #1

declare i32 @pthread_mutex_init(%struct.pthread_mutex_t*, i32*) #1

declare i32 @pthread_cond_destroy(%struct.pthread_cond_t*) #1

; Function Attrs: nounwind
define weak void @halide_posix_thread_pool_cleanup() #0 {
entry:
  tail call void @halide_shutdown_thread_pool() #7, !dbg !2915
  ret void, !dbg !2916
}

; Function Attrs: nounwind
define weak void @halide_set_num_threads(i32 %n) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !197, metadata !2613), !dbg !2917
  %0 = load i32, i32* @_ZN6Halide7Runtime8Internal18halide_num_threadsE, align 4, !dbg !2918, !tbaa !2786
  %cmp = icmp eq i32 %0, %n, !dbg !2920
  br i1 %cmp, label %return, label %if.end, !dbg !2921

if.end:                                           ; preds = %entry
  %1 = load i8, i8* @_ZN6Halide7Runtime8Internal30halide_thread_pool_initializedE, align 1, !dbg !2922, !tbaa !2617, !range !2621
  %tobool = icmp eq i8 %1, 0, !dbg !2922
  br i1 %tobool, label %if.end.2, label %if.then.1, !dbg !2924

if.then.1:                                        ; preds = %if.end
  tail call void @halide_shutdown_thread_pool() #7, !dbg !2925
  br label %if.end.2, !dbg !2927

if.end.2:                                         ; preds = %if.then.1, %if.end
  store i32 %n, i32* @_ZN6Halide7Runtime8Internal18halide_num_threadsE, align 4, !dbg !2928, !tbaa !2786
  br label %return, !dbg !2929

return:                                           ; preds = %if.end.2, %entry
  ret void, !dbg !2930
}

; Function Attrs: nounwind
define weak i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* @halide_set_custom_do_task(i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %f) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %f, i64 0, metadata !203, metadata !2613), !dbg !2932
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)** @_ZN6Halide7Runtime8Internal21halide_custom_do_taskE, align 4, !dbg !2933, !tbaa !2768
  tail call void @llvm.dbg.value(metadata i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %0, i64 0, metadata !204, metadata !2613), !dbg !2934
  store i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %f, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)** @_ZN6Halide7Runtime8Internal21halide_custom_do_taskE, align 4, !dbg !2935, !tbaa !2768
  ret i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %0, !dbg !2936
}

; Function Attrs: nounwind
define weak i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* @halide_set_custom_do_par_for(i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %f) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %f, i64 0, metadata !210, metadata !2613), !dbg !2937
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)** @_ZN6Halide7Runtime8Internal24halide_custom_do_par_forE, align 4, !dbg !2938, !tbaa !2768
  tail call void @llvm.dbg.value(metadata i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %0, i64 0, metadata !211, metadata !2613), !dbg !2939
  store i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %f, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)** @_ZN6Halide7Runtime8Internal24halide_custom_do_par_forE, align 4, !dbg !2940, !tbaa !2768
  ret i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %0, !dbg !2941
}

; Function Attrs: nounwind
define weak i32 @halide_do_par_for(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %min, i32 %size, i8* %closure) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !222, metadata !2613), !dbg !2942
  tail call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %f, i64 0, metadata !223, metadata !2613), !dbg !2943
  tail call void @llvm.dbg.value(metadata i32 %min, i64 0, metadata !224, metadata !2613), !dbg !2944
  tail call void @llvm.dbg.value(metadata i32 %size, i64 0, metadata !225, metadata !2613), !dbg !2945
  tail call void @llvm.dbg.value(metadata i8* %closure, i64 0, metadata !226, metadata !2613), !dbg !2946
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)** @_ZN6Halide7Runtime8Internal24halide_custom_do_par_forE, align 4, !dbg !2947, !tbaa !2768
  %call = tail call i32 %0(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %min, i32 %size, i8* %closure) #6, !dbg !2948
  ret i32 %call, !dbg !2949
}

; Function Attrs: nounwind
define weak i8* @halide_get_symbol(i8* %name) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %name, i64 0, metadata !249, metadata !2613), !dbg !2950
  %call = tail call i8* @dlsym(i8* null, i8* %name) #6, !dbg !2951
  ret i8* %call, !dbg !2952
}

declare i8* @dlsym(i8*, i8*) #1

; Function Attrs: nounwind
define weak i8* @halide_load_library(i8* %name) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %name, i64 0, metadata !252, metadata !2613), !dbg !2953
  %call = tail call i8* @dlopen(i8* %name, i32 1) #6, !dbg !2954
  ret i8* %call, !dbg !2955
}

declare i8* @dlopen(i8*, i32) #1

; Function Attrs: nounwind
define weak i8* @halide_get_library_symbol(i8* %lib, i8* %name) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %lib, i64 0, metadata !257, metadata !2613), !dbg !2956
  tail call void @llvm.dbg.value(metadata i8* %name, i64 0, metadata !258, metadata !2613), !dbg !2957
  %call = tail call i8* @dlsym(i8* %lib, i8* %name) #6, !dbg !2958
  ret i8* %call, !dbg !2959
}

; Function Attrs: nounwind
define weak void @halide_set_gpu_device(i32 %d) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i32 %d, i64 0, metadata !397, metadata !2613), !dbg !2960
  store i32 %d, i32* @_ZN6Halide7Runtime8Internal17halide_gpu_deviceE, align 4, !dbg !2961, !tbaa !2786
  store i8 1, i8* @_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE, align 1, !dbg !2962, !tbaa !2617
  ret void, !dbg !2963
}

; Function Attrs: nounwind
define weak i32 @halide_get_gpu_device(i8* %user_context) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !400, metadata !2613), !dbg !2964
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedSpinLock"* undef, i64 0, metadata !401, metadata !2613), !dbg !2965
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedSpinLock"* undef, i64 0, metadata !407, metadata !2613), !dbg !2966
  tail call void @llvm.dbg.value(metadata i32* @_ZN6Halide7Runtime8Internal22halide_gpu_device_lockE, i64 0, metadata !409, metadata !2613), !dbg !2968
  br label %while.cond.i, !dbg !2969

while.cond.i:                                     ; preds = %while.cond.i, %entry
  %0 = atomicrmw xchg i32* @_ZN6Halide7Runtime8Internal22halide_gpu_device_lockE, i32 1 seq_cst, !dbg !2971
  %tobool.i = icmp eq i32 %0, 0, !dbg !2971
  br i1 %tobool.i, label %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVi.exit, label %while.cond.i, !dbg !2969

_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVi.exit: ; preds = %while.cond.i
  %1 = load i8, i8* @_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE, align 1, !dbg !2972, !tbaa !2617, !range !2621
  %tobool = icmp eq i8 %1, 0, !dbg !2972
  br i1 %tobool, label %if.then, label %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVi.exit.if.end.4_crit_edge, !dbg !2973

_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVi.exit.if.end.4_crit_edge: ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVi.exit
  %.pre = load i32, i32* @_ZN6Halide7Runtime8Internal17halide_gpu_deviceE, align 4, !dbg !2974, !tbaa !2786
  br label %if.end.4, !dbg !2973

if.then:                                          ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVi.exit
  %call = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i32 0, i32 0)) #6, !dbg !2975
  tail call void @llvm.dbg.value(metadata i8* %call, i64 0, metadata !402, metadata !2613), !dbg !2976
  %tobool1 = icmp eq i8* %call, null, !dbg !2977
  br i1 %tobool1, label %if.end, label %if.then.2, !dbg !2979

if.then.2:                                        ; preds = %if.then
  %call3 = tail call i32 @atoi(i8* %call) #6, !dbg !2980
  br label %if.end, !dbg !2982

if.end:                                           ; preds = %if.then.2, %if.then
  %storemerge = phi i32 [ %call3, %if.then.2 ], [ -1, %if.then ]
  store i32 %storemerge, i32* @_ZN6Halide7Runtime8Internal17halide_gpu_deviceE, align 4, !dbg !2983, !tbaa !2786
  store i8 1, i8* @_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE, align 1, !dbg !2984, !tbaa !2617
  br label %if.end.4, !dbg !2985

if.end.4:                                         ; preds = %if.end, %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVi.exit.if.end.4_crit_edge
  %2 = phi i32 [ %.pre, %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVi.exit.if.end.4_crit_edge ], [ %storemerge, %if.end ], !dbg !2974
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedSpinLock"* undef, i64 0, metadata !401, metadata !2613), !dbg !2965
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedSpinLock"* undef, i64 0, metadata !412, metadata !2613), !dbg !2986
  store atomic i32 0, i32* @_ZN6Halide7Runtime8Internal22halide_gpu_device_lockE release, align 4, !dbg !2988
  ret i32 %2, !dbg !2990
}

; Function Attrs: nounwind
define linkonce i32 @_ZN6Halide7Runtime8Internal13default_traceEPvPK18halide_trace_event(i8* %user_context, %struct.halide_trace_event* %e) #0 {
entry:
  %buffer = alloca [4096 x i8], align 4
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !461, metadata !2613), !dbg !2991
  tail call void @llvm.dbg.value(metadata %struct.halide_trace_event* %e, i64 0, metadata !462, metadata !2613), !dbg !2992
  %0 = atomicrmw add i32* @_ZZN6Halide7Runtime8Internal13default_traceEPvPK18halide_trace_eventE3ids, i32 1 seq_cst, !dbg !2993
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !463, metadata !2613), !dbg !2994
  %call = tail call i32 @halide_get_trace_file(i8* %user_context) #7, !dbg !2995
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !464, metadata !2613), !dbg !2996
  %cmp = icmp sgt i32 %call, 0, !dbg !2997
  br i1 %cmp, label %if.then, label %if.else, !dbg !2998

if.then:                                          ; preds = %entry
  %vector_width = getelementptr inbounds %struct.halide_trace_event, %struct.halide_trace_event* %e, i32 0, i32 5, !dbg !2999
  %1 = load i32, i32* %vector_width, align 1, !dbg !2999, !tbaa !3000
  tail call void @llvm.dbg.value(metadata i8 %extract.t., i64 0, metadata !465, metadata !2613), !dbg !3003
  %dimensions = getelementptr inbounds %struct.halide_trace_event, %struct.halide_trace_event* %e, i32 0, i32 8, !dbg !3004
  %2 = load i32, i32* %dimensions, align 1, !dbg !3004, !tbaa !3005
  %bits = getelementptr inbounds %struct.halide_trace_event, %struct.halide_trace_event* %e, i32 0, i32 4, !dbg !3006
  %3 = load i32, i32* %bits, align 1, !dbg !3006, !tbaa !3007
  br label %while.cond, !dbg !3008

while.cond:                                       ; preds = %while.cond, %if.then
  %bytes.0 = phi i32 [ %shl, %while.cond ], [ 1, %if.then ]
  %mul = shl nsw i32 %bytes.0, 3, !dbg !3009
  %cmp10 = icmp slt i32 %mul, %3, !dbg !3010
  %shl = shl i32 %bytes.0, 1, !dbg !3011
  tail call void @llvm.dbg.value(metadata i32 %shl, i64 0, metadata !469, metadata !2613), !dbg !3013
  br i1 %cmp10, label %while.cond, label %while.end, !dbg !3014

while.end:                                        ; preds = %while.cond
  %extract.t = trunc i32 %1 to i8, !dbg !3015
  %extract.t357 = trunc i32 %2 to i8, !dbg !3008
  %cmp1 = icmp slt i32 %1, 256, !dbg !3016
  %extract.t. = select i1 %cmp1, i8 %extract.t, i8 -1, !dbg !3015
  %cmp3 = icmp slt i32 %2, 256, !dbg !3017
  %cond8.off0 = select i1 %cmp3, i8 %extract.t357, i8 -1, !dbg !3008
  tail call void @llvm.dbg.value(metadata i32 32, i64 0, metadata !470, metadata !2613), !dbg !3018
  %conv11 = zext i8 %extract.t. to i32, !dbg !3019
  %mul12 = mul i32 %bytes.0, %conv11, !dbg !3020
  tail call void @llvm.dbg.value(metadata i32 %mul12, i64 0, metadata !472, metadata !2613), !dbg !3021
  %conv13 = zext i8 %cond8.off0 to i32, !dbg !3022
  %mul14 = shl nuw nsw i32 %conv13, 2, !dbg !3023
  tail call void @llvm.dbg.value(metadata i32 %mul14, i64 0, metadata !473, metadata !2613), !dbg !3024
  %add = add i32 %mul12, 32, !dbg !3025
  %add15 = add i32 %add, %mul14, !dbg !3026
  tail call void @llvm.dbg.value(metadata i32 %add15, i64 0, metadata !474, metadata !2613), !dbg !3027
  %4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 0, !dbg !3028
  call void @llvm.lifetime.start(i64 4096, i8* %4) #2, !dbg !3028
  tail call void @llvm.dbg.declare(metadata [4096 x i8]* %buffer, metadata !475, metadata !2613), !dbg !3029
  %cmp16 = icmp ult i32 %add15, 4097, !dbg !3030
  br i1 %cmp16, label %if.end, label %if.then.17, !dbg !3032

if.then.17:                                       ; preds = %while.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.7, i32 0, i32 0)) #6, !dbg !3033
  %.pre = load i32, i32* %bits, align 1, !dbg !3035, !tbaa !3007
  br label %if.end, !dbg !3033

if.end:                                           ; preds = %if.then.17, %while.end
  %.off0.in = phi i32 [ %.pre, %if.then.17 ], [ %3, %while.end ]
  %.off0 = trunc i32 %.off0.in to i8, !dbg !3035
  %5 = bitcast [4096 x i8]* %buffer to i32*, !dbg !3036
  store i32 %0, i32* %5, align 4, !dbg !3037, !tbaa !2786
  %parent_id = getelementptr inbounds %struct.halide_trace_event, %struct.halide_trace_event* %e, i32 0, i32 2, !dbg !3038
  %6 = load i32, i32* %parent_id, align 1, !dbg !3038, !tbaa !3039
  %arrayidx19 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 4, !dbg !3040
  %7 = bitcast i8* %arrayidx19 to i32*, !dbg !3040
  store i32 %6, i32* %7, align 4, !dbg !3041, !tbaa !2786
  %event = getelementptr inbounds %struct.halide_trace_event, %struct.halide_trace_event* %e, i32 0, i32 1, !dbg !3042
  %8 = load i32, i32* %event, align 1, !dbg !3042, !tbaa !3043
  %conv20 = trunc i32 %8 to i8, !dbg !3044
  %arrayidx21 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 8, !dbg !3045
  store i8 %conv20, i8* %arrayidx21, align 4, !dbg !3046, !tbaa !3047
  %type_code = getelementptr inbounds %struct.halide_trace_event, %struct.halide_trace_event* %e, i32 0, i32 3, !dbg !3048
  %9 = load i32, i32* %type_code, align 1, !dbg !3048, !tbaa !3049
  %conv22 = trunc i32 %9 to i8, !dbg !3050
  %arrayidx23 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 9, !dbg !3051
  store i8 %conv22, i8* %arrayidx23, align 1, !dbg !3052, !tbaa !3047
  %arrayidx26 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 10, !dbg !3053
  store i8 %.off0, i8* %arrayidx26, align 2, !dbg !3054, !tbaa !3047
  %arrayidx27 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 11, !dbg !3055
  store i8 %extract.t., i8* %arrayidx27, align 1, !dbg !3056, !tbaa !3047
  %value_index = getelementptr inbounds %struct.halide_trace_event, %struct.halide_trace_event* %e, i32 0, i32 6, !dbg !3057
  %10 = load i32, i32* %value_index, align 1, !dbg !3057, !tbaa !3058
  %conv28 = trunc i32 %10 to i8, !dbg !3059
  %arrayidx29 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 12, !dbg !3060
  store i8 %conv28, i8* %arrayidx29, align 4, !dbg !3061, !tbaa !3047
  %arrayidx30 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 13, !dbg !3062
  store i8 %cond8.off0, i8* %arrayidx30, align 1, !dbg !3063, !tbaa !3047
  tail call void @llvm.dbg.value(metadata i32 14, i64 0, metadata !479, metadata !2613), !dbg !3064
  %func = getelementptr inbounds %struct.halide_trace_event, %struct.halide_trace_event* %e, i32 0, i32 0, !dbg !3065
  %.pre537 = load i8*, i8** %func, align 1, !dbg !3065, !tbaa !3069
  %11 = load i8, i8* %.pre537, align 1, !dbg !3070, !tbaa !3047
  %arrayidx34 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 14, !dbg !3071
  store i8 %11, i8* %arrayidx34, align 2, !dbg !3072, !tbaa !3047
  %cmp37 = icmp eq i8 %11, 0, !dbg !3073
  br i1 %cmp37, label %for.body.42.preheader, label %for.inc, !dbg !3075

for.body.42.preheader:                            ; preds = %for.inc.15, %if.end, %for.inc, %for.inc.1, %for.inc.2, %for.inc.3, %for.inc.4, %for.inc.5, %for.inc.6, %for.inc.7, %for.inc.8, %for.inc.9, %for.inc.10, %for.inc.11, %for.inc.12, %for.inc.13, %for.inc.14
  %i.1525.ph = phi i32 [ 14, %if.end ], [ 15, %for.inc ], [ 16, %for.inc.1 ], [ 17, %for.inc.2 ], [ 18, %for.inc.3 ], [ 19, %for.inc.4 ], [ 20, %for.inc.5 ], [ 21, %for.inc.6 ], [ 22, %for.inc.7 ], [ 23, %for.inc.8 ], [ 24, %for.inc.9 ], [ 25, %for.inc.10 ], [ 26, %for.inc.11 ], [ 27, %for.inc.12 ], [ 28, %for.inc.13 ], [ 29, %for.inc.14 ], [ %., %for.inc.15 ]
  %12 = add nuw nsw i32 %i.1525.ph, 1, !dbg !3076
  %13 = icmp ugt i32 %12, 32
  %umax = select i1 %13, i32 %12, i32 32
  %14 = xor i32 %i.1525.ph, -1, !dbg !3076
  %15 = add nsw i32 %umax, %14, !dbg !3076
  %backedge.overflow = icmp eq i32 %15, -1
  br i1 %backedge.overflow, label %for.body.42.preheader3, label %overflow.checked

for.body.42.preheader3:                           ; preds = %middle.block, %for.body.42.preheader
  %i.1525.ph4 = phi i32 [ %resume.val, %middle.block ], [ %i.1525.ph, %for.body.42.preheader ]
  %scevgep9 = getelementptr [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 %i.1525.ph4
  %16 = add i32 %i.1525.ph4, 1, !dbg !3076
  %17 = icmp ugt i32 %16, 32
  %umax10 = select i1 %17, i32 %16, i32 32
  %18 = sub i32 %umax10, %i.1525.ph4, !dbg !3076
  call void @llvm.memset.p0i8.i32(i8* %scevgep9, i8 0, i32 %18, i32 1, i1 false), !dbg !3080
  br label %for.cond.48.preheader, !dbg !3081

overflow.checked:                                 ; preds = %for.body.42.preheader
  %19 = sub nsw i32 %umax, %i.1525.ph, !dbg !3076
  %n.vec = and i32 %19, -4, !dbg !3083
  %cmp.zero = icmp eq i32 %n.vec, 0, !dbg !3083
  br i1 %cmp.zero, label %middle.block, label %vector.body.preheader

vector.body.preheader:                            ; preds = %overflow.checked
  %end.idx.rnd.down = add nsw i32 %n.vec, %i.1525.ph, !dbg !3083
  %scevgep11 = getelementptr [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 %i.1525.ph
  %20 = sub nsw i32 32, %i.1525.ph, !dbg !3076
  %21 = and i32 %20, 60, !dbg !3076
  call void @llvm.memset.p0i8.i32(i8* %scevgep11, i8 0, i32 %21, i32 1, i1 false), !dbg !3080
  br label %middle.block

middle.block:                                     ; preds = %vector.body.preheader, %overflow.checked
  %resume.val = phi i32 [ %i.1525.ph, %overflow.checked ], [ %end.idx.rnd.down, %vector.body.preheader ]
  %cmp.n = icmp eq i32 %umax, %resume.val
  br i1 %cmp.n, label %for.cond.48.preheader, label %for.body.42.preheader3

for.inc:                                          ; preds = %if.end
  tail call void @llvm.dbg.value(metadata i32 15, i64 0, metadata !479, metadata !2613), !dbg !3064
  %arrayidx33.1 = getelementptr inbounds i8, i8* %.pre537, i32 1, !dbg !3070
  %22 = load i8, i8* %arrayidx33.1, align 1, !dbg !3070, !tbaa !3047
  %arrayidx34.1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 15, !dbg !3071
  store i8 %22, i8* %arrayidx34.1, align 1, !dbg !3072, !tbaa !3047
  %cmp37.1 = icmp eq i8 %22, 0, !dbg !3073
  br i1 %cmp37.1, label %for.body.42.preheader, label %for.inc.1, !dbg !3075

for.cond.48.preheader:                            ; preds = %for.body.42.preheader3, %middle.block
  %cmp49.522 = icmp eq i32 %mul12, 0, !dbg !3081
  br i1 %cmp49.522, label %for.cond.58.preheader, label %overflow.checked559, !dbg !3084

overflow.checked559:                              ; preds = %for.cond.48.preheader
  %value = getelementptr inbounds %struct.halide_trace_event, %struct.halide_trace_event* %e, i32 0, i32 7, !dbg !3085
  %.pre538 = load i8*, i8** %value, align 1, !dbg !3085, !tbaa !3087
  %n.vec556 = and i32 %mul12, -4, !dbg !3088
  %cmp.zero558 = icmp eq i32 %n.vec556, 0, !dbg !3088
  br i1 %cmp.zero558, label %middle.block551, label %vector.memcheck

vector.memcheck:                                  ; preds = %overflow.checked559
  %23 = add i32 %mul12, -1, !dbg !3084
  %scevgep561 = getelementptr i8, i8* %.pre538, i32 %23
  %24 = add i32 %mul12, 31, !dbg !3084
  %scevgep560 = getelementptr [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 %24
  %scevgep = getelementptr [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 32
  %bound0 = icmp ule i8* %scevgep, %scevgep561, !dbg !3084
  %bound1 = icmp ule i8* %.pre538, %scevgep560, !dbg !3084
  %memcheck.conflict = and i1 %bound1, %bound0, !dbg !3084
  br i1 %memcheck.conflict, label %middle.block551, label %vector.body550

vector.body550:                                   ; preds = %vector.memcheck, %vector.body550
  %index553 = phi i32 [ %index.next567, %vector.body550 ], [ 0, %vector.memcheck ], !dbg !3088
  %25 = getelementptr inbounds i8, i8* %.pre538, i32 %index553, !dbg !3089
  %26 = bitcast i8* %25 to i32*, !dbg !3089
  %wide.load1 = load i32, i32* %26, align 1, !dbg !3089, !tbaa !3047
  %27 = add i32 %index553, 32, !dbg !3090
  %28 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 %27, !dbg !3090
  %29 = bitcast i8* %28 to i32*, !dbg !3091
  store i32 %wide.load1, i32* %29, align 4, !dbg !3091, !tbaa !3047
  %index.next567 = add i32 %index553, 4, !dbg !3088
  %30 = icmp eq i32 %index.next567, %n.vec556, !dbg !3088
  br i1 %30, label %middle.block551, label %vector.body550, !dbg !3088, !llvm.loop !3092

middle.block551:                                  ; preds = %vector.body550, %vector.memcheck, %overflow.checked559
  %resume.val562 = phi i32 [ 0, %overflow.checked559 ], [ 0, %vector.memcheck ], [ %n.vec556, %vector.body550 ]
  %cmp.n566 = icmp eq i32 %mul12, %resume.val562
  br i1 %cmp.n566, label %for.cond.58.preheader, label %for.body.50

for.cond.58.preheader:                            ; preds = %for.body.50, %middle.block551, %for.cond.48.preheader
  %cmp59.520 = icmp eq i8 %cond8.off0, 0, !dbg !3095
  br i1 %cmp59.520, label %for.cond.cleanup.60, label %for.body.61.lr.ph, !dbg !3097

for.body.61.lr.ph:                                ; preds = %for.cond.58.preheader
  %coordinates = getelementptr inbounds %struct.halide_trace_event, %struct.halide_trace_event* %e, i32 0, i32 9, !dbg !3098
  %31 = bitcast i32** %coordinates to i8**, !dbg !3098
  %.pre539 = load i8*, i8** %31, align 1, !dbg !3098, !tbaa !3100
  %32 = icmp ugt i32 %mul14, 1
  %umax573 = select i1 %32, i32 %mul14, i32 1
  %backedge.overflow574 = icmp eq i32 %umax573, 0
  br i1 %backedge.overflow574, label %for.body.61, label %overflow.checked586

overflow.checked586:                              ; preds = %for.body.61.lr.ph
  %n.vec583 = and i32 %umax573, 1020, !dbg !3101
  %cmp.zero585 = icmp eq i32 %n.vec583, 0, !dbg !3101
  br i1 %cmp.zero585, label %middle.block578, label %vector.memcheck595

vector.memcheck595:                               ; preds = %overflow.checked586
  %33 = add nsw i32 %umax573, -1, !dbg !3097
  %scevgep590 = getelementptr i8, i8* %.pre539, i32 %33
  %34 = add nuw nsw i32 %umax573, 31, !dbg !3097
  %35 = add i32 %34, %mul12, !dbg !3097
  %scevgep589 = getelementptr [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 %35
  %scevgep587 = getelementptr [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 %add
  %bound0591 = icmp ule i8* %scevgep587, %scevgep590, !dbg !3097
  %bound1592 = icmp ule i8* %.pre539, %scevgep589, !dbg !3097
  %memcheck.conflict594 = and i1 %bound1592, %bound0591, !dbg !3097
  br i1 %memcheck.conflict594, label %middle.block578, label %vector.body577

vector.body577:                                   ; preds = %vector.memcheck595, %vector.body577
  %index580 = phi i32 [ %index.next601, %vector.body577 ], [ 0, %vector.memcheck595 ], !dbg !3101
  %36 = getelementptr inbounds i8, i8* %.pre539, i32 %index580, !dbg !3102
  %37 = bitcast i8* %36 to i32*, !dbg !3102
  %wide.load6052 = load i32, i32* %37, align 1, !dbg !3102, !tbaa !3047
  %38 = add i32 %index580, %add, !dbg !3103
  %39 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 %38, !dbg !3103
  %40 = bitcast i8* %39 to i32*, !dbg !3104
  store i32 %wide.load6052, i32* %40, align 1, !dbg !3104, !tbaa !3047
  %index.next601 = add i32 %index580, 4, !dbg !3101
  %41 = icmp eq i32 %index.next601, %n.vec583, !dbg !3101
  br i1 %41, label %middle.block578, label %vector.body577, !dbg !3101, !llvm.loop !3105

middle.block578:                                  ; preds = %vector.body577, %vector.memcheck595, %overflow.checked586
  %resume.val596 = phi i32 [ 0, %overflow.checked586 ], [ 0, %vector.memcheck595 ], [ %n.vec583, %vector.body577 ]
  %cmp.n600 = icmp eq i32 %umax573, %resume.val596
  br i1 %cmp.n600, label %for.cond.cleanup.60, label %for.body.61

for.body.50:                                      ; preds = %middle.block551, %for.body.50
  %i47.0523 = phi i32 [ %inc55, %for.body.50 ], [ %resume.val562, %middle.block551 ]
  %arrayidx51 = getelementptr inbounds i8, i8* %.pre538, i32 %i47.0523, !dbg !3089
  %42 = load i8, i8* %arrayidx51, align 1, !dbg !3089, !tbaa !3047
  %add52 = add i32 %i47.0523, 32, !dbg !3106
  %arrayidx53 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 %add52, !dbg !3090
  store i8 %42, i8* %arrayidx53, align 1, !dbg !3091, !tbaa !3047
  %inc55 = add nuw i32 %i47.0523, 1, !dbg !3088
  tail call void @llvm.dbg.value(metadata i32 %inc55, i64 0, metadata !480, metadata !2613), !dbg !3107
  %cmp49 = icmp ult i32 %inc55, %mul12, !dbg !3081
  br i1 %cmp49, label %for.body.50, label %for.cond.58.preheader, !dbg !3084, !llvm.loop !3108

for.cond.cleanup.60:                              ; preds = %for.body.61, %middle.block578, %for.cond.58.preheader
  %call70 = call i32 @write(i32 %call, i8* %4, i32 %add15) #6, !dbg !3109
  call void @llvm.dbg.value(metadata i32 %call70, i64 0, metadata !484, metadata !2613), !dbg !3110
  %cmp71 = icmp eq i32 %call70, %add15, !dbg !3111
  br i1 %cmp71, label %if.end.73, label %if.then.72, !dbg !3113

for.body.61:                                      ; preds = %for.body.61.lr.ph, %middle.block578, %for.body.61
  %i57.0521 = phi i32 [ %inc67, %for.body.61 ], [ 0, %for.body.61.lr.ph ], [ %resume.val596, %middle.block578 ]
  %arrayidx62 = getelementptr inbounds i8, i8* %.pre539, i32 %i57.0521, !dbg !3102
  %43 = load i8, i8* %arrayidx62, align 1, !dbg !3102, !tbaa !3047
  %add64 = add i32 %i57.0521, %add, !dbg !3114
  %arrayidx65 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 %add64, !dbg !3103
  store i8 %43, i8* %arrayidx65, align 1, !dbg !3104, !tbaa !3047
  %inc67 = add nuw nsw i32 %i57.0521, 1, !dbg !3101
  tail call void @llvm.dbg.value(metadata i32 %inc67, i64 0, metadata !482, metadata !2613), !dbg !3115
  %cmp59 = icmp ult i32 %inc67, %mul14, !dbg !3095
  br i1 %cmp59, label %for.body.61, label %for.cond.cleanup.60, !dbg !3097, !llvm.loop !3116

if.then.72:                                       ; preds = %for.cond.cleanup.60
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1.8, i32 0, i32 0)) #6, !dbg !3117
  br label %if.end.73, !dbg !3117

if.end.73:                                        ; preds = %if.then.72, %for.cond.cleanup.60
  call void @llvm.lifetime.end(i64 4096, i8* %4) #2, !dbg !3119
  br label %if.end.247, !dbg !3120

if.else:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !590, metadata !2613) #2, !dbg !3122
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !592, metadata !2613) #2, !dbg !3124
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !3125
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !3127
  store i8 0, i8* %add.ptr.i, align 1, !dbg !3128, !tbaa !3047
  tail call void @llvm.dbg.value(metadata i32 8, i64 0, metadata !539, metadata !2613), !dbg !3129
  %bits75 = getelementptr inbounds %struct.halide_trace_event, %struct.halide_trace_event* %e, i32 0, i32 4, !dbg !3130
  %44 = load i32, i32* %bits75, align 1, !dbg !3130, !tbaa !3007
  br label %while.cond.74, !dbg !3131

while.cond.74:                                    ; preds = %while.cond.74, %if.else
  %print_bits.0 = phi i32 [ 8, %if.else ], [ %shl78, %while.cond.74 ]
  %cmp76 = icmp slt i32 %print_bits.0, %44, !dbg !3132
  %shl78 = shl i32 %print_bits.0, 1, !dbg !3133
  tail call void @llvm.dbg.value(metadata i32 %shl78, i64 0, metadata !539, metadata !2613), !dbg !3129
  br i1 %cmp76, label %while.cond.74, label %while.end.79, !dbg !3131

while.end.79:                                     ; preds = %while.cond.74
  %cmp80 = icmp slt i32 %print_bits.0, 65, !dbg !3135
  br i1 %cmp80, label %if.end.82, label %if.then.81, !dbg !3137

if.then.81:                                       ; preds = %while.end.79
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2.9, i32 0, i32 0)) #6, !dbg !3138
  br label %if.end.82, !dbg !3138

if.end.82:                                        ; preds = %if.then.81, %while.end.79
  tail call void @llvm.dbg.declare(metadata [8 x i8*]* @_ZZN6Halide7Runtime8Internal13default_traceEPvPK18halide_trace_eventE11event_types, metadata !540, metadata !2613), !dbg !3140
  %event83 = getelementptr inbounds %struct.halide_trace_event, %struct.halide_trace_event* %e, i32 0, i32 1, !dbg !3141
  %45 = load i32, i32* %event83, align 1, !dbg !3141, !tbaa !3043
  %cmp84 = icmp slt i32 %45, 2, !dbg !3142
  %arrayidx86 = getelementptr inbounds [8 x i8*], [8 x i8*]* @_ZZN6Halide7Runtime8Internal13default_traceEPvPK18halide_trace_eventE11event_types, i32 0, i32 %45, !dbg !3143
  %46 = load i8*, i8** %arrayidx86, align 4, !dbg !3143, !tbaa !2768
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !598, metadata !2613) #2, !dbg !3144
  tail call void @llvm.dbg.value(metadata i8* %46, i64 0, metadata !599, metadata !2613) #2, !dbg !3146
  %call.i.362 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* %46) #6, !dbg !3147
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !598, metadata !2613) #2, !dbg !3148
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.198, i32 0, i32 0), i64 0, metadata !599, metadata !2613) #2, !dbg !3150
  %call.i.365 = tail call i8* @halide_string_to_string(i8* %call.i.362, i8* %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.198, i32 0, i32 0)) #6, !dbg !3151
  %func89 = getelementptr inbounds %struct.halide_trace_event, %struct.halide_trace_event* %e, i32 0, i32 0, !dbg !3152
  %47 = load i8*, i8** %func89, align 1, !dbg !3152, !tbaa !3069
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !598, metadata !2613) #2, !dbg !3153
  tail call void @llvm.dbg.value(metadata i8* %47, i64 0, metadata !599, metadata !2613) #2, !dbg !3155
  %call.i.368 = tail call i8* @halide_string_to_string(i8* %call.i.365, i8* %add.ptr.i, i8* %47) #6, !dbg !3156
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !598, metadata !2613) #2, !dbg !3157
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.98, i32 0, i32 0), i64 0, metadata !599, metadata !2613) #2, !dbg !3159
  %call.i.371 = tail call i8* @halide_string_to_string(i8* %call.i.368, i8* %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.98, i32 0, i32 0)) #6, !dbg !3160
  %value_index92 = getelementptr inbounds %struct.halide_trace_event, %struct.halide_trace_event* %e, i32 0, i32 6, !dbg !3161
  %48 = load i32, i32* %value_index92, align 1, !dbg !3161, !tbaa !3058
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !602, metadata !2613) #2, !dbg !3162
  tail call void @llvm.dbg.value(metadata i32 %48, i64 0, metadata !603, metadata !2613) #2, !dbg !3164
  %conv.i = sext i32 %48 to i64, !dbg !3165
  %call.i.374 = tail call i8* @halide_int64_to_string(i8* %call.i.371, i8* %add.ptr.i, i64 %conv.i, i32 1) #6, !dbg !3166
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !598, metadata !2613) #2, !dbg !3167
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i32 0, i32 0), i64 0, metadata !599, metadata !2613) #2, !dbg !3169
  %call.i.377 = tail call i8* @halide_string_to_string(i8* %call.i.374, i8* %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i32 0, i32 0)) #6, !dbg !3170
  %vector_width95 = getelementptr inbounds %struct.halide_trace_event, %struct.halide_trace_event* %e, i32 0, i32 5, !dbg !3171
  %49 = load i32, i32* %vector_width95, align 1, !dbg !3171, !tbaa !3000
  %cmp96 = icmp sgt i32 %49, 1, !dbg !3173
  br i1 %cmp96, label %if.then.97, label %for.cond.101.preheader, !dbg !3174

if.then.97:                                       ; preds = %if.end.82
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !598, metadata !2613) #2, !dbg !3175
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i32 0, i32 0), i64 0, metadata !599, metadata !2613) #2, !dbg !3178
  %call.i.380 = tail call i8* @halide_string_to_string(i8* %call.i.377, i8* %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i32 0, i32 0)) #6, !dbg !3179
  br label %for.cond.101.preheader, !dbg !3180

for.cond.101.preheader:                           ; preds = %if.then.97, %if.end.82
  %call.i.399515.ph = phi i8* [ %call.i.377, %if.end.82 ], [ %call.i.380, %if.then.97 ]
  %dimensions102 = getelementptr inbounds %struct.halide_trace_event, %struct.halide_trace_event* %e, i32 0, i32 8, !dbg !3181
  %50 = load i32, i32* %dimensions102, align 1, !dbg !3181, !tbaa !3005
  %cmp103.532 = icmp sgt i32 %50, 0, !dbg !3183
  br i1 %cmp103.532, label %for.body.105.lr.ph, label %for.cond.cleanup.104, !dbg !3184

for.body.105.lr.ph:                               ; preds = %for.cond.101.preheader
  %coordinates118 = getelementptr inbounds %struct.halide_trace_event, %struct.halide_trace_event* %e, i32 0, i32 9, !dbg !3185
  br label %for.body.105, !dbg !3184

for.cond.cleanup.104:                             ; preds = %if.end.117, %for.cond.101.preheader
  %call.i.399515.lcssa = phi i8* [ %call.i.399515.ph, %for.cond.101.preheader ], [ %call.i.390, %if.end.117 ]
  %51 = load i32, i32* %vector_width95, align 1, !dbg !3187, !tbaa !3000
  %cmp125 = icmp sgt i32 %51, 1, !dbg !3189
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !598, metadata !2613) #2, !dbg !3190
  br i1 %cmp125, label %if.then.126, label %if.else.128, !dbg !3193

for.body.105:                                     ; preds = %if.end.117, %for.body.105.lr.ph
  %i100.0534 = phi i32 [ 0, %for.body.105.lr.ph ], [ %inc122, %if.end.117 ]
  %call.i.399515533 = phi i8* [ %call.i.399515.ph, %for.body.105.lr.ph ], [ %call.i.390, %if.end.117 ]
  %cmp106 = icmp sgt i32 %i100.0534, 0, !dbg !3194
  br i1 %cmp106, label %if.then.107, label %if.end.117, !dbg !3196

if.then.107:                                      ; preds = %for.body.105
  %52 = load i32, i32* %vector_width95, align 1, !dbg !3197, !tbaa !3000
  %cmp109 = icmp sgt i32 %52, 1, !dbg !3200
  br i1 %cmp109, label %land.lhs.true, label %if.else.114, !dbg !3201

land.lhs.true:                                    ; preds = %if.then.107
  %rem = srem i32 %i100.0534, %52, !dbg !3202
  %cmp111 = icmp eq i32 %rem, 0, !dbg !3203
  br i1 %cmp111, label %if.then.112, label %if.else.114, !dbg !3204

if.then.112:                                      ; preds = %land.lhs.true
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !598, metadata !2613) #2, !dbg !3205
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i32 0, i32 0), i64 0, metadata !599, metadata !2613) #2, !dbg !3208
  %call.i.383 = tail call i8* @halide_string_to_string(i8* %call.i.399515533, i8* %add.ptr.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i32 0, i32 0)) #6, !dbg !3209
  br label %if.end.117, !dbg !3210

if.else.114:                                      ; preds = %land.lhs.true, %if.then.107
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !598, metadata !2613) #2, !dbg !3211
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.213, i32 0, i32 0), i64 0, metadata !599, metadata !2613) #2, !dbg !3214
  %call.i.386 = tail call i8* @halide_string_to_string(i8* %call.i.399515533, i8* %add.ptr.i, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.213, i32 0, i32 0)) #6, !dbg !3215
  br label %if.end.117

if.end.117:                                       ; preds = %if.else.114, %if.then.112, %for.body.105
  %call.i.399516 = phi i8* [ %call.i.383, %if.then.112 ], [ %call.i.386, %if.else.114 ], [ %call.i.399515533, %for.body.105 ], !dbg !3185
  %53 = load i32*, i32** %coordinates118, align 1, !dbg !3185, !tbaa !3100
  %arrayidx119 = getelementptr inbounds i32, i32* %53, i32 %i100.0534, !dbg !3216
  %54 = load i32, i32* %arrayidx119, align 4, !dbg !3216, !tbaa !2786
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !602, metadata !2613) #2, !dbg !3217
  tail call void @llvm.dbg.value(metadata i32 %54, i64 0, metadata !603, metadata !2613) #2, !dbg !3219
  %conv.i.389 = sext i32 %54 to i64, !dbg !3220
  %call.i.390 = tail call i8* @halide_int64_to_string(i8* %call.i.399516, i8* %add.ptr.i, i64 %conv.i.389, i32 1) #6, !dbg !3221
  %inc122 = add nuw nsw i32 %i100.0534, 1, !dbg !3222
  tail call void @llvm.dbg.value(metadata i32 %inc122, i64 0, metadata !543, metadata !2613), !dbg !3223
  %55 = load i32, i32* %dimensions102, align 1, !dbg !3181, !tbaa !3005
  %cmp103 = icmp slt i32 %inc122, %55, !dbg !3183
  br i1 %cmp103, label %for.body.105, label %for.cond.cleanup.104, !dbg !3184

if.then.126:                                      ; preds = %for.cond.cleanup.104
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i32 0, i32 0), i64 0, metadata !599, metadata !2613) #2, !dbg !3224
  %call.i.393 = tail call i8* @halide_string_to_string(i8* %call.i.399515.lcssa, i8* %add.ptr.i, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i32 0, i32 0)) #6, !dbg !3225
  br label %if.end.130, !dbg !3226

if.else.128:                                      ; preds = %for.cond.cleanup.104
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.52, i32 0, i32 0), i64 0, metadata !599, metadata !2613) #2, !dbg !3227
  %call.i.396 = tail call i8* @halide_string_to_string(i8* %call.i.399515.lcssa, i8* %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.52, i32 0, i32 0)) #6, !dbg !3230
  br label %if.end.130

if.end.130:                                       ; preds = %if.else.128, %if.then.126
  %call.i.399510 = phi i8* [ %call.i.396, %if.else.128 ], [ %call.i.393, %if.then.126 ]
  br i1 %cmp84, label %if.then.131, label %if.end.244, !dbg !3231

if.then.131:                                      ; preds = %if.end.130
  %56 = load i32, i32* %vector_width95, align 1, !dbg !3232, !tbaa !3000
  %cmp133 = icmp sgt i32 %56, 1, !dbg !3234
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !598, metadata !2613) #2, !dbg !3235
  br i1 %cmp133, label %if.then.134, label %if.else.136, !dbg !3238

if.then.134:                                      ; preds = %if.then.131
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i32 0, i32 0), i64 0, metadata !599, metadata !2613) #2, !dbg !3239
  %call.i.399 = tail call i8* @halide_string_to_string(i8* %call.i.399510, i8* %add.ptr.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i32 0, i32 0)) #6, !dbg !3240
  br label %for.cond.140.preheader, !dbg !3241

if.else.136:                                      ; preds = %if.then.131
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.222, i32 0, i32 0), i64 0, metadata !599, metadata !2613) #2, !dbg !3242
  %call.i.402 = tail call i8* @halide_string_to_string(i8* %call.i.399510, i8* %add.ptr.i, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.222, i32 0, i32 0)) #6, !dbg !3245
  br label %for.cond.140.preheader

for.cond.140.preheader:                           ; preds = %if.else.136, %if.then.134
  %call.i.399513.ph = phi i8* [ %call.i.399, %if.then.134 ], [ %call.i.402, %if.else.136 ]
  %57 = load i32, i32* %vector_width95, align 1, !dbg !3246, !tbaa !3000
  %cmp142.527 = icmp sgt i32 %57, 0, !dbg !3248
  br i1 %cmp142.527, label %for.body.144.lr.ph, label %if.end.244, !dbg !3249

for.body.144.lr.ph:                               ; preds = %for.cond.140.preheader
  %type_code149 = getelementptr inbounds %struct.halide_trace_event, %struct.halide_trace_event* %e, i32 0, i32 3, !dbg !3250
  %cmp166 = icmp eq i32 %print_bits.0, 32, !dbg !3253
  %value168 = getelementptr inbounds %struct.halide_trace_event, %struct.halide_trace_event* %e, i32 0, i32 7, !dbg !3258
  %58 = bitcast i8** %value168 to i16**, !dbg !3260
  %cmp212 = icmp sgt i32 %print_bits.0, 31, !dbg !3262
  %59 = bitcast i8** %value168 to i8***, !dbg !3267
  br label %for.body.144, !dbg !3249

for.cond.cleanup.143:                             ; preds = %for.inc.236
  %cmp240 = icmp sgt i32 %88, 1, !dbg !3270
  br i1 %cmp240, label %if.then.241, label %if.end.244, !dbg !3272

for.body.144:                                     ; preds = %for.inc.236, %for.body.144.lr.ph
  %i139.0529 = phi i32 [ 0, %for.body.144.lr.ph ], [ %inc237, %for.inc.236 ]
  %call.i.399513528 = phi i8* [ %call.i.399513.ph, %for.body.144.lr.ph ], [ %call.i.399511, %for.inc.236 ]
  %cmp145 = icmp sgt i32 %i139.0529, 0, !dbg !3273
  br i1 %cmp145, label %if.then.146, label %if.end.148, !dbg !3275

if.then.146:                                      ; preds = %for.body.144
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !598, metadata !2613) #2, !dbg !3276
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.213, i32 0, i32 0), i64 0, metadata !599, metadata !2613) #2, !dbg !3279
  %call.i.405 = tail call i8* @halide_string_to_string(i8* %call.i.399513528, i8* %add.ptr.i, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.213, i32 0, i32 0)) #6, !dbg !3280
  br label %if.end.148, !dbg !3281

if.end.148:                                       ; preds = %if.then.146, %for.body.144
  %call.i.399512 = phi i8* [ %call.i.405, %if.then.146 ], [ %call.i.399513528, %for.body.144 ]
  %60 = load i32, i32* %type_code149, align 1, !dbg !3250, !tbaa !3049
  switch i32 %60, label %for.inc.236 [
    i32 0, label %if.then.151
    i32 1, label %if.then.181
    i32 2, label %if.then.211
    i32 3, label %if.then.228
  ], !dbg !3282

if.then.151:                                      ; preds = %if.end.148
  switch i32 %print_bits.0, label %if.else.165 [
    i32 8, label %if.then.153
    i32 16, label %if.then.160
  ], !dbg !3283

if.then.153:                                      ; preds = %if.then.151
  %61 = load i8*, i8** %value168, align 1, !dbg !3284, !tbaa !3087
  %arrayidx155 = getelementptr inbounds i8, i8* %61, i32 %i139.0529, !dbg !3286
  %62 = load i8, i8* %arrayidx155, align 1, !dbg !3286, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !602, metadata !2613) #2, !dbg !3287
  %conv.i.408 = sext i8 %62 to i64, !dbg !3289
  %call.i.409 = tail call i8* @halide_int64_to_string(i8* %call.i.399512, i8* %add.ptr.i, i64 %conv.i.408, i32 1) #6, !dbg !3290
  br label %for.inc.236, !dbg !3291

if.then.160:                                      ; preds = %if.then.151
  %63 = load i16*, i16** %58, align 1, !dbg !3260, !tbaa !3087
  %arrayidx162 = getelementptr inbounds i16, i16* %63, i32 %i139.0529, !dbg !3292
  %64 = load i16, i16* %arrayidx162, align 2, !dbg !3292, !tbaa !3293
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !602, metadata !2613) #2, !dbg !3295
  %conv.i.412 = sext i16 %64 to i64, !dbg !3297
  %call.i.413 = tail call i8* @halide_int64_to_string(i8* %call.i.399512, i8* %add.ptr.i, i64 %conv.i.412, i32 1) #6, !dbg !3298
  br label %for.inc.236, !dbg !3299

if.else.165:                                      ; preds = %if.then.151
  %65 = load i8*, i8** %value168, align 1, !dbg !3258, !tbaa !3087
  br i1 %cmp166, label %if.then.167, label %if.else.171, !dbg !3300

if.then.167:                                      ; preds = %if.else.165
  %66 = bitcast i8* %65 to i32*, !dbg !3301
  %arrayidx169 = getelementptr inbounds i32, i32* %66, i32 %i139.0529, !dbg !3302
  %67 = load i32, i32* %arrayidx169, align 4, !dbg !3302, !tbaa !2786
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !602, metadata !2613) #2, !dbg !3303
  tail call void @llvm.dbg.value(metadata i32 %67, i64 0, metadata !603, metadata !2613) #2, !dbg !3305
  %conv.i.416 = sext i32 %67 to i64, !dbg !3306
  %call.i.417 = tail call i8* @halide_int64_to_string(i8* %call.i.399512, i8* %add.ptr.i, i64 %conv.i.416, i32 1) #6, !dbg !3307
  br label %for.inc.236, !dbg !3308

if.else.171:                                      ; preds = %if.else.165
  %68 = bitcast i8* %65 to i64*, !dbg !3309
  %arrayidx173 = getelementptr inbounds i64, i64* %68, i32 %i139.0529, !dbg !3311
  %69 = load i64, i64* %arrayidx173, align 8, !dbg !3311, !tbaa !3312
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  %call.i.420 = tail call i8* @halide_int64_to_string(i8* %call.i.399512, i8* %add.ptr.i, i64 %69, i32 1) #6, !dbg !3314
  br label %for.inc.236

if.then.181:                                      ; preds = %if.end.148
  switch i32 %print_bits.0, label %if.else.195 [
    i32 8, label %if.then.183
    i32 16, label %if.then.190
  ], !dbg !3316

if.then.183:                                      ; preds = %if.then.181
  %70 = load i8*, i8** %value168, align 1, !dbg !3318, !tbaa !3087
  %arrayidx185 = getelementptr inbounds i8, i8* %70, i32 %i139.0529, !dbg !3321
  %71 = load i8, i8* %arrayidx185, align 1, !dbg !3321, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !602, metadata !2613) #2, !dbg !3322
  %conv.i.423 = zext i8 %71 to i64, !dbg !3324
  %call.i.424 = tail call i8* @halide_int64_to_string(i8* %call.i.399512, i8* %add.ptr.i, i64 %conv.i.423, i32 1) #6, !dbg !3325
  br label %for.inc.236, !dbg !3326

if.then.190:                                      ; preds = %if.then.181
  %72 = load i16*, i16** %58, align 1, !dbg !3327, !tbaa !3087
  %arrayidx192 = getelementptr inbounds i16, i16* %72, i32 %i139.0529, !dbg !3330
  %73 = load i16, i16* %arrayidx192, align 2, !dbg !3330, !tbaa !3293
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !602, metadata !2613) #2, !dbg !3331
  %conv.i.427 = zext i16 %73 to i64, !dbg !3333
  %call.i.428 = tail call i8* @halide_int64_to_string(i8* %call.i.399512, i8* %add.ptr.i, i64 %conv.i.427, i32 1) #6, !dbg !3334
  br label %for.inc.236, !dbg !3335

if.else.195:                                      ; preds = %if.then.181
  %74 = load i8*, i8** %value168, align 1, !dbg !3336, !tbaa !3087
  br i1 %cmp166, label %if.then.197, label %if.else.201, !dbg !3339

if.then.197:                                      ; preds = %if.else.195
  %75 = bitcast i8* %74 to i32*, !dbg !3340
  %arrayidx199 = getelementptr inbounds i32, i32* %75, i32 %i139.0529, !dbg !3341
  %76 = load i32, i32* %arrayidx199, align 4, !dbg !3341, !tbaa !2786
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  %conv.i.431 = zext i32 %76 to i64, !dbg !3342
  %call.i.432 = tail call i8* @halide_uint64_to_string(i8* %call.i.399512, i8* %add.ptr.i, i64 %conv.i.431, i32 1) #6, !dbg !3344
  br label %for.inc.236, !dbg !3345

if.else.201:                                      ; preds = %if.else.195
  %77 = bitcast i8* %74 to i64*, !dbg !3346
  %arrayidx203 = getelementptr inbounds i64, i64* %77, i32 %i139.0529, !dbg !3348
  %78 = load i64, i64* %arrayidx203, align 8, !dbg !3348, !tbaa !3312
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  %call.i.435 = tail call i8* @halide_uint64_to_string(i8* %call.i.399512, i8* %add.ptr.i, i64 %78, i32 1) #6, !dbg !3349
  br label %for.inc.236

if.then.211:                                      ; preds = %if.end.148
  br i1 %cmp212, label %if.end.214, label %if.end.214.thread, !dbg !3351

if.end.214.thread:                                ; preds = %if.then.211
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.21, i32 0, i32 0)) #6, !dbg !3352
  %79 = load i8*, i8** %value168, align 1, !dbg !3354, !tbaa !3087
  br label %if.else.220, !dbg !3357

if.end.214:                                       ; preds = %if.then.211
  %80 = load i8*, i8** %value168, align 1, !dbg !3354, !tbaa !3087
  br i1 %cmp166, label %if.then.216, label %if.else.220, !dbg !3357

if.then.216:                                      ; preds = %if.end.214
  %81 = bitcast i8* %80 to float*, !dbg !3358
  %arrayidx218 = getelementptr inbounds float, float* %81, i32 %i139.0529, !dbg !3359
  %82 = load float, float* %arrayidx218, align 4, !dbg !3359, !tbaa !3360
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  %conv.i.438 = fpext float %82 to double, !dbg !3362
  %call.i.439 = tail call i8* @halide_double_to_string(i8* %call.i.399512, i8* %add.ptr.i, double %conv.i.438, i32 0) #6, !dbg !3364
  br label %for.inc.236, !dbg !3365

if.else.220:                                      ; preds = %if.end.214, %if.end.214.thread
  %83 = phi i8* [ %79, %if.end.214.thread ], [ %80, %if.end.214 ]
  %84 = bitcast i8* %83 to double*, !dbg !3366
  %arrayidx222 = getelementptr inbounds double, double* %84, i32 %i139.0529, !dbg !3368
  %85 = load double, double* %arrayidx222, align 8, !dbg !3368, !tbaa !3369
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  %call.i.442 = tail call i8* @halide_double_to_string(i8* %call.i.399512, i8* %add.ptr.i, double %85, i32 1) #6, !dbg !3371
  br label %for.inc.236

if.then.228:                                      ; preds = %if.end.148
  %86 = load i8**, i8*** %59, align 1, !dbg !3267, !tbaa !3087
  %arrayidx230 = getelementptr inbounds i8*, i8** %86, i32 %i139.0529, !dbg !3373
  %87 = load i8*, i8** %arrayidx230, align 4, !dbg !3373, !tbaa !2768
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  %call.i.445 = tail call i8* @halide_pointer_to_string(i8* %call.i.399512, i8* %add.ptr.i, i8* %87) #6, !dbg !3374
  br label %for.inc.236, !dbg !3376

for.inc.236:                                      ; preds = %if.then.228, %if.else.220, %if.then.216, %if.else.201, %if.then.197, %if.then.190, %if.then.183, %if.else.171, %if.then.167, %if.then.160, %if.then.153, %if.end.148
  %call.i.399511 = phi i8* [ %call.i.399512, %if.end.148 ], [ %call.i.413, %if.then.160 ], [ %call.i.420, %if.else.171 ], [ %call.i.417, %if.then.167 ], [ %call.i.409, %if.then.153 ], [ %call.i.442, %if.else.220 ], [ %call.i.439, %if.then.216 ], [ %call.i.445, %if.then.228 ], [ %call.i.424, %if.then.183 ], [ %call.i.432, %if.then.197 ], [ %call.i.435, %if.else.201 ], [ %call.i.428, %if.then.190 ]
  %inc237 = add nuw nsw i32 %i139.0529, 1, !dbg !3377
  tail call void @llvm.dbg.value(metadata i32 %inc237, i64 0, metadata !545, metadata !2613), !dbg !3378
  %88 = load i32, i32* %vector_width95, align 1, !dbg !3246, !tbaa !3000
  %cmp142 = icmp slt i32 %inc237, %88, !dbg !3248
  br i1 %cmp142, label %for.body.144, label %for.cond.cleanup.143, !dbg !3249

if.then.241:                                      ; preds = %for.cond.cleanup.143
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !598, metadata !2613) #2, !dbg !3379
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i64 0, metadata !599, metadata !2613) #2, !dbg !3382
  %call.i.448 = tail call i8* @halide_string_to_string(i8* %call.i.399511, i8* %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0)) #6, !dbg !3383
  br label %if.end.244, !dbg !3384

if.end.244:                                       ; preds = %if.then.241, %for.cond.cleanup.143, %for.cond.140.preheader, %if.end.130
  %call.i.399514 = phi i8* [ %call.i.399511, %for.cond.cleanup.143 ], [ %call.i.448, %if.then.241 ], [ %call.i.399510, %if.end.130 ], [ %call.i.399513.ph, %for.cond.140.preheader ], !dbg !3121
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !598, metadata !2613) #2, !dbg !3385
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !599, metadata !2613) #2, !dbg !3387
  %call.i.451 = tail call i8* @halide_string_to_string(i8* %call.i.399514, i8* %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !3388
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  tail call void @halide_print(i8* %user_context, i8* %call.i) #6, !dbg !3389
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !485, metadata !2613), !dbg !3121
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !3390
  br label %if.end.247

if.end.247:                                       ; preds = %if.end.244, %if.end.73
  ret i32 %0, !dbg !3393

for.inc.1:                                        ; preds = %for.inc
  tail call void @llvm.dbg.value(metadata i32 15, i64 0, metadata !479, metadata !2613), !dbg !3064
  %arrayidx33.2 = getelementptr inbounds i8, i8* %.pre537, i32 2, !dbg !3070
  %89 = load i8, i8* %arrayidx33.2, align 1, !dbg !3070, !tbaa !3047
  %arrayidx34.2 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 16, !dbg !3071
  store i8 %89, i8* %arrayidx34.2, align 4, !dbg !3072, !tbaa !3047
  %cmp37.2 = icmp eq i8 %89, 0, !dbg !3073
  br i1 %cmp37.2, label %for.body.42.preheader, label %for.inc.2, !dbg !3075

for.inc.2:                                        ; preds = %for.inc.1
  tail call void @llvm.dbg.value(metadata i32 15, i64 0, metadata !479, metadata !2613), !dbg !3064
  %arrayidx33.3 = getelementptr inbounds i8, i8* %.pre537, i32 3, !dbg !3070
  %90 = load i8, i8* %arrayidx33.3, align 1, !dbg !3070, !tbaa !3047
  %arrayidx34.3 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 17, !dbg !3071
  store i8 %90, i8* %arrayidx34.3, align 1, !dbg !3072, !tbaa !3047
  %cmp37.3 = icmp eq i8 %90, 0, !dbg !3073
  br i1 %cmp37.3, label %for.body.42.preheader, label %for.inc.3, !dbg !3075

for.inc.3:                                        ; preds = %for.inc.2
  tail call void @llvm.dbg.value(metadata i32 15, i64 0, metadata !479, metadata !2613), !dbg !3064
  %arrayidx33.4 = getelementptr inbounds i8, i8* %.pre537, i32 4, !dbg !3070
  %91 = load i8, i8* %arrayidx33.4, align 1, !dbg !3070, !tbaa !3047
  %arrayidx34.4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 18, !dbg !3071
  store i8 %91, i8* %arrayidx34.4, align 2, !dbg !3072, !tbaa !3047
  %cmp37.4 = icmp eq i8 %91, 0, !dbg !3073
  br i1 %cmp37.4, label %for.body.42.preheader, label %for.inc.4, !dbg !3075

for.inc.4:                                        ; preds = %for.inc.3
  tail call void @llvm.dbg.value(metadata i32 15, i64 0, metadata !479, metadata !2613), !dbg !3064
  %arrayidx33.5 = getelementptr inbounds i8, i8* %.pre537, i32 5, !dbg !3070
  %92 = load i8, i8* %arrayidx33.5, align 1, !dbg !3070, !tbaa !3047
  %arrayidx34.5 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 19, !dbg !3071
  store i8 %92, i8* %arrayidx34.5, align 1, !dbg !3072, !tbaa !3047
  %cmp37.5 = icmp eq i8 %92, 0, !dbg !3073
  br i1 %cmp37.5, label %for.body.42.preheader, label %for.inc.5, !dbg !3075

for.inc.5:                                        ; preds = %for.inc.4
  tail call void @llvm.dbg.value(metadata i32 15, i64 0, metadata !479, metadata !2613), !dbg !3064
  %arrayidx33.6 = getelementptr inbounds i8, i8* %.pre537, i32 6, !dbg !3070
  %93 = load i8, i8* %arrayidx33.6, align 1, !dbg !3070, !tbaa !3047
  %arrayidx34.6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 20, !dbg !3071
  store i8 %93, i8* %arrayidx34.6, align 4, !dbg !3072, !tbaa !3047
  %cmp37.6 = icmp eq i8 %93, 0, !dbg !3073
  br i1 %cmp37.6, label %for.body.42.preheader, label %for.inc.6, !dbg !3075

for.inc.6:                                        ; preds = %for.inc.5
  tail call void @llvm.dbg.value(metadata i32 15, i64 0, metadata !479, metadata !2613), !dbg !3064
  %arrayidx33.7 = getelementptr inbounds i8, i8* %.pre537, i32 7, !dbg !3070
  %94 = load i8, i8* %arrayidx33.7, align 1, !dbg !3070, !tbaa !3047
  %arrayidx34.7 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 21, !dbg !3071
  store i8 %94, i8* %arrayidx34.7, align 1, !dbg !3072, !tbaa !3047
  %cmp37.7 = icmp eq i8 %94, 0, !dbg !3073
  br i1 %cmp37.7, label %for.body.42.preheader, label %for.inc.7, !dbg !3075

for.inc.7:                                        ; preds = %for.inc.6
  tail call void @llvm.dbg.value(metadata i32 15, i64 0, metadata !479, metadata !2613), !dbg !3064
  %arrayidx33.8 = getelementptr inbounds i8, i8* %.pre537, i32 8, !dbg !3070
  %95 = load i8, i8* %arrayidx33.8, align 1, !dbg !3070, !tbaa !3047
  %arrayidx34.8 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 22, !dbg !3071
  store i8 %95, i8* %arrayidx34.8, align 2, !dbg !3072, !tbaa !3047
  %cmp37.8 = icmp eq i8 %95, 0, !dbg !3073
  br i1 %cmp37.8, label %for.body.42.preheader, label %for.inc.8, !dbg !3075

for.inc.8:                                        ; preds = %for.inc.7
  tail call void @llvm.dbg.value(metadata i32 15, i64 0, metadata !479, metadata !2613), !dbg !3064
  %arrayidx33.9 = getelementptr inbounds i8, i8* %.pre537, i32 9, !dbg !3070
  %96 = load i8, i8* %arrayidx33.9, align 1, !dbg !3070, !tbaa !3047
  %arrayidx34.9 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 23, !dbg !3071
  store i8 %96, i8* %arrayidx34.9, align 1, !dbg !3072, !tbaa !3047
  %cmp37.9 = icmp eq i8 %96, 0, !dbg !3073
  br i1 %cmp37.9, label %for.body.42.preheader, label %for.inc.9, !dbg !3075

for.inc.9:                                        ; preds = %for.inc.8
  tail call void @llvm.dbg.value(metadata i32 15, i64 0, metadata !479, metadata !2613), !dbg !3064
  %arrayidx33.10 = getelementptr inbounds i8, i8* %.pre537, i32 10, !dbg !3070
  %97 = load i8, i8* %arrayidx33.10, align 1, !dbg !3070, !tbaa !3047
  %arrayidx34.10 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 24, !dbg !3071
  store i8 %97, i8* %arrayidx34.10, align 4, !dbg !3072, !tbaa !3047
  %cmp37.10 = icmp eq i8 %97, 0, !dbg !3073
  br i1 %cmp37.10, label %for.body.42.preheader, label %for.inc.10, !dbg !3075

for.inc.10:                                       ; preds = %for.inc.9
  tail call void @llvm.dbg.value(metadata i32 15, i64 0, metadata !479, metadata !2613), !dbg !3064
  %arrayidx33.11 = getelementptr inbounds i8, i8* %.pre537, i32 11, !dbg !3070
  %98 = load i8, i8* %arrayidx33.11, align 1, !dbg !3070, !tbaa !3047
  %arrayidx34.11 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 25, !dbg !3071
  store i8 %98, i8* %arrayidx34.11, align 1, !dbg !3072, !tbaa !3047
  %cmp37.11 = icmp eq i8 %98, 0, !dbg !3073
  br i1 %cmp37.11, label %for.body.42.preheader, label %for.inc.11, !dbg !3075

for.inc.11:                                       ; preds = %for.inc.10
  tail call void @llvm.dbg.value(metadata i32 15, i64 0, metadata !479, metadata !2613), !dbg !3064
  %arrayidx33.12 = getelementptr inbounds i8, i8* %.pre537, i32 12, !dbg !3070
  %99 = load i8, i8* %arrayidx33.12, align 1, !dbg !3070, !tbaa !3047
  %arrayidx34.12 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 26, !dbg !3071
  store i8 %99, i8* %arrayidx34.12, align 2, !dbg !3072, !tbaa !3047
  %cmp37.12 = icmp eq i8 %99, 0, !dbg !3073
  br i1 %cmp37.12, label %for.body.42.preheader, label %for.inc.12, !dbg !3075

for.inc.12:                                       ; preds = %for.inc.11
  tail call void @llvm.dbg.value(metadata i32 15, i64 0, metadata !479, metadata !2613), !dbg !3064
  %arrayidx33.13 = getelementptr inbounds i8, i8* %.pre537, i32 13, !dbg !3070
  %100 = load i8, i8* %arrayidx33.13, align 1, !dbg !3070, !tbaa !3047
  %arrayidx34.13 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 27, !dbg !3071
  store i8 %100, i8* %arrayidx34.13, align 1, !dbg !3072, !tbaa !3047
  %cmp37.13 = icmp eq i8 %100, 0, !dbg !3073
  br i1 %cmp37.13, label %for.body.42.preheader, label %for.inc.13, !dbg !3075

for.inc.13:                                       ; preds = %for.inc.12
  tail call void @llvm.dbg.value(metadata i32 15, i64 0, metadata !479, metadata !2613), !dbg !3064
  %arrayidx33.14 = getelementptr inbounds i8, i8* %.pre537, i32 14, !dbg !3070
  %101 = load i8, i8* %arrayidx33.14, align 1, !dbg !3070, !tbaa !3047
  %arrayidx34.14 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 28, !dbg !3071
  store i8 %101, i8* %arrayidx34.14, align 4, !dbg !3072, !tbaa !3047
  %cmp37.14 = icmp eq i8 %101, 0, !dbg !3073
  br i1 %cmp37.14, label %for.body.42.preheader, label %for.inc.14, !dbg !3075

for.inc.14:                                       ; preds = %for.inc.13
  tail call void @llvm.dbg.value(metadata i32 15, i64 0, metadata !479, metadata !2613), !dbg !3064
  %arrayidx33.15 = getelementptr inbounds i8, i8* %.pre537, i32 15, !dbg !3070
  %102 = load i8, i8* %arrayidx33.15, align 1, !dbg !3070, !tbaa !3047
  %arrayidx34.15 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 29, !dbg !3071
  store i8 %102, i8* %arrayidx34.15, align 1, !dbg !3072, !tbaa !3047
  %cmp37.15 = icmp eq i8 %102, 0, !dbg !3073
  br i1 %cmp37.15, label %for.body.42.preheader, label %for.inc.15, !dbg !3075

for.inc.15:                                       ; preds = %for.inc.14
  tail call void @llvm.dbg.value(metadata i32 15, i64 0, metadata !479, metadata !2613), !dbg !3064
  %arrayidx33.16 = getelementptr inbounds i8, i8* %.pre537, i32 16, !dbg !3070
  %103 = load i8, i8* %arrayidx33.16, align 1, !dbg !3070, !tbaa !3047
  %arrayidx34.16 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i32 0, i32 30, !dbg !3071
  store i8 %103, i8* %arrayidx34.16, align 2, !dbg !3072, !tbaa !3047
  %cmp37.16 = icmp eq i8 %103, 0, !dbg !3073
  tail call void @llvm.dbg.value(metadata i32 15, i64 0, metadata !479, metadata !2613), !dbg !3064
  %. = select i1 %cmp37.16, i32 30, i32 31, !dbg !3075
  br label %for.body.42.preheader, !dbg !3075
}

; Function Attrs: nounwind
define weak i32 @halide_get_trace_file(i8* %user_context) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !562, metadata !2613), !dbg !3394
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedSpinLock"* undef, i64 0, metadata !563, metadata !2613), !dbg !3395
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedSpinLock"* undef, i64 0, metadata !583, metadata !2613), !dbg !3396
  tail call void @llvm.dbg.value(metadata i32* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE, i64 0, metadata !584, metadata !2613), !dbg !3398
  br label %while.cond.i, !dbg !3399

while.cond.i:                                     ; preds = %while.cond.i, %entry
  %0 = atomicrmw xchg i32* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE, i32 1 seq_cst, !dbg !3401
  %tobool.i = icmp eq i32 %0, 0, !dbg !3401
  br i1 %tobool.i, label %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVi.exit, label %while.cond.i, !dbg !3399

_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVi.exit: ; preds = %while.cond.i
  %1 = load i8, i8* @_ZN6Halide7Runtime8Internal29halide_trace_file_initializedE, align 1, !dbg !3402, !tbaa !2617, !range !2621
  %tobool = icmp eq i8 %1, 0, !dbg !3402
  br i1 %tobool, label %if.then, label %if.end.6, !dbg !3403

if.then:                                          ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVi.exit
  %call = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i32 0, i32 0)) #6, !dbg !3404
  tail call void @llvm.dbg.value(metadata i8* %call, i64 0, metadata !564, metadata !2613), !dbg !3405
  %tobool1 = icmp eq i8* %call, null, !dbg !3406
  br i1 %tobool1, label %if.else, label %if.then.2, !dbg !3407

if.then.2:                                        ; preds = %if.then
  %call3 = tail call i32 @open(i8* %call, i32 1089, i32 420) #6, !dbg !3408
  tail call void @llvm.dbg.value(metadata i32 %call3, i64 0, metadata !567, metadata !2613), !dbg !3409
  %cmp = icmp sgt i32 %call3, 0, !dbg !3410
  br i1 %cmp, label %if.end, label %if.then.4, !dbg !3412

if.then.4:                                        ; preds = %if.then.2
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.25, i32 0, i32 0)) #6, !dbg !3413
  br label %if.end, !dbg !3413

if.end:                                           ; preds = %if.then.4, %if.then.2
  tail call void @halide_set_trace_file(i32 %call3) #7, !dbg !3415
  store i8 1, i8* @_ZN6Halide7Runtime8Internal35halide_trace_file_internally_openedE, align 1, !dbg !3416, !tbaa !2617
  br label %if.end.6, !dbg !3417

if.else:                                          ; preds = %if.then
  tail call void @halide_set_trace_file(i32 0) #7, !dbg !3418
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.end, %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVi.exit
  %2 = load i32, i32* @_ZN6Halide7Runtime8Internal17halide_trace_fileE, align 4, !dbg !3420, !tbaa !2786
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedSpinLock"* undef, i64 0, metadata !563, metadata !2613), !dbg !3395
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedSpinLock"* undef, i64 0, metadata !587, metadata !2613), !dbg !3421
  store atomic i32 0, i32* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE release, align 4, !dbg !3423
  ret i32 %2, !dbg !3425
}

declare i32 @write(i32, i8* nocapture readonly, i32) #1

; Function Attrs: nounwind
define weak i32 (i8*, %struct.halide_trace_event*)* @halide_set_custom_trace(i32 (i8*, %struct.halide_trace_event*)* %t) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i32 (i8*, %struct.halide_trace_event*)* %t, i64 0, metadata !555, metadata !2613), !dbg !3426
  %0 = load i32 (i8*, %struct.halide_trace_event*)*, i32 (i8*, %struct.halide_trace_event*)** @_ZN6Halide7Runtime8Internal19halide_custom_traceE, align 4, !dbg !3427, !tbaa !2768
  tail call void @llvm.dbg.value(metadata i32 (i8*, %struct.halide_trace_event*)* %0, i64 0, metadata !556, metadata !2613), !dbg !3428
  store i32 (i8*, %struct.halide_trace_event*)* %t, i32 (i8*, %struct.halide_trace_event*)** @_ZN6Halide7Runtime8Internal19halide_custom_traceE, align 4, !dbg !3429, !tbaa !2768
  ret i32 (i8*, %struct.halide_trace_event*)* %0, !dbg !3430
}

; Function Attrs: nounwind
define weak void @halide_set_trace_file(i32 %fd) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i32 %fd, i64 0, metadata !559, metadata !2613), !dbg !3431
  store i32 %fd, i32* @_ZN6Halide7Runtime8Internal17halide_trace_fileE, align 4, !dbg !3432, !tbaa !2786
  store i8 1, i8* @_ZN6Halide7Runtime8Internal29halide_trace_file_initializedE, align 1, !dbg !3433, !tbaa !2617
  ret void, !dbg !3434
}

declare i32 @open(i8* nocapture readonly, i32, i32) #1

; Function Attrs: nounwind
define weak i32 @halide_trace(i8* %user_context, %struct.halide_trace_event* %e) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !572, metadata !2613), !dbg !3435
  tail call void @llvm.dbg.value(metadata %struct.halide_trace_event* %e, i64 0, metadata !573, metadata !2613), !dbg !3436
  %0 = load i32 (i8*, %struct.halide_trace_event*)*, i32 (i8*, %struct.halide_trace_event*)** @_ZN6Halide7Runtime8Internal19halide_custom_traceE, align 4, !dbg !3437, !tbaa !2768
  %call = tail call i32 %0(i8* %user_context, %struct.halide_trace_event* %e) #6, !dbg !3438
  ret i32 %call, !dbg !3439
}

; Function Attrs: nounwind
define weak i32 @halide_shutdown_trace() #0 {
entry:
  %0 = load i8, i8* @_ZN6Halide7Runtime8Internal35halide_trace_file_internally_openedE, align 1, !dbg !3440, !tbaa !2617, !range !2621
  %tobool = icmp eq i8 %0, 0, !dbg !3440
  br i1 %tobool, label %return, label %if.then, !dbg !3441

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @_ZN6Halide7Runtime8Internal17halide_trace_fileE, align 4, !dbg !3442, !tbaa !2786
  %call = tail call i32 @close(i32 %1) #6, !dbg !3443
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !576, metadata !2613), !dbg !3444
  store i32 0, i32* @_ZN6Halide7Runtime8Internal17halide_trace_fileE, align 4, !dbg !3445, !tbaa !2786
  store i8 0, i8* @_ZN6Halide7Runtime8Internal29halide_trace_file_initializedE, align 1, !dbg !3446, !tbaa !2617
  store i8 0, i8* @_ZN6Halide7Runtime8Internal35halide_trace_file_internally_openedE, align 1, !dbg !3447, !tbaa !2617
  br label %return

return:                                           ; preds = %if.then, %entry
  %retval.0 = phi i32 [ %call, %if.then ], [ 0, %entry ]
  ret i32 %retval.0, !dbg !3448
}

declare i32 @close(i32) #1

; Function Attrs: nounwind
define weak void @halide_trace_cleanup() #0 {
entry:
  %call = tail call i32 @halide_shutdown_trace() #7, !dbg !3449
  ret void, !dbg !3450
}

; Function Attrs: nounwind
define linkonce zeroext i1 @_ZN6Halide7Runtime8Internal18has_tiff_extensionEPKc(i8* %filename) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %filename, i64 0, metadata !682, metadata !2613), !dbg !3451
  tail call void @llvm.dbg.value(metadata i8* %filename, i64 0, metadata !683, metadata !2613), !dbg !3452
  br label %while.cond, !dbg !3453

while.cond:                                       ; preds = %while.cond, %entry
  %f.0 = phi i8* [ %filename, %entry ], [ %incdec.ptr, %while.cond ]
  %0 = load i8, i8* %f.0, align 1, !dbg !3454, !tbaa !3047
  %cmp = icmp eq i8 %0, 0, !dbg !3456
  %incdec.ptr = getelementptr inbounds i8, i8* %f.0, i32 1, !dbg !3457
  tail call void @llvm.dbg.value(metadata i8* %incdec.ptr, i64 0, metadata !683, metadata !2613), !dbg !3452
  br i1 %cmp, label %while.cond.1.preheader, label %while.cond, !dbg !3453

while.cond.1.preheader:                           ; preds = %while.cond
  %cmp2.73 = icmp eq i8* %f.0, %filename, !dbg !3459
  br i1 %cmp2.73, label %cleanup, label %land.rhs, !dbg !3460

land.rhs:                                         ; preds = %while.cond.1.preheader, %while.body.5
  %cmp977 = phi i1 [ %cmp9, %while.body.5 ], [ false, %while.cond.1.preheader ]
  %f.176 = phi i8* [ %incdec.ptr6, %while.body.5 ], [ %f.0, %while.cond.1.preheader ]
  br i1 %cmp977, label %if.end, label %while.body.5, !dbg !3461

while.body.5:                                     ; preds = %land.rhs
  %incdec.ptr6 = getelementptr inbounds i8, i8* %f.176, i32 -1, !dbg !3463
  tail call void @llvm.dbg.value(metadata i8* %incdec.ptr6, i64 0, metadata !683, metadata !2613), !dbg !3452
  %cmp2 = icmp eq i8* %incdec.ptr6, %filename, !dbg !3459
  %.pr = load i8, i8* %incdec.ptr6, align 1, !dbg !3454, !tbaa !3047
  %cmp9 = icmp eq i8 %.pr, 46, !dbg !3465
  br i1 %cmp2, label %while.end.7, label %land.rhs, !dbg !3460

while.end.7:                                      ; preds = %while.body.5
  br i1 %cmp9, label %if.end, label %cleanup, !dbg !3466

if.end:                                           ; preds = %land.rhs, %while.end.7
  %f.171 = phi i8* [ %filename, %while.end.7 ], [ %f.176, %land.rhs ]
  %incdec.ptr10 = getelementptr inbounds i8, i8* %f.171, i32 1, !dbg !3467
  tail call void @llvm.dbg.value(metadata i8* %incdec.ptr10, i64 0, metadata !683, metadata !2613), !dbg !3452
  %1 = load i8, i8* %incdec.ptr10, align 1, !dbg !3468, !tbaa !3047
  switch i8 %1, label %cleanup [
    i8 116, label %if.end.16
    i8 84, label %if.end.16
  ], !dbg !3470

if.end.16:                                        ; preds = %if.end, %if.end
  %incdec.ptr17 = getelementptr inbounds i8, i8* %f.171, i32 2, !dbg !3471
  tail call void @llvm.dbg.value(metadata i8* %incdec.ptr17, i64 0, metadata !683, metadata !2613), !dbg !3452
  %2 = load i8, i8* %incdec.ptr17, align 1, !dbg !3472, !tbaa !3047
  switch i8 %2, label %cleanup [
    i8 105, label %if.end.24
    i8 73, label %if.end.24
  ], !dbg !3474

if.end.24:                                        ; preds = %if.end.16, %if.end.16
  %incdec.ptr25 = getelementptr inbounds i8, i8* %f.171, i32 3, !dbg !3475
  tail call void @llvm.dbg.value(metadata i8* %incdec.ptr25, i64 0, metadata !683, metadata !2613), !dbg !3452
  %3 = load i8, i8* %incdec.ptr25, align 1, !dbg !3476, !tbaa !3047
  switch i8 %3, label %cleanup [
    i8 102, label %if.end.32
    i8 70, label %if.end.32
  ], !dbg !3478

if.end.32:                                        ; preds = %if.end.24, %if.end.24
  %incdec.ptr33 = getelementptr inbounds i8, i8* %f.171, i32 4, !dbg !3479
  tail call void @llvm.dbg.value(metadata i8* %incdec.ptr33, i64 0, metadata !683, metadata !2613), !dbg !3452
  %4 = load i8, i8* %incdec.ptr33, align 1, !dbg !3480, !tbaa !3047
  switch i8 %4, label %if.then.43 [
    i8 0, label %cleanup
    i8 102, label %if.end.44
    i8 70, label %if.end.44
  ], !dbg !3482

if.then.43:                                       ; preds = %if.end.32
  br label %cleanup, !dbg !3483

if.end.44:                                        ; preds = %if.end.32, %if.end.32
  %incdec.ptr45 = getelementptr inbounds i8, i8* %f.171, i32 5, !dbg !3485
  tail call void @llvm.dbg.value(metadata i8* %incdec.ptr45, i64 0, metadata !683, metadata !2613), !dbg !3452
  %5 = load i8, i8* %incdec.ptr45, align 1, !dbg !3486, !tbaa !3047
  %cmp47 = icmp eq i8 %5, 0, !dbg !3487
  br label %cleanup, !dbg !3488

cleanup:                                          ; preds = %if.end.44, %if.then.43, %if.end.32, %if.end.24, %if.end.16, %if.end, %while.end.7, %while.cond.1.preheader
  %retval.0 = phi i1 [ false, %if.then.43 ], [ %cmp47, %if.end.44 ], [ false, %while.end.7 ], [ false, %if.end ], [ false, %if.end.16 ], [ false, %if.end.24 ], [ true, %if.end.32 ], [ false, %while.cond.1.preheader ]
  ret i1 %retval.0, !dbg !3489
}

; Function Attrs: nounwind
define weak i32 @halide_debug_to_file(i8* %user_context, i8* %filename, i8* %data, i32 %s0, i32 %s1, i32 %s2, i32 %s3, i32 %type_code, i32 %bytes_per_element) #0 {
entry:
  %header = alloca %"struct.Halide::Runtime::Internal::halide_tiff_header", align 2
  tail call void @llvm.dbg.declare(metadata [2 x i8]* undef, metadata !706, metadata !3490), !dbg !3491
  %offset = alloca i32, align 4
  %count = alloca i32, align 4
  %header95 = alloca [5 x i32], align 4
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !688, metadata !2613), !dbg !3492
  tail call void @llvm.dbg.value(metadata i8* %filename, i64 0, metadata !689, metadata !2613), !dbg !3493
  tail call void @llvm.dbg.value(metadata i8* %data, i64 0, metadata !690, metadata !2613), !dbg !3494
  tail call void @llvm.dbg.value(metadata i32 %s0, i64 0, metadata !691, metadata !2613), !dbg !3495
  tail call void @llvm.dbg.value(metadata i32 %s1, i64 0, metadata !692, metadata !2613), !dbg !3496
  tail call void @llvm.dbg.value(metadata i32 %s2, i64 0, metadata !693, metadata !2613), !dbg !3497
  tail call void @llvm.dbg.value(metadata i32 %s3, i64 0, metadata !694, metadata !2613), !dbg !3498
  tail call void @llvm.dbg.value(metadata i32 %type_code, i64 0, metadata !695, metadata !2613), !dbg !3499
  tail call void @llvm.dbg.value(metadata i32 %bytes_per_element, i64 0, metadata !696, metadata !2613), !dbg !3500
  %call = tail call i8* @fopen(i8* %filename, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i32 0, i32 0)) #6, !dbg !3501
  tail call void @llvm.dbg.value(metadata i8* %call, i64 0, metadata !697, metadata !2613), !dbg !3502
  %tobool = icmp eq i8* %call, null, !dbg !3503
  br i1 %tobool, label %cleanup.117, label %if.end, !dbg !3505

if.end:                                           ; preds = %entry
  tail call void @llvm.dbg.value(metadata i32 %s0, i64 0, metadata !698, metadata !2613), !dbg !3506
  %mul = mul i32 %s1, %s0, !dbg !3507
  %mul1 = mul i32 %mul, %s2, !dbg !3508
  %mul2 = mul i32 %mul1, %s3, !dbg !3509
  tail call void @llvm.dbg.value(metadata i32 %mul2, i64 0, metadata !698, metadata !2613), !dbg !3506
  %call3 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal18has_tiff_extensionEPKc(i8* %filename) #7, !dbg !3510
  br i1 %call3, label %if.then.4, label %if.else.94, !dbg !3511

if.then.4:                                        ; preds = %if.end
  tail call void @llvm.dbg.value(metadata i32 %s0, i64 0, metadata !702, metadata !2613), !dbg !3512
  tail call void @llvm.dbg.value(metadata i32 %s1, i64 0, metadata !703, metadata !2613), !dbg !3513
  %0 = icmp ult i32 %s3, 2, !dbg !3514
  %cmp6 = icmp slt i32 %s2, 5, !dbg !3516
  %or.cond123 = and i1 %cmp6, %0, !dbg !3514
  %s2.s3 = select i1 %or.cond123, i32 %s2, i32 %s3, !dbg !3517
  %.s2 = select i1 %or.cond123, i32 1, i32 %s2, !dbg !3517
  %1 = bitcast %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header to i8*, !dbg !3519
  call void @llvm.lifetime.start(i64 210, i8* %1) #2, !dbg !3519
  tail call void @llvm.dbg.declare(metadata i32* undef, metadata !706, metadata !2613), !dbg !3491
  tail call void @llvm.dbg.value(metadata i8 73, i64 0, metadata !706, metadata !3520), !dbg !3491
  tail call void @llvm.dbg.value(metadata i16 19789, i64 0, metadata !706, metadata !3490), !dbg !3491
  tail call void @llvm.dbg.value(metadata i8* undef, i64 0, metadata !707, metadata !2613), !dbg !3521
  %byte_order_marker = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 0, !dbg !3522
  store i16 18761, i16* %byte_order_marker, align 2, !dbg !3523, !tbaa !3524
  %version = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 1, !dbg !3526
  store i16 42, i16* %version, align 2, !dbg !3527, !tbaa !3528
  %ifd0_offset = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 2, !dbg !3529
  store i32 8, i32* %ifd0_offset, align 2, !dbg !3530, !tbaa !3531
  %entry_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 3, !dbg !3532
  store i16 15, i16* %entry_count, align 2, !dbg !3533, !tbaa !3534
  tail call void @llvm.dbg.value(metadata i16 256, i64 0, metadata !726, metadata !2613), !dbg !3535
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !727, metadata !2613), !dbg !3537
  tail call void @llvm.dbg.value(metadata i32 %s0, i64 0, metadata !728, metadata !2613), !dbg !3538
  %tag_code2.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 0, i32 0, !dbg !3539
  store i16 256, i16* %tag_code2.i, align 2, !dbg !3540, !tbaa !3541
  %type_code.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 0, i32 1, !dbg !3543
  store i16 4, i16* %type_code.i, align 2, !dbg !3544, !tbaa !3545
  %count3.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 0, i32 2, !dbg !3546
  store i32 1, i32* %count3.i, align 2, !dbg !3547, !tbaa !3548
  %i32.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 0, i32 3, i32 0, !dbg !3549
  store i32 %s0, i32* %i32.i, align 2, !dbg !3550, !tbaa !2786
  tail call void @llvm.dbg.value(metadata i16 257, i64 0, metadata !726, metadata !2613), !dbg !3551
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !727, metadata !2613), !dbg !3553
  tail call void @llvm.dbg.value(metadata i32 %s1, i64 0, metadata !728, metadata !2613), !dbg !3554
  %tag_code2.i.257 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 1, i32 0, !dbg !3555
  store i16 257, i16* %tag_code2.i.257, align 2, !dbg !3556, !tbaa !3541
  %type_code.i.258 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 1, i32 1, !dbg !3557
  store i16 4, i16* %type_code.i.258, align 2, !dbg !3558, !tbaa !3545
  %count3.i.259 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 1, i32 2, !dbg !3559
  store i32 1, i32* %count3.i.259, align 2, !dbg !3560, !tbaa !3548
  %i32.i.260 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 1, i32 3, i32 0, !dbg !3561
  store i32 %s1, i32* %i32.i.260, align 2, !dbg !3562, !tbaa !2786
  %mul15 = shl nsw i32 %bytes_per_element, 3, !dbg !3563
  %conv16 = trunc i32 %mul15 to i16, !dbg !3564
  tail call void @llvm.dbg.value(metadata i16 258, i64 0, metadata !732, metadata !2613), !dbg !3565
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !733, metadata !2613), !dbg !3567
  tail call void @llvm.dbg.value(metadata i16 %conv16, i64 0, metadata !734, metadata !2613), !dbg !3568
  %tag_code2.i.252 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 2, i32 0, !dbg !3569
  store i16 258, i16* %tag_code2.i.252, align 2, !dbg !3570, !tbaa !3541
  %type_code.i.253 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 2, i32 1, !dbg !3571
  store i16 3, i16* %type_code.i.253, align 2, !dbg !3572, !tbaa !3545
  %count3.i.254 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 2, i32 2, !dbg !3573
  store i32 1, i32* %count3.i.254, align 2, !dbg !3574, !tbaa !3548
  %value4.i.255 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 2, i32 3, !dbg !3575
  %i16.i.256 = bitcast %union.anon* %value4.i.255 to i16*, !dbg !3576
  store i16 %conv16, i16* %i16.i.256, align 2, !dbg !3577, !tbaa !3293
  tail call void @llvm.dbg.value(metadata i16 259, i64 0, metadata !732, metadata !2613), !dbg !3578
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !733, metadata !2613), !dbg !3580
  tail call void @llvm.dbg.value(metadata i16 1, i64 0, metadata !734, metadata !2613), !dbg !3581
  %tag_code2.i.247 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 3, i32 0, !dbg !3582
  store i16 259, i16* %tag_code2.i.247, align 2, !dbg !3583, !tbaa !3541
  %type_code.i.248 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 3, i32 1, !dbg !3584
  store i16 3, i16* %type_code.i.248, align 2, !dbg !3585, !tbaa !3545
  %count3.i.249 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 3, i32 2, !dbg !3586
  store i32 1, i32* %count3.i.249, align 2, !dbg !3587, !tbaa !3548
  %value4.i.250 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 3, i32 3, !dbg !3588
  %i16.i.251 = bitcast %union.anon* %value4.i.250 to i16*, !dbg !3589
  store i16 1, i16* %i16.i.251, align 2, !dbg !3590, !tbaa !3293
  %cmp19 = icmp sgt i32 %s2.s3, 2, !dbg !3591
  %conv20 = select i1 %cmp19, i16 2, i16 1, !dbg !3592
  tail call void @llvm.dbg.value(metadata i16 262, i64 0, metadata !732, metadata !2613), !dbg !3593
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !733, metadata !2613), !dbg !3595
  tail call void @llvm.dbg.value(metadata i16 %conv20, i64 0, metadata !734, metadata !2613), !dbg !3596
  %tag_code2.i.242 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 4, i32 0, !dbg !3597
  store i16 262, i16* %tag_code2.i.242, align 2, !dbg !3598, !tbaa !3541
  %type_code.i.243 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 4, i32 1, !dbg !3599
  store i16 3, i16* %type_code.i.243, align 2, !dbg !3600, !tbaa !3545
  %count3.i.244 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 4, i32 2, !dbg !3601
  store i32 1, i32* %count3.i.244, align 2, !dbg !3602, !tbaa !3548
  %value4.i.245 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 4, i32 3, !dbg !3603
  %i16.i.246 = bitcast %union.anon* %value4.i.245 to i16*, !dbg !3604
  store i16 %conv20, i16* %i16.i.246, align 2, !dbg !3605, !tbaa !3293
  tail call void @llvm.dbg.value(metadata i16 273, i64 0, metadata !726, metadata !2613), !dbg !3606
  tail call void @llvm.dbg.value(metadata i32 %s2.s3, i64 0, metadata !727, metadata !2613), !dbg !3608
  tail call void @llvm.dbg.value(metadata i32 210, i64 0, metadata !728, metadata !2613), !dbg !3609
  %tag_code2.i.238 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 5, i32 0, !dbg !3610
  store i16 273, i16* %tag_code2.i.238, align 2, !dbg !3611, !tbaa !3541
  %type_code.i.239 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 5, i32 1, !dbg !3612
  store i16 4, i16* %type_code.i.239, align 2, !dbg !3613, !tbaa !3545
  %count3.i.240 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 5, i32 2, !dbg !3614
  store i32 %s2.s3, i32* %count3.i.240, align 2, !dbg !3615, !tbaa !3548
  %i32.i.241 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 5, i32 3, i32 0, !dbg !3616
  store i32 210, i32* %i32.i.241, align 2, !dbg !3617, !tbaa !2786
  %conv23 = trunc i32 %s2.s3 to i16, !dbg !3618
  tail call void @llvm.dbg.value(metadata i16 277, i64 0, metadata !732, metadata !2613), !dbg !3619
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !733, metadata !2613), !dbg !3621
  tail call void @llvm.dbg.value(metadata i16 %conv23, i64 0, metadata !734, metadata !2613), !dbg !3622
  %tag_code2.i.233 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 6, i32 0, !dbg !3623
  store i16 277, i16* %tag_code2.i.233, align 2, !dbg !3624, !tbaa !3541
  %type_code.i.234 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 6, i32 1, !dbg !3625
  store i16 3, i16* %type_code.i.234, align 2, !dbg !3626, !tbaa !3545
  %count3.i.235 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 6, i32 2, !dbg !3627
  store i32 1, i32* %count3.i.235, align 2, !dbg !3628, !tbaa !3548
  %value4.i.236 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 6, i32 3, !dbg !3629
  %i16.i.237 = bitcast %union.anon* %value4.i.236 to i16*, !dbg !3630
  store i16 %conv23, i16* %i16.i.237, align 2, !dbg !3631, !tbaa !3293
  tail call void @llvm.dbg.value(metadata i16 278, i64 0, metadata !726, metadata !2613), !dbg !3632
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !727, metadata !2613), !dbg !3634
  tail call void @llvm.dbg.value(metadata i32 %s1, i64 0, metadata !728, metadata !2613), !dbg !3635
  %tag_code2.i.229 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 7, i32 0, !dbg !3636
  store i16 278, i16* %tag_code2.i.229, align 2, !dbg !3637, !tbaa !3541
  %type_code.i.230 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 7, i32 1, !dbg !3638
  store i16 4, i16* %type_code.i.230, align 2, !dbg !3639, !tbaa !3545
  %count3.i.231 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 7, i32 2, !dbg !3640
  store i32 1, i32* %count3.i.231, align 2, !dbg !3641, !tbaa !3548
  %i32.i.232 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 7, i32 3, i32 0, !dbg !3642
  store i32 %s1, i32* %i32.i.232, align 2, !dbg !3643, !tbaa !2786
  %cmp26 = icmp eq i32 %s2.s3, 1, !dbg !3644
  %mul27 = mul i32 %mul2, %bytes_per_element, !dbg !3645
  %mul28 = shl i32 %s2.s3, 2, !dbg !3646
  %add = add i32 %mul28, 210, !dbg !3647
  %cond29 = select i1 %cmp26, i32 %mul27, i32 %add, !dbg !3648
  tail call void @llvm.dbg.value(metadata i16 279, i64 0, metadata !726, metadata !2613), !dbg !3649
  tail call void @llvm.dbg.value(metadata i32 %s2.s3, i64 0, metadata !727, metadata !2613), !dbg !3651
  tail call void @llvm.dbg.value(metadata i32 %cond29, i64 0, metadata !728, metadata !2613), !dbg !3652
  %tag_code2.i.225 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 8, i32 0, !dbg !3653
  store i16 279, i16* %tag_code2.i.225, align 2, !dbg !3654, !tbaa !3541
  %type_code.i.226 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 8, i32 1, !dbg !3655
  store i16 4, i16* %type_code.i.226, align 2, !dbg !3656, !tbaa !3545
  %count3.i.227 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 8, i32 2, !dbg !3657
  store i32 %s2.s3, i32* %count3.i.227, align 2, !dbg !3658, !tbaa !3548
  %i32.i.228 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 8, i32 3, i32 0, !dbg !3659
  store i32 %cond29, i32* %i32.i.228, align 2, !dbg !3660, !tbaa !2786
  tail call void @llvm.dbg.value(metadata i16 282, i64 0, metadata !738, metadata !2613), !dbg !3661
  tail call void @llvm.dbg.value(metadata i16 5, i64 0, metadata !739, metadata !2613), !dbg !3663
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !740, metadata !2613), !dbg !3664
  tail call void @llvm.dbg.value(metadata i32 194, i64 0, metadata !741, metadata !2613), !dbg !3665
  %tag_code2.i.221 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 9, i32 0, !dbg !3666
  store i16 282, i16* %tag_code2.i.221, align 2, !dbg !3667, !tbaa !3541
  %type_code3.i.222 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 9, i32 1, !dbg !3668
  store i16 5, i16* %type_code3.i.222, align 2, !dbg !3669, !tbaa !3545
  %count4.i.223 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 9, i32 2, !dbg !3670
  store i32 1, i32* %count4.i.223, align 2, !dbg !3671, !tbaa !3548
  %i32.i.224 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 9, i32 3, i32 0, !dbg !3672
  store i32 194, i32* %i32.i.224, align 2, !dbg !3673, !tbaa !2786
  tail call void @llvm.dbg.value(metadata i16 283, i64 0, metadata !738, metadata !2613), !dbg !3674
  tail call void @llvm.dbg.value(metadata i16 5, i64 0, metadata !739, metadata !2613), !dbg !3676
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !740, metadata !2613), !dbg !3677
  tail call void @llvm.dbg.value(metadata i32 202, i64 0, metadata !741, metadata !2613), !dbg !3678
  %tag_code2.i.219 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 10, i32 0, !dbg !3679
  store i16 283, i16* %tag_code2.i.219, align 2, !dbg !3680, !tbaa !3541
  %type_code3.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 10, i32 1, !dbg !3681
  store i16 5, i16* %type_code3.i, align 2, !dbg !3682, !tbaa !3545
  %count4.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 10, i32 2, !dbg !3683
  store i32 1, i32* %count4.i, align 2, !dbg !3684, !tbaa !3548
  %i32.i.220 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 10, i32 3, i32 0, !dbg !3685
  store i32 202, i32* %i32.i.220, align 2, !dbg !3686, !tbaa !2786
  tail call void @llvm.dbg.value(metadata i16 284, i64 0, metadata !732, metadata !2613), !dbg !3687
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !733, metadata !2613), !dbg !3689
  tail call void @llvm.dbg.value(metadata i16 2, i64 0, metadata !734, metadata !2613), !dbg !3690
  %tag_code2.i.214 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 11, i32 0, !dbg !3691
  store i16 284, i16* %tag_code2.i.214, align 2, !dbg !3692, !tbaa !3541
  %type_code.i.215 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 11, i32 1, !dbg !3693
  store i16 3, i16* %type_code.i.215, align 2, !dbg !3694, !tbaa !3545
  %count3.i.216 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 11, i32 2, !dbg !3695
  store i32 1, i32* %count3.i.216, align 2, !dbg !3696, !tbaa !3548
  %value4.i.217 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 11, i32 3, !dbg !3697
  %i16.i.218 = bitcast %union.anon* %value4.i.217 to i16*, !dbg !3698
  store i16 2, i16* %i16.i.218, align 2, !dbg !3699, !tbaa !3293
  tail call void @llvm.dbg.value(metadata i16 296, i64 0, metadata !732, metadata !2613), !dbg !3700
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !733, metadata !2613), !dbg !3702
  tail call void @llvm.dbg.value(metadata i16 1, i64 0, metadata !734, metadata !2613), !dbg !3703
  %tag_code2.i.209 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 12, i32 0, !dbg !3704
  store i16 296, i16* %tag_code2.i.209, align 2, !dbg !3705, !tbaa !3541
  %type_code.i.210 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 12, i32 1, !dbg !3706
  store i16 3, i16* %type_code.i.210, align 2, !dbg !3707, !tbaa !3545
  %count3.i.211 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 12, i32 2, !dbg !3708
  store i32 1, i32* %count3.i.211, align 2, !dbg !3709, !tbaa !3548
  %value4.i.212 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 12, i32 3, !dbg !3710
  %i16.i.213 = bitcast %union.anon* %value4.i.212 to i16*, !dbg !3711
  store i16 1, i16* %i16.i.213, align 2, !dbg !3712, !tbaa !3293
  %arrayidx35 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZN6Halide7Runtime8Internal30pixel_type_to_tiff_sample_typeE, i32 0, i32 %type_code, !dbg !3713
  %2 = load i16, i16* %arrayidx35, align 2, !dbg !3713, !tbaa !3293
  tail call void @llvm.dbg.value(metadata i16 339, i64 0, metadata !732, metadata !2613), !dbg !3714
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !733, metadata !2613), !dbg !3716
  tail call void @llvm.dbg.value(metadata i16 %2, i64 0, metadata !734, metadata !2613), !dbg !3717
  %tag_code2.i.206 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 13, i32 0, !dbg !3718
  store i16 339, i16* %tag_code2.i.206, align 2, !dbg !3719, !tbaa !3541
  %type_code.i.207 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 13, i32 1, !dbg !3720
  store i16 3, i16* %type_code.i.207, align 2, !dbg !3721, !tbaa !3545
  %count3.i.208 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 13, i32 2, !dbg !3722
  store i32 1, i32* %count3.i.208, align 2, !dbg !3723, !tbaa !3548
  %value4.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 13, i32 3, !dbg !3724
  %i16.i = bitcast %union.anon* %value4.i to i16*, !dbg !3725
  store i16 %2, i16* %i16.i, align 2, !dbg !3726, !tbaa !3293
  tail call void @llvm.dbg.value(metadata i16 -32539, i64 0, metadata !726, metadata !2613), !dbg !3727
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !727, metadata !2613), !dbg !3729
  tail call void @llvm.dbg.value(metadata i32 %.s2, i64 0, metadata !728, metadata !2613), !dbg !3730
  %tag_code2.i.202 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 14, i32 0, !dbg !3731
  store i16 -32539, i16* %tag_code2.i.202, align 2, !dbg !3732, !tbaa !3541
  %type_code.i.203 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 14, i32 1, !dbg !3733
  store i16 4, i16* %type_code.i.203, align 2, !dbg !3734, !tbaa !3545
  %count3.i.204 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 14, i32 2, !dbg !3735
  store i32 1, i32* %count3.i.204, align 2, !dbg !3736, !tbaa !3548
  %i32.i.205 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 4, i32 14, i32 3, i32 0, !dbg !3737
  store i32 %.s2, i32* %i32.i.205, align 2, !dbg !3738, !tbaa !2786
  %ifd0_end = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 5, !dbg !3739
  %3 = bitcast i32* %ifd0_end to <4 x i32>*, !dbg !3740
  store <4 x i32> <i32 0, i32 1, i32 1, i32 1>, <4 x i32>* %3, align 2, !dbg !3740, !tbaa !2786
  %arrayidx42 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i32 0, i32 7, i32 1, !dbg !3741
  store i32 1, i32* %arrayidx42, align 2, !dbg !3742, !tbaa !2786
  %call43 = call i32 @fwrite(i8* %1, i32 210, i32 1, i8* %call) #6, !dbg !3743
  %tobool44 = icmp eq i32 %call43, 0, !dbg !3743
  br i1 %tobool44, label %if.then.45, label %if.end.47, !dbg !3745

if.then.45:                                       ; preds = %if.then.4
  %call46 = tail call i32 @fclose(i8* %call) #6, !dbg !3746
  br label %cleanup.84.thread265, !dbg !3748

if.end.47:                                        ; preds = %if.then.4
  %cmp48 = icmp sgt i32 %s2.s3, 1, !dbg !3749
  br i1 %cmp48, label %for.body.lr.ph, label %cleanup.84.thread, !dbg !3750

for.body.lr.ph:                                   ; preds = %if.end.47
  %4 = bitcast i32* %offset to i8*, !dbg !3751
  call void @llvm.lifetime.start(i64 4, i8* %4) #2, !dbg !3751
  %mul51 = shl i32 %s2.s3, 3, !dbg !3752
  %add52 = add i32 %mul51, 210, !dbg !3753
  tail call void @llvm.dbg.value(metadata i32 %add52, i64 0, metadata !710, metadata !2613), !dbg !3754
  store i32 %add52, i32* %offset, align 4, !dbg !3754, !tbaa !2786
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !713, metadata !2613), !dbg !3755
  %mul60 = mul i32 %mul, %bytes_per_element, !dbg !3756
  %mul61 = mul i32 %mul60, %.s2, !dbg !3759
  br label %for.body, !dbg !3760

for.body:                                         ; preds = %if.end.58, %for.body.lr.ph
  %i.0271 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end.58 ]
  %call54 = call i32 @fwrite(i8* %4, i32 4, i32 1, i8* %call) #6, !dbg !3761
  %tobool55 = icmp eq i32 %call54, 0, !dbg !3761
  br i1 %tobool55, label %cleanup, label %if.end.58, !dbg !3763

if.end.58:                                        ; preds = %for.body
  tail call void @llvm.dbg.value(metadata i32* %offset, i64 0, metadata !710, metadata !2613), !dbg !3754
  %5 = load i32, i32* %offset, align 4, !dbg !3764, !tbaa !2786
  %add62 = add nsw i32 %5, %mul61, !dbg !3764
  tail call void @llvm.dbg.value(metadata i32 %add62, i64 0, metadata !710, metadata !2613), !dbg !3754
  store i32 %add62, i32* %offset, align 4, !dbg !3764, !tbaa !2786
  %inc = add nuw nsw i32 %i.0271, 1, !dbg !3765
  tail call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !713, metadata !2613), !dbg !3755
  %cmp53 = icmp slt i32 %inc, %s2.s3, !dbg !3766
  br i1 %cmp53, label %for.body, label %for.body.69.lr.ph, !dbg !3760

cleanup:                                          ; preds = %for.body
  %call57 = tail call i32 @fclose(i8* %call) #6, !dbg !3767
  br label %cleanup.81.thread

for.body.69.lr.ph:                                ; preds = %if.end.58
  %6 = bitcast i32* %count to i8*, !dbg !3769
  call void @llvm.lifetime.start(i64 4, i8* %6) #2, !dbg !3769
  %mul64 = mul nsw i32 %.s2, %mul, !dbg !3770
  tail call void @llvm.dbg.value(metadata i32 %mul64, i64 0, metadata !715, metadata !2613), !dbg !3771
  store i32 %mul64, i32* %count, align 4, !dbg !3771, !tbaa !2786
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !716, metadata !2613), !dbg !3772
  br label %for.body.69, !dbg !3773

for.cond.66:                                      ; preds = %for.body.69
  %cmp67 = icmp slt i32 %inc76, %s2.s3, !dbg !3774
  br i1 %cmp67, label %for.body.69, label %cleanup.81, !dbg !3773

for.body.69:                                      ; preds = %for.cond.66, %for.body.69.lr.ph
  %i65.0269 = phi i32 [ 0, %for.body.69.lr.ph ], [ %inc76, %for.cond.66 ]
  %call70 = call i32 @fwrite(i8* %6, i32 4, i32 1, i8* %call) #6, !dbg !3776
  %tobool71 = icmp eq i32 %call70, 0, !dbg !3776
  %inc76 = add nuw nsw i32 %i65.0269, 1, !dbg !3779
  tail call void @llvm.dbg.value(metadata i32 %inc76, i64 0, metadata !716, metadata !2613), !dbg !3772
  br i1 %tobool71, label %cleanup.77, label %for.cond.66, !dbg !3780

cleanup.77:                                       ; preds = %for.body.69
  %call73 = tail call i32 @fclose(i8* %call) #6, !dbg !3781
  call void @llvm.lifetime.end(i64 4, i8* %6) #2, !dbg !3783
  br label %cleanup.81.thread

cleanup.81.thread:                                ; preds = %cleanup.77, %cleanup
  call void @llvm.lifetime.end(i64 4, i8* %4) #2, !dbg !3785
  br label %cleanup.84.thread265

cleanup.81:                                       ; preds = %for.cond.66
  call void @llvm.lifetime.end(i64 4, i8* %6) #2, !dbg !3783
  call void @llvm.lifetime.end(i64 4, i8* %4) #2, !dbg !3785
  br label %cleanup.84.thread

cleanup.84.thread:                                ; preds = %cleanup.81, %if.end.47
  call void @llvm.lifetime.end(i64 210, i8* %1) #2, !dbg !3786
  br label %if.end.108

cleanup.84.thread265:                             ; preds = %cleanup.81.thread, %if.then.45
  call void @llvm.lifetime.end(i64 210, i8* %1) #2, !dbg !3786
  br label %cleanup.117

if.else.94:                                       ; preds = %if.end
  %7 = bitcast [5 x i32]* %header95 to i8*, !dbg !3788
  call void @llvm.lifetime.start(i64 20, i8* %7) #2, !dbg !3788
  tail call void @llvm.dbg.declare(metadata [5 x i32]* %header95, metadata !718, metadata !2613), !dbg !3789
  %arrayinit.begin = getelementptr inbounds [5 x i32], [5 x i32]* %header95, i32 0, i32 0, !dbg !3790
  store i32 %s0, i32* %arrayinit.begin, align 4, !dbg !3790, !tbaa !2786
  %arrayinit.element = getelementptr inbounds [5 x i32], [5 x i32]* %header95, i32 0, i32 1, !dbg !3790
  store i32 %s1, i32* %arrayinit.element, align 4, !dbg !3790, !tbaa !2786
  %arrayinit.element96 = getelementptr inbounds [5 x i32], [5 x i32]* %header95, i32 0, i32 2, !dbg !3790
  store i32 %s2, i32* %arrayinit.element96, align 4, !dbg !3790, !tbaa !2786
  %arrayinit.element97 = getelementptr inbounds [5 x i32], [5 x i32]* %header95, i32 0, i32 3, !dbg !3790
  store i32 %s3, i32* %arrayinit.element97, align 4, !dbg !3790, !tbaa !2786
  %arrayinit.element98 = getelementptr inbounds [5 x i32], [5 x i32]* %header95, i32 0, i32 4, !dbg !3790
  store i32 %type_code, i32* %arrayinit.element98, align 4, !dbg !3790, !tbaa !2786
  %call100 = call i32 @fwrite(i8* %7, i32 20, i32 1, i8* %call) #6, !dbg !3791
  %tobool101 = icmp eq i32 %call100, 0, !dbg !3791
  br i1 %tobool101, label %if.then.102, label %cleanup.105, !dbg !3793

if.then.102:                                      ; preds = %if.else.94
  %call103 = tail call i32 @fclose(i8* %call) #6, !dbg !3794
  call void @llvm.lifetime.end(i64 20, i8* %7) #2, !dbg !3796
  br label %cleanup.117

cleanup.105:                                      ; preds = %if.else.94
  call void @llvm.lifetime.end(i64 20, i8* %7) #2, !dbg !3796
  %.pre = mul i32 %mul2, %bytes_per_element, !dbg !3797
  br label %if.end.108

if.end.108:                                       ; preds = %cleanup.105, %cleanup.84.thread
  %mul109.pre-phi = phi i32 [ %mul27, %cleanup.84.thread ], [ %.pre, %cleanup.105 ], !dbg !3797
  %call110 = tail call i32 @fwrite(i8* %data, i32 %mul109.pre-phi, i32 1, i8* %call) #6, !dbg !3799
  %tobool111 = icmp eq i32 %call110, 0, !dbg !3799
  %call113 = tail call i32 @fclose(i8* %call) #6, !dbg !3800
  %. = sext i1 %tobool111 to i32, !dbg !3802
  br label %cleanup.117, !dbg !3802

cleanup.117:                                      ; preds = %if.end.108, %if.then.102, %cleanup.84.thread265, %entry
  %retval.7 = phi i32 [ -1, %entry ], [ -2, %if.then.102 ], [ %., %if.end.108 ], [ -2, %cleanup.84.thread265 ]
  ret i32 %retval.7, !dbg !3804
}

; Function Attrs: nounwind
declare noalias i8* @fopen(i8* nocapture readonly, i8* nocapture readonly) #0

; Function Attrs: nounwind
declare i32 @fwrite(i8* nocapture, i32, i32, i8* nocapture) #0

; Function Attrs: nounwind
declare i32 @fclose(i8* nocapture) #0

; Function Attrs: nounwind
define linkonce i8* @_ZN6Halide7Runtime8Internal14default_mallocEPvj(i8* %user_context, i32 %x) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !757, metadata !2613), !dbg !3805
  tail call void @llvm.dbg.value(metadata i32 %x, i64 0, metadata !758, metadata !2613), !dbg !3806
  %add = add i32 %x, 40, !dbg !3807
  %call = tail call i8* @malloc(i32 %add) #6, !dbg !3808
  tail call void @llvm.dbg.value(metadata i8* %call, i64 0, metadata !759, metadata !2613), !dbg !3809
  %cmp = icmp eq i8* %call, null, !dbg !3810
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3812

if.end:                                           ; preds = %entry
  %0 = ptrtoint i8* %call to i32, !dbg !3813
  %add1 = add i32 %0, 32, !dbg !3814
  %shr = and i32 %add1, -32, !dbg !3815
  %1 = inttoptr i32 %shr to i8*, !dbg !3816
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !760, metadata !2613), !dbg !3817
  %2 = inttoptr i32 %shr to i8**, !dbg !3818
  %arrayidx = getelementptr inbounds i8*, i8** %2, i32 -1, !dbg !3819
  store i8* %call, i8** %arrayidx, align 4, !dbg !3820, !tbaa !2768
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i8* [ %1, %if.end ], [ null, %entry ]
  ret i8* %retval.0, !dbg !3821
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i32) #0

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal12default_freeEPvS2_(i8* %user_context, i8* %ptr) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !763, metadata !2613), !dbg !3822
  tail call void @llvm.dbg.value(metadata i8* %ptr, i64 0, metadata !764, metadata !2613), !dbg !3823
  %arrayidx = getelementptr inbounds i8, i8* %ptr, i32 -4, !dbg !3824
  %0 = bitcast i8* %arrayidx to i8**, !dbg !3824
  %1 = load i8*, i8** %0, align 4, !dbg !3824, !tbaa !2768
  tail call void @free(i8* %1) #6, !dbg !3825
  ret void, !dbg !3826
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) #0

; Function Attrs: nounwind
define weak i8* (i8*, i32)* @halide_set_custom_malloc(i8* (i8*, i32)* %user_malloc) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* (i8*, i32)* %user_malloc, i64 0, metadata !770, metadata !2613), !dbg !3827
  %0 = load i8* (i8*, i32)*, i8* (i8*, i32)** @_ZN6Halide7Runtime8Internal13custom_mallocE, align 4, !dbg !3828, !tbaa !2768
  tail call void @llvm.dbg.value(metadata i8* (i8*, i32)* %0, i64 0, metadata !771, metadata !2613), !dbg !3829
  store i8* (i8*, i32)* %user_malloc, i8* (i8*, i32)** @_ZN6Halide7Runtime8Internal13custom_mallocE, align 4, !dbg !3830, !tbaa !2768
  ret i8* (i8*, i32)* %0, !dbg !3831
}

; Function Attrs: nounwind
define weak void (i8*, i8*)* @halide_set_custom_free(void (i8*, i8*)* %user_free) #0 {
entry:
  tail call void @llvm.dbg.value(metadata void (i8*, i8*)* %user_free, i64 0, metadata !776, metadata !2613), !dbg !3832
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal11custom_freeE, align 4, !dbg !3833, !tbaa !2768
  tail call void @llvm.dbg.value(metadata void (i8*, i8*)* %0, i64 0, metadata !777, metadata !2613), !dbg !3834
  store void (i8*, i8*)* %user_free, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal11custom_freeE, align 4, !dbg !3835, !tbaa !2768
  ret void (i8*, i8*)* %0, !dbg !3836
}

; Function Attrs: nounwind
define weak noalias i8* @halide_malloc(i8* %user_context, i32 %x) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !780, metadata !2613), !dbg !3837
  tail call void @llvm.dbg.value(metadata i32 %x, i64 0, metadata !781, metadata !2613), !dbg !3838
  %0 = load i8* (i8*, i32)*, i8* (i8*, i32)** @_ZN6Halide7Runtime8Internal13custom_mallocE, align 4, !dbg !3839, !tbaa !2768
  %call = tail call i8* %0(i8* %user_context, i32 %x) #6, !dbg !3839
  ret i8* %call, !dbg !3840
}

; Function Attrs: nounwind
define weak void @halide_free(i8* %user_context, i8* %ptr) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !784, metadata !2613), !dbg !3841
  tail call void @llvm.dbg.value(metadata i8* %ptr, i64 0, metadata !785, metadata !2613), !dbg !3842
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal11custom_freeE, align 4, !dbg !3843, !tbaa !2768
  tail call void %0(i8* %user_context, i8* %ptr) #6, !dbg !3843
  ret void, !dbg !3844
}

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal21default_error_handlerEPvPKc(i8* %user_context, i8* %msg) #0 {
entry:
  %buf = alloca [4096 x i8], align 1
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !823, metadata !2613), !dbg !3845
  tail call void @llvm.dbg.value(metadata i8* %msg, i64 0, metadata !824, metadata !2613), !dbg !3846
  %0 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i32 0, i32 0, !dbg !3847
  call void @llvm.lifetime.start(i64 4096, i8* %0) #2, !dbg !3847
  tail call void @llvm.dbg.declare(metadata [4096 x i8]* %buf, metadata !825, metadata !2613), !dbg !3848
  %add.ptr = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i32 0, i32 4095, !dbg !3849
  %call = call i8* @halide_string_to_string(i8* %0, i8* %add.ptr, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i32 0, i32 0)) #6, !dbg !3850
  call void @llvm.dbg.value(metadata i8* %call, i64 0, metadata !827, metadata !2613), !dbg !3851
  %call4 = call i8* @halide_string_to_string(i8* %call, i8* %add.ptr, i8* %msg) #6, !dbg !3852
  call void @llvm.dbg.value(metadata i8* %call4, i64 0, metadata !827, metadata !2613), !dbg !3851
  %arrayidx = getelementptr inbounds i8, i8* %call4, i32 -1, !dbg !3853
  %1 = load i8, i8* %arrayidx, align 1, !dbg !3853, !tbaa !3047
  %cmp = icmp eq i8 %1, 10, !dbg !3855
  br i1 %cmp, label %if.end, label %if.then, !dbg !3856

if.then:                                          ; preds = %entry
  store i8 10, i8* %call4, align 1, !dbg !3857, !tbaa !3047
  %arrayidx6 = getelementptr inbounds i8, i8* %call4, i32 1, !dbg !3859
  store i8 0, i8* %arrayidx6, align 1, !dbg !3860, !tbaa !3047
  br label %if.end, !dbg !3861

if.end:                                           ; preds = %if.then, %entry
  call void @halide_print(i8* %user_context, i8* %0) #6, !dbg !3862
  call void @exit(i32 1) #6, !dbg !3863
  call void @llvm.lifetime.end(i64 4096, i8* %0) #2, !dbg !3864
  ret void, !dbg !3864
}

declare void @exit(i32) #1

; Function Attrs: nounwind
define weak void @halide_error(i8* %user_context, i8* %msg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !830, metadata !2613), !dbg !3865
  tail call void @llvm.dbg.value(metadata i8* %msg, i64 0, metadata !831, metadata !2613), !dbg !3866
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal20halide_error_handlerE, align 4, !dbg !3867, !tbaa !2768
  tail call void %0(i8* %user_context, i8* %msg) #6, !dbg !3868
  ret void, !dbg !3869
}

; Function Attrs: nounwind
define weak void (i8*, i8*)* @halide_set_error_handler(void (i8*, i8*)* %handler) #0 {
entry:
  tail call void @llvm.dbg.value(metadata void (i8*, i8*)* %handler, i64 0, metadata !837, metadata !2613), !dbg !3870
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal20halide_error_handlerE, align 4, !dbg !3871, !tbaa !2768
  tail call void @llvm.dbg.value(metadata void (i8*, i8*)* %0, i64 0, metadata !838, metadata !2613), !dbg !3872
  store void (i8*, i8*)* %handler, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal20halide_error_handlerE, align 4, !dbg !3873, !tbaa !2768
  ret void (i8*, i8*)* %0, !dbg !3874
}

; Function Attrs: nounwind
define weak i32 @halide_error_bounds_inference_call_failed(i8* %user_context, i8* %extern_stage_name, i32 %result) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !843, metadata !2613), !dbg !3875
  tail call void @llvm.dbg.value(metadata i8* %extern_stage_name, i64 0, metadata !844, metadata !2613), !dbg !3876
  tail call void @llvm.dbg.value(metadata i32 %result, i64 0, metadata !845, metadata !2613), !dbg !3877
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1023, metadata !2613) #2, !dbg !3878
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1025, metadata !2613) #2, !dbg !3880
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !3881
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !3883
  store i8 0, i8* %add.ptr.i, align 1, !dbg !3884, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !3885
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1.44, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !3887
  %call.i.7 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1.44, i32 0, i32 0)) #6, !dbg !3888
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !3889
  tail call void @llvm.dbg.value(metadata i8* %extern_stage_name, i64 0, metadata !1032, metadata !2613) #2, !dbg !3891
  %call.i.10 = tail call i8* @halide_string_to_string(i8* %call.i.7, i8* %add.ptr.i, i8* %extern_stage_name) #6, !dbg !3892
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !3893
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.45, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !3895
  %call.i.13 = tail call i8* @halide_string_to_string(i8* %call.i.10, i8* %add.ptr.i, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.45, i32 0, i32 0)) #6, !dbg !3896
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1035, metadata !2613) #2, !dbg !3897
  tail call void @llvm.dbg.value(metadata i32 %result, i64 0, metadata !1036, metadata !2613) #2, !dbg !3899
  %conv.i = sext i32 %result to i64, !dbg !3900
  %call.i.16 = tail call i8* @halide_int64_to_string(i8* %call.i.13, i8* %add.ptr.i, i64 %conv.i, i32 1) #6, !dbg !3901
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1028, metadata !2613) #2, !dbg !3902
  tail call void @halide_error(i8* %user_context, i8* %call.i) #6, !dbg !3904
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !3908
  ret i32 %result, !dbg !3909
}

; Function Attrs: nounwind
define weak i32 @halide_error_extern_stage_failed(i8* %user_context, i8* %extern_stage_name, i32 %result) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !848, metadata !2613), !dbg !3910
  tail call void @llvm.dbg.value(metadata i8* %extern_stage_name, i64 0, metadata !849, metadata !2613), !dbg !3911
  tail call void @llvm.dbg.value(metadata i32 %result, i64 0, metadata !850, metadata !2613), !dbg !3912
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1023, metadata !2613) #2, !dbg !3913
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1025, metadata !2613) #2, !dbg !3915
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !3916
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !3917
  store i8 0, i8* %add.ptr.i, align 1, !dbg !3918, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !3919
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.46, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !3921
  %call.i.7 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.46, i32 0, i32 0)) #6, !dbg !3922
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !3923
  tail call void @llvm.dbg.value(metadata i8* %extern_stage_name, i64 0, metadata !1032, metadata !2613) #2, !dbg !3925
  %call.i.10 = tail call i8* @halide_string_to_string(i8* %call.i.7, i8* %add.ptr.i, i8* %extern_stage_name) #6, !dbg !3926
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !3927
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.45, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !3929
  %call.i.13 = tail call i8* @halide_string_to_string(i8* %call.i.10, i8* %add.ptr.i, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.45, i32 0, i32 0)) #6, !dbg !3930
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1035, metadata !2613) #2, !dbg !3931
  tail call void @llvm.dbg.value(metadata i32 %result, i64 0, metadata !1036, metadata !2613) #2, !dbg !3933
  %conv.i = sext i32 %result to i64, !dbg !3934
  %call.i.16 = tail call i8* @halide_int64_to_string(i8* %call.i.13, i8* %add.ptr.i, i64 %conv.i, i32 1) #6, !dbg !3935
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1028, metadata !2613) #2, !dbg !3936
  tail call void @halide_error(i8* %user_context, i8* %call.i) #6, !dbg !3938
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !3939
  ret i32 %result, !dbg !3940
}

; Function Attrs: nounwind
define weak i32 @halide_error_explicit_bounds_too_small(i8* %user_context, i8* %func_name, i8* %var_name, i32 %min_bound, i32 %max_bound, i32 %min_required, i32 %max_required) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !855, metadata !2613), !dbg !3941
  tail call void @llvm.dbg.value(metadata i8* %func_name, i64 0, metadata !856, metadata !2613), !dbg !3942
  tail call void @llvm.dbg.value(metadata i8* %var_name, i64 0, metadata !857, metadata !2613), !dbg !3943
  tail call void @llvm.dbg.value(metadata i32 %min_bound, i64 0, metadata !858, metadata !2613), !dbg !3944
  tail call void @llvm.dbg.value(metadata i32 %max_bound, i64 0, metadata !859, metadata !2613), !dbg !3945
  tail call void @llvm.dbg.value(metadata i32 %min_required, i64 0, metadata !860, metadata !2613), !dbg !3946
  tail call void @llvm.dbg.value(metadata i32 %max_required, i64 0, metadata !861, metadata !2613), !dbg !3947
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1023, metadata !2613) #2, !dbg !3948
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1025, metadata !2613) #2, !dbg !3950
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !3951
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !3952
  store i8 0, i8* %add.ptr.i, align 1, !dbg !3953, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !3954
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4.47, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !3956
  %call.i.15 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4.47, i32 0, i32 0)) #6, !dbg !3957
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !3958
  tail call void @llvm.dbg.value(metadata i8* %var_name, i64 0, metadata !1032, metadata !2613) #2, !dbg !3960
  %call.i.18 = tail call i8* @halide_string_to_string(i8* %call.i.15, i8* %add.ptr.i, i8* %var_name) #6, !dbg !3961
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !3962
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.48, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !3964
  %call.i.21 = tail call i8* @halide_string_to_string(i8* %call.i.18, i8* %add.ptr.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.48, i32 0, i32 0)) #6, !dbg !3965
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !3966
  tail call void @llvm.dbg.value(metadata i8* %func_name, i64 0, metadata !1032, metadata !2613) #2, !dbg !3968
  %call.i.24 = tail call i8* @halide_string_to_string(i8* %call.i.21, i8* %add.ptr.i, i8* %func_name) #6, !dbg !3969
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !3970
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.49, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !3972
  %call.i.27 = tail call i8* @halide_string_to_string(i8* %call.i.24, i8* %add.ptr.i, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.49, i32 0, i32 0)) #6, !dbg !3973
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1035, metadata !2613) #2, !dbg !3974
  tail call void @llvm.dbg.value(metadata i32 %min_bound, i64 0, metadata !1036, metadata !2613) #2, !dbg !3976
  %conv.i = sext i32 %min_bound to i64, !dbg !3977
  %call.i.30 = tail call i8* @halide_int64_to_string(i8* %call.i.27, i8* %add.ptr.i, i64 %conv.i, i32 1) #6, !dbg !3978
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !3979
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.50, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !3981
  %call.i.33 = tail call i8* @halide_string_to_string(i8* %call.i.30, i8* %add.ptr.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.50, i32 0, i32 0)) #6, !dbg !3982
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1035, metadata !2613) #2, !dbg !3983
  tail call void @llvm.dbg.value(metadata i32 %max_bound, i64 0, metadata !1036, metadata !2613) #2, !dbg !3985
  %conv.i.36 = sext i32 %max_bound to i64, !dbg !3986
  %call.i.37 = tail call i8* @halide_int64_to_string(i8* %call.i.33, i8* %add.ptr.i, i64 %conv.i.36, i32 1) #6, !dbg !3987
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !3988
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8.51, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !3990
  %call.i.40 = tail call i8* @halide_string_to_string(i8* %call.i.37, i8* %add.ptr.i, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8.51, i32 0, i32 0)) #6, !dbg !3991
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1035, metadata !2613) #2, !dbg !3992
  tail call void @llvm.dbg.value(metadata i32 %min_required, i64 0, metadata !1036, metadata !2613) #2, !dbg !3994
  %conv.i.43 = sext i32 %min_required to i64, !dbg !3995
  %call.i.44 = tail call i8* @halide_int64_to_string(i8* %call.i.40, i8* %add.ptr.i, i64 %conv.i.43, i32 1) #6, !dbg !3996
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !3997
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.50, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !3999
  %call.i.47 = tail call i8* @halide_string_to_string(i8* %call.i.44, i8* %add.ptr.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.50, i32 0, i32 0)) #6, !dbg !4000
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1035, metadata !2613) #2, !dbg !4001
  tail call void @llvm.dbg.value(metadata i32 %max_required, i64 0, metadata !1036, metadata !2613) #2, !dbg !4003
  %conv.i.50 = sext i32 %max_required to i64, !dbg !4004
  %call.i.51 = tail call i8* @halide_int64_to_string(i8* %call.i.47, i8* %add.ptr.i, i64 %conv.i.50, i32 1) #6, !dbg !4005
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4006
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.52, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4008
  %call.i.54 = tail call i8* @halide_string_to_string(i8* %call.i.51, i8* %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.52, i32 0, i32 0)) #6, !dbg !4009
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1028, metadata !2613) #2, !dbg !4010
  tail call void @halide_error(i8* %user_context, i8* %call.i) #6, !dbg !4012
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !4013
  ret i32 -2, !dbg !4014
}

; Function Attrs: nounwind
define weak i32 @halide_error_bad_elem_size(i8* %user_context, i8* %func_name, i8* %type_name, i32 %elem_size_given, i32 %correct_elem_size) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !866, metadata !2613), !dbg !4015
  tail call void @llvm.dbg.value(metadata i8* %func_name, i64 0, metadata !867, metadata !2613), !dbg !4016
  tail call void @llvm.dbg.value(metadata i8* %type_name, i64 0, metadata !868, metadata !2613), !dbg !4017
  tail call void @llvm.dbg.value(metadata i32 %elem_size_given, i64 0, metadata !869, metadata !2613), !dbg !4018
  tail call void @llvm.dbg.value(metadata i32 %correct_elem_size, i64 0, metadata !870, metadata !2613), !dbg !4019
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1023, metadata !2613) #2, !dbg !4020
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1025, metadata !2613) #2, !dbg !4022
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !4023
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !4024
  store i8 0, i8* %add.ptr.i, align 1, !dbg !4025, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4026
  tail call void @llvm.dbg.value(metadata i8* %func_name, i64 0, metadata !1032, metadata !2613) #2, !dbg !4028
  %call.i.9 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* %func_name) #6, !dbg !4029
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4030
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10.53, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4032
  %call.i.12 = tail call i8* @halide_string_to_string(i8* %call.i.9, i8* %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10.53, i32 0, i32 0)) #6, !dbg !4033
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4034
  tail call void @llvm.dbg.value(metadata i8* %type_name, i64 0, metadata !1032, metadata !2613) #2, !dbg !4036
  %call.i.15 = tail call i8* @halide_string_to_string(i8* %call.i.12, i8* %add.ptr.i, i8* %type_name) #6, !dbg !4037
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4038
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.11.54, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4040
  %call.i.18 = tail call i8* @halide_string_to_string(i8* %call.i.15, i8* %add.ptr.i, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.11.54, i32 0, i32 0)) #6, !dbg !4041
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1035, metadata !2613) #2, !dbg !4042
  tail call void @llvm.dbg.value(metadata i32 %elem_size_given, i64 0, metadata !1036, metadata !2613) #2, !dbg !4044
  %conv.i = sext i32 %elem_size_given to i64, !dbg !4045
  %call.i.21 = tail call i8* @halide_int64_to_string(i8* %call.i.18, i8* %add.ptr.i, i64 %conv.i, i32 1) #6, !dbg !4046
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4047
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.55, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4049
  %call.i.24 = tail call i8* @halide_string_to_string(i8* %call.i.21, i8* %add.ptr.i, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.55, i32 0, i32 0)) #6, !dbg !4050
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1035, metadata !2613) #2, !dbg !4051
  tail call void @llvm.dbg.value(metadata i32 %correct_elem_size, i64 0, metadata !1036, metadata !2613) #2, !dbg !4053
  %conv.i.27 = sext i32 %correct_elem_size to i64, !dbg !4054
  %call.i.28 = tail call i8* @halide_int64_to_string(i8* %call.i.24, i8* %add.ptr.i, i64 %conv.i.27, i32 1) #6, !dbg !4055
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1028, metadata !2613) #2, !dbg !4056
  tail call void @halide_error(i8* %user_context, i8* %call.i) #6, !dbg !4058
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !4059
  ret i32 -3, !dbg !4060
}

; Function Attrs: nounwind
define weak i32 @halide_error_access_out_of_bounds(i8* %user_context, i8* %func_name, i32 %dimension, i32 %min_touched, i32 %max_touched, i32 %min_valid, i32 %max_valid) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !875, metadata !2613), !dbg !4061
  tail call void @llvm.dbg.value(metadata i8* %func_name, i64 0, metadata !876, metadata !2613), !dbg !4062
  tail call void @llvm.dbg.value(metadata i32 %dimension, i64 0, metadata !877, metadata !2613), !dbg !4063
  tail call void @llvm.dbg.value(metadata i32 %min_touched, i64 0, metadata !878, metadata !2613), !dbg !4064
  tail call void @llvm.dbg.value(metadata i32 %max_touched, i64 0, metadata !879, metadata !2613), !dbg !4065
  tail call void @llvm.dbg.value(metadata i32 %min_valid, i64 0, metadata !880, metadata !2613), !dbg !4066
  tail call void @llvm.dbg.value(metadata i32 %max_valid, i64 0, metadata !881, metadata !2613), !dbg !4067
  %cmp = icmp slt i32 %min_touched, %min_valid, !dbg !4068
  br i1 %cmp, label %if.then, label %if.else, !dbg !4070

if.then:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1023, metadata !2613) #2, !dbg !4071
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1025, metadata !2613) #2, !dbg !4074
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !4075
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !4076
  store i8 0, i8* %add.ptr.i, align 1, !dbg !4077, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4078
  tail call void @llvm.dbg.value(metadata i8* %func_name, i64 0, metadata !1032, metadata !2613) #2, !dbg !4080
  %call.i.27 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* %func_name) #6, !dbg !4081
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4082
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13.56, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4084
  %call.i.30 = tail call i8* @halide_string_to_string(i8* %call.i.27, i8* %add.ptr.i, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13.56, i32 0, i32 0)) #6, !dbg !4085
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1035, metadata !2613) #2, !dbg !4086
  tail call void @llvm.dbg.value(metadata i32 %min_touched, i64 0, metadata !1036, metadata !2613) #2, !dbg !4088
  %conv.i = sext i32 %min_touched to i64, !dbg !4089
  %call.i.33 = tail call i8* @halide_int64_to_string(i8* %call.i.30, i8* %add.ptr.i, i64 %conv.i, i32 1) #6, !dbg !4090
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4091
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14.57, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4093
  %call.i.36 = tail call i8* @halide_string_to_string(i8* %call.i.33, i8* %add.ptr.i, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14.57, i32 0, i32 0)) #6, !dbg !4094
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1035, metadata !2613) #2, !dbg !4095
  tail call void @llvm.dbg.value(metadata i32 %min_valid, i64 0, metadata !1036, metadata !2613) #2, !dbg !4097
  %conv.i.39 = sext i32 %min_valid to i64, !dbg !4098
  %call.i.40 = tail call i8* @halide_int64_to_string(i8* %call.i.36, i8* %add.ptr.i, i64 %conv.i.39, i32 1) #6, !dbg !4099
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4100
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15.58, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4102
  %call.i.43 = tail call i8* @halide_string_to_string(i8* %call.i.40, i8* %add.ptr.i, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15.58, i32 0, i32 0)) #6, !dbg !4103
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1035, metadata !2613) #2, !dbg !4104
  tail call void @llvm.dbg.value(metadata i32 %dimension, i64 0, metadata !1036, metadata !2613) #2, !dbg !4106
  %conv.i.46 = sext i32 %dimension to i64, !dbg !4107
  %call.i.47 = tail call i8* @halide_int64_to_string(i8* %call.i.43, i8* %add.ptr.i, i64 %conv.i.46, i32 1) #6, !dbg !4108
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1028, metadata !2613) #2, !dbg !4109
  tail call void @halide_error(i8* %user_context, i8* %call.i) #6, !dbg !4111
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !4112
  br label %if.end.17, !dbg !4113

if.else:                                          ; preds = %entry
  %cmp7 = icmp sgt i32 %max_touched, %max_valid, !dbg !4114
  br i1 %cmp7, label %if.then.8, label %if.end.17, !dbg !4116

if.then.8:                                        ; preds = %if.else
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1023, metadata !2613) #2, !dbg !4117
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1025, metadata !2613) #2, !dbg !4120
  %call.i.51 = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !4121
  %add.ptr.i.54 = getelementptr inbounds i8, i8* %call.i.51, i32 1023, !dbg !4122
  store i8 0, i8* %add.ptr.i.54, align 1, !dbg !4123, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4124
  tail call void @llvm.dbg.value(metadata i8* %func_name, i64 0, metadata !1032, metadata !2613) #2, !dbg !4126
  %call.i.58 = tail call i8* @halide_string_to_string(i8* %call.i.51, i8* %add.ptr.i.54, i8* %func_name) #6, !dbg !4127
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4128
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13.56, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4130
  %call.i.61 = tail call i8* @halide_string_to_string(i8* %call.i.58, i8* %add.ptr.i.54, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13.56, i32 0, i32 0)) #6, !dbg !4131
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1035, metadata !2613) #2, !dbg !4132
  tail call void @llvm.dbg.value(metadata i32 %max_touched, i64 0, metadata !1036, metadata !2613) #2, !dbg !4134
  %conv.i.64 = sext i32 %max_touched to i64, !dbg !4135
  %call.i.65 = tail call i8* @halide_int64_to_string(i8* %call.i.61, i8* %add.ptr.i.54, i64 %conv.i.64, i32 1) #6, !dbg !4136
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4137
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16.59, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4139
  %call.i.68 = tail call i8* @halide_string_to_string(i8* %call.i.65, i8* %add.ptr.i.54, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16.59, i32 0, i32 0)) #6, !dbg !4140
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1035, metadata !2613) #2, !dbg !4141
  tail call void @llvm.dbg.value(metadata i32 %max_valid, i64 0, metadata !1036, metadata !2613) #2, !dbg !4143
  %conv.i.71 = sext i32 %max_valid to i64, !dbg !4144
  %call.i.72 = tail call i8* @halide_int64_to_string(i8* %call.i.68, i8* %add.ptr.i.54, i64 %conv.i.71, i32 1) #6, !dbg !4145
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4146
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15.58, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4148
  %call.i.75 = tail call i8* @halide_string_to_string(i8* %call.i.72, i8* %add.ptr.i.54, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15.58, i32 0, i32 0)) #6, !dbg !4149
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1035, metadata !2613) #2, !dbg !4150
  tail call void @llvm.dbg.value(metadata i32 %dimension, i64 0, metadata !1036, metadata !2613) #2, !dbg !4152
  %conv.i.78 = sext i32 %dimension to i64, !dbg !4153
  %call.i.79 = tail call i8* @halide_int64_to_string(i8* %call.i.75, i8* %add.ptr.i.54, i64 %conv.i.78, i32 1) #6, !dbg !4154
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1028, metadata !2613) #2, !dbg !4155
  tail call void @halide_error(i8* %user_context, i8* %call.i.51) #6, !dbg !4157
  tail call void @halide_free(i8* %user_context, i8* %call.i.51) #6, !dbg !4158
  br label %if.end.17, !dbg !4159

if.end.17:                                        ; preds = %if.then.8, %if.else, %if.then
  ret i32 -4, !dbg !4160
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_allocation_too_large(i8* %user_context, i8* %buffer_name, i64 %allocation_size, i64 %max_size) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !886, metadata !2613), !dbg !4161
  tail call void @llvm.dbg.value(metadata i8* %buffer_name, i64 0, metadata !887, metadata !2613), !dbg !4162
  tail call void @llvm.dbg.value(metadata i64 %allocation_size, i64 0, metadata !888, metadata !2613), !dbg !4163
  tail call void @llvm.dbg.value(metadata i64 %max_size, i64 0, metadata !889, metadata !2613), !dbg !4164
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1023, metadata !2613) #2, !dbg !4165
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1025, metadata !2613) #2, !dbg !4167
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !4168
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !4169
  store i8 0, i8* %add.ptr.i, align 1, !dbg !4170, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4171
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17.60, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4173
  %call.i.8 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17.60, i32 0, i32 0)) #6, !dbg !4174
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4175
  tail call void @llvm.dbg.value(metadata i8* %buffer_name, i64 0, metadata !1032, metadata !2613) #2, !dbg !4177
  %call.i.11 = tail call i8* @halide_string_to_string(i8* %call.i.8, i8* %add.ptr.i, i8* %buffer_name) #6, !dbg !4178
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4179
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.61, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4181
  %call.i.14 = tail call i8* @halide_string_to_string(i8* %call.i.11, i8* %add.ptr.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.61, i32 0, i32 0)) #6, !dbg !4182
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1039, metadata !2613) #2, !dbg !4183
  tail call void @llvm.dbg.value(metadata i64 %allocation_size, i64 0, metadata !1040, metadata !2613) #2, !dbg !4185
  %call.i.17 = tail call i8* @halide_int64_to_string(i8* %call.i.14, i8* %add.ptr.i, i64 %allocation_size, i32 1) #6, !dbg !4186
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4187
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.19.62, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4189
  %call.i.20 = tail call i8* @halide_string_to_string(i8* %call.i.17, i8* %add.ptr.i, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.19.62, i32 0, i32 0)) #6, !dbg !4190
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1039, metadata !2613) #2, !dbg !4191
  tail call void @llvm.dbg.value(metadata i64 %max_size, i64 0, metadata !1040, metadata !2613) #2, !dbg !4193
  %call.i.23 = tail call i8* @halide_int64_to_string(i8* %call.i.20, i8* %add.ptr.i, i64 %max_size, i32 1) #6, !dbg !4194
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1028, metadata !2613) #2, !dbg !4195
  tail call void @halide_error(i8* %user_context, i8* %call.i) #6, !dbg !4197
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !4198
  ret i32 -5, !dbg !4199
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_extents_too_large(i8* %user_context, i8* %buffer_name, i64 %actual_size, i64 %max_size) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !892, metadata !2613), !dbg !4200
  tail call void @llvm.dbg.value(metadata i8* %buffer_name, i64 0, metadata !893, metadata !2613), !dbg !4201
  tail call void @llvm.dbg.value(metadata i64 %actual_size, i64 0, metadata !894, metadata !2613), !dbg !4202
  tail call void @llvm.dbg.value(metadata i64 %max_size, i64 0, metadata !895, metadata !2613), !dbg !4203
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1023, metadata !2613) #2, !dbg !4204
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1025, metadata !2613) #2, !dbg !4206
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !4207
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !4208
  store i8 0, i8* %add.ptr.i, align 1, !dbg !4209, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4210
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.20.63, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4212
  %call.i.8 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.20.63, i32 0, i32 0)) #6, !dbg !4213
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4214
  tail call void @llvm.dbg.value(metadata i8* %buffer_name, i64 0, metadata !1032, metadata !2613) #2, !dbg !4216
  %call.i.11 = tail call i8* @halide_string_to_string(i8* %call.i.8, i8* %add.ptr.i, i8* %buffer_name) #6, !dbg !4217
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4218
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.61, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4220
  %call.i.14 = tail call i8* @halide_string_to_string(i8* %call.i.11, i8* %add.ptr.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.61, i32 0, i32 0)) #6, !dbg !4221
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1039, metadata !2613) #2, !dbg !4222
  tail call void @llvm.dbg.value(metadata i64 %actual_size, i64 0, metadata !1040, metadata !2613) #2, !dbg !4224
  %call.i.17 = tail call i8* @halide_int64_to_string(i8* %call.i.14, i8* %add.ptr.i, i64 %actual_size, i32 1) #6, !dbg !4225
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4226
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.19.62, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4228
  %call.i.20 = tail call i8* @halide_string_to_string(i8* %call.i.17, i8* %add.ptr.i, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.19.62, i32 0, i32 0)) #6, !dbg !4229
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1039, metadata !2613) #2, !dbg !4230
  tail call void @llvm.dbg.value(metadata i64 %max_size, i64 0, metadata !1040, metadata !2613) #2, !dbg !4232
  %call.i.23 = tail call i8* @halide_int64_to_string(i8* %call.i.20, i8* %add.ptr.i, i64 %max_size, i32 1) #6, !dbg !4233
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1028, metadata !2613) #2, !dbg !4234
  tail call void @halide_error(i8* %user_context, i8* %call.i) #6, !dbg !4236
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !4237
  ret i32 -6, !dbg !4238
}

; Function Attrs: nounwind
define weak i32 @halide_error_constraints_make_required_region_smaller(i8* %user_context, i8* %buffer_name, i32 %dimension, i32 %constrained_min, i32 %constrained_extent, i32 %required_min, i32 %required_extent) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !898, metadata !2613), !dbg !4239
  tail call void @llvm.dbg.value(metadata i8* %buffer_name, i64 0, metadata !899, metadata !2613), !dbg !4240
  tail call void @llvm.dbg.value(metadata i32 %dimension, i64 0, metadata !900, metadata !2613), !dbg !4241
  tail call void @llvm.dbg.value(metadata i32 %constrained_min, i64 0, metadata !901, metadata !2613), !dbg !4242
  tail call void @llvm.dbg.value(metadata i32 %constrained_extent, i64 0, metadata !902, metadata !2613), !dbg !4243
  tail call void @llvm.dbg.value(metadata i32 %required_min, i64 0, metadata !903, metadata !2613), !dbg !4244
  tail call void @llvm.dbg.value(metadata i32 %required_extent, i64 0, metadata !904, metadata !2613), !dbg !4245
  %add = add i32 %required_min, -1, !dbg !4246
  %sub = add i32 %add, %required_extent, !dbg !4247
  tail call void @llvm.dbg.value(metadata i32 %sub, i64 0, metadata !905, metadata !2613), !dbg !4248
  %add1 = add i32 %constrained_min, -1, !dbg !4249
  %sub2 = add i32 %add1, %required_extent, !dbg !4250
  tail call void @llvm.dbg.value(metadata i32 %sub2, i64 0, metadata !906, metadata !2613), !dbg !4251
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1023, metadata !2613) #2, !dbg !4252
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1025, metadata !2613) #2, !dbg !4254
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !4255
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !4256
  store i8 0, i8* %add.ptr.i, align 1, !dbg !4257, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4258
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21.64, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4260
  %call.i.22 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21.64, i32 0, i32 0)) #6, !dbg !4261
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4262
  tail call void @llvm.dbg.value(metadata i8* %buffer_name, i64 0, metadata !1032, metadata !2613) #2, !dbg !4264
  %call.i.25 = tail call i8* @halide_string_to_string(i8* %call.i.22, i8* %add.ptr.i, i8* %buffer_name) #6, !dbg !4265
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4266
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.65, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4268
  %call.i.28 = tail call i8* @halide_string_to_string(i8* %call.i.25, i8* %add.ptr.i, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.65, i32 0, i32 0)) #6, !dbg !4269
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4270
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23.66, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4272
  %call.i.31 = tail call i8* @halide_string_to_string(i8* %call.i.28, i8* %add.ptr.i, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23.66, i32 0, i32 0)) #6, !dbg !4273
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1035, metadata !2613) #2, !dbg !4274
  tail call void @llvm.dbg.value(metadata i32 %required_min, i64 0, metadata !1036, metadata !2613) #2, !dbg !4276
  %conv.i = sext i32 %required_min to i64, !dbg !4277
  %call.i.34 = tail call i8* @halide_int64_to_string(i8* %call.i.31, i8* %add.ptr.i, i64 %conv.i, i32 1) #6, !dbg !4278
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4279
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.50, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4281
  %call.i.37 = tail call i8* @halide_string_to_string(i8* %call.i.34, i8* %add.ptr.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.50, i32 0, i32 0)) #6, !dbg !4282
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1035, metadata !2613) #2, !dbg !4283
  tail call void @llvm.dbg.value(metadata i32 %sub, i64 0, metadata !1036, metadata !2613) #2, !dbg !4285
  %conv.i.40 = sext i32 %sub to i64, !dbg !4286
  %call.i.41 = tail call i8* @halide_int64_to_string(i8* %call.i.37, i8* %add.ptr.i, i64 %conv.i.40, i32 1) #6, !dbg !4287
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4288
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.67, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4290
  %call.i.44 = tail call i8* @halide_string_to_string(i8* %call.i.41, i8* %add.ptr.i, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.67, i32 0, i32 0)) #6, !dbg !4291
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4292
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.25.68, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4294
  %call.i.47 = tail call i8* @halide_string_to_string(i8* %call.i.44, i8* %add.ptr.i, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.25.68, i32 0, i32 0)) #6, !dbg !4295
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1035, metadata !2613) #2, !dbg !4296
  tail call void @llvm.dbg.value(metadata i32 %constrained_min, i64 0, metadata !1036, metadata !2613) #2, !dbg !4298
  %conv.i.50 = sext i32 %constrained_min to i64, !dbg !4299
  %call.i.51 = tail call i8* @halide_int64_to_string(i8* %call.i.47, i8* %add.ptr.i, i64 %conv.i.50, i32 1) #6, !dbg !4300
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4301
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.50, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4303
  %call.i.54 = tail call i8* @halide_string_to_string(i8* %call.i.51, i8* %add.ptr.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.50, i32 0, i32 0)) #6, !dbg !4304
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1035, metadata !2613) #2, !dbg !4305
  tail call void @llvm.dbg.value(metadata i32 %sub2, i64 0, metadata !1036, metadata !2613) #2, !dbg !4307
  %conv.i.57 = sext i32 %sub2 to i64, !dbg !4308
  %call.i.58 = tail call i8* @halide_int64_to_string(i8* %call.i.54, i8* %add.ptr.i, i64 %conv.i.57, i32 1) #6, !dbg !4309
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4310
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.98, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4312
  %call.i.61 = tail call i8* @halide_string_to_string(i8* %call.i.58, i8* %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.98, i32 0, i32 0)) #6, !dbg !4313
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1028, metadata !2613) #2, !dbg !4314
  tail call void @halide_error(i8* %user_context, i8* %call.i) #6, !dbg !4316
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !4317
  ret i32 -7, !dbg !4318
}

; Function Attrs: nounwind
define weak i32 @halide_error_constraint_violated(i8* %user_context, i8* %var, i32 %val, i8* %constrained_var, i32 %constrained_val) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !911, metadata !2613), !dbg !4319
  tail call void @llvm.dbg.value(metadata i8* %var, i64 0, metadata !912, metadata !2613), !dbg !4320
  tail call void @llvm.dbg.value(metadata i32 %val, i64 0, metadata !913, metadata !2613), !dbg !4321
  tail call void @llvm.dbg.value(metadata i8* %constrained_var, i64 0, metadata !914, metadata !2613), !dbg !4322
  tail call void @llvm.dbg.value(metadata i32 %constrained_val, i64 0, metadata !915, metadata !2613), !dbg !4323
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1023, metadata !2613) #2, !dbg !4324
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1025, metadata !2613) #2, !dbg !4326
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !4327
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !4328
  store i8 0, i8* %add.ptr.i, align 1, !dbg !4329, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4330
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.27, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4332
  %call.i.12 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.27, i32 0, i32 0)) #6, !dbg !4333
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4334
  tail call void @llvm.dbg.value(metadata i8* %var, i64 0, metadata !1032, metadata !2613) #2, !dbg !4336
  %call.i.15 = tail call i8* @halide_string_to_string(i8* %call.i.12, i8* %add.ptr.i, i8* %var) #6, !dbg !4337
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4338
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4340
  %call.i.18 = tail call i8* @halide_string_to_string(i8* %call.i.15, i8* %add.ptr.i, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i32 0, i32 0)) #6, !dbg !4341
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1035, metadata !2613) #2, !dbg !4342
  tail call void @llvm.dbg.value(metadata i32 %val, i64 0, metadata !1036, metadata !2613) #2, !dbg !4344
  %conv.i = sext i32 %val to i64, !dbg !4345
  %call.i.21 = tail call i8* @halide_int64_to_string(i8* %call.i.18, i8* %add.ptr.i, i64 %conv.i, i32 1) #6, !dbg !4346
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4347
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4349
  %call.i.24 = tail call i8* @halide_string_to_string(i8* %call.i.21, i8* %add.ptr.i, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0)) #6, !dbg !4350
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4351
  tail call void @llvm.dbg.value(metadata i8* %constrained_var, i64 0, metadata !1032, metadata !2613) #2, !dbg !4353
  %call.i.27 = tail call i8* @halide_string_to_string(i8* %call.i.24, i8* %add.ptr.i, i8* %constrained_var) #6, !dbg !4354
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4355
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4357
  %call.i.30 = tail call i8* @halide_string_to_string(i8* %call.i.27, i8* %add.ptr.i, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i32 0, i32 0)) #6, !dbg !4358
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4359
  tail call void @llvm.dbg.value(metadata i8* %constrained_var, i64 0, metadata !1032, metadata !2613) #2, !dbg !4361
  %call.i.33 = tail call i8* @halide_string_to_string(i8* %call.i.30, i8* %add.ptr.i, i8* %constrained_var) #6, !dbg !4362
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4363
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.52, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4365
  %call.i.36 = tail call i8* @halide_string_to_string(i8* %call.i.33, i8* %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.52, i32 0, i32 0)) #6, !dbg !4366
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1028, metadata !2613) #2, !dbg !4367
  tail call void @halide_error(i8* %user_context, i8* %call.i) #6, !dbg !4369
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !4370
  ret i32 -8, !dbg !4371
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_small_i64(i8* %user_context, i8* %param_name, i64 %val, i64 %min_val) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !918, metadata !2613), !dbg !4372
  tail call void @llvm.dbg.value(metadata i8* %param_name, i64 0, metadata !919, metadata !2613), !dbg !4373
  tail call void @llvm.dbg.value(metadata i64 %val, i64 0, metadata !920, metadata !2613), !dbg !4374
  tail call void @llvm.dbg.value(metadata i64 %min_val, i64 0, metadata !921, metadata !2613), !dbg !4375
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1023, metadata !2613) #2, !dbg !4376
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1025, metadata !2613) #2, !dbg !4378
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !4379
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !4380
  store i8 0, i8* %add.ptr.i, align 1, !dbg !4381, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4382
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4384
  %call.i.8 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0)) #6, !dbg !4385
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4386
  tail call void @llvm.dbg.value(metadata i8* %param_name, i64 0, metadata !1032, metadata !2613) #2, !dbg !4388
  %call.i.11 = tail call i8* @halide_string_to_string(i8* %call.i.8, i8* %add.ptr.i, i8* %param_name) #6, !dbg !4389
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4390
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.61, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4392
  %call.i.14 = tail call i8* @halide_string_to_string(i8* %call.i.11, i8* %add.ptr.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.61, i32 0, i32 0)) #6, !dbg !4393
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1039, metadata !2613) #2, !dbg !4394
  tail call void @llvm.dbg.value(metadata i64 %val, i64 0, metadata !1040, metadata !2613) #2, !dbg !4396
  %call.i.17 = tail call i8* @halide_int64_to_string(i8* %call.i.14, i8* %add.ptr.i, i64 %val, i32 1) #6, !dbg !4397
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4398
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4400
  %call.i.20 = tail call i8* @halide_string_to_string(i8* %call.i.17, i8* %add.ptr.i, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31, i32 0, i32 0)) #6, !dbg !4401
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1039, metadata !2613) #2, !dbg !4402
  tail call void @llvm.dbg.value(metadata i64 %min_val, i64 0, metadata !1040, metadata !2613) #2, !dbg !4404
  %call.i.23 = tail call i8* @halide_int64_to_string(i8* %call.i.20, i8* %add.ptr.i, i64 %min_val, i32 1) #6, !dbg !4405
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1028, metadata !2613) #2, !dbg !4406
  tail call void @halide_error(i8* %user_context, i8* %call.i) #6, !dbg !4408
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !4409
  ret i32 -9, !dbg !4410
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_small_u64(i8* %user_context, i8* %param_name, i64 %val, i64 %min_val) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !926, metadata !2613), !dbg !4411
  tail call void @llvm.dbg.value(metadata i8* %param_name, i64 0, metadata !927, metadata !2613), !dbg !4412
  tail call void @llvm.dbg.value(metadata i64 %val, i64 0, metadata !928, metadata !2613), !dbg !4413
  tail call void @llvm.dbg.value(metadata i64 %min_val, i64 0, metadata !929, metadata !2613), !dbg !4414
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1023, metadata !2613) #2, !dbg !4415
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1025, metadata !2613) #2, !dbg !4417
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !4418
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !4419
  store i8 0, i8* %add.ptr.i, align 1, !dbg !4420, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4421
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4423
  %call.i.8 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0)) #6, !dbg !4424
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4425
  tail call void @llvm.dbg.value(metadata i8* %param_name, i64 0, metadata !1032, metadata !2613) #2, !dbg !4427
  %call.i.11 = tail call i8* @halide_string_to_string(i8* %call.i.8, i8* %add.ptr.i, i8* %param_name) #6, !dbg !4428
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4429
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.61, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4431
  %call.i.14 = tail call i8* @halide_string_to_string(i8* %call.i.11, i8* %add.ptr.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.61, i32 0, i32 0)) #6, !dbg !4432
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1043, metadata !2613) #2, !dbg !4433
  tail call void @llvm.dbg.value(metadata i64 %val, i64 0, metadata !1044, metadata !2613) #2, !dbg !4435
  %call.i.17 = tail call i8* @halide_uint64_to_string(i8* %call.i.14, i8* %add.ptr.i, i64 %val, i32 1) #6, !dbg !4436
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4437
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4439
  %call.i.20 = tail call i8* @halide_string_to_string(i8* %call.i.17, i8* %add.ptr.i, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31, i32 0, i32 0)) #6, !dbg !4440
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1043, metadata !2613) #2, !dbg !4441
  tail call void @llvm.dbg.value(metadata i64 %min_val, i64 0, metadata !1044, metadata !2613) #2, !dbg !4443
  %call.i.23 = tail call i8* @halide_uint64_to_string(i8* %call.i.20, i8* %add.ptr.i, i64 %min_val, i32 1) #6, !dbg !4444
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1028, metadata !2613) #2, !dbg !4445
  tail call void @halide_error(i8* %user_context, i8* %call.i) #6, !dbg !4447
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !4448
  ret i32 -9, !dbg !4449
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_small_f64(i8* %user_context, i8* %param_name, double %val, double %min_val) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !934, metadata !2613), !dbg !4450
  tail call void @llvm.dbg.value(metadata i8* %param_name, i64 0, metadata !935, metadata !2613), !dbg !4451
  tail call void @llvm.dbg.value(metadata double %val, i64 0, metadata !936, metadata !2613), !dbg !4452
  tail call void @llvm.dbg.value(metadata double %min_val, i64 0, metadata !937, metadata !2613), !dbg !4453
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1023, metadata !2613) #2, !dbg !4454
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1025, metadata !2613) #2, !dbg !4456
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !4457
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !4458
  store i8 0, i8* %add.ptr.i, align 1, !dbg !4459, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4460
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4462
  %call.i.8 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0)) #6, !dbg !4463
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4464
  tail call void @llvm.dbg.value(metadata i8* %param_name, i64 0, metadata !1032, metadata !2613) #2, !dbg !4466
  %call.i.11 = tail call i8* @halide_string_to_string(i8* %call.i.8, i8* %add.ptr.i, i8* %param_name) #6, !dbg !4467
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4468
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.61, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4470
  %call.i.14 = tail call i8* @halide_string_to_string(i8* %call.i.11, i8* %add.ptr.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.61, i32 0, i32 0)) #6, !dbg !4471
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1047, metadata !2613) #2, !dbg !4472
  tail call void @llvm.dbg.value(metadata double %val, i64 0, metadata !1048, metadata !2613) #2, !dbg !4474
  %call.i.17 = tail call i8* @halide_double_to_string(i8* %call.i.14, i8* %add.ptr.i, double %val, i32 1) #6, !dbg !4475
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4476
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4478
  %call.i.20 = tail call i8* @halide_string_to_string(i8* %call.i.17, i8* %add.ptr.i, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31, i32 0, i32 0)) #6, !dbg !4479
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1047, metadata !2613) #2, !dbg !4480
  tail call void @llvm.dbg.value(metadata double %min_val, i64 0, metadata !1048, metadata !2613) #2, !dbg !4482
  %call.i.23 = tail call i8* @halide_double_to_string(i8* %call.i.20, i8* %add.ptr.i, double %min_val, i32 1) #6, !dbg !4483
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1028, metadata !2613) #2, !dbg !4484
  tail call void @halide_error(i8* %user_context, i8* %call.i) #6, !dbg !4486
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !4487
  ret i32 -9, !dbg !4488
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_large_i64(i8* %user_context, i8* %param_name, i64 %val, i64 %max_val) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !940, metadata !2613), !dbg !4489
  tail call void @llvm.dbg.value(metadata i8* %param_name, i64 0, metadata !941, metadata !2613), !dbg !4490
  tail call void @llvm.dbg.value(metadata i64 %val, i64 0, metadata !942, metadata !2613), !dbg !4491
  tail call void @llvm.dbg.value(metadata i64 %max_val, i64 0, metadata !943, metadata !2613), !dbg !4492
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1023, metadata !2613) #2, !dbg !4493
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1025, metadata !2613) #2, !dbg !4495
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !4496
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !4497
  store i8 0, i8* %add.ptr.i, align 1, !dbg !4498, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4499
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4501
  %call.i.8 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0)) #6, !dbg !4502
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4503
  tail call void @llvm.dbg.value(metadata i8* %param_name, i64 0, metadata !1032, metadata !2613) #2, !dbg !4505
  %call.i.11 = tail call i8* @halide_string_to_string(i8* %call.i.8, i8* %add.ptr.i, i8* %param_name) #6, !dbg !4506
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4507
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.61, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4509
  %call.i.14 = tail call i8* @halide_string_to_string(i8* %call.i.11, i8* %add.ptr.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.61, i32 0, i32 0)) #6, !dbg !4510
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1039, metadata !2613) #2, !dbg !4511
  tail call void @llvm.dbg.value(metadata i64 %val, i64 0, metadata !1040, metadata !2613) #2, !dbg !4513
  %call.i.17 = tail call i8* @halide_int64_to_string(i8* %call.i.14, i8* %add.ptr.i, i64 %val, i32 1) #6, !dbg !4514
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4515
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.32, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4517
  %call.i.20 = tail call i8* @halide_string_to_string(i8* %call.i.17, i8* %add.ptr.i, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.32, i32 0, i32 0)) #6, !dbg !4518
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1039, metadata !2613) #2, !dbg !4519
  tail call void @llvm.dbg.value(metadata i64 %max_val, i64 0, metadata !1040, metadata !2613) #2, !dbg !4521
  %call.i.23 = tail call i8* @halide_int64_to_string(i8* %call.i.20, i8* %add.ptr.i, i64 %max_val, i32 1) #6, !dbg !4522
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1028, metadata !2613) #2, !dbg !4523
  tail call void @halide_error(i8* %user_context, i8* %call.i) #6, !dbg !4525
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !4526
  ret i32 -10, !dbg !4527
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_large_u64(i8* %user_context, i8* %param_name, i64 %val, i64 %max_val) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !946, metadata !2613), !dbg !4528
  tail call void @llvm.dbg.value(metadata i8* %param_name, i64 0, metadata !947, metadata !2613), !dbg !4529
  tail call void @llvm.dbg.value(metadata i64 %val, i64 0, metadata !948, metadata !2613), !dbg !4530
  tail call void @llvm.dbg.value(metadata i64 %max_val, i64 0, metadata !949, metadata !2613), !dbg !4531
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1023, metadata !2613) #2, !dbg !4532
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1025, metadata !2613) #2, !dbg !4534
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !4535
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !4536
  store i8 0, i8* %add.ptr.i, align 1, !dbg !4537, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4538
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4540
  %call.i.8 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0)) #6, !dbg !4541
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4542
  tail call void @llvm.dbg.value(metadata i8* %param_name, i64 0, metadata !1032, metadata !2613) #2, !dbg !4544
  %call.i.11 = tail call i8* @halide_string_to_string(i8* %call.i.8, i8* %add.ptr.i, i8* %param_name) #6, !dbg !4545
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4546
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.61, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4548
  %call.i.14 = tail call i8* @halide_string_to_string(i8* %call.i.11, i8* %add.ptr.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.61, i32 0, i32 0)) #6, !dbg !4549
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1043, metadata !2613) #2, !dbg !4550
  tail call void @llvm.dbg.value(metadata i64 %val, i64 0, metadata !1044, metadata !2613) #2, !dbg !4552
  %call.i.17 = tail call i8* @halide_uint64_to_string(i8* %call.i.14, i8* %add.ptr.i, i64 %val, i32 1) #6, !dbg !4553
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4554
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.32, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4556
  %call.i.20 = tail call i8* @halide_string_to_string(i8* %call.i.17, i8* %add.ptr.i, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.32, i32 0, i32 0)) #6, !dbg !4557
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1043, metadata !2613) #2, !dbg !4558
  tail call void @llvm.dbg.value(metadata i64 %max_val, i64 0, metadata !1044, metadata !2613) #2, !dbg !4560
  %call.i.23 = tail call i8* @halide_uint64_to_string(i8* %call.i.20, i8* %add.ptr.i, i64 %max_val, i32 1) #6, !dbg !4561
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1028, metadata !2613) #2, !dbg !4562
  tail call void @halide_error(i8* %user_context, i8* %call.i) #6, !dbg !4564
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !4565
  ret i32 -10, !dbg !4566
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_large_f64(i8* %user_context, i8* %param_name, double %val, double %max_val) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !952, metadata !2613), !dbg !4567
  tail call void @llvm.dbg.value(metadata i8* %param_name, i64 0, metadata !953, metadata !2613), !dbg !4568
  tail call void @llvm.dbg.value(metadata double %val, i64 0, metadata !954, metadata !2613), !dbg !4569
  tail call void @llvm.dbg.value(metadata double %max_val, i64 0, metadata !955, metadata !2613), !dbg !4570
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1023, metadata !2613) #2, !dbg !4571
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1025, metadata !2613) #2, !dbg !4573
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !4574
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !4575
  store i8 0, i8* %add.ptr.i, align 1, !dbg !4576, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4577
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4579
  %call.i.8 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0)) #6, !dbg !4580
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4581
  tail call void @llvm.dbg.value(metadata i8* %param_name, i64 0, metadata !1032, metadata !2613) #2, !dbg !4583
  %call.i.11 = tail call i8* @halide_string_to_string(i8* %call.i.8, i8* %add.ptr.i, i8* %param_name) #6, !dbg !4584
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4585
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.61, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4587
  %call.i.14 = tail call i8* @halide_string_to_string(i8* %call.i.11, i8* %add.ptr.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.61, i32 0, i32 0)) #6, !dbg !4588
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1047, metadata !2613) #2, !dbg !4589
  tail call void @llvm.dbg.value(metadata double %val, i64 0, metadata !1048, metadata !2613) #2, !dbg !4591
  %call.i.17 = tail call i8* @halide_double_to_string(i8* %call.i.14, i8* %add.ptr.i, double %val, i32 1) #6, !dbg !4592
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4593
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.32, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4595
  %call.i.20 = tail call i8* @halide_string_to_string(i8* %call.i.17, i8* %add.ptr.i, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.32, i32 0, i32 0)) #6, !dbg !4596
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1047, metadata !2613) #2, !dbg !4597
  tail call void @llvm.dbg.value(metadata double %max_val, i64 0, metadata !1048, metadata !2613) #2, !dbg !4599
  %call.i.23 = tail call i8* @halide_double_to_string(i8* %call.i.20, i8* %add.ptr.i, double %max_val, i32 1) #6, !dbg !4600
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1028, metadata !2613) #2, !dbg !4601
  tail call void @halide_error(i8* %user_context, i8* %call.i) #6, !dbg !4603
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !4604
  ret i32 -10, !dbg !4605
}

; Function Attrs: nounwind
define weak i32 @halide_error_out_of_memory(i8* %user_context) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !958, metadata !2613), !dbg !4606
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.33, i32 0, i32 0)) #7, !dbg !4607
  ret i32 -11, !dbg !4608
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_argument_is_null(i8* %user_context, i8* %buffer_name) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !963, metadata !2613), !dbg !4609
  tail call void @llvm.dbg.value(metadata i8* %buffer_name, i64 0, metadata !964, metadata !2613), !dbg !4610
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1023, metadata !2613) #2, !dbg !4611
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1025, metadata !2613) #2, !dbg !4613
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !4614
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !4615
  store i8 0, i8* %add.ptr.i, align 1, !dbg !4616, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4617
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4619
  %call.i.5 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i32 0, i32 0)) #6, !dbg !4620
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4621
  tail call void @llvm.dbg.value(metadata i8* %buffer_name, i64 0, metadata !1032, metadata !2613) #2, !dbg !4623
  %call.i.8 = tail call i8* @halide_string_to_string(i8* %call.i.5, i8* %add.ptr.i, i8* %buffer_name) #6, !dbg !4624
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4625
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4627
  %call.i.11 = tail call i8* @halide_string_to_string(i8* %call.i.8, i8* %add.ptr.i, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i32 0, i32 0)) #6, !dbg !4628
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1028, metadata !2613) #2, !dbg !4629
  tail call void @halide_error(i8* %user_context, i8* %call.i) #6, !dbg !4631
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !4632
  ret i32 -12, !dbg !4633
}

; Function Attrs: nounwind
define weak i32 @halide_error_debug_to_file_failed(i8* %user_context, i8* %func, i8* %filename, i32 %error_code) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !969, metadata !2613), !dbg !4634
  tail call void @llvm.dbg.value(metadata i8* %func, i64 0, metadata !970, metadata !2613), !dbg !4635
  tail call void @llvm.dbg.value(metadata i8* %filename, i64 0, metadata !971, metadata !2613), !dbg !4636
  tail call void @llvm.dbg.value(metadata i32 %error_code, i64 0, metadata !972, metadata !2613), !dbg !4637
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1023, metadata !2613) #2, !dbg !4638
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1025, metadata !2613) #2, !dbg !4640
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !4641
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !4642
  store i8 0, i8* %add.ptr.i, align 1, !dbg !4643, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4644
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.36, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4646
  %call.i.8 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.36, i32 0, i32 0)) #6, !dbg !4647
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4648
  tail call void @llvm.dbg.value(metadata i8* %func, i64 0, metadata !1032, metadata !2613) #2, !dbg !4650
  %call.i.11 = tail call i8* @halide_string_to_string(i8* %call.i.8, i8* %add.ptr.i, i8* %func) #6, !dbg !4651
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4652
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4654
  %call.i.14 = tail call i8* @halide_string_to_string(i8* %call.i.11, i8* %add.ptr.i, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i32 0, i32 0)) #6, !dbg !4655
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4656
  tail call void @llvm.dbg.value(metadata i8* %filename, i64 0, metadata !1032, metadata !2613) #2, !dbg !4658
  %call.i.17 = tail call i8* @halide_string_to_string(i8* %call.i.14, i8* %add.ptr.i, i8* %filename) #6, !dbg !4659
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1031, metadata !2613) #2, !dbg !4660
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38, i32 0, i32 0), i64 0, metadata !1032, metadata !2613) #2, !dbg !4662
  %call.i.20 = tail call i8* @halide_string_to_string(i8* %call.i.17, i8* %add.ptr.i, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38, i32 0, i32 0)) #6, !dbg !4663
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1035, metadata !2613) #2, !dbg !4664
  tail call void @llvm.dbg.value(metadata i32 %error_code, i64 0, metadata !1036, metadata !2613) #2, !dbg !4666
  %conv.i = sext i32 %error_code to i64, !dbg !4667
  %call.i.23 = tail call i8* @halide_int64_to_string(i8* %call.i.20, i8* %add.ptr.i, i64 %conv.i, i32 1) #6, !dbg !4668
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1028, metadata !2613) #2, !dbg !4669
  tail call void @halide_error(i8* %user_context, i8* %call.i) #6, !dbg !4671
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !4672
  ret i32 -13, !dbg !4673
}

; Function Attrs: nounwind
define weak void @halide_print(i8* %user_context, i8* %msg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1058, metadata !2613), !dbg !4674
  tail call void @llvm.dbg.value(metadata i8* %msg, i64 0, metadata !1059, metadata !2613), !dbg !4675
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal19halide_custom_printE, align 4, !dbg !4676, !tbaa !2768
  tail call void %0(i8* %user_context, i8* %msg) #6, !dbg !4677
  ret void, !dbg !4678
}

; Function Attrs: nounwind
define weak void (i8*, i8*)* @halide_set_custom_print(void (i8*, i8*)* %print) #0 {
entry:
  tail call void @llvm.dbg.value(metadata void (i8*, i8*)* %print, i64 0, metadata !1062, metadata !2613), !dbg !4679
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal19halide_custom_printE, align 4, !dbg !4680, !tbaa !2768
  tail call void @llvm.dbg.value(metadata void (i8*, i8*)* %0, i64 0, metadata !1063, metadata !2613), !dbg !4681
  store void (i8*, i8*)* %print, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal19halide_custom_printE, align 4, !dbg !4682, !tbaa !2768
  ret void (i8*, i8*)* %0, !dbg !4683
}

; Function Attrs: nounwind
define linkonce i32 @_ZN6Halide7Runtime8Internal11full_extentERK8buffer_t(%struct.buffer_t* dereferenceable(72) %buf) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %buf, i64 0, metadata !1135, metadata !2613), !dbg !4684
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1136, metadata !2613), !dbg !4685
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1137, metadata !2613), !dbg !4686
  %arrayidx = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 3, i32 0, !dbg !4687
  %0 = load i32, i32* %arrayidx, align 4, !dbg !4687, !tbaa !2786
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !1139, metadata !2613), !dbg !4688
  %cmp2 = icmp slt i32 %0, 0, !dbg !4689
  %sub = sub nsw i32 0, %0, !dbg !4691
  tail call void @llvm.dbg.value(metadata i32 %sub, i64 0, metadata !1139, metadata !2613), !dbg !4688
  %sub. = select i1 %cmp2, i32 %sub, i32 %0, !dbg !4692
  %arrayidx3 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 2, i32 0, !dbg !4693
  %1 = load i32, i32* %arrayidx3, align 4, !dbg !4693, !tbaa !2786
  %mul = mul nsw i32 %sub., %1, !dbg !4695
  %cmp4 = icmp ugt i32 %mul, 1, !dbg !4696
  tail call void @llvm.dbg.value(metadata i32 %mul, i64 0, metadata !1136, metadata !2613), !dbg !4685
  %result.1 = select i1 %cmp4, i32 %mul, i32 1, !dbg !4697
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1137, metadata !2613), !dbg !4686
  %arrayidx.1 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 3, i32 1, !dbg !4687
  %2 = load i32, i32* %arrayidx.1, align 4, !dbg !4687, !tbaa !2786
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !1139, metadata !2613), !dbg !4688
  %cmp2.1 = icmp slt i32 %2, 0, !dbg !4689
  %sub.1 = sub nsw i32 0, %2, !dbg !4691
  tail call void @llvm.dbg.value(metadata i32 %sub, i64 0, metadata !1139, metadata !2613), !dbg !4688
  %sub..1 = select i1 %cmp2.1, i32 %sub.1, i32 %2, !dbg !4692
  %arrayidx3.1 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 2, i32 1, !dbg !4693
  %3 = load i32, i32* %arrayidx3.1, align 4, !dbg !4693, !tbaa !2786
  %mul.1 = mul nsw i32 %sub..1, %3, !dbg !4695
  %cmp4.1 = icmp ugt i32 %mul.1, %result.1, !dbg !4696
  tail call void @llvm.dbg.value(metadata i32 %mul, i64 0, metadata !1136, metadata !2613), !dbg !4685
  %result.1.1 = select i1 %cmp4.1, i32 %mul.1, i32 %result.1, !dbg !4697
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1137, metadata !2613), !dbg !4686
  %arrayidx.2 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 3, i32 2, !dbg !4687
  %4 = load i32, i32* %arrayidx.2, align 4, !dbg !4687, !tbaa !2786
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !1139, metadata !2613), !dbg !4688
  %cmp2.2 = icmp slt i32 %4, 0, !dbg !4689
  %sub.2 = sub nsw i32 0, %4, !dbg !4691
  tail call void @llvm.dbg.value(metadata i32 %sub, i64 0, metadata !1139, metadata !2613), !dbg !4688
  %sub..2 = select i1 %cmp2.2, i32 %sub.2, i32 %4, !dbg !4692
  %arrayidx3.2 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 2, i32 2, !dbg !4693
  %5 = load i32, i32* %arrayidx3.2, align 4, !dbg !4693, !tbaa !2786
  %mul.2 = mul nsw i32 %sub..2, %5, !dbg !4695
  %cmp4.2 = icmp ugt i32 %mul.2, %result.1.1, !dbg !4696
  tail call void @llvm.dbg.value(metadata i32 %mul, i64 0, metadata !1136, metadata !2613), !dbg !4685
  %result.1.2 = select i1 %cmp4.2, i32 %mul.2, i32 %result.1.1, !dbg !4697
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1137, metadata !2613), !dbg !4686
  %arrayidx.3 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 3, i32 3, !dbg !4687
  %6 = load i32, i32* %arrayidx.3, align 4, !dbg !4687, !tbaa !2786
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !1139, metadata !2613), !dbg !4688
  %cmp2.3 = icmp slt i32 %6, 0, !dbg !4689
  %sub.3 = sub nsw i32 0, %6, !dbg !4691
  tail call void @llvm.dbg.value(metadata i32 %sub, i64 0, metadata !1139, metadata !2613), !dbg !4688
  %sub..3 = select i1 %cmp2.3, i32 %sub.3, i32 %6, !dbg !4692
  %arrayidx3.3 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 2, i32 3, !dbg !4693
  %7 = load i32, i32* %arrayidx3.3, align 4, !dbg !4693, !tbaa !2786
  %mul.3 = mul nsw i32 %sub..3, %7, !dbg !4695
  %cmp4.3 = icmp ugt i32 %mul.3, %result.1.2, !dbg !4696
  tail call void @llvm.dbg.value(metadata i32 %mul, i64 0, metadata !1136, metadata !2613), !dbg !4685
  %result.1.3 = select i1 %cmp4.3, i32 %mul.3, i32 %result.1.2, !dbg !4697
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1137, metadata !2613), !dbg !4686
  ret i32 %result.1.3, !dbg !4698
}

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal12copy_from_toEPvRK8buffer_tRS3_(i8* %user_context, %struct.buffer_t* dereferenceable(72) %from, %struct.buffer_t* dereferenceable(72) %to) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1146, metadata !2613), !dbg !4699
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %from, i64 0, metadata !1147, metadata !2613), !dbg !4700
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %to, i64 0, metadata !1148, metadata !2613), !dbg !4701
  %call = tail call i32 @_ZN6Halide7Runtime8Internal11full_extentERK8buffer_t(%struct.buffer_t* nonnull dereferenceable(72) %from) #7, !dbg !4702
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1149, metadata !2613), !dbg !4703
  %elem_size = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %from, i32 0, i32 5, !dbg !4704
  %0 = load i32, i32* %elem_size, align 4, !dbg !4704, !tbaa !4706
  %elem_size1 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %to, i32 0, i32 5, !dbg !4704
  %1 = load i32, i32* %elem_size1, align 4, !dbg !4704, !tbaa !4706
  %cmp = icmp eq i32 %0, %1, !dbg !4704
  br i1 %cmp, label %for.cond.preheader, label %if.then, !dbg !4708

if.then:                                          ; preds = %entry
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.73, i32 0, i32 0)) #6, !dbg !4709
  br label %for.cond.preheader, !dbg !4709

for.cond.preheader:                               ; preds = %if.then, %entry
  %arrayidx = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %from, i32 0, i32 2, i32 0, !dbg !4711
  %2 = load i32, i32* %arrayidx, align 4, !dbg !4711, !tbaa !2786
  %arrayidx4 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %to, i32 0, i32 2, i32 0, !dbg !4711
  %3 = load i32, i32* %arrayidx4, align 4, !dbg !4711, !tbaa !2786
  %cmp5 = icmp eq i32 %2, %3, !dbg !4711
  br i1 %cmp5, label %if.end.7, label %if.then.6, !dbg !4715

if.then.6:                                        ; preds = %for.cond.preheader
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1.74, i32 0, i32 0)) #6, !dbg !4716
  br label %if.end.7, !dbg !4716

if.end.7:                                         ; preds = %if.then.6, %for.cond.preheader
  %arrayidx8 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %from, i32 0, i32 3, i32 0, !dbg !4718
  %4 = load i32, i32* %arrayidx8, align 4, !dbg !4718, !tbaa !2786
  %arrayidx10 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %to, i32 0, i32 3, i32 0, !dbg !4718
  %5 = load i32, i32* %arrayidx10, align 4, !dbg !4718, !tbaa !2786
  %cmp11 = icmp eq i32 %4, %5, !dbg !4718
  br i1 %cmp11, label %for.inc, label %if.then.12, !dbg !4720

if.then.12:                                       ; preds = %if.end.7
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2.75, i32 0, i32 0)) #6, !dbg !4721
  br label %for.inc, !dbg !4721

for.inc:                                          ; preds = %if.then.12, %if.end.7
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1150, metadata !2613), !dbg !4723
  %arrayidx.1 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %from, i32 0, i32 2, i32 1, !dbg !4711
  %6 = load i32, i32* %arrayidx.1, align 4, !dbg !4711, !tbaa !2786
  %arrayidx4.1 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %to, i32 0, i32 2, i32 1, !dbg !4711
  %7 = load i32, i32* %arrayidx4.1, align 4, !dbg !4711, !tbaa !2786
  %cmp5.1 = icmp eq i32 %6, %7, !dbg !4711
  br i1 %cmp5.1, label %if.end.7.1, label %if.then.6.1, !dbg !4715

if.then.6.1:                                      ; preds = %for.inc
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1.74, i32 0, i32 0)) #6, !dbg !4716
  br label %if.end.7.1, !dbg !4716

if.end.7.1:                                       ; preds = %if.then.6.1, %for.inc
  %arrayidx8.1 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %from, i32 0, i32 3, i32 1, !dbg !4718
  %8 = load i32, i32* %arrayidx8.1, align 4, !dbg !4718, !tbaa !2786
  %arrayidx10.1 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %to, i32 0, i32 3, i32 1, !dbg !4718
  %9 = load i32, i32* %arrayidx10.1, align 4, !dbg !4718, !tbaa !2786
  %cmp11.1 = icmp eq i32 %8, %9, !dbg !4718
  br i1 %cmp11.1, label %for.inc.1, label %if.then.12.1, !dbg !4720

if.then.12.1:                                     ; preds = %if.end.7.1
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2.75, i32 0, i32 0)) #6, !dbg !4721
  br label %for.inc.1, !dbg !4721

for.inc.1:                                        ; preds = %if.then.12.1, %if.end.7.1
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1150, metadata !2613), !dbg !4723
  %arrayidx.2 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %from, i32 0, i32 2, i32 2, !dbg !4711
  %10 = load i32, i32* %arrayidx.2, align 4, !dbg !4711, !tbaa !2786
  %arrayidx4.2 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %to, i32 0, i32 2, i32 2, !dbg !4711
  %11 = load i32, i32* %arrayidx4.2, align 4, !dbg !4711, !tbaa !2786
  %cmp5.2 = icmp eq i32 %10, %11, !dbg !4711
  br i1 %cmp5.2, label %if.end.7.2, label %if.then.6.2, !dbg !4715

if.then.6.2:                                      ; preds = %for.inc.1
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1.74, i32 0, i32 0)) #6, !dbg !4716
  br label %if.end.7.2, !dbg !4716

if.end.7.2:                                       ; preds = %if.then.6.2, %for.inc.1
  %arrayidx8.2 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %from, i32 0, i32 3, i32 2, !dbg !4718
  %12 = load i32, i32* %arrayidx8.2, align 4, !dbg !4718, !tbaa !2786
  %arrayidx10.2 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %to, i32 0, i32 3, i32 2, !dbg !4718
  %13 = load i32, i32* %arrayidx10.2, align 4, !dbg !4718, !tbaa !2786
  %cmp11.2 = icmp eq i32 %12, %13, !dbg !4718
  br i1 %cmp11.2, label %for.inc.2, label %if.then.12.2, !dbg !4720

if.then.12.2:                                     ; preds = %if.end.7.2
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2.75, i32 0, i32 0)) #6, !dbg !4721
  br label %for.inc.2, !dbg !4721

for.inc.2:                                        ; preds = %if.then.12.2, %if.end.7.2
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1150, metadata !2613), !dbg !4723
  %arrayidx.3 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %from, i32 0, i32 2, i32 3, !dbg !4711
  %14 = load i32, i32* %arrayidx.3, align 4, !dbg !4711, !tbaa !2786
  %arrayidx4.3 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %to, i32 0, i32 2, i32 3, !dbg !4711
  %15 = load i32, i32* %arrayidx4.3, align 4, !dbg !4711, !tbaa !2786
  %cmp5.3 = icmp eq i32 %14, %15, !dbg !4711
  br i1 %cmp5.3, label %if.end.7.3, label %if.then.6.3, !dbg !4715

if.then.6.3:                                      ; preds = %for.inc.2
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1.74, i32 0, i32 0)) #6, !dbg !4716
  br label %if.end.7.3, !dbg !4716

if.end.7.3:                                       ; preds = %if.then.6.3, %for.inc.2
  %arrayidx8.3 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %from, i32 0, i32 3, i32 3, !dbg !4718
  %16 = load i32, i32* %arrayidx8.3, align 4, !dbg !4718, !tbaa !2786
  %arrayidx10.3 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %to, i32 0, i32 3, i32 3, !dbg !4718
  %17 = load i32, i32* %arrayidx10.3, align 4, !dbg !4718, !tbaa !2786
  %cmp11.3 = icmp eq i32 %16, %17, !dbg !4718
  br i1 %cmp11.3, label %for.inc.3, label %if.then.12.3, !dbg !4720

if.then.12.3:                                     ; preds = %if.end.7.3
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2.75, i32 0, i32 0)) #6, !dbg !4721
  br label %for.inc.3, !dbg !4721

for.inc.3:                                        ; preds = %if.then.12.3, %if.end.7.3
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1150, metadata !2613), !dbg !4723
  %host = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %to, i32 0, i32 1, !dbg !4724
  %18 = load i8*, i8** %host, align 4, !dbg !4724, !tbaa !4725
  %host14 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %from, i32 0, i32 1, !dbg !4726
  %19 = load i8*, i8** %host14, align 4, !dbg !4726, !tbaa !4725
  %20 = load i32, i32* %elem_size, align 4, !dbg !4727, !tbaa !4706
  %mul = mul i32 %20, %call, !dbg !4728
  %call16 = tail call i8* @memcpy(i8* %18, i8* %19, i32 %mul) #6, !dbg !4729
  ret void, !dbg !4730
}

; Function Attrs: nounwind
declare i8* @memcpy(i8*, i8* nocapture readonly, i32) #0

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal14copy_of_bufferEPvRK8buffer_t(%struct.buffer_t* noalias sret %agg.result, i8* %user_context, %struct.buffer_t* dereferenceable(72) %buf) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1156, metadata !2613), !dbg !4731
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %buf, i64 0, metadata !1157, metadata !2613), !dbg !4732
  tail call void @llvm.dbg.declare(metadata %struct.buffer_t* %agg.result, metadata !1158, metadata !4733), !dbg !4734
  %0 = bitcast %struct.buffer_t* %agg.result to i8*, !dbg !4735
  %1 = bitcast %struct.buffer_t* %buf to i8*, !dbg !4735
  tail call void @llvm.memcpy.p0i8.p0i8.i32(i8* %0, i8* %1, i32 72, i32 8, i1 false), !dbg !4735, !tbaa.struct !4736
  %call = tail call i32 @_ZN6Halide7Runtime8Internal11full_extentERK8buffer_t(%struct.buffer_t* dereferenceable(72) %agg.result) #7, !dbg !4737
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1159, metadata !2613), !dbg !4738
  %elem_size = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %agg.result, i32 0, i32 5, !dbg !4739
  %2 = load i32, i32* %elem_size, align 4, !dbg !4739, !tbaa !4706
  %mul = mul i32 %2, %call, !dbg !4740
  %call1 = tail call i8* @halide_malloc(i8* %user_context, i32 %mul) #6, !dbg !4741
  %host = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %agg.result, i32 0, i32 1, !dbg !4742
  store i8* %call1, i8** %host, align 8, !dbg !4743, !tbaa !4725
  tail call void @_ZN6Halide7Runtime8Internal12copy_from_toEPvRK8buffer_tRS3_(i8* %user_context, %struct.buffer_t* nonnull dereferenceable(72) %buf, %struct.buffer_t* dereferenceable(72) %agg.result) #7, !dbg !4744
  ret void, !dbg !4745
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* nocapture, i8* nocapture readonly, i32, i32, i1) #2

; Function Attrs: nounwind
define linkonce zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_j(i8* %key1, i8* %key2, i32 %key_size) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %key1, i64 0, metadata !1164, metadata !2613), !dbg !4746
  tail call void @llvm.dbg.value(metadata i8* %key2, i64 0, metadata !1165, metadata !2613), !dbg !4747
  tail call void @llvm.dbg.value(metadata i32 %key_size, i64 0, metadata !1166, metadata !2613), !dbg !4748
  %call = tail call i32 @memcmp(i8* %key1, i8* %key2, i32 %key_size) #6, !dbg !4749
  %cmp = icmp eq i32 %call, 0, !dbg !4750
  ret i1 %cmp, !dbg !4751
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i32) #4

; Function Attrs: nounwind
define linkonce zeroext i1 @_ZN6Halide7Runtime8Internal12bounds_equalERK8buffer_tS4_(%struct.buffer_t* dereferenceable(72) %buf1, %struct.buffer_t* dereferenceable(72) %buf2) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %buf1, i64 0, metadata !1171, metadata !2613), !dbg !4752
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %buf2, i64 0, metadata !1172, metadata !2613), !dbg !4753
  %elem_size = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf1, i32 0, i32 5, !dbg !4754
  %0 = load i32, i32* %elem_size, align 4, !dbg !4754, !tbaa !4706
  %elem_size1 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf2, i32 0, i32 5, !dbg !4756
  %1 = load i32, i32* %elem_size1, align 4, !dbg !4756, !tbaa !4706
  %cmp = icmp eq i32 %0, %1, !dbg !4757
  br i1 %cmp, label %for.cond.preheader, label %cleanup, !dbg !4758

for.cond.preheader:                               ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf1, i32 0, i32 4, i32 0, !dbg !4759
  %2 = load i32, i32* %arrayidx, align 4, !dbg !4759, !tbaa !2786
  %arrayidx4 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf2, i32 0, i32 4, i32 0, !dbg !4763
  %3 = load i32, i32* %arrayidx4, align 4, !dbg !4763, !tbaa !2786
  %cmp5 = icmp eq i32 %2, %3, !dbg !4764
  br i1 %cmp5, label %lor.lhs.false, label %cleanup, !dbg !4765

for.cond:                                         ; preds = %lor.lhs.false.10
  %arrayidx.1 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf1, i32 0, i32 4, i32 1, !dbg !4759
  %4 = load i32, i32* %arrayidx.1, align 4, !dbg !4759, !tbaa !2786
  %arrayidx4.1 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf2, i32 0, i32 4, i32 1, !dbg !4763
  %5 = load i32, i32* %arrayidx4.1, align 4, !dbg !4763, !tbaa !2786
  %cmp5.1 = icmp eq i32 %4, %5, !dbg !4764
  br i1 %cmp5.1, label %lor.lhs.false.1, label %cleanup, !dbg !4765

lor.lhs.false:                                    ; preds = %for.cond.preheader
  %arrayidx6 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf1, i32 0, i32 2, i32 0, !dbg !4766
  %6 = load i32, i32* %arrayidx6, align 4, !dbg !4766, !tbaa !2786
  %arrayidx8 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf2, i32 0, i32 2, i32 0, !dbg !4767
  %7 = load i32, i32* %arrayidx8, align 4, !dbg !4767, !tbaa !2786
  %cmp9 = icmp eq i32 %6, %7, !dbg !4768
  br i1 %cmp9, label %lor.lhs.false.10, label %cleanup, !dbg !4769

lor.lhs.false.10:                                 ; preds = %lor.lhs.false
  %arrayidx11 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf1, i32 0, i32 3, i32 0, !dbg !4770
  %8 = load i32, i32* %arrayidx11, align 4, !dbg !4770, !tbaa !2786
  %arrayidx13 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf2, i32 0, i32 3, i32 0, !dbg !4771
  %9 = load i32, i32* %arrayidx13, align 4, !dbg !4771, !tbaa !2786
  %cmp14 = icmp eq i32 %8, %9, !dbg !4772
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1173, metadata !2613), !dbg !4773
  br i1 %cmp14, label %for.cond, label %cleanup, !dbg !4774

cleanup:                                          ; preds = %lor.lhs.false.3, %for.cond.2, %lor.lhs.false.10.2, %lor.lhs.false.2, %for.cond.1, %lor.lhs.false.10.1, %lor.lhs.false.1, %lor.lhs.false.10, %lor.lhs.false, %for.cond, %for.cond.preheader, %entry
  ret i1 false

lor.lhs.false.1:                                  ; preds = %for.cond
  %arrayidx6.1 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf1, i32 0, i32 2, i32 1, !dbg !4766
  %10 = load i32, i32* %arrayidx6.1, align 4, !dbg !4766, !tbaa !2786
  %arrayidx8.1 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf2, i32 0, i32 2, i32 1, !dbg !4767
  %11 = load i32, i32* %arrayidx8.1, align 4, !dbg !4767, !tbaa !2786
  %cmp9.1 = icmp eq i32 %10, %11, !dbg !4768
  br i1 %cmp9.1, label %lor.lhs.false.10.1, label %cleanup, !dbg !4769

lor.lhs.false.10.1:                               ; preds = %lor.lhs.false.1
  %arrayidx11.1 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf1, i32 0, i32 3, i32 1, !dbg !4770
  %12 = load i32, i32* %arrayidx11.1, align 4, !dbg !4770, !tbaa !2786
  %arrayidx13.1 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf2, i32 0, i32 3, i32 1, !dbg !4771
  %13 = load i32, i32* %arrayidx13.1, align 4, !dbg !4771, !tbaa !2786
  %cmp14.1 = icmp eq i32 %12, %13, !dbg !4772
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1173, metadata !2613), !dbg !4773
  br i1 %cmp14.1, label %for.cond.1, label %cleanup, !dbg !4774

for.cond.1:                                       ; preds = %lor.lhs.false.10.1
  %arrayidx.2 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf1, i32 0, i32 4, i32 2, !dbg !4759
  %14 = load i32, i32* %arrayidx.2, align 4, !dbg !4759, !tbaa !2786
  %arrayidx4.2 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf2, i32 0, i32 4, i32 2, !dbg !4763
  %15 = load i32, i32* %arrayidx4.2, align 4, !dbg !4763, !tbaa !2786
  %cmp5.2 = icmp eq i32 %14, %15, !dbg !4764
  br i1 %cmp5.2, label %lor.lhs.false.2, label %cleanup, !dbg !4765

lor.lhs.false.2:                                  ; preds = %for.cond.1
  %arrayidx6.2 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf1, i32 0, i32 2, i32 2, !dbg !4766
  %16 = load i32, i32* %arrayidx6.2, align 4, !dbg !4766, !tbaa !2786
  %arrayidx8.2 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf2, i32 0, i32 2, i32 2, !dbg !4767
  %17 = load i32, i32* %arrayidx8.2, align 4, !dbg !4767, !tbaa !2786
  %cmp9.2 = icmp eq i32 %16, %17, !dbg !4768
  br i1 %cmp9.2, label %lor.lhs.false.10.2, label %cleanup, !dbg !4769

lor.lhs.false.10.2:                               ; preds = %lor.lhs.false.2
  %arrayidx11.2 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf1, i32 0, i32 3, i32 2, !dbg !4770
  %18 = load i32, i32* %arrayidx11.2, align 4, !dbg !4770, !tbaa !2786
  %arrayidx13.2 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf2, i32 0, i32 3, i32 2, !dbg !4771
  %19 = load i32, i32* %arrayidx13.2, align 4, !dbg !4771, !tbaa !2786
  %cmp14.2 = icmp eq i32 %18, %19, !dbg !4772
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1173, metadata !2613), !dbg !4773
  br i1 %cmp14.2, label %for.cond.2, label %cleanup, !dbg !4774

for.cond.2:                                       ; preds = %lor.lhs.false.10.2
  %arrayidx.3 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf1, i32 0, i32 4, i32 3, !dbg !4759
  %20 = load i32, i32* %arrayidx.3, align 4, !dbg !4759, !tbaa !2786
  %arrayidx4.3 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf2, i32 0, i32 4, i32 3, !dbg !4763
  %21 = load i32, i32* %arrayidx4.3, align 4, !dbg !4763, !tbaa !2786
  %cmp5.3 = icmp eq i32 %20, %21, !dbg !4764
  br i1 %cmp5.3, label %lor.lhs.false.3, label %cleanup, !dbg !4765

lor.lhs.false.3:                                  ; preds = %for.cond.2
  %arrayidx6.3 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf1, i32 0, i32 2, i32 3, !dbg !4766
  %22 = load i32, i32* %arrayidx6.3, align 4, !dbg !4766, !tbaa !2786
  %arrayidx8.3 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf2, i32 0, i32 2, i32 3, !dbg !4767
  %23 = load i32, i32* %arrayidx8.3, align 4, !dbg !4767, !tbaa !2786
  %cmp9.3 = icmp eq i32 %22, %23, !dbg !4768
  br i1 %cmp9.3, label %lor.lhs.false.10.3, label %cleanup, !dbg !4769

lor.lhs.false.10.3:                               ; preds = %lor.lhs.false.3
  %arrayidx11.3 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf1, i32 0, i32 3, i32 3, !dbg !4770
  %24 = load i32, i32* %arrayidx11.3, align 4, !dbg !4770, !tbaa !2786
  %arrayidx13.3 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf2, i32 0, i32 3, i32 3, !dbg !4771
  %25 = load i32, i32* %arrayidx13.3, align 4, !dbg !4771, !tbaa !2786
  %cmp14.3 = icmp eq i32 %24, %25, !dbg !4772
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1173, metadata !2613), !dbg !4773
  ret i1 %cmp14.3, !dbg !4774
}

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal10CacheEntry4initEPKhjjRK8buffer_tiPPS5_(%"struct.Halide::Runtime::Internal::CacheEntry"* %this, i8* %cache_key, i32 %cache_key_size, i32 %key_hash, %struct.buffer_t* dereferenceable(72) %computed_buf, i32 %tuples, %struct.buffer_t** %tuple_buffers) #0 align 2 {
entry:
  %ref.tmp = alloca %struct.buffer_t, align 8
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, metadata !1177, metadata !2613), !dbg !4775
  tail call void @llvm.dbg.value(metadata i8* %cache_key, i64 0, metadata !1178, metadata !2613), !dbg !4776
  tail call void @llvm.dbg.value(metadata i32 %cache_key_size, i64 0, metadata !1179, metadata !2613), !dbg !4777
  tail call void @llvm.dbg.value(metadata i32 %key_hash, i64 0, metadata !1180, metadata !2613), !dbg !4778
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %computed_buf, i64 0, metadata !1181, metadata !2613), !dbg !4779
  tail call void @llvm.dbg.value(metadata i32 %tuples, i64 0, metadata !1182, metadata !2613), !dbg !4780
  tail call void @llvm.dbg.value(metadata %struct.buffer_t** %tuple_buffers, i64 0, metadata !1183, metadata !2613), !dbg !4781
  %next = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i32 0, i32 0, !dbg !4782
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %next, align 4, !dbg !4783, !tbaa !4784
  %more_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i32 0, i32 1, !dbg !4786
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 4, !dbg !4787, !tbaa !4788
  %less_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i32 0, i32 2, !dbg !4789
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent, align 4, !dbg !4790, !tbaa !4791
  %key_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i32 0, i32 3, !dbg !4792
  store i32 %cache_key_size, i32* %key_size, align 4, !dbg !4793, !tbaa !4794
  %hash = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i32 0, i32 5, !dbg !4795
  store i32 %key_hash, i32* %hash, align 4, !dbg !4796, !tbaa !4797
  %tuple_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i32 0, i32 6, !dbg !4798
  store i32 %tuples, i32* %tuple_count, align 4, !dbg !4799, !tbaa !4800
  %call = tail call i8* @halide_malloc(i8* null, i32 %cache_key_size) #6, !dbg !4801
  %key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i32 0, i32 4, !dbg !4802
  store i8* %call, i8** %key, align 4, !dbg !4803, !tbaa !4804
  %computed_bounds = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i32 0, i32 7, !dbg !4805
  %0 = bitcast %struct.buffer_t* %computed_bounds to i8*, !dbg !4806
  %1 = bitcast %struct.buffer_t* %computed_buf to i8*, !dbg !4806
  tail call void @llvm.memcpy.p0i8.p0i8.i32(i8* %0, i8* %1, i32 72, i32 8, i1 false), !dbg !4806, !tbaa.struct !4736
  %host = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i32 0, i32 7, i32 1, !dbg !4807
  store i8* null, i8** %host, align 4, !dbg !4808, !tbaa !4809
  %dev = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %computed_bounds, i32 0, i32 0, !dbg !4810
  store i64 0, i64* %dev, align 8, !dbg !4811, !tbaa !4812
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1184, metadata !2613), !dbg !4813
  %2 = load i32, i32* %key_size, align 4, !dbg !4814, !tbaa !4794
  %cmp.30 = icmp eq i32 %2, 0, !dbg !4816
  br i1 %cmp.30, label %for.cond.9.preheader, label %for.body.preheader, !dbg !4817

for.body.preheader:                               ; preds = %entry
  %3 = load i8, i8* %cache_key, align 1, !dbg !4818, !tbaa !3047
  store i8 %3, i8* %call, align 1, !dbg !4820, !tbaa !3047
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1184, metadata !2613), !dbg !4813
  %cmp.32 = icmp ugt i32 %2, 1, !dbg !4816
  br i1 %cmp.32, label %for.body.for.body_crit_edge.preheader, label %for.cond.9.preheader, !dbg !4817

for.body.for.body_crit_edge.preheader:            ; preds = %for.body.preheader
  %arrayidx.2 = getelementptr inbounds i8, i8* %cache_key, i32 1, !dbg !4818
  %4 = load i8, i8* %arrayidx.2, align 1, !dbg !4818, !tbaa !3047
  %arrayidx7.3 = getelementptr inbounds i8, i8* %call, i32 1, !dbg !4821
  store i8 %4, i8* %arrayidx7.3, align 1, !dbg !4820, !tbaa !3047
  tail call void @llvm.dbg.value(metadata i32 2, i64 0, metadata !1184, metadata !2613), !dbg !4813
  %5 = load i32, i32* %key_size, align 4, !dbg !4814, !tbaa !4794
  %cmp.4 = icmp ugt i32 %5, 2, !dbg !4816
  br i1 %cmp.4, label %for.body.for.body_crit_edge.for.body.for.body_crit_edge_crit_edge, label %for.cond.9.preheader, !dbg !4817

for.cond.9.preheader:                             ; preds = %for.body.for.body_crit_edge.for.body.for.body_crit_edge_crit_edge, %for.body.for.body_crit_edge.preheader, %for.body.preheader, %entry
  %6 = load i32, i32* %tuple_count, align 4, !dbg !4822, !tbaa !4800
  %cmp11.28 = icmp eq i32 %6, 0, !dbg !4823
  br i1 %cmp11.28, label %for.cond.cleanup.12, label %for.body.13.lr.ph, !dbg !4824

for.body.13.lr.ph:                                ; preds = %for.cond.9.preheader
  %7 = bitcast %struct.buffer_t* %ref.tmp to i8*, !dbg !4825
  br label %for.body.13, !dbg !4824

for.body.for.body_crit_edge.for.body.for.body_crit_edge_crit_edge: ; preds = %for.body.for.body_crit_edge.preheader, %for.body.for.body_crit_edge.for.body.for.body_crit_edge_crit_edge
  %inc5 = phi i32 [ %inc, %for.body.for.body_crit_edge.for.body.for.body_crit_edge_crit_edge ], [ 2, %for.body.for.body_crit_edge.preheader ]
  %.pre.pre = load i8*, i8** %key, align 4, !dbg !4821, !tbaa !4804
  %arrayidx = getelementptr inbounds i8, i8* %cache_key, i32 %inc5, !dbg !4818
  %8 = load i8, i8* %arrayidx, align 1, !dbg !4818, !tbaa !3047
  %arrayidx7 = getelementptr inbounds i8, i8* %.pre.pre, i32 %inc5, !dbg !4821
  store i8 %8, i8* %arrayidx7, align 1, !dbg !4820, !tbaa !3047
  %inc = add i32 %inc5, 1, !dbg !4826
  tail call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !1184, metadata !2613), !dbg !4813
  %9 = load i32, i32* %key_size, align 4, !dbg !4814, !tbaa !4794
  %cmp = icmp ult i32 %inc, %9, !dbg !4816
  br i1 %cmp, label %for.body.for.body_crit_edge.for.body.for.body_crit_edge_crit_edge, label %for.cond.9.preheader, !dbg !4817

for.cond.cleanup.12:                              ; preds = %for.body.13, %for.cond.9.preheader
  ret void, !dbg !4827

for.body.13:                                      ; preds = %for.body.13, %for.body.13.lr.ph
  %i8.029 = phi i32 [ 0, %for.body.13.lr.ph ], [ %inc17, %for.body.13 ]
  %arrayidx14 = getelementptr inbounds %struct.buffer_t*, %struct.buffer_t** %tuple_buffers, i32 %i8.029, !dbg !4828
  %10 = load %struct.buffer_t*, %struct.buffer_t** %arrayidx14, align 4, !dbg !4828, !tbaa !2768
  call void @llvm.dbg.value(metadata %struct.buffer_t* %10, i64 0, metadata !1188, metadata !2613), !dbg !4829
  %call15 = call dereferenceable(72) %struct.buffer_t* @_ZN6Halide7Runtime8Internal10CacheEntry6bufferEi(%"struct.Halide::Runtime::Internal::CacheEntry"* %this, i32 %i8.029) #7, !dbg !4830
  call void @_ZN6Halide7Runtime8Internal14copy_of_bufferEPvRK8buffer_t(%struct.buffer_t* nonnull sret %ref.tmp, i8* null, %struct.buffer_t* dereferenceable(72) %10) #7, !dbg !4831
  %11 = bitcast %struct.buffer_t* %call15 to i8*, !dbg !4825
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %11, i8* %7, i32 72, i32 8, i1 false), !dbg !4825, !tbaa.struct !4736
  %inc17 = add nuw nsw i32 %i8.029, 1, !dbg !4832
  call void @llvm.dbg.value(metadata i32 %inc17, i64 0, metadata !1186, metadata !2613), !dbg !4833
  %12 = load i32, i32* %tuple_count, align 4, !dbg !4822, !tbaa !4800
  %cmp11 = icmp ult i32 %inc17, %12, !dbg !4823
  br i1 %cmp11, label %for.body.13, label %for.cond.cleanup.12, !dbg !4824
}

; Function Attrs: nounwind
define linkonce dereferenceable(72) %struct.buffer_t* @_ZN6Halide7Runtime8Internal10CacheEntry6bufferEi(%"struct.Halide::Runtime::Internal::CacheEntry"* %this, i32 %i) #0 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, metadata !1198, metadata !2613), !dbg !4834
  tail call void @llvm.dbg.value(metadata i32 %i, i64 0, metadata !1199, metadata !2613), !dbg !4835
  %arrayidx2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i32 0, i32 8, i32 %i, !dbg !4836
  ret %struct.buffer_t* %arrayidx2, !dbg !4837
}

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal10CacheEntry7destroyEv(%"struct.Halide::Runtime::Internal::CacheEntry"* %this) #0 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, metadata !1193, metadata !2613), !dbg !4838
  %key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i32 0, i32 4, !dbg !4839
  %0 = load i8*, i8** %key, align 4, !dbg !4839, !tbaa !4804
  tail call void @halide_free(i8* null, i8* %0) #6, !dbg !4840
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1194, metadata !2613), !dbg !4841
  %tuple_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i32 0, i32 6, !dbg !4842
  %1 = load i32, i32* %tuple_count, align 4, !dbg !4842, !tbaa !4800
  %cmp.8 = icmp eq i32 %1, 0, !dbg !4844
  br i1 %cmp.8, label %for.cond.cleanup, label %for.body, !dbg !4845

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void, !dbg !4846

for.body:                                         ; preds = %entry, %for.body
  %i.09 = phi i32 [ %inc, %for.body ], [ 0, %entry ]
  %call = tail call dereferenceable(72) %struct.buffer_t* @_ZN6Halide7Runtime8Internal10CacheEntry6bufferEi(%"struct.Halide::Runtime::Internal::CacheEntry"* %this, i32 %i.09) #7, !dbg !4847
  %call2 = tail call i32 @halide_device_free(i8* null, %struct.buffer_t* nonnull %call) #6, !dbg !4849
  %call3 = tail call dereferenceable(72) %struct.buffer_t* @_ZN6Halide7Runtime8Internal10CacheEntry6bufferEi(%"struct.Halide::Runtime::Internal::CacheEntry"* %this, i32 %i.09) #7, !dbg !4850
  %host = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %call3, i32 0, i32 1, !dbg !4851
  %2 = load i8*, i8** %host, align 4, !dbg !4851, !tbaa !4725
  tail call void @halide_free(i8* null, i8* %2) #6, !dbg !4852
  %inc = add nuw nsw i32 %i.09, 1, !dbg !4853
  tail call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !1194, metadata !2613), !dbg !4841
  %3 = load i32, i32* %tuple_count, align 4, !dbg !4842, !tbaa !4800
  %cmp = icmp ult i32 %inc, %3, !dbg !4844
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !dbg !4845
}

; Function Attrs: nounwind
define linkonce i32 @_ZN6Halide7Runtime8Internal8djb_hashEPKhj(i8* %key, i32 %key_size) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %key, i64 0, metadata !1205, metadata !2613), !dbg !4854
  tail call void @llvm.dbg.value(metadata i32 %key_size, i64 0, metadata !1206, metadata !2613), !dbg !4855
  tail call void @llvm.dbg.value(metadata i32 5381, i64 0, metadata !1207, metadata !2613), !dbg !4856
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1208, metadata !2613), !dbg !4857
  %cmp.8 = icmp eq i32 %key_size, 0, !dbg !4858
  br i1 %cmp.8, label %for.cond.cleanup, label %for.body, !dbg !4860

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %h.0.lcssa = phi i32 [ 5381, %entry ], [ %add1, %for.body ]
  ret i32 %h.0.lcssa, !dbg !4861

for.body:                                         ; preds = %entry, %for.body
  %i.010 = phi i32 [ %inc, %for.body ], [ 0, %entry ]
  %h.09 = phi i32 [ %add1, %for.body ], [ 5381, %entry ]
  %add = mul i32 %h.09, 33, !dbg !4862
  %arrayidx = getelementptr inbounds i8, i8* %key, i32 %i.010, !dbg !4864
  %0 = load i8, i8* %arrayidx, align 1, !dbg !4864, !tbaa !3047
  %conv = zext i8 %0 to i32, !dbg !4864
  %add1 = add i32 %conv, %add, !dbg !4865
  tail call void @llvm.dbg.value(metadata i32 %add1, i64 0, metadata !1207, metadata !2613), !dbg !4856
  %inc = add nuw i32 %i.010, 1, !dbg !4866
  tail call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !1208, metadata !2613), !dbg !4857
  %exitcond = icmp eq i32 %inc, %key_size, !dbg !4860
  br i1 %exitcond, label %for.cond.cleanup, label %for.body, !dbg !4860
}

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal11prune_cacheEv() #0 {
entry:
  %0 = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !dbg !4867, !tbaa !3312
  %1 = load i64, i64* @_ZN6Halide7Runtime8Internal14max_cache_sizeE, align 8, !dbg !4870, !tbaa !3312
  %cmp.53 = icmp sgt i64 %0, %1, !dbg !4871
  %2 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 4, !dbg !4872, !tbaa !2768
  %cmp1.54 = icmp ne %"struct.Halide::Runtime::Internal::CacheEntry"* %2, null, !dbg !4873
  %3 = and i1 %cmp.53, %cmp1.54, !dbg !4874
  br i1 %3, label %while.body, label %while.end.26, !dbg !4875

while.body:                                       ; preds = %entry, %for.cond.cleanup
  %4 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %20, %for.cond.cleanup ], [ %2, %entry ]
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::CacheEntry"* %20, i64 0, metadata !1212, metadata !2613), !dbg !4877
  %hash = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %4, i32 0, i32 5, !dbg !4878
  %5 = load i32, i32* %hash, align 4, !dbg !4878, !tbaa !4797
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1214, metadata !2613), !dbg !4879
  %rem = and i32 %5, 255, !dbg !4880
  tail call void @llvm.dbg.value(metadata i32 %rem, i64 0, metadata !1215, metadata !2613), !dbg !4881
  %arrayidx = getelementptr inbounds [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i32 0, i32 %rem, !dbg !4882
  %6 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx, align 4, !dbg !4882, !tbaa !2768
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::CacheEntry"* %6, i64 0, metadata !1216, metadata !2613), !dbg !4883
  %cmp3 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %6, %4, !dbg !4884
  br i1 %cmp3, label %if.then, label %while.cond.5, !dbg !4886

if.then:                                          ; preds = %while.body
  %7 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"* %4 to i32*, !dbg !4887
  %8 = load i32, i32* %7, align 4, !dbg !4887, !tbaa !4784
  %9 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx to i32*, !dbg !4889
  store i32 %8, i32* %9, align 4, !dbg !4889, !tbaa !2768
  br label %if.end.17, !dbg !4890

while.cond.5:                                     ; preds = %while.body, %land.rhs.7
  %entry2.0 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %10, %land.rhs.7 ], [ %6, %while.body ]
  %cmp6 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry2.0, null, !dbg !4891
  br i1 %cmp6, label %if.then.14, label %land.rhs.7, !dbg !4893

land.rhs.7:                                       ; preds = %while.cond.5
  %next8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry2.0, i32 0, i32 0, !dbg !4894
  %10 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next8, align 4, !dbg !4894, !tbaa !4784
  %cmp9 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %10, %4, !dbg !4895
  br i1 %cmp9, label %if.end, label %while.cond.5, !dbg !4896

if.then.14:                                       ; preds = %while.cond.5
  tail call void @halide_error(i8* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.76, i32 0, i32 0)) #6, !dbg !4898
  unreachable, !dbg !4898

if.end:                                           ; preds = %land.rhs.7
  %11 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"* %4 to i32*, !dbg !4901
  %12 = load i32, i32* %11, align 4, !dbg !4901, !tbaa !4784
  %13 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"* %entry2.0 to i32*, !dbg !4902
  store i32 %12, i32* %13, align 4, !dbg !4902, !tbaa !4784
  br label %if.end.17

if.end.17:                                        ; preds = %if.end, %if.then
  %more_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %4, i32 0, i32 1, !dbg !4903
  %14 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 4, !dbg !4903, !tbaa !4788
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %14, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 4, !dbg !4904, !tbaa !2768
  %cmp18 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %14, null, !dbg !4905
  br i1 %cmp18, label %if.end.20, label %if.then.19, !dbg !4907

if.then.19:                                       ; preds = %if.end.17
  %less_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %14, i32 0, i32 2, !dbg !4908
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent, align 4, !dbg !4910, !tbaa !4791
  br label %if.end.20, !dbg !4911

if.end.20:                                        ; preds = %if.then.19, %if.end.17
  %15 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 4, !dbg !4912, !tbaa !2768
  %cmp21 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %15, %4, !dbg !4914
  br i1 %cmp21, label %if.then.22, label %for.cond.preheader, !dbg !4915

if.then.22:                                       ; preds = %if.end.20
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 4, !dbg !4916, !tbaa !2768
  br label %for.cond.preheader, !dbg !4918

for.cond.preheader:                               ; preds = %if.then.22, %if.end.20
  %tuple_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %4, i32 0, i32 6, !dbg !4919
  %16 = load i32, i32* %tuple_count, align 4, !dbg !4919, !tbaa !4800
  %cmp24.51 = icmp eq i32 %16, 0, !dbg !4921
  br i1 %cmp24.51, label %for.cond.cleanup, label %for.body, !dbg !4922

for.cond.cleanup:                                 ; preds = %for.body, %for.cond.preheader
  tail call void @_ZN6Halide7Runtime8Internal10CacheEntry7destroyEv(%"struct.Halide::Runtime::Internal::CacheEntry"* %4) #7, !dbg !4923
  %17 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"* %4 to i8*, !dbg !4924
  tail call void @halide_free(i8* null, i8* %17) #6, !dbg !4925
  %18 = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !dbg !4867, !tbaa !3312
  %19 = load i64, i64* @_ZN6Halide7Runtime8Internal14max_cache_sizeE, align 8, !dbg !4870, !tbaa !3312
  %cmp = icmp sgt i64 %18, %19, !dbg !4871
  %20 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 4, !dbg !4872, !tbaa !2768
  %cmp1 = icmp ne %"struct.Halide::Runtime::Internal::CacheEntry"* %20, null, !dbg !4873
  %21 = and i1 %cmp, %cmp1, !dbg !4874
  br i1 %21, label %while.body, label %while.end.26, !dbg !4875

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %i.052 = phi i32 [ %inc, %for.body ], [ 0, %for.cond.preheader ]
  %call = tail call dereferenceable(72) %struct.buffer_t* @_ZN6Halide7Runtime8Internal10CacheEntry6bufferEi(%"struct.Halide::Runtime::Internal::CacheEntry"* %4, i32 %i.052) #7, !dbg !4926
  %call25 = tail call i32 @_ZN6Halide7Runtime8Internal11full_extentERK8buffer_t(%struct.buffer_t* nonnull dereferenceable(72) %call) #7, !dbg !4928
  %conv = zext i32 %call25 to i64, !dbg !4928
  %22 = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !dbg !4929, !tbaa !3312
  %sub = sub nsw i64 %22, %conv, !dbg !4929
  store i64 %sub, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !dbg !4929, !tbaa !3312
  %inc = add nuw nsw i32 %i.052, 1, !dbg !4930
  tail call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !1217, metadata !2613), !dbg !4931
  %23 = load i32, i32* %tuple_count, align 4, !dbg !4919, !tbaa !4800
  %cmp24 = icmp ult i32 %inc, %23, !dbg !4921
  br i1 %cmp24, label %for.body, label %for.cond.cleanup, !dbg !4922

while.end.26:                                     ; preds = %for.cond.cleanup, %entry
  ret void, !dbg !4932
}

; Function Attrs: nounwind
define weak void @halide_memoization_cache_set_size(i64 %size) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i64 %size, i64 0, metadata !1223, metadata !2613), !dbg !4933
  %cmp = icmp eq i64 %size, 0, !dbg !4934
  %.size = select i1 %cmp, i64 1048576, i64 %size, !dbg !4936
  tail call void @llvm.dbg.value(metadata i64 %.size, i64 0, metadata !1223, metadata !2613), !dbg !4933
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1224, metadata !2613), !dbg !4937
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1302, metadata !2613) #2, !dbg !4938
  tail call void @llvm.dbg.value(metadata %struct.pthread_mutex_t* @_ZN6Halide7Runtime8Internal16memoization_lockE, i64 0, metadata !1304, metadata !2613) #2, !dbg !4940
  tail call void @halide_mutex_lock(%struct.pthread_mutex_t* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #6, !dbg !4941
  store i64 %.size, i64* @_ZN6Halide7Runtime8Internal14max_cache_sizeE, align 8, !dbg !4943, !tbaa !3312
  tail call void @_ZN6Halide7Runtime8Internal11prune_cacheEv() #7, !dbg !4944
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1224, metadata !2613), !dbg !4937
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1307, metadata !2613) #2, !dbg !4945
  tail call void @halide_mutex_unlock(%struct.pthread_mutex_t* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #6, !dbg !4947
  ret void, !dbg !4949
}

; Function Attrs: nounwind
define weak zeroext i1 @halide_memoization_cache_lookup(i8* %user_context, i8* %cache_key, i32 %size, %struct.buffer_t* %computed_bounds, i32 %tuple_count, %struct.buffer_t** %tuple_buffers) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1229, metadata !2613), !dbg !4950
  tail call void @llvm.dbg.value(metadata i8* %cache_key, i64 0, metadata !1230, metadata !2613), !dbg !4951
  tail call void @llvm.dbg.value(metadata i32 %size, i64 0, metadata !1231, metadata !2613), !dbg !4952
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %computed_bounds, i64 0, metadata !1232, metadata !2613), !dbg !4953
  tail call void @llvm.dbg.value(metadata i32 %tuple_count, i64 0, metadata !1233, metadata !2613), !dbg !4954
  tail call void @llvm.dbg.value(metadata %struct.buffer_t** %tuple_buffers, i64 0, metadata !1234, metadata !2613), !dbg !4955
  %call = tail call i32 @_ZN6Halide7Runtime8Internal8djb_hashEPKhj(i8* %cache_key, i32 %size) #7, !dbg !4956
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1235, metadata !2613), !dbg !4957
  %rem = and i32 %call, 255, !dbg !4958
  tail call void @llvm.dbg.value(metadata i32 %rem, i64 0, metadata !1236, metadata !2613), !dbg !4959
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1237, metadata !2613), !dbg !4960
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1302, metadata !2613) #2, !dbg !4961
  tail call void @llvm.dbg.value(metadata %struct.pthread_mutex_t* @_ZN6Halide7Runtime8Internal16memoization_lockE, i64 0, metadata !1304, metadata !2613) #2, !dbg !4963
  tail call void @halide_mutex_lock(%struct.pthread_mutex_t* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #6, !dbg !4964
  %arrayidx = getelementptr inbounds [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i32 0, i32 %rem, !dbg !4965
  %entry1.0.119 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx, align 4, !dbg !4965
  %cmp.120 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0.119, null, !dbg !4966
  br i1 %cmp.120, label %cleanup.59, label %while.body.lr.ph, !dbg !4967

while.body.lr.ph:                                 ; preds = %entry
  %cmp12.116 = icmp sgt i32 %tuple_count, 0, !dbg !4968
  br i1 %cmp12.116, label %while.body.us, label %while.body

while.body.us:                                    ; preds = %while.body.lr.ph, %if.end.58.us
  %entry1.0121.us = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %entry1.0.us, %if.end.58.us ], [ %entry1.0.119, %while.body.lr.ph ]
  %hash.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0121.us, i32 0, i32 5, !dbg !4969
  %0 = load i32, i32* %hash.us, align 4, !dbg !4969, !tbaa !4797
  %cmp2.us = icmp eq i32 %0, %call, !dbg !4970
  br i1 %cmp2.us, label %land.lhs.true.us, label %if.end.58.us, !dbg !4971

land.lhs.true.us:                                 ; preds = %while.body.us
  %key_size.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0121.us, i32 0, i32 3, !dbg !4972
  %1 = load i32, i32* %key_size.us, align 4, !dbg !4972, !tbaa !4794
  %cmp3.us = icmp eq i32 %1, %size, !dbg !4973
  br i1 %cmp3.us, label %land.lhs.true.4.us, label %if.end.58.us, !dbg !4974

land.lhs.true.4.us:                               ; preds = %land.lhs.true.us
  %key.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0121.us, i32 0, i32 4, !dbg !4975
  %2 = load i8*, i8** %key.us, align 4, !dbg !4975, !tbaa !4804
  %call5.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_j(i8* %2, i8* %cache_key, i32 %size) #7, !dbg !4976
  br i1 %call5.us, label %land.lhs.true.6.us, label %if.end.58.us, !dbg !4977

land.lhs.true.6.us:                               ; preds = %land.lhs.true.4.us
  %computed_bounds7.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0121.us, i32 0, i32 7, !dbg !4978
  %call8.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal12bounds_equalERK8buffer_tS4_(%struct.buffer_t* dereferenceable(72) %computed_bounds7.us, %struct.buffer_t* dereferenceable(72) %computed_bounds) #7, !dbg !4979
  br i1 %call8.us, label %land.lhs.true.9.us, label %if.end.58.us, !dbg !4980

land.lhs.true.9.us:                               ; preds = %land.lhs.true.6.us
  %tuple_count10.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0121.us, i32 0, i32 6, !dbg !4981
  %3 = load i32, i32* %tuple_count10.us, align 4, !dbg !4981, !tbaa !4800
  %cmp11.us = icmp eq i32 %3, %tuple_count, !dbg !4982
  br i1 %cmp11.us, label %for.body.us, label %if.end.58.us, !dbg !4983

for.cond.cleanup.us:                              ; preds = %for.body.us
  br i1 %call15.us, label %if.then.17, label %if.end.58.us, !dbg !4984

if.end.58.us:                                     ; preds = %for.cond.cleanup.us, %land.lhs.true.9.us, %land.lhs.true.6.us, %land.lhs.true.4.us, %land.lhs.true.us, %while.body.us
  %next.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0121.us, i32 0, i32 0, !dbg !4985
  %entry1.0.us = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next.us, align 4, !dbg !4965
  %cmp.us = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0.us, null, !dbg !4966
  br i1 %cmp.us, label %cleanup.59, label %while.body.us, !dbg !4967

for.body.us:                                      ; preds = %land.lhs.true.9.us, %for.body.us
  %i.0118.us = phi i32 [ %inc.us, %for.body.us ], [ 0, %land.lhs.true.9.us ]
  %arrayidx13.us = getelementptr inbounds %struct.buffer_t*, %struct.buffer_t** %tuple_buffers, i32 %i.0118.us, !dbg !4986
  %4 = load %struct.buffer_t*, %struct.buffer_t** %arrayidx13.us, align 4, !dbg !4986, !tbaa !2768
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %4, i64 0, metadata !1246, metadata !2613), !dbg !4987
  %call14.us = tail call dereferenceable(72) %struct.buffer_t* @_ZN6Halide7Runtime8Internal10CacheEntry6bufferEi(%"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0121.us, i32 %i.0118.us) #7, !dbg !4988
  %call15.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal12bounds_equalERK8buffer_tS4_(%struct.buffer_t* nonnull dereferenceable(72) %call14.us, %struct.buffer_t* dereferenceable(72) %4) #7, !dbg !4989
  %inc.us = add nuw nsw i32 %i.0118.us, 1, !dbg !4990
  tail call void @llvm.dbg.value(metadata i32 %inc.us, i64 0, metadata !1243, metadata !2613), !dbg !4991
  %cmp12.us = icmp slt i32 %inc.us, %tuple_count, !dbg !4968
  %or.cond.us = and i1 %cmp12.us, %call15.us, !dbg !4992
  br i1 %or.cond.us, label %for.body.us, label %for.cond.cleanup.us, !dbg !4992

while.body:                                       ; preds = %while.body.lr.ph, %if.end.58
  %entry1.0121 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %entry1.0, %if.end.58 ], [ %entry1.0.119, %while.body.lr.ph ]
  %hash = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0121, i32 0, i32 5, !dbg !4969
  %5 = load i32, i32* %hash, align 4, !dbg !4969, !tbaa !4797
  %cmp2 = icmp eq i32 %5, %call, !dbg !4970
  br i1 %cmp2, label %land.lhs.true, label %if.end.58, !dbg !4971

land.lhs.true:                                    ; preds = %while.body
  %key_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0121, i32 0, i32 3, !dbg !4972
  %6 = load i32, i32* %key_size, align 4, !dbg !4972, !tbaa !4794
  %cmp3 = icmp eq i32 %6, %size, !dbg !4973
  br i1 %cmp3, label %land.lhs.true.4, label %if.end.58, !dbg !4974

land.lhs.true.4:                                  ; preds = %land.lhs.true
  %key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0121, i32 0, i32 4, !dbg !4975
  %7 = load i8*, i8** %key, align 4, !dbg !4975, !tbaa !4804
  %call5 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_j(i8* %7, i8* %cache_key, i32 %size) #7, !dbg !4976
  br i1 %call5, label %land.lhs.true.6, label %if.end.58, !dbg !4977

land.lhs.true.6:                                  ; preds = %land.lhs.true.4
  %computed_bounds7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0121, i32 0, i32 7, !dbg !4978
  %call8 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal12bounds_equalERK8buffer_tS4_(%struct.buffer_t* dereferenceable(72) %computed_bounds7, %struct.buffer_t* dereferenceable(72) %computed_bounds) #7, !dbg !4979
  br i1 %call8, label %land.lhs.true.9, label %if.end.58, !dbg !4980

land.lhs.true.9:                                  ; preds = %land.lhs.true.6
  %tuple_count10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0121, i32 0, i32 6, !dbg !4981
  %8 = load i32, i32* %tuple_count10, align 4, !dbg !4981, !tbaa !4800
  %cmp11 = icmp eq i32 %8, %tuple_count, !dbg !4982
  br i1 %cmp11, label %if.then.17, label %if.end.58, !dbg !4983

if.then.17:                                       ; preds = %land.lhs.true.9, %for.cond.cleanup.us
  %entry1.0.lcssa112 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %entry1.0121.us, %for.cond.cleanup.us ], [ %entry1.0121, %land.lhs.true.9 ]
  %9 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 4, !dbg !4993, !tbaa !2768
  %cmp18 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0.lcssa112, %9, !dbg !4995
  br i1 %cmp18, label %for.cond.47.preheader, label %if.then.19, !dbg !4996

if.then.19:                                       ; preds = %if.then.17
  %more_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0.lcssa112, i32 0, i32 1, !dbg !4997
  %10 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 4, !dbg !4997, !tbaa !4788
  %cmp20 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %10, null, !dbg !4997
  br i1 %cmp20, label %if.then.21, label %if.end, !dbg !5000

if.then.21:                                       ; preds = %if.then.19
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4.77, i32 0, i32 0)) #6, !dbg !5001
  br label %if.end, !dbg !5001

if.end:                                           ; preds = %if.then.21, %if.then.19
  %less_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0.lcssa112, i32 0, i32 2, !dbg !5003
  %11 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent, align 4, !dbg !5003, !tbaa !4791
  %cmp22 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %11, null, !dbg !5005
  br i1 %cmp22, label %if.else, label %if.then.23, !dbg !5006

if.then.23:                                       ; preds = %if.end
  %12 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent to i32*, !dbg !5007
  %13 = load i32, i32* %12, align 4, !dbg !5007, !tbaa !4788
  %more_recent26 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %11, i32 0, i32 1, !dbg !5009
  %14 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent26 to i32*, !dbg !5010
  store i32 %13, i32* %14, align 4, !dbg !5010, !tbaa !4788
  br label %if.end.31, !dbg !5011

if.else:                                          ; preds = %if.end
  %15 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 4, !dbg !5012, !tbaa !2768
  %cmp27 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %15, %entry1.0.lcssa112, !dbg !5012
  br i1 %cmp27, label %if.end.29, label %if.then.28, !dbg !5015

if.then.28:                                       ; preds = %if.else
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.78, i32 0, i32 0)) #6, !dbg !5016
  br label %if.end.29, !dbg !5016

if.end.29:                                        ; preds = %if.then.28, %if.else
  %16 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent to i32*, !dbg !5018
  %17 = load i32, i32* %16, align 4, !dbg !5018, !tbaa !4788
  store i32 %17, i32* bitcast (%"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE to i32*), align 4, !dbg !5019, !tbaa !2768
  br label %if.end.31

if.end.31:                                        ; preds = %if.end.29, %if.then.23
  %18 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 4, !dbg !5020, !tbaa !4788
  %cmp33 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %18, null, !dbg !5020
  br i1 %cmp33, label %if.then.34, label %if.end.35, !dbg !5022

if.then.34:                                       ; preds = %if.end.31
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4.77, i32 0, i32 0)) #6, !dbg !5023
  %.pre = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 4, !dbg !5025, !tbaa !4788
  br label %if.end.35, !dbg !5023

if.end.35:                                        ; preds = %if.then.34, %if.end.31
  %19 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %18, %if.end.31 ], [ %.pre, %if.then.34 ], !dbg !5025
  %20 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent to i32*, !dbg !5026
  %21 = load i32, i32* %20, align 4, !dbg !5026, !tbaa !4791
  %less_recent38 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %19, i32 0, i32 2, !dbg !5027
  %22 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent38 to i32*, !dbg !5028
  store i32 %21, i32* %22, align 4, !dbg !5028, !tbaa !4791
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 4, !dbg !5029, !tbaa !4788
  %23 = load i32, i32* bitcast (%"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE to i32*), align 4, !dbg !5030, !tbaa !2768
  store i32 %23, i32* %20, align 4, !dbg !5031, !tbaa !4791
  %24 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 4, !dbg !5032, !tbaa !2768
  %cmp41 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %24, null, !dbg !5034
  br i1 %cmp41, label %if.end.44, label %if.then.42, !dbg !5035

if.then.42:                                       ; preds = %if.end.35
  %more_recent43 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %24, i32 0, i32 1, !dbg !5036
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0.lcssa112, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent43, align 4, !dbg !5038, !tbaa !4788
  br label %if.end.44, !dbg !5039

if.end.44:                                        ; preds = %if.then.42, %if.end.35
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0.lcssa112, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 4, !dbg !5040, !tbaa !2768
  br label %for.cond.47.preheader, !dbg !5041

for.cond.47.preheader:                            ; preds = %if.end.44, %if.then.17
  br i1 %cmp12.116, label %for.body.50, label %cleanup.59, !dbg !5042

for.body.50:                                      ; preds = %for.cond.47.preheader, %for.body.50
  %i46.0115 = phi i32 [ %inc55, %for.body.50 ], [ 0, %for.cond.47.preheader ]
  %arrayidx52 = getelementptr inbounds %struct.buffer_t*, %struct.buffer_t** %tuple_buffers, i32 %i46.0115, !dbg !5043
  %25 = load %struct.buffer_t*, %struct.buffer_t** %arrayidx52, align 4, !dbg !5043, !tbaa !2768
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %25, i64 0, metadata !1253, metadata !2613), !dbg !5044
  %call53 = tail call dereferenceable(72) %struct.buffer_t* @_ZN6Halide7Runtime8Internal10CacheEntry6bufferEi(%"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0.lcssa112, i32 %i46.0115) #7, !dbg !5045
  tail call void @_ZN6Halide7Runtime8Internal12copy_from_toEPvRK8buffer_tRS3_(i8* %user_context, %struct.buffer_t* nonnull dereferenceable(72) %call53, %struct.buffer_t* dereferenceable(72) %25) #7, !dbg !5046
  %inc55 = add nuw nsw i32 %i46.0115, 1, !dbg !5047
  tail call void @llvm.dbg.value(metadata i32 %inc55, i64 0, metadata !1249, metadata !2613), !dbg !5048
  %exitcond = icmp eq i32 %inc55, %tuple_count, !dbg !5042
  br i1 %exitcond, label %cleanup.59, label %for.body.50, !dbg !5042

if.end.58:                                        ; preds = %land.lhs.true.9, %land.lhs.true.6, %land.lhs.true.4, %land.lhs.true, %while.body
  %next = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0121, i32 0, i32 0, !dbg !4985
  %entry1.0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next, align 4, !dbg !4965
  %cmp = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0, null, !dbg !4966
  br i1 %cmp, label %cleanup.59, label %while.body, !dbg !4967

cleanup.59:                                       ; preds = %if.end.58, %if.end.58.us, %for.body.50, %for.cond.47.preheader, %entry
  %retval.3 = phi i1 [ false, %for.cond.47.preheader ], [ true, %entry ], [ false, %for.body.50 ], [ true, %if.end.58.us ], [ true, %if.end.58 ]
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1237, metadata !2613), !dbg !4960
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1307, metadata !2613) #2, !dbg !5049
  tail call void @halide_mutex_unlock(%struct.pthread_mutex_t* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #6, !dbg !5051
  ret i1 %retval.3, !dbg !5052
}

; Function Attrs: nounwind
define weak void @halide_memoization_cache_store(i8* %user_context, i8* %cache_key, i32 %size, %struct.buffer_t* %computed_bounds, i32 %tuple_count, %struct.buffer_t** %tuple_buffers) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1260, metadata !2613), !dbg !5053
  tail call void @llvm.dbg.value(metadata i8* %cache_key, i64 0, metadata !1261, metadata !2613), !dbg !5054
  tail call void @llvm.dbg.value(metadata i32 %size, i64 0, metadata !1262, metadata !2613), !dbg !5055
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %computed_bounds, i64 0, metadata !1263, metadata !2613), !dbg !5056
  tail call void @llvm.dbg.value(metadata i32 %tuple_count, i64 0, metadata !1264, metadata !2613), !dbg !5057
  tail call void @llvm.dbg.value(metadata %struct.buffer_t** %tuple_buffers, i64 0, metadata !1265, metadata !2613), !dbg !5058
  %call = tail call i32 @_ZN6Halide7Runtime8Internal8djb_hashEPKhj(i8* %cache_key, i32 %size) #7, !dbg !5059
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1266, metadata !2613), !dbg !5060
  %rem = and i32 %call, 255, !dbg !5061
  tail call void @llvm.dbg.value(metadata i32 %rem, i64 0, metadata !1267, metadata !2613), !dbg !5062
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1268, metadata !2613), !dbg !5063
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1302, metadata !2613) #2, !dbg !5064
  tail call void @llvm.dbg.value(metadata %struct.pthread_mutex_t* @_ZN6Halide7Runtime8Internal16memoization_lockE, i64 0, metadata !1304, metadata !2613) #2, !dbg !5066
  tail call void @halide_mutex_lock(%struct.pthread_mutex_t* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #6, !dbg !5067
  %arrayidx = getelementptr inbounds [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i32 0, i32 %rem, !dbg !5068
  %entry1.0.104 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx, align 4, !dbg !5068
  %cmp.105 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0.104, null, !dbg !5069
  br i1 %cmp.105, label %for.cond.20.preheader, label %while.body.lr.ph, !dbg !5070

while.body.lr.ph:                                 ; preds = %entry
  %cmp12.100 = icmp sgt i32 %tuple_count, 0, !dbg !5071
  br i1 %cmp12.100, label %while.body.us, label %while.body

while.body.us:                                    ; preds = %while.body.lr.ph, %if.end.18.us
  %entry1.0106.us = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %entry1.0.us, %if.end.18.us ], [ %entry1.0.104, %while.body.lr.ph ]
  %hash.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0106.us, i32 0, i32 5, !dbg !5072
  %0 = load i32, i32* %hash.us, align 4, !dbg !5072, !tbaa !4797
  %cmp2.us = icmp eq i32 %0, %call, !dbg !5073
  br i1 %cmp2.us, label %land.lhs.true.us, label %if.end.18.us, !dbg !5074

land.lhs.true.us:                                 ; preds = %while.body.us
  %key_size.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0106.us, i32 0, i32 3, !dbg !5075
  %1 = load i32, i32* %key_size.us, align 4, !dbg !5075, !tbaa !4794
  %cmp3.us = icmp eq i32 %1, %size, !dbg !5076
  br i1 %cmp3.us, label %land.lhs.true.4.us, label %if.end.18.us, !dbg !5077

land.lhs.true.4.us:                               ; preds = %land.lhs.true.us
  %key.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0106.us, i32 0, i32 4, !dbg !5078
  %2 = load i8*, i8** %key.us, align 4, !dbg !5078, !tbaa !4804
  %call5.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_j(i8* %2, i8* %cache_key, i32 %size) #7, !dbg !5079
  br i1 %call5.us, label %land.lhs.true.6.us, label %if.end.18.us, !dbg !5080

land.lhs.true.6.us:                               ; preds = %land.lhs.true.4.us
  %computed_bounds7.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0106.us, i32 0, i32 7, !dbg !5081
  %call8.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal12bounds_equalERK8buffer_tS4_(%struct.buffer_t* dereferenceable(72) %computed_bounds7.us, %struct.buffer_t* dereferenceable(72) %computed_bounds) #7, !dbg !5082
  br i1 %call8.us, label %land.lhs.true.9.us, label %if.end.18.us, !dbg !5083

land.lhs.true.9.us:                               ; preds = %land.lhs.true.6.us
  %tuple_count10.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0106.us, i32 0, i32 6, !dbg !5084
  %3 = load i32, i32* %tuple_count10.us, align 4, !dbg !5084, !tbaa !4800
  %cmp11.us = icmp eq i32 %3, %tuple_count, !dbg !5085
  br i1 %cmp11.us, label %for.body.us, label %if.end.18.us, !dbg !5086

for.cond.cleanup.us:                              ; preds = %for.body.us
  br i1 %call15.us, label %cleanup.43, label %if.end.18.us

if.end.18.us:                                     ; preds = %for.cond.cleanup.us, %land.lhs.true.9.us, %land.lhs.true.6.us, %land.lhs.true.4.us, %land.lhs.true.us, %while.body.us
  %next.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0106.us, i32 0, i32 0, !dbg !5087
  %entry1.0.us = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next.us, align 4, !dbg !5068
  %cmp.us = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0.us, null, !dbg !5069
  br i1 %cmp.us, label %for.cond.20.preheader, label %while.body.us, !dbg !5070

for.body.us:                                      ; preds = %land.lhs.true.9.us, %for.body.us
  %i.0102.us = phi i32 [ %inc.us, %for.body.us ], [ 0, %land.lhs.true.9.us ]
  %arrayidx13.us = getelementptr inbounds %struct.buffer_t*, %struct.buffer_t** %tuple_buffers, i32 %i.0102.us, !dbg !5088
  %4 = load %struct.buffer_t*, %struct.buffer_t** %arrayidx13.us, align 4, !dbg !5088, !tbaa !2768
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %4, i64 0, metadata !1277, metadata !2613), !dbg !5089
  %call14.us = tail call dereferenceable(72) %struct.buffer_t* @_ZN6Halide7Runtime8Internal10CacheEntry6bufferEi(%"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0106.us, i32 %i.0102.us) #7, !dbg !5090
  %call15.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal12bounds_equalERK8buffer_tS4_(%struct.buffer_t* nonnull dereferenceable(72) %call14.us, %struct.buffer_t* dereferenceable(72) %4) #7, !dbg !5091
  %inc.us = add nuw nsw i32 %i.0102.us, 1, !dbg !5092
  tail call void @llvm.dbg.value(metadata i32 %inc.us, i64 0, metadata !1274, metadata !2613), !dbg !5093
  %cmp12.us = icmp slt i32 %inc.us, %tuple_count, !dbg !5071
  %or.cond.us = and i1 %cmp12.us, %call15.us, !dbg !5094
  br i1 %or.cond.us, label %for.body.us, label %for.cond.cleanup.us, !dbg !5094

for.cond.20.preheader:                            ; preds = %if.end.18, %if.end.18.us, %entry
  %cmp21.97 = icmp sgt i32 %tuple_count, 0, !dbg !5095
  br i1 %cmp21.97, label %for.body.23, label %for.cond.cleanup.22, !dbg !5096

while.body:                                       ; preds = %while.body.lr.ph, %if.end.18
  %entry1.0106 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %entry1.0, %if.end.18 ], [ %entry1.0.104, %while.body.lr.ph ]
  %hash = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0106, i32 0, i32 5, !dbg !5072
  %5 = load i32, i32* %hash, align 4, !dbg !5072, !tbaa !4797
  %cmp2 = icmp eq i32 %5, %call, !dbg !5073
  br i1 %cmp2, label %land.lhs.true, label %if.end.18, !dbg !5074

land.lhs.true:                                    ; preds = %while.body
  %key_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0106, i32 0, i32 3, !dbg !5075
  %6 = load i32, i32* %key_size, align 4, !dbg !5075, !tbaa !4794
  %cmp3 = icmp eq i32 %6, %size, !dbg !5076
  br i1 %cmp3, label %land.lhs.true.4, label %if.end.18, !dbg !5077

land.lhs.true.4:                                  ; preds = %land.lhs.true
  %key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0106, i32 0, i32 4, !dbg !5078
  %7 = load i8*, i8** %key, align 4, !dbg !5078, !tbaa !4804
  %call5 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_j(i8* %7, i8* %cache_key, i32 %size) #7, !dbg !5079
  br i1 %call5, label %land.lhs.true.6, label %if.end.18, !dbg !5080

land.lhs.true.6:                                  ; preds = %land.lhs.true.4
  %computed_bounds7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0106, i32 0, i32 7, !dbg !5081
  %call8 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal12bounds_equalERK8buffer_tS4_(%struct.buffer_t* dereferenceable(72) %computed_bounds7, %struct.buffer_t* dereferenceable(72) %computed_bounds) #7, !dbg !5082
  br i1 %call8, label %land.lhs.true.9, label %if.end.18, !dbg !5083

land.lhs.true.9:                                  ; preds = %land.lhs.true.6
  %tuple_count10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0106, i32 0, i32 6, !dbg !5084
  %8 = load i32, i32* %tuple_count10, align 4, !dbg !5084, !tbaa !4800
  %cmp11 = icmp eq i32 %8, %tuple_count, !dbg !5085
  br i1 %cmp11, label %cleanup.43, label %if.end.18, !dbg !5086

if.end.18:                                        ; preds = %land.lhs.true.9, %land.lhs.true.6, %land.lhs.true.4, %land.lhs.true, %while.body
  %next = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0106, i32 0, i32 0, !dbg !5087
  %entry1.0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next, align 4, !dbg !5068
  %cmp = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.0, null, !dbg !5069
  br i1 %cmp, label %for.cond.20.preheader, label %while.body, !dbg !5070

for.cond.cleanup.22:                              ; preds = %for.body.23, %for.cond.20.preheader
  %added_size.0.lcssa = phi i64 [ 0, %for.cond.20.preheader ], [ %add, %for.body.23 ]
  %9 = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !dbg !5097, !tbaa !3312
  %add31 = add i64 %9, %added_size.0.lcssa, !dbg !5097
  store i64 %add31, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !dbg !5097, !tbaa !3312
  tail call void @_ZN6Halide7Runtime8Internal11prune_cacheEv() #7, !dbg !5098
  %10 = mul i32 %tuple_count, 72, !dbg !5099
  %add32 = add i32 %10, 104, !dbg !5100
  %call33 = tail call i8* @halide_malloc(i8* null, i32 %add32) #6, !dbg !5101
  tail call void @llvm.dbg.value(metadata i8* %call33, i64 0, metadata !1287, metadata !2613), !dbg !5102
  %11 = bitcast i8* %call33 to %"struct.Halide::Runtime::Internal::CacheEntry"*, !dbg !5103
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::CacheEntry"* %11, i64 0, metadata !1288, metadata !2613), !dbg !5104
  tail call void @_ZN6Halide7Runtime8Internal10CacheEntry4initEPKhjjRK8buffer_tiPPS5_(%"struct.Halide::Runtime::Internal::CacheEntry"* %11, i8* %cache_key, i32 %size, i32 %call, %struct.buffer_t* dereferenceable(72) %computed_bounds, i32 %tuple_count, %struct.buffer_t** %tuple_buffers) #7, !dbg !5105
  %12 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx to i32*, !dbg !5106
  %13 = load i32, i32* %12, align 4, !dbg !5106, !tbaa !2768
  %14 = bitcast i8* %call33 to i32*, !dbg !5107
  store i32 %13, i32* %14, align 4, !dbg !5107, !tbaa !4784
  %15 = load i32, i32* bitcast (%"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE to i32*), align 4, !dbg !5108, !tbaa !2768
  %less_recent = getelementptr inbounds i8, i8* %call33, i32 8, !dbg !5109
  %16 = bitcast i8* %less_recent to i32*, !dbg !5110
  store i32 %15, i32* %16, align 4, !dbg !5110, !tbaa !4791
  %cmp36 = icmp eq i32 %15, 0, !dbg !5111
  br i1 %cmp36, label %if.end.38, label %if.then.37, !dbg !5113

for.body.23:                                      ; preds = %for.cond.20.preheader, %for.body.23
  %i19.099 = phi i32 [ %inc28, %for.body.23 ], [ 0, %for.cond.20.preheader ]
  %added_size.098 = phi i64 [ %add, %for.body.23 ], [ 0, %for.cond.20.preheader ]
  %arrayidx25 = getelementptr inbounds %struct.buffer_t*, %struct.buffer_t** %tuple_buffers, i32 %i19.099, !dbg !5114
  %17 = load %struct.buffer_t*, %struct.buffer_t** %arrayidx25, align 4, !dbg !5114, !tbaa !2768
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %17, i64 0, metadata !1284, metadata !2613), !dbg !5115
  %call26 = tail call i32 @_ZN6Halide7Runtime8Internal11full_extentERK8buffer_t(%struct.buffer_t* dereferenceable(72) %17) #7, !dbg !5116
  %conv = zext i32 %call26 to i64, !dbg !5116
  %add = add i64 %conv, %added_size.098, !dbg !5117
  tail call void @llvm.dbg.value(metadata i64 %add, i64 0, metadata !1280, metadata !2613), !dbg !5118
  %inc28 = add nuw nsw i32 %i19.099, 1, !dbg !5119
  tail call void @llvm.dbg.value(metadata i32 %inc28, i64 0, metadata !1281, metadata !2613), !dbg !5120
  %exitcond = icmp eq i32 %inc28, %tuple_count, !dbg !5096
  br i1 %exitcond, label %for.cond.cleanup.22, label %for.body.23, !dbg !5096

if.then.37:                                       ; preds = %for.cond.cleanup.22
  %18 = inttoptr i32 %15 to %"struct.Halide::Runtime::Internal::CacheEntry"*, !dbg !5121
  %more_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %18, i32 0, i32 1, !dbg !5122
  %19 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent to i8**, !dbg !5124
  store i8* %call33, i8** %19, align 4, !dbg !5124, !tbaa !4788
  br label %if.end.38, !dbg !5125

if.end.38:                                        ; preds = %if.then.37, %for.cond.cleanup.22
  store i8* %call33, i8** bitcast (%"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE to i8**), align 4, !dbg !5126, !tbaa !2768
  %20 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 4, !dbg !5127, !tbaa !2768
  %cmp39 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %20, null, !dbg !5129
  br i1 %cmp39, label %if.then.40, label %if.end.41, !dbg !5130

if.then.40:                                       ; preds = %if.end.38
  store i8* %call33, i8** bitcast (%"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE to i8**), align 4, !dbg !5131, !tbaa !2768
  br label %if.end.41, !dbg !5133

if.end.41:                                        ; preds = %if.then.40, %if.end.38
  %21 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx to i8**, !dbg !5134
  store i8* %call33, i8** %21, align 4, !dbg !5134, !tbaa !2768
  br label %cleanup.43, !dbg !5135

cleanup.43:                                       ; preds = %land.lhs.true.9, %for.cond.cleanup.us, %if.end.41
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1268, metadata !2613), !dbg !5063
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1307, metadata !2613) #2, !dbg !5136
  tail call void @halide_mutex_unlock(%struct.pthread_mutex_t* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #6, !dbg !5139
  ret void, !dbg !5135
}

; Function Attrs: nounwind
define weak void @halide_memoization_cache_cleanup() #0 {
entry:
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1291, metadata !2613), !dbg !5140
  br label %for.body, !dbg !5141

for.cond.cleanup:                                 ; preds = %while.end
  store i64 0, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !dbg !5142, !tbaa !3312
  tail call void @halide_mutex_cleanup(%struct.pthread_mutex_t* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #6, !dbg !5143
  ret void, !dbg !5144

for.body:                                         ; preds = %while.end, %entry
  %i.016 = phi i32 [ 0, %entry ], [ %inc, %while.end ]
  %arrayidx = getelementptr inbounds [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i32 0, i32 %i.016, !dbg !5145
  %0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx, align 4, !dbg !5145, !tbaa !2768
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::CacheEntry"* %0, i64 0, metadata !1293, metadata !2613), !dbg !5146
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx, align 4, !dbg !5147, !tbaa !2768
  %cmp3.14 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %0, null, !dbg !5148
  br i1 %cmp3.14, label %while.end, label %while.body, !dbg !5149

while.body:                                       ; preds = %for.body, %while.body
  %entry1.015 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %1, %while.body ], [ %0, %for.body ]
  %next4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.015, i32 0, i32 0, !dbg !5150
  %1 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next4, align 4, !dbg !5150, !tbaa !4784
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::CacheEntry"* %1, i64 0, metadata !1296, metadata !2613), !dbg !5151
  tail call void @_ZN6Halide7Runtime8Internal10CacheEntry7destroyEv(%"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.015) #7, !dbg !5152
  %2 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.015 to i8*, !dbg !5153
  tail call void @halide_free(i8* null, i8* %2) #6, !dbg !5154
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::CacheEntry"* %1, i64 0, metadata !1293, metadata !2613), !dbg !5146
  %cmp3 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %1, null, !dbg !5148
  br i1 %cmp3, label %while.end, label %while.body, !dbg !5149

while.end:                                        ; preds = %while.body, %for.body
  %inc = add nuw nsw i32 %i.016, 1, !dbg !5155
  tail call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !1291, metadata !2613), !dbg !5140
  %exitcond = icmp eq i32 %inc, 256, !dbg !5141
  br i1 %exitcond, label %for.cond.cleanup, label %for.body, !dbg !5141
}

; Function Attrs: nounwind
define weak void @halide_cache_cleanup() #0 {
entry:
  tail call void @halide_memoization_cache_cleanup() #7, !dbg !5156
  ret void, !dbg !5157
}

; Function Attrs: nounwind
define weak i8* @halide_string_to_string(i8* %dst, i8* %end, i8* %arg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %dst, i64 0, metadata !1331, metadata !2613), !dbg !5158
  tail call void @llvm.dbg.value(metadata i8* %end, i64 0, metadata !1332, metadata !2613), !dbg !5159
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !1333, metadata !2613), !dbg !5160
  %cmp = icmp ult i8* %dst, %end, !dbg !5161
  br i1 %cmp, label %while.body.preheader, label %return, !dbg !5163

while.body.preheader:                             ; preds = %entry
  %cmp1.18 = icmp eq i8* %dst, %end, !dbg !5164
  br i1 %cmp1.18, label %if.then.2, label %if.end.3, !dbg !5167

if.then.2:                                        ; preds = %if.end.6, %while.body.preheader
  %dst.addr.0.lcssa = phi i8* [ %dst, %while.body.preheader ], [ %end, %if.end.6 ]
  %arrayidx = getelementptr inbounds i8, i8* %dst.addr.0.lcssa, i32 -1, !dbg !5168
  store i8 0, i8* %arrayidx, align 1, !dbg !5170, !tbaa !3047
  br label %return, !dbg !5171

if.end.3:                                         ; preds = %while.body.preheader, %if.end.6
  %arg.addr.020 = phi i8* [ %incdec.ptr7, %if.end.6 ], [ %arg, %while.body.preheader ]
  %dst.addr.019 = phi i8* [ %incdec.ptr, %if.end.6 ], [ %dst, %while.body.preheader ]
  %0 = load i8, i8* %arg.addr.020, align 1, !dbg !5172, !tbaa !3047
  store i8 %0, i8* %dst.addr.019, align 1, !dbg !5173, !tbaa !3047
  %cmp4 = icmp eq i8 %0, 0, !dbg !5174
  br i1 %cmp4, label %return, label %if.end.6, !dbg !5176

if.end.6:                                         ; preds = %if.end.3
  %incdec.ptr = getelementptr inbounds i8, i8* %dst.addr.019, i32 1, !dbg !5177
  tail call void @llvm.dbg.value(metadata i8* %incdec.ptr, i64 0, metadata !1331, metadata !2613), !dbg !5158
  %incdec.ptr7 = getelementptr inbounds i8, i8* %arg.addr.020, i32 1, !dbg !5178
  tail call void @llvm.dbg.value(metadata i8* %incdec.ptr7, i64 0, metadata !1333, metadata !2613), !dbg !5160
  %cmp1 = icmp eq i8* %incdec.ptr, %end, !dbg !5164
  br i1 %cmp1, label %if.then.2, label %if.end.3, !dbg !5167

return:                                           ; preds = %if.end.3, %if.then.2, %entry
  %retval.0 = phi i8* [ %dst.addr.0.lcssa, %if.then.2 ], [ %dst, %entry ], [ %dst.addr.019, %if.end.3 ]
  ret i8* %retval.0, !dbg !5179
}

; Function Attrs: nounwind
define weak i8* @halide_uint64_to_string(i8* %dst, i8* %end, i64 %arg, i32 %min_digits) #0 {
entry:
  %buf = alloca [32 x i8], align 1
  tail call void @llvm.dbg.value(metadata i8* %dst, i64 0, metadata !1338, metadata !2613), !dbg !5180
  tail call void @llvm.dbg.value(metadata i8* %end, i64 0, metadata !1339, metadata !2613), !dbg !5181
  tail call void @llvm.dbg.value(metadata i64 %arg, i64 0, metadata !1340, metadata !2613), !dbg !5182
  tail call void @llvm.dbg.value(metadata i32 %min_digits, i64 0, metadata !1341, metadata !2613), !dbg !5183
  %0 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 0, !dbg !5184
  call void @llvm.lifetime.start(i64 32, i8* %0) #2, !dbg !5184
  tail call void @llvm.dbg.declare(metadata [32 x i8]* %buf, metadata !1342, metadata !2613), !dbg !5185
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 31, !dbg !5186
  store i8 0, i8* %arrayidx, align 1, !dbg !5187, !tbaa !3047
  %add.ptr = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 30, !dbg !5188
  tail call void @llvm.dbg.value(metadata i8* %add.ptr, i64 0, metadata !1346, metadata !2613), !dbg !5189
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1347, metadata !2613), !dbg !5190
  %cmp.13 = icmp sgt i32 %min_digits, 0, !dbg !5191
  %tobool.14 = icmp ne i64 %arg, 0, !dbg !5192
  %1 = or i1 %tobool.14, %cmp.13, !dbg !5194
  br i1 %1, label %for.body, label %for.cond.cleanup, !dbg !5195

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %digits.0.lcssa = phi i8* [ %add.ptr, %entry ], [ %incdec.ptr, %for.body ]
  %incdec.ptr1 = getelementptr inbounds i8, i8* %digits.0.lcssa, i32 1, !dbg !5198
  tail call void @llvm.dbg.value(metadata i8* %incdec.ptr1, i64 0, metadata !1346, metadata !2613), !dbg !5189
  %call = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* %incdec.ptr1) #7, !dbg !5199
  call void @llvm.lifetime.end(i64 32, i8* %0) #2, !dbg !5200
  ret i8* %call, !dbg !5201

for.body:                                         ; preds = %entry, %for.body
  %arg.addr.017 = phi i64 [ %div, %for.body ], [ %arg, %entry ]
  %digits.016 = phi i8* [ %incdec.ptr, %for.body ], [ %add.ptr, %entry ]
  %i.015 = phi i32 [ %inc, %for.body ], [ 0, %entry ]
  %div = udiv i64 %arg.addr.017, 10, !dbg !5202
  tail call void @llvm.dbg.value(metadata i64 %div, i64 0, metadata !1349, metadata !2613), !dbg !5203
  %2 = mul i64 %div, -10, !dbg !5204
  tail call void @llvm.dbg.value(metadata i64 %sub, i64 0, metadata !1352, metadata !2613), !dbg !5205
  %sub = add i64 %arg.addr.017, 48, !dbg !5204
  %add = add i64 %sub, %2, !dbg !5206
  %conv = trunc i64 %add to i8, !dbg !5207
  store i8 %conv, i8* %digits.016, align 1, !dbg !5208, !tbaa !3047
  %incdec.ptr = getelementptr inbounds i8, i8* %digits.016, i32 -1, !dbg !5209
  tail call void @llvm.dbg.value(metadata i8* %incdec.ptr, i64 0, metadata !1346, metadata !2613), !dbg !5189
  tail call void @llvm.dbg.value(metadata i64 %div, i64 0, metadata !1340, metadata !2613), !dbg !5182
  %inc = add nuw nsw i32 %i.015, 1, !dbg !5210
  tail call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !1347, metadata !2613), !dbg !5190
  %cmp = icmp slt i32 %inc, %min_digits, !dbg !5191
  %3 = icmp ugt i64 %arg.addr.017, 9, !dbg !5192
  %4 = or i1 %3, %cmp, !dbg !5194
  br i1 %4, label %for.body, label %for.cond.cleanup, !dbg !5195
}

; Function Attrs: nounwind
define weak i8* @halide_int64_to_string(i8* %dst, i8* %end, i64 %arg, i32 %min_digits) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %dst, i64 0, metadata !1357, metadata !2613), !dbg !5211
  tail call void @llvm.dbg.value(metadata i8* %end, i64 0, metadata !1358, metadata !2613), !dbg !5212
  tail call void @llvm.dbg.value(metadata i64 %arg, i64 0, metadata !1359, metadata !2613), !dbg !5213
  tail call void @llvm.dbg.value(metadata i32 %min_digits, i64 0, metadata !1360, metadata !2613), !dbg !5214
  %cmp = icmp sgt i64 %arg, -1, !dbg !5215
  %cmp1 = icmp ugt i8* %dst, %end, !dbg !5217
  %or.cond = or i1 %cmp1, %cmp, !dbg !5218
  br i1 %or.cond, label %if.end, label %if.then, !dbg !5218

if.then:                                          ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %dst, i32 1, !dbg !5219
  tail call void @llvm.dbg.value(metadata i8* %incdec.ptr, i64 0, metadata !1357, metadata !2613), !dbg !5211
  store i8 45, i8* %dst, align 1, !dbg !5221, !tbaa !3047
  %sub = sub nsw i64 0, %arg, !dbg !5222
  tail call void @llvm.dbg.value(metadata i64 %sub, i64 0, metadata !1359, metadata !2613), !dbg !5213
  br label %if.end, !dbg !5223

if.end:                                           ; preds = %if.then, %entry
  %arg.addr.0 = phi i64 [ %sub, %if.then ], [ %arg, %entry ]
  %dst.addr.0 = phi i8* [ %incdec.ptr, %if.then ], [ %dst, %entry ]
  %call = tail call i8* @halide_uint64_to_string(i8* %dst.addr.0, i8* %end, i64 %arg.addr.0, i32 %min_digits) #7, !dbg !5224
  ret i8* %call, !dbg !5225
}

; Function Attrs: nounwind
define weak i8* @halide_double_to_string(i8* %dst, i8* %end, double %arg, i32 %scientific) #0 {
entry:
  %arg.addr = alloca double, align 8
  %bits = alloca i64, align 8
  %buf = alloca [512 x i8], align 1
  tail call void @llvm.dbg.value(metadata i8* %dst, i64 0, metadata !1365, metadata !2613), !dbg !5226
  tail call void @llvm.dbg.value(metadata i8* %end, i64 0, metadata !1366, metadata !2613), !dbg !5227
  tail call void @llvm.dbg.value(metadata double %arg, i64 0, metadata !1367, metadata !2613), !dbg !5228
  store double %arg, double* %arg.addr, align 8, !tbaa !3369
  tail call void @llvm.dbg.value(metadata i32 %scientific, i64 0, metadata !1368, metadata !2613), !dbg !5229
  %0 = bitcast i64* %bits to i8*, !dbg !5230
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !5230
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1369, metadata !2613), !dbg !5231
  store i64 0, i64* %bits, align 8, !dbg !5231, !tbaa !3312
  %1 = bitcast double* %arg.addr to i8*, !dbg !5232
  %call = call i8* @memcpy(i8* %0, i8* %1, i32 8) #6, !dbg !5233
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !1370, metadata !2613), !dbg !5234
  call void @llvm.dbg.value(metadata i64* %bits, i64 0, metadata !1369, metadata !2613), !dbg !5231
  %2 = load i64, i64* %bits, align 8, !dbg !5235, !tbaa !3312
  %and = and i64 %2, 4503599627370495, !dbg !5236
  call void @llvm.dbg.value(metadata i64 %and, i64 0, metadata !1371, metadata !2613), !dbg !5237
  %shr = lshr i64 %2, 52, !dbg !5238
  %shr.tr = trunc i64 %shr to i32, !dbg !5239
  %conv = and i32 %shr.tr, 2047, !dbg !5239
  call void @llvm.dbg.value(metadata i32 %conv, i64 0, metadata !1372, metadata !2613), !dbg !5240
  %shr2 = lshr i64 %2, 63, !dbg !5241
  %conv3 = trunc i64 %shr2 to i32, !dbg !5242
  call void @llvm.dbg.value(metadata i32 %conv3, i64 0, metadata !1373, metadata !2613), !dbg !5243
  %cmp = icmp eq i32 %conv, 2047, !dbg !5244
  br i1 %cmp, label %if.then, label %if.else.15, !dbg !5246

if.then:                                          ; preds = %entry
  %tobool = icmp eq i64 %and, 0, !dbg !5247
  %tobool5 = icmp ne i32 %conv3, 0, !dbg !5250
  br i1 %tobool, label %if.else.9, label %if.then.4, !dbg !5253

if.then.4:                                        ; preds = %if.then
  br i1 %tobool5, label %if.then.6, label %if.else, !dbg !5254

if.then.6:                                        ; preds = %if.then.4
  %call7 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.89, i32 0, i32 0)) #7, !dbg !5255
  br label %cleanup.148, !dbg !5257

if.else:                                          ; preds = %if.then.4
  %call8 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.90, i32 0, i32 0)) #7, !dbg !5258
  br label %cleanup.148, !dbg !5260

if.else.9:                                        ; preds = %if.then
  br i1 %tobool5, label %if.then.11, label %if.else.13, !dbg !5261

if.then.11:                                       ; preds = %if.else.9
  %call12 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.91, i32 0, i32 0)) #7, !dbg !5263
  br label %cleanup.148, !dbg !5266

if.else.13:                                       ; preds = %if.else.9
  %call14 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.92, i32 0, i32 0)) #7, !dbg !5267
  br label %cleanup.148, !dbg !5269

if.else.15:                                       ; preds = %entry
  %cmp16 = icmp eq i32 %conv, 0, !dbg !5270
  %cmp17 = icmp eq i64 %and, 0, !dbg !5272
  %or.cond = and i1 %cmp17, %cmp16, !dbg !5273
  br i1 %or.cond, label %if.then.18, label %if.end.32, !dbg !5273

if.then.18:                                       ; preds = %if.else.15
  %tobool19 = icmp eq i32 %scientific, 0, !dbg !5274
  %tobool21 = icmp ne i32 %conv3, 0, !dbg !5277
  br i1 %tobool19, label %if.else.26, label %if.then.20, !dbg !5280

if.then.20:                                       ; preds = %if.then.18
  br i1 %tobool21, label %if.then.22, label %if.else.24, !dbg !5281

if.then.22:                                       ; preds = %if.then.20
  %call23 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.93, i32 0, i32 0)) #7, !dbg !5282
  br label %cleanup.148, !dbg !5284

if.else.24:                                       ; preds = %if.then.20
  %call25 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.94, i32 0, i32 0)) #7, !dbg !5285
  br label %cleanup.148, !dbg !5287

if.else.26:                                       ; preds = %if.then.18
  br i1 %tobool21, label %if.then.28, label %if.else.30, !dbg !5288

if.then.28:                                       ; preds = %if.else.26
  %call29 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6.95, i32 0, i32 0)) #7, !dbg !5290
  br label %cleanup.148, !dbg !5293

if.else.30:                                       ; preds = %if.else.26
  %call31 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7.96, i32 0, i32 0)) #7, !dbg !5294
  br label %cleanup.148, !dbg !5296

if.end.32:                                        ; preds = %if.else.15
  %tobool33 = icmp eq i32 %conv3, 0, !dbg !5297
  br i1 %tobool33, label %if.end.37, label %if.then.34, !dbg !5299

if.then.34:                                       ; preds = %if.end.32
  %call35 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.97, i32 0, i32 0)) #7, !dbg !5300
  call void @llvm.dbg.value(metadata i8* %call35, i64 0, metadata !1365, metadata !2613), !dbg !5226
  call void @llvm.dbg.value(metadata double* %arg.addr, i64 0, metadata !1367, metadata !2613), !dbg !5228
  %sub36 = fsub double -0.000000e+00, %arg, !dbg !5302
  call void @llvm.dbg.value(metadata double %sub36, i64 0, metadata !1367, metadata !2613), !dbg !5228
  store double %sub36, double* %arg.addr, align 8, !dbg !5303, !tbaa !3369
  br label %if.end.37, !dbg !5304

if.end.37:                                        ; preds = %if.then.34, %if.end.32
  %.pr = phi double [ %sub36, %if.then.34 ], [ %arg, %if.end.32 ], !dbg !5305
  %dst.addr.0 = phi i8* [ %call35, %if.then.34 ], [ %dst, %if.end.32 ]
  call void @llvm.dbg.value(metadata i32 6, i64 0, metadata !1374, metadata !2613), !dbg !5308
  call void @llvm.dbg.value(metadata i64 1000000, i64 0, metadata !1376, metadata !2613), !dbg !5309
  call void @llvm.dbg.value(metadata i32 52, i64 0, metadata !1377, metadata !2613), !dbg !5310
  %tobool38 = icmp eq i32 %scientific, 0, !dbg !5311
  br i1 %tobool38, label %if.else.62, label %while.condthread-pre-split, !dbg !5312

while.condthread-pre-split:                       ; preds = %if.end.37
  call void @llvm.dbg.value(metadata double* %arg.addr, i64 0, metadata !1367, metadata !2613), !dbg !5228
  %cmp40.261 = fcmp olt double %.pr, 1.000000e+00, !dbg !5313
  br i1 %cmp40.261, label %while.body, label %while.cond.41thread-pre-split, !dbg !5314

while.body:                                       ; preds = %while.condthread-pre-split, %while.body
  %exponent_base_10.0262 = phi i32 [ %dec, %while.body ], [ 0, %while.condthread-pre-split ]
  %3 = phi double [ %mul, %while.body ], [ %.pr, %while.condthread-pre-split ]
  %mul = fmul double %3, 1.000000e+01, !dbg !5315
  call void @llvm.dbg.value(metadata double %mul, i64 0, metadata !1367, metadata !2613), !dbg !5228
  %dec = add nsw i32 %exponent_base_10.0262, -1, !dbg !5317
  call void @llvm.dbg.value(metadata i32 %dec, i64 0, metadata !1378, metadata !2613), !dbg !5318
  call void @llvm.dbg.value(metadata double* %arg.addr, i64 0, metadata !1367, metadata !2613), !dbg !5228
  %cmp40 = fcmp olt double %mul, 1.000000e+00, !dbg !5313
  br i1 %cmp40, label %while.body, label %while.cond.while.cond.41thread-pre-split_crit_edge, !dbg !5314

while.cond.while.cond.41thread-pre-split_crit_edge: ; preds = %while.body
  store double %mul, double* %arg.addr, align 8, !dbg !5315, !tbaa !3369
  br label %while.cond.41thread-pre-split, !dbg !5314

while.cond.41thread-pre-split:                    ; preds = %while.cond.while.cond.41thread-pre-split_crit_edge, %while.condthread-pre-split
  %.pr246 = phi double [ %mul, %while.cond.while.cond.41thread-pre-split_crit_edge ], [ %.pr, %while.condthread-pre-split ], !dbg !5319
  %exponent_base_10.0.lcssa = phi i32 [ %dec, %while.cond.while.cond.41thread-pre-split_crit_edge ], [ 0, %while.condthread-pre-split ]
  call void @llvm.dbg.value(metadata double* %arg.addr, i64 0, metadata !1367, metadata !2613), !dbg !5228
  %cmp42.257 = fcmp ult double %.pr246, 1.000000e+01, !dbg !5320
  br i1 %cmp42.257, label %while.end.44, label %while.body.43, !dbg !5321

while.body.43:                                    ; preds = %while.cond.41thread-pre-split, %while.body.43
  %exponent_base_10.1258 = phi i32 [ %inc, %while.body.43 ], [ %exponent_base_10.0.lcssa, %while.cond.41thread-pre-split ]
  %4 = phi double [ %div, %while.body.43 ], [ %.pr246, %while.cond.41thread-pre-split ]
  %div = fdiv double %4, 1.000000e+01, !dbg !5322
  call void @llvm.dbg.value(metadata double %div, i64 0, metadata !1367, metadata !2613), !dbg !5228
  %inc = add nsw i32 %exponent_base_10.1258, 1, !dbg !5324
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !1378, metadata !2613), !dbg !5318
  call void @llvm.dbg.value(metadata double* %arg.addr, i64 0, metadata !1367, metadata !2613), !dbg !5228
  %cmp42 = fcmp ult double %div, 1.000000e+01, !dbg !5320
  br i1 %cmp42, label %while.cond.41.while.end.44_crit_edge, label %while.body.43, !dbg !5321

while.cond.41.while.end.44_crit_edge:             ; preds = %while.body.43
  store double %div, double* %arg.addr, align 8, !dbg !5322, !tbaa !3369
  br label %while.end.44, !dbg !5321

while.end.44:                                     ; preds = %while.cond.41.while.end.44_crit_edge, %while.cond.41thread-pre-split
  %exponent_base_10.1.lcssa = phi i32 [ %inc, %while.cond.41.while.end.44_crit_edge ], [ %exponent_base_10.0.lcssa, %while.cond.41thread-pre-split ]
  %.lcssa = phi double [ %div, %while.cond.41.while.end.44_crit_edge ], [ %.pr246, %while.cond.41thread-pre-split ]
  %mul45 = fmul double %.lcssa, 1.000000e+06, !dbg !5325
  %add = fadd double %mul45, 5.000000e-01, !dbg !5326
  %conv46 = fptoui double %add to i64, !dbg !5327
  call void @llvm.dbg.value(metadata i64 %conv46, i64 0, metadata !1381, metadata !2613), !dbg !5328
  %div47 = udiv i64 %conv46, 1000000, !dbg !5329
  call void @llvm.dbg.value(metadata i64 %div47, i64 0, metadata !1382, metadata !2613), !dbg !5330
  %5 = mul i64 %div47, -1000000, !dbg !5331
  %sub49 = add i64 %conv46, %5, !dbg !5331
  call void @llvm.dbg.value(metadata i64 %sub49, i64 0, metadata !1383, metadata !2613), !dbg !5332
  %call50 = call i8* @halide_int64_to_string(i8* %dst.addr.0, i8* %end, i64 %div47, i32 1) #7, !dbg !5333
  call void @llvm.dbg.value(metadata i8* %call50, i64 0, metadata !1365, metadata !2613), !dbg !5226
  %call51 = call i8* @halide_string_to_string(i8* %call50, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.98, i32 0, i32 0)) #7, !dbg !5334
  call void @llvm.dbg.value(metadata i8* %call51, i64 0, metadata !1365, metadata !2613), !dbg !5226
  %call52 = call i8* @halide_int64_to_string(i8* %call51, i8* %end, i64 %sub49, i32 6) #7, !dbg !5335
  call void @llvm.dbg.value(metadata i8* %call52, i64 0, metadata !1365, metadata !2613), !dbg !5226
  %cmp53 = icmp sgt i32 %exponent_base_10.1.lcssa, -1, !dbg !5336
  br i1 %cmp53, label %if.then.54, label %if.else.56, !dbg !5338

if.then.54:                                       ; preds = %while.end.44
  %call55 = call i8* @halide_string_to_string(i8* %call52, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.99, i32 0, i32 0)) #7, !dbg !5339
  call void @llvm.dbg.value(metadata i8* %call55, i64 0, metadata !1365, metadata !2613), !dbg !5226
  br label %if.end.59, !dbg !5341

if.else.56:                                       ; preds = %while.end.44
  %call57 = call i8* @halide_string_to_string(i8* %call52, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.100, i32 0, i32 0)) #7, !dbg !5342
  call void @llvm.dbg.value(metadata i8* %call57, i64 0, metadata !1365, metadata !2613), !dbg !5226
  %sub58 = sub nsw i32 0, %exponent_base_10.1.lcssa, !dbg !5344
  call void @llvm.dbg.value(metadata i32 %sub58, i64 0, metadata !1378, metadata !2613), !dbg !5318
  br label %if.end.59

if.end.59:                                        ; preds = %if.else.56, %if.then.54
  %exponent_base_10.2 = phi i32 [ %exponent_base_10.1.lcssa, %if.then.54 ], [ %sub58, %if.else.56 ]
  %dst.addr.1 = phi i8* [ %call55, %if.then.54 ], [ %call57, %if.else.56 ]
  %conv60 = sext i32 %exponent_base_10.2 to i64, !dbg !5345
  %call61 = call i8* @halide_int64_to_string(i8* %dst.addr.1, i8* %end, i64 %conv60, i32 2) #7, !dbg !5346
  call void @llvm.dbg.value(metadata i8* %call61, i64 0, metadata !1365, metadata !2613), !dbg !5226
  br label %cleanup.148, !dbg !5347

if.else.62:                                       ; preds = %if.end.37
  br i1 %cmp16, label %if.then.64, label %if.end.66, !dbg !5348

if.then.64:                                       ; preds = %if.else.62
  %call65 = call i8* @halide_double_to_string(i8* %dst.addr.0, i8* %end, double 0.000000e+00, i32 0) #7, !dbg !5349
  br label %cleanup.148, !dbg !5352

if.end.66:                                        ; preds = %if.else.62
  %add68 = or i64 %and, 4503599627370496, !dbg !5353
  call void @llvm.dbg.value(metadata i64 %add68, i64 0, metadata !1384, metadata !2613), !dbg !5354
  %sub70 = add nsw i32 %conv, -1075, !dbg !5355
  call void @llvm.dbg.value(metadata i32 %sub70, i64 0, metadata !1386, metadata !2613), !dbg !5356
  call void @llvm.dbg.value(metadata i64 %add68, i64 0, metadata !1387, metadata !2613), !dbg !5357
  call void @llvm.dbg.value(metadata i32 %sub70, i64 0, metadata !1388, metadata !2613), !dbg !5358
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1389, metadata !2613), !dbg !5359
  %cmp71 = icmp ult i32 %conv, 1075, !dbg !5360
  br i1 %cmp71, label %if.then.72, label %if.end.105, !dbg !5361

if.then.72:                                       ; preds = %if.end.66
  %cmp73 = icmp slt i32 %sub70, -52, !dbg !5362
  br i1 %cmp73, label %if.end.84, label %if.else.76, !dbg !5364

if.else.76:                                       ; preds = %if.then.72
  %sub77 = sub nsw i32 1075, %conv, !dbg !5365
  %sh_prom = zext i32 %sub77 to i64, !dbg !5367
  %shr78 = lshr i64 %add68, %sh_prom, !dbg !5367
  call void @llvm.dbg.value(metadata i64 %shr78, i64 0, metadata !1387, metadata !2613), !dbg !5357
  %shl81 = shl i64 %shr78, %sh_prom, !dbg !5368
  %sub82 = sub i64 %add68, %shl81, !dbg !5369
  br label %if.end.84

if.end.84:                                        ; preds = %if.else.76, %if.then.72
  %integer_part.0 = phi i64 [ %shr78, %if.else.76 ], [ 0, %if.then.72 ]
  %f.0.in = phi i64 [ %sub82, %if.else.76 ], [ %add68, %if.then.72 ]
  %f.0 = uitofp i64 %f.0.in to double, !dbg !5370
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1388, metadata !2613), !dbg !5358
  call void @llvm.dbg.declare(metadata %union.anon.0* undef, metadata !1393, metadata !2613), !dbg !5372
  call void @llvm.dbg.value(metadata i64 4696837146684686336, i64 0, metadata !1393, metadata !2613), !dbg !5372
  %conv85.244 = zext i32 %sub70 to i64, !dbg !5373
  %shl86 = shl i64 %conv85.244, 52, !dbg !5374
  %add88 = add i64 %shl86, 4696837146684686336, !dbg !5375
  call void @llvm.dbg.value(metadata i64 %add88, i64 0, metadata !1393, metadata !2613), !dbg !5372
  %6 = bitcast i64 %add88 to double, !dbg !5376
  %mul90 = fmul double %6, %f.0, !dbg !5377
  %add91 = fadd double %mul90, 5.000000e-01, !dbg !5378
  call void @llvm.dbg.value(metadata double %add91, i64 0, metadata !1390, metadata !2613), !dbg !5379
  %conv92 = fptoui double %add91 to i64, !dbg !5380
  call void @llvm.dbg.value(metadata i64 %conv92, i64 0, metadata !1389, metadata !2613), !dbg !5359
  %conv93 = uitofp i64 %conv92 to double, !dbg !5381
  %and96 = and i64 %conv92, 1
  %notlhs = fcmp oeq double %conv93, %add91, !dbg !5383
  %notrhs = icmp ne i64 %and96, 0, !dbg !5383
  %not.or.cond245 = and i1 %notrhs, %notlhs, !dbg !5383
  %dec99 = sext i1 %not.or.cond245 to i64, !dbg !5383
  %fractional_part.0 = add i64 %dec99, %conv92, !dbg !5383
  %cmp101 = icmp eq i64 %fractional_part.0, 1000000, !dbg !5384
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1389, metadata !2613), !dbg !5359
  %inc103 = zext i1 %cmp101 to i64, !dbg !5386
  %inc103.integer_part.0 = add i64 %inc103, %integer_part.0, !dbg !5386
  %.fractional_part.0 = select i1 %cmp101, i64 0, i64 %fractional_part.0, !dbg !5386
  br label %if.end.105, !dbg !5387

if.end.105:                                       ; preds = %if.end.84, %if.end.66
  %integer_part.2 = phi i64 [ %inc103.integer_part.0, %if.end.84 ], [ %add68, %if.end.66 ]
  %integer_exponent.0 = phi i32 [ 0, %if.end.84 ], [ %sub70, %if.end.66 ]
  %fractional_part.2 = phi i64 [ %.fractional_part.0, %if.end.84 ], [ 0, %if.end.66 ]
  %7 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0, !dbg !5388
  call void @llvm.lifetime.start(i64 512, i8* %7) #2, !dbg !5388
  call void @llvm.dbg.declare(metadata [512 x i8]* %buf, metadata !1398, metadata !2613), !dbg !5389
  %add.ptr = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 512, !dbg !5390
  %add.ptr106 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 480, !dbg !5391
  call void @llvm.dbg.value(metadata i8* %add.ptr106, i64 0, metadata !1402, metadata !2613), !dbg !5392
  %call109 = call i8* @halide_int64_to_string(i8* %add.ptr106, i8* %add.ptr, i64 %integer_part.2, i32 1) #7, !dbg !5393
  call void @llvm.dbg.value(metadata i8* %call109, i64 0, metadata !1403, metadata !2613), !dbg !5394
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1404, metadata !2613), !dbg !5395
  %cmp110.252 = icmp sgt i32 %integer_exponent.0, 0, !dbg !5396
  br i1 %cmp110.252, label %for.cond.112.preheader, label %for.cond.cleanup, !dbg !5397

for.cond.112.preheader:                           ; preds = %if.end.105, %if.end.138
  %i.0255 = phi i32 [ %inc140, %if.end.138 ], [ 0, %if.end.105 ]
  %int_part_ptr.0253 = phi i8* [ %int_part_ptr.1, %if.end.138 ], [ %add.ptr106, %if.end.105 ]
  %add.ptr113 = getelementptr inbounds i8, i8* %int_part_ptr.0253, i32 -1, !dbg !5398
  %cmp114.248 = icmp eq i8* %call109, %int_part_ptr.0253, !dbg !5399
  br i1 %cmp114.248, label %if.end.138, label %for.body.116, !dbg !5400

for.cond.cleanup:                                 ; preds = %if.end.138, %if.end.105
  %int_part_ptr.0.lcssa = phi i8* [ %add.ptr106, %if.end.105 ], [ %int_part_ptr.1, %if.end.138 ]
  %call142 = call i8* @halide_string_to_string(i8* %dst.addr.0, i8* %end, i8* %int_part_ptr.0.lcssa) #7, !dbg !5401
  call void @llvm.dbg.value(metadata i8* %call142, i64 0, metadata !1365, metadata !2613), !dbg !5226
  %call143 = call i8* @halide_string_to_string(i8* %call142, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.98, i32 0, i32 0)) #7, !dbg !5402
  call void @llvm.dbg.value(metadata i8* %call143, i64 0, metadata !1365, metadata !2613), !dbg !5226
  %call144 = call i8* @halide_int64_to_string(i8* %call143, i8* %end, i64 %fractional_part.2, i32 6) #7, !dbg !5403
  call void @llvm.dbg.value(metadata i8* %call144, i64 0, metadata !1365, metadata !2613), !dbg !5226
  call void @llvm.lifetime.end(i64 512, i8* %7) #2, !dbg !5404
  br label %cleanup.148

for.cond.cleanup.115:                             ; preds = %for.body.116
  br i1 %cmp125, label %if.then.136, label %if.end.138, !dbg !5405

for.body.116:                                     ; preds = %for.cond.112.preheader, %for.body.116
  %call109.pn = phi i8* [ %p.0250, %for.body.116 ], [ %call109, %for.cond.112.preheader ]
  %carry.0249 = phi i8 [ %carry.1, %for.body.116 ], [ 0, %for.cond.112.preheader ]
  %p.0250 = getelementptr inbounds i8, i8* %call109.pn, i32 -1, !dbg !5406
  %8 = load i8, i8* %p.0250, align 1, !dbg !5407, !tbaa !3047
  %sub118 = shl i8 %8, 1, !dbg !5408
  %mul121 = add i8 %sub118, -96, !dbg !5408
  %add122 = or i8 %mul121, %carry.0249, !dbg !5409
  call void @llvm.dbg.value(metadata i8 %add122, i64 0, metadata !1414, metadata !2613), !dbg !5410
  %cmp125 = icmp sgt i8 %add122, 9, !dbg !5411
  %sub128 = add i8 %add122, -10, !dbg !5413
  call void @llvm.dbg.value(metadata i8 %sub128, i64 0, metadata !1414, metadata !2613), !dbg !5410
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !1406, metadata !2613), !dbg !5415
  %carry.1 = zext i1 %cmp125 to i8, !dbg !5416
  %new_digit.0 = select i1 %cmp125, i8 %sub128, i8 %add122, !dbg !5416
  %add133 = add i8 %new_digit.0, 48, !dbg !5417
  store i8 %add133, i8* %p.0250, align 1, !dbg !5418, !tbaa !3047
  %cmp114 = icmp eq i8* %p.0250, %int_part_ptr.0253, !dbg !5399
  br i1 %cmp114, label %for.cond.cleanup.115, label %for.body.116, !dbg !5400

if.then.136:                                      ; preds = %for.cond.cleanup.115
  call void @llvm.dbg.value(metadata i8* %add.ptr113, i64 0, metadata !1402, metadata !2613), !dbg !5392
  store i8 49, i8* %add.ptr113, align 1, !dbg !5419, !tbaa !3047
  br label %if.end.138, !dbg !5422

if.end.138:                                       ; preds = %if.then.136, %for.cond.cleanup.115, %for.cond.112.preheader
  %int_part_ptr.1 = phi i8* [ %add.ptr113, %if.then.136 ], [ %int_part_ptr.0253, %for.cond.cleanup.115 ], [ %call109, %for.cond.112.preheader ]
  %inc140 = add nuw nsw i32 %i.0255, 1, !dbg !5423
  call void @llvm.dbg.value(metadata i32 %inc140, i64 0, metadata !1404, metadata !2613), !dbg !5395
  %exitcond = icmp eq i32 %inc140, %integer_exponent.0, !dbg !5397
  br i1 %exitcond, label %for.cond.cleanup, label %for.cond.112.preheader, !dbg !5397

cleanup.148:                                      ; preds = %for.cond.cleanup, %if.then.64, %if.end.59, %if.else.30, %if.then.28, %if.else.24, %if.then.22, %if.else.13, %if.then.11, %if.else, %if.then.6
  %retval.1 = phi i8* [ %call7, %if.then.6 ], [ %call8, %if.else ], [ %call12, %if.then.11 ], [ %call14, %if.else.13 ], [ %call23, %if.then.22 ], [ %call25, %if.else.24 ], [ %call29, %if.then.28 ], [ %call31, %if.else.30 ], [ %call65, %if.then.64 ], [ %call61, %if.end.59 ], [ %call144, %for.cond.cleanup ]
  call void @llvm.lifetime.end(i64 8, i8* %0) #2, !dbg !5424
  ret i8* %retval.1, !dbg !5424
}

; Function Attrs: nounwind
define weak i8* @halide_pointer_to_string(i8* %dst, i8* %end, i8* %arg) #0 {
entry:
  %buf = alloca [20 x i8], align 1
  tail call void @llvm.dbg.value(metadata i8* %dst, i64 0, metadata !1419, metadata !2613), !dbg !5425
  tail call void @llvm.dbg.value(metadata i8* %end, i64 0, metadata !1420, metadata !2613), !dbg !5426
  tail call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !1421, metadata !2613), !dbg !5427
  %0 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i32 0, i32 0, !dbg !5428
  call void @llvm.lifetime.start(i64 20, i8* %0) #2, !dbg !5428
  tail call void @llvm.dbg.declare(metadata [20 x i8]* %buf, metadata !1423, metadata !2613), !dbg !5429
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 20, i32 1, i1 false), !dbg !5429
  %add.ptr = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i32 0, i32 18, !dbg !5430
  tail call void @llvm.dbg.value(metadata i8* %add.ptr, i64 0, metadata !1427, metadata !2613), !dbg !5431
  %1 = ptrtoint i8* %arg to i32, !dbg !5432
  %2 = zext i32 %1 to i64, !dbg !5432
  tail call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !1428, metadata !2613), !dbg !5433
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1429, metadata !2613), !dbg !5434
  br label %for.body, !dbg !5435

for.body:                                         ; preds = %for.body, %entry
  %i.018 = phi i32 [ 0, %entry ], [ %inc, %for.body ]
  %bits.017 = phi i64 [ %2, %entry ], [ %shr, %for.body ]
  %buf_ptr.016 = phi i8* [ %add.ptr, %entry ], [ %incdec.ptr, %for.body ]
  %bits.0.tr = trunc i64 %bits.017 to i32, !dbg !5436
  %idxprom = and i32 %bits.0.tr, 15, !dbg !5436
  %arrayidx = getelementptr inbounds [17 x i8], [17 x i8]* @.str.12.101, i32 0, i32 %idxprom, !dbg !5436
  %3 = load i8, i8* %arrayidx, align 1, !dbg !5436, !tbaa !3047
  %incdec.ptr = getelementptr inbounds i8, i8* %buf_ptr.016, i32 -1, !dbg !5439
  tail call void @llvm.dbg.value(metadata i8* %incdec.ptr, i64 0, metadata !1427, metadata !2613), !dbg !5431
  store i8 %3, i8* %buf_ptr.016, align 1, !dbg !5440, !tbaa !3047
  %shr = lshr i64 %bits.017, 4, !dbg !5441
  tail call void @llvm.dbg.value(metadata i64 %shr, i64 0, metadata !1428, metadata !2613), !dbg !5433
  %tobool = icmp ne i64 %shr, 0, !dbg !5442
  %inc = add nuw nsw i32 %i.018, 1, !dbg !5444
  tail call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !1429, metadata !2613), !dbg !5434
  %cmp = icmp slt i32 %inc, 16, !dbg !5445
  %or.cond = and i1 %cmp, %tobool, !dbg !5446
  br i1 %or.cond, label %for.body, label %cleanup, !dbg !5446

cleanup:                                          ; preds = %for.body
  %incdec.ptr1 = getelementptr inbounds i8, i8* %buf_ptr.016, i32 -2, !dbg !5447
  tail call void @llvm.dbg.value(metadata i8* %incdec.ptr1, i64 0, metadata !1427, metadata !2613), !dbg !5431
  store i8 120, i8* %incdec.ptr, align 1, !dbg !5448, !tbaa !3047
  store i8 48, i8* %incdec.ptr1, align 1, !dbg !5449, !tbaa !3047
  %call = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* %incdec.ptr1) #7, !dbg !5450
  call void @llvm.lifetime.end(i64 20, i8* %0) #2, !dbg !5451
  ret i8* %call, !dbg !5452
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i32(i8* nocapture, i8, i32, i32, i1) #2

; Function Attrs: nounwind
define linkonce i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP8buffer_t(i8* %user_context, %struct.buffer_t* %buf) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1465, metadata !2613), !dbg !5453
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %buf, i64 0, metadata !1466, metadata !2613), !dbg !5454
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1467, metadata !2613), !dbg !5455
  %dev_dirty = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 7, !dbg !5456
  %0 = load i8, i8* %dev_dirty, align 1, !dbg !5456, !tbaa !5457, !range !2621
  %tobool = icmp eq i8 %0, 0, !dbg !5456
  br i1 %tobool, label %if.end.36, label %if.then, !dbg !5458

if.then:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !5459
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1605, metadata !2613) #2, !dbg !5461
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !5462
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !5464
  store i8 0, i8* %add.ptr.i, align 1, !dbg !5465, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5466
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.104, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5468
  %call.i.59 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.104, i32 0, i32 0)) #6, !dbg !5469
  %1 = bitcast %struct.buffer_t* %buf to i8*, !dbg !5470
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !5471
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1616, metadata !2613) #2, !dbg !5473
  %call.i.62 = tail call i8* @halide_pointer_to_string(i8* %call.i.59, i8* %add.ptr.i, i8* %1) #6, !dbg !5474
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5475
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.105, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5477
  %call.i.65 = tail call i8* @halide_string_to_string(i8* %call.i.62, i8* %add.ptr.i, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.105, i32 0, i32 0)) #6, !dbg !5478
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !5479
  tail call void @halide_print(i8* %user_context, i8* %call.i) #6, !dbg !5481
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !5486
  %dev = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 0, !dbg !5487
  %2 = load i64, i64* %dev, align 8, !dbg !5487, !tbaa !5488
  %call3 = tail call %struct.halide_device_interface* @halide_get_device_interface(i64 %2) #7, !dbg !5489
  tail call void @llvm.dbg.value(metadata %struct.halide_device_interface* %call3, i64 0, metadata !1468, metadata !2613), !dbg !5490
  %host_dirty = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 6, !dbg !5491
  %3 = load i8, i8* %host_dirty, align 1, !dbg !5491, !tbaa !5493, !range !2621
  %tobool4 = icmp eq i8 %3, 0, !dbg !5491
  br i1 %tobool4, label %if.else, label %if.then.5, !dbg !5494

if.then.5:                                        ; preds = %if.then
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !5495
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1605, metadata !2613) #2, !dbg !5498
  %call.i.69 = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !5499
  %add.ptr.i.72 = getelementptr inbounds i8, i8* %call.i.69, i32 1023, !dbg !5500
  store i8 0, i8* %add.ptr.i.72, align 1, !dbg !5501, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5502
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.104, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5504
  %call.i.76 = tail call i8* @halide_string_to_string(i8* %call.i.69, i8* %add.ptr.i.72, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.104, i32 0, i32 0)) #6, !dbg !5505
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !5506
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1616, metadata !2613) #2, !dbg !5508
  %call.i.79 = tail call i8* @halide_pointer_to_string(i8* %call.i.76, i8* %add.ptr.i.72, i8* %1) #6, !dbg !5509
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5510
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2.106, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5512
  %call.i.82 = tail call i8* @halide_string_to_string(i8* %call.i.79, i8* %add.ptr.i.72, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2.106, i32 0, i32 0)) #6, !dbg !5513
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !5514
  tail call void @halide_print(i8* %user_context, i8* %call.i.69) #6, !dbg !5516
  tail call void @halide_free(i8* %user_context, i8* %call.i.69) #6, !dbg !5517
  tail call void @llvm.dbg.value(metadata i32 -14, i64 0, metadata !1467, metadata !2613), !dbg !5455
  br label %if.end.36, !dbg !5518

if.else:                                          ; preds = %if.then
  %cmp = icmp eq %struct.halide_device_interface* %call3, null, !dbg !5519
  br i1 %cmp, label %if.then.10, label %if.else.15, !dbg !5521

if.then.10:                                       ; preds = %if.else
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !5522
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1605, metadata !2613) #2, !dbg !5525
  %call.i.86 = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !5526
  %add.ptr.i.89 = getelementptr inbounds i8, i8* %call.i.86, i32 1023, !dbg !5527
  store i8 0, i8* %add.ptr.i.89, align 1, !dbg !5528, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5529
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.104, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5531
  %call.i.93 = tail call i8* @halide_string_to_string(i8* %call.i.86, i8* %add.ptr.i.89, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.104, i32 0, i32 0)) #6, !dbg !5532
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !5533
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1616, metadata !2613) #2, !dbg !5535
  %call.i.96 = tail call i8* @halide_pointer_to_string(i8* %call.i.93, i8* %add.ptr.i.89, i8* %1) #6, !dbg !5536
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5537
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3.107, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5539
  %call.i.99 = tail call i8* @halide_string_to_string(i8* %call.i.96, i8* %add.ptr.i.89, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3.107, i32 0, i32 0)) #6, !dbg !5540
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !5541
  tail call void @halide_print(i8* %user_context, i8* %call.i.86) #6, !dbg !5543
  tail call void @halide_free(i8* %user_context, i8* %call.i.86) #6, !dbg !5544
  tail call void @llvm.dbg.value(metadata i32 -19, i64 0, metadata !1467, metadata !2613), !dbg !5455
  br label %if.end.36, !dbg !5545

if.else.15:                                       ; preds = %if.else
  %copy_to_host = getelementptr inbounds %struct.halide_device_interface, %struct.halide_device_interface* %call3, i32 0, i32 6, !dbg !5546
  %4 = load i32 (i8*, %struct.buffer_t*)*, i32 (i8*, %struct.buffer_t*)** %copy_to_host, align 4, !dbg !5546, !tbaa !5548
  %call16 = tail call i32 %4(i8* %user_context, %struct.buffer_t* %buf) #6, !dbg !5550
  tail call void @llvm.dbg.value(metadata i32 %call16, i64 0, metadata !1467, metadata !2613), !dbg !5455
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !5551
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1605, metadata !2613) #2, !dbg !5553
  %call.i.103 = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !5554
  %add.ptr.i.106 = getelementptr inbounds i8, i8* %call.i.103, i32 1023, !dbg !5555
  store i8 0, i8* %add.ptr.i.106, align 1, !dbg !5556, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5557
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.4.108, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5559
  %call.i.110 = tail call i8* @halide_string_to_string(i8* %call.i.103, i8* %add.ptr.i.106, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.4.108, i32 0, i32 0)) #6, !dbg !5560
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !5561
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1616, metadata !2613) #2, !dbg !5563
  %call.i.113 = tail call i8* @halide_pointer_to_string(i8* %call.i.110, i8* %add.ptr.i.106, i8* %1) #6, !dbg !5564
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5565
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.109, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5567
  %call.i.116 = tail call i8* @halide_string_to_string(i8* %call.i.113, i8* %add.ptr.i.106, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.109, i32 0, i32 0)) #6, !dbg !5568
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1619, metadata !2613) #2, !dbg !5569
  tail call void @llvm.dbg.value(metadata i32 %call16, i64 0, metadata !1620, metadata !2613) #2, !dbg !5571
  %conv.i = sext i32 %call16 to i64, !dbg !5572
  %call.i.119 = tail call i8* @halide_int64_to_string(i8* %call.i.116, i8* %add.ptr.i.106, i64 %conv.i, i32 1) #6, !dbg !5573
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5574
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.110, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5576
  %call.i.122 = tail call i8* @halide_string_to_string(i8* %call.i.119, i8* %add.ptr.i.106, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.110, i32 0, i32 0)) #6, !dbg !5577
  %5 = load i64, i64* %dev, align 8, !dbg !5578, !tbaa !5488
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1623, metadata !2613) #2, !dbg !5579
  tail call void @llvm.dbg.value(metadata i64 %5, i64 0, metadata !1624, metadata !2613) #2, !dbg !5581
  %call.i.125 = tail call i8* @halide_uint64_to_string(i8* %call.i.122, i8* %add.ptr.i.106, i64 %5, i32 1) #6, !dbg !5582
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5583
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5585
  %call.i.128 = tail call i8* @halide_string_to_string(i8* %call.i.125, i8* %add.ptr.i.106, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !5586
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !5587
  tail call void @halide_print(i8* %user_context, i8* %call.i.103) #6, !dbg !5589
  tail call void @halide_free(i8* %user_context, i8* %call.i.103) #6, !dbg !5590
  %cmp26 = icmp eq i32 %call16, 0, !dbg !5591
  br i1 %cmp26, label %if.then.27, label %if.else.29, !dbg !5593

if.then.27:                                       ; preds = %if.else.15
  store i8 0, i8* %dev_dirty, align 1, !dbg !5594, !tbaa !5457
  br label %if.end.36, !dbg !5596

if.else.29:                                       ; preds = %if.else.15
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !5597
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1605, metadata !2613) #2, !dbg !5600
  %call.i.132 = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !5601
  %add.ptr.i.135 = getelementptr inbounds i8, i8* %call.i.132, i32 1023, !dbg !5602
  store i8 0, i8* %add.ptr.i.135, align 1, !dbg !5603, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5604
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.104, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5606
  %call.i.139 = tail call i8* @halide_string_to_string(i8* %call.i.132, i8* %add.ptr.i.135, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.104, i32 0, i32 0)) #6, !dbg !5607
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !5608
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1616, metadata !2613) #2, !dbg !5610
  %call.i.142 = tail call i8* @halide_pointer_to_string(i8* %call.i.139, i8* %add.ptr.i.135, i8* %1) #6, !dbg !5611
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5612
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.112, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5614
  %call.i.145 = tail call i8* @halide_string_to_string(i8* %call.i.142, i8* %add.ptr.i.135, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.112, i32 0, i32 0)) #6, !dbg !5615
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !5616
  tail call void @halide_print(i8* %user_context, i8* %call.i.132) #6, !dbg !5618
  tail call void @halide_free(i8* %user_context, i8* %call.i.132) #6, !dbg !5619
  tail call void @llvm.dbg.value(metadata i32 -14, i64 0, metadata !1467, metadata !2613), !dbg !5455
  br label %if.end.36

if.end.36:                                        ; preds = %if.else.29, %if.then.27, %if.then.10, %if.then.5, %entry
  %result.1 = phi i32 [ 0, %entry ], [ -14, %if.then.5 ], [ -19, %if.then.10 ], [ 0, %if.then.27 ], [ -14, %if.else.29 ]
  ret i32 %result.1, !dbg !5620
}

; Function Attrs: nounwind
define weak %struct.halide_device_interface* @halide_get_device_interface(i64 %dev_field) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i64 %dev_field, i64 0, metadata !1494, metadata !2613), !dbg !5621
  %cmp = icmp eq i64 %dev_field, 0, !dbg !5622
  br i1 %cmp, label %return, label %if.end, !dbg !5624

if.end:                                           ; preds = %entry
  %conv = trunc i64 %dev_field to i32, !dbg !5625
  %0 = inttoptr i32 %conv to %"struct.Halide::Runtime::Internal::device_handle_wrapper"*, !dbg !5625
  %interface = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_handle_wrapper", %"struct.Halide::Runtime::Internal::device_handle_wrapper"* %0, i32 0, i32 1, !dbg !5626
  %1 = load %struct.halide_device_interface*, %struct.halide_device_interface** %interface, align 4, !dbg !5626, !tbaa !5627
  br label %return, !dbg !5629

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi %struct.halide_device_interface* [ %1, %if.end ], [ null, %entry ]
  ret %struct.halide_device_interface* %retval.0, !dbg !5630
}

; Function Attrs: nounwind
define weak i64 @halide_new_device_wrapper(i64 %handle, %struct.halide_device_interface* %interface) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i64 %handle, i64 0, metadata !1475, metadata !2613), !dbg !5631
  tail call void @llvm.dbg.value(metadata %struct.halide_device_interface* %interface, i64 0, metadata !1476, metadata !2613), !dbg !5632
  %call = tail call i8* @malloc(i32 16) #6, !dbg !5633
  %cmp = icmp eq i8* %call, null, !dbg !5634
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5636

if.end:                                           ; preds = %entry
  %device_handle = bitcast i8* %call to i64*, !dbg !5637
  store i64 %handle, i64* %device_handle, align 8, !dbg !5638, !tbaa !5639
  %interface1 = getelementptr inbounds i8, i8* %call, i32 8, !dbg !5640
  %0 = bitcast i8* %interface1 to %struct.halide_device_interface**, !dbg !5640
  store %struct.halide_device_interface* %interface, %struct.halide_device_interface** %0, align 4, !dbg !5641, !tbaa !5627
  %use_module = getelementptr inbounds %struct.halide_device_interface, %struct.halide_device_interface* %interface, i32 0, i32 0, !dbg !5642
  %1 = load void ()*, void ()** %use_module, align 4, !dbg !5642, !tbaa !5643
  tail call void %1() #6, !dbg !5644
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !5645
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !1605, metadata !2613) #2, !dbg !5647
  %call.i = tail call i8* @halide_malloc(i8* null, i32 1024) #6, !dbg !5648
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !5649
  store i8 0, i8* %add.ptr.i, align 1, !dbg !5650, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5651
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.9.113, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5653
  %call.i.19 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.9.113, i32 0, i32 0)) #6, !dbg !5654
  %2 = bitcast %struct.halide_device_interface* %interface to i8*, !dbg !5655
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !5656
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1616, metadata !2613) #2, !dbg !5658
  %call.i.22 = tail call i8* @halide_pointer_to_string(i8* %call.i.19, i8* %add.ptr.i, i8* %2) #6, !dbg !5659
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5660
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10.114, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5662
  %call.i.25 = tail call i8* @halide_string_to_string(i8* %call.i.22, i8* %add.ptr.i, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10.114, i32 0, i32 0)) #6, !dbg !5663
  %conv = trunc i64 %handle to i32, !dbg !5664
  %3 = inttoptr i32 %conv to i8*, !dbg !5664
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !5665
  tail call void @llvm.dbg.value(metadata i8* %3, i64 0, metadata !1616, metadata !2613) #2, !dbg !5667
  %call.i.28 = tail call i8* @halide_pointer_to_string(i8* %call.i.25, i8* %add.ptr.i, i8* %3) #6, !dbg !5668
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5669
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11.115, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5671
  %call.i.31 = tail call i8* @halide_string_to_string(i8* %call.i.28, i8* %add.ptr.i, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11.115, i32 0, i32 0)) #6, !dbg !5672
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !5673
  tail call void @llvm.dbg.value(metadata i8* %call, i64 0, metadata !1616, metadata !2613) #2, !dbg !5675
  %call.i.34 = tail call i8* @halide_pointer_to_string(i8* %call.i.31, i8* %add.ptr.i, i8* %call) #6, !dbg !5676
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5677
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5679
  %call.i.37 = tail call i8* @halide_string_to_string(i8* %call.i.34, i8* %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !5680
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !5681
  tail call void @halide_print(i8* null, i8* %call.i) #6, !dbg !5683
  tail call void @halide_free(i8* null, i8* %call.i) #6, !dbg !5684
  %4 = ptrtoint i8* %call to i32, !dbg !5685
  %5 = zext i32 %4 to i64, !dbg !5685
  br label %cleanup, !dbg !5686

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i64 [ %5, %if.end ], [ 0, %entry ]
  ret i64 %retval.0, !dbg !5687
}

; Function Attrs: nounwind
define weak void @halide_delete_device_wrapper(i64 %wrapper) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i64 %wrapper, i64 0, metadata !1482, metadata !2613), !dbg !5688
  %conv = trunc i64 %wrapper to i32, !dbg !5689
  %0 = inttoptr i32 %conv to %"struct.Halide::Runtime::Internal::device_handle_wrapper"*, !dbg !5689
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::device_handle_wrapper"* %0, i64 0, metadata !1483, metadata !2613), !dbg !5690
  %interface = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_handle_wrapper", %"struct.Halide::Runtime::Internal::device_handle_wrapper"* %0, i32 0, i32 1, !dbg !5691
  %1 = load %struct.halide_device_interface*, %struct.halide_device_interface** %interface, align 4, !dbg !5691, !tbaa !5627
  %release_module = getelementptr inbounds %struct.halide_device_interface, %struct.halide_device_interface* %1, i32 0, i32 1, !dbg !5692
  %2 = load void ()*, void ()** %release_module, align 4, !dbg !5692, !tbaa !5693
  tail call void %2() #6, !dbg !5694
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !5695
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !1605, metadata !2613) #2, !dbg !5697
  %call.i = tail call i8* @halide_malloc(i8* null, i32 1024) #6, !dbg !5698
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !5699
  store i8 0, i8* %add.ptr.i, align 1, !dbg !5700, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5701
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.12.116, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5703
  %call.i.16 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.12.116, i32 0, i32 0)) #6, !dbg !5704
  %3 = bitcast %struct.halide_device_interface** %interface to i8**, !dbg !5705
  %4 = load i8*, i8** %3, align 4, !dbg !5705, !tbaa !5627
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !5706
  tail call void @llvm.dbg.value(metadata i8* %4, i64 0, metadata !1616, metadata !2613) #2, !dbg !5708
  %call.i.19 = tail call i8* @halide_pointer_to_string(i8* %call.i.16, i8* %add.ptr.i, i8* %4) #6, !dbg !5709
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5710
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13.117, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5712
  %call.i.22 = tail call i8* @halide_string_to_string(i8* %call.i.19, i8* %add.ptr.i, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13.117, i32 0, i32 0)) #6, !dbg !5713
  %device_handle = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_handle_wrapper", %"struct.Halide::Runtime::Internal::device_handle_wrapper"* %0, i32 0, i32 0, !dbg !5714
  %5 = load i64, i64* %device_handle, align 8, !dbg !5714, !tbaa !5639
  %conv4 = trunc i64 %5 to i32, !dbg !5715
  %6 = inttoptr i32 %conv4 to i8*, !dbg !5715
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !5716
  tail call void @llvm.dbg.value(metadata i8* %6, i64 0, metadata !1616, metadata !2613) #2, !dbg !5718
  %call.i.25 = tail call i8* @halide_pointer_to_string(i8* %call.i.22, i8* %add.ptr.i, i8* %6) #6, !dbg !5719
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5720
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14.118, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5722
  %call.i.28 = tail call i8* @halide_string_to_string(i8* %call.i.25, i8* %add.ptr.i, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14.118, i32 0, i32 0)) #6, !dbg !5723
  %7 = inttoptr i32 %conv to i8*, !dbg !5724
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !5725
  tail call void @llvm.dbg.value(metadata i8* %7, i64 0, metadata !1616, metadata !2613) #2, !dbg !5727
  %call.i.31 = tail call i8* @halide_pointer_to_string(i8* %call.i.28, i8* %add.ptr.i, i8* %7) #6, !dbg !5728
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5729
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5731
  %call.i.34 = tail call i8* @halide_string_to_string(i8* %call.i.31, i8* %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !5732
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !5733
  tail call void @halide_print(i8* null, i8* %call.i) #6, !dbg !5735
  tail call void @halide_free(i8* null, i8* %call.i) #6, !dbg !5736
  tail call void @free(i8* %7) #6, !dbg !5737
  ret void, !dbg !5738
}

; Function Attrs: nounwind
define weak i64 @halide_get_device_handle(i64 %dev_field) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i64 %dev_field, i64 0, metadata !1488, metadata !2613), !dbg !5739
  %conv = trunc i64 %dev_field to i32, !dbg !5740
  %0 = inttoptr i32 %conv to %"struct.Halide::Runtime::Internal::device_handle_wrapper"*, !dbg !5740
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::device_handle_wrapper"* %0, i64 0, metadata !1489, metadata !2613), !dbg !5741
  %cmp = icmp eq i32 %conv, 0, !dbg !5742
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !5744
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !1605, metadata !2613) #2, !dbg !5747
  %call.i = tail call i8* @halide_malloc(i8* null, i32 1024) #6, !dbg !5748
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !5749
  store i8 0, i8* %add.ptr.i, align 1, !dbg !5750, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5751
  br i1 %cmp, label %if.then, label %if.end, !dbg !5753

if.then:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.15.119, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5754
  %call.i.18 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.15.119, i32 0, i32 0)) #6, !dbg !5755
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !5756
  tail call void @halide_print(i8* null, i8* %call.i) #6, !dbg !5758
  tail call void @halide_free(i8* null, i8* %call.i) #6, !dbg !5759
  br label %cleanup, !dbg !5760

if.end:                                           ; preds = %entry
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16.120, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5761
  %call.i.29 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16.120, i32 0, i32 0)) #6, !dbg !5763
  %interface = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_handle_wrapper", %"struct.Halide::Runtime::Internal::device_handle_wrapper"* %0, i32 0, i32 1, !dbg !5764
  %1 = bitcast %struct.halide_device_interface** %interface to i8**, !dbg !5764
  %2 = load i8*, i8** %1, align 4, !dbg !5764, !tbaa !5627
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !5765
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1616, metadata !2613) #2, !dbg !5767
  %call.i.32 = tail call i8* @halide_pointer_to_string(i8* %call.i.29, i8* %add.ptr.i, i8* %2) #6, !dbg !5768
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5769
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13.117, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5771
  %call.i.35 = tail call i8* @halide_string_to_string(i8* %call.i.32, i8* %add.ptr.i, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13.117, i32 0, i32 0)) #6, !dbg !5772
  %device_handle = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_handle_wrapper", %"struct.Halide::Runtime::Internal::device_handle_wrapper"* %0, i32 0, i32 0, !dbg !5773
  %3 = load i64, i64* %device_handle, align 8, !dbg !5773, !tbaa !5639
  %conv5 = trunc i64 %3 to i32, !dbg !5774
  %4 = inttoptr i32 %conv5 to i8*, !dbg !5774
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !5775
  tail call void @llvm.dbg.value(metadata i8* %4, i64 0, metadata !1616, metadata !2613) #2, !dbg !5777
  %call.i.38 = tail call i8* @halide_pointer_to_string(i8* %call.i.35, i8* %add.ptr.i, i8* %4) #6, !dbg !5778
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5779
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14.118, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5781
  %call.i.41 = tail call i8* @halide_string_to_string(i8* %call.i.38, i8* %add.ptr.i, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14.118, i32 0, i32 0)) #6, !dbg !5782
  %5 = inttoptr i32 %conv to i8*, !dbg !5783
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !5784
  tail call void @llvm.dbg.value(metadata i8* %5, i64 0, metadata !1616, metadata !2613) #2, !dbg !5786
  %call.i.44 = tail call i8* @halide_pointer_to_string(i8* %call.i.41, i8* %add.ptr.i, i8* %5) #6, !dbg !5787
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5788
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5790
  %call.i.47 = tail call i8* @halide_string_to_string(i8* %call.i.44, i8* %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !5791
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !5792
  tail call void @halide_print(i8* null, i8* %call.i) #6, !dbg !5794
  tail call void @halide_free(i8* null, i8* %call.i) #6, !dbg !5795
  %6 = load i64, i64* %device_handle, align 8, !dbg !5796, !tbaa !5639
  br label %cleanup, !dbg !5797

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i64 [ 0, %if.then ], [ %6, %if.end ]
  ret i64 %retval.0, !dbg !5798
}

; Function Attrs: nounwind
define weak void @halide_device_release(i8* %user_context, %struct.halide_device_interface* %interface) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1499, metadata !2613), !dbg !5799
  tail call void @llvm.dbg.value(metadata %struct.halide_device_interface* %interface, i64 0, metadata !1500, metadata !2613), !dbg !5800
  %device_release = getelementptr inbounds %struct.halide_device_interface, %struct.halide_device_interface* %interface, i32 0, i32 5, !dbg !5801
  %0 = load i32 (i8*)*, i32 (i8*)** %device_release, align 4, !dbg !5801, !tbaa !5802
  %call = tail call i32 %0(i8* %user_context) #6, !dbg !5803
  ret void, !dbg !5804
}

; Function Attrs: nounwind
define weak i32 @halide_copy_to_host(i8* %user_context, %struct.buffer_t* %buf) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1503, metadata !2613), !dbg !5805
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %buf, i64 0, metadata !1504, metadata !2613), !dbg !5806
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1505, metadata !2613), !dbg !5807
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1548, metadata !2613) #2, !dbg !5808
  tail call void @llvm.dbg.value(metadata %struct.pthread_mutex_t* @_ZN6Halide7Runtime8Internal17device_copy_mutexE, i64 0, metadata !1549, metadata !2613) #2, !dbg !5810
  tail call void @halide_mutex_lock(%struct.pthread_mutex_t* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #6, !dbg !5811
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !5813
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !1605, metadata !2613) #2, !dbg !5815
  %call.i = tail call i8* @halide_malloc(i8* null, i32 1024) #6, !dbg !5816
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !5817
  store i8 0, i8* %add.ptr.i, align 1, !dbg !5818, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5819
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17.121, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5821
  %call.i.16 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17.121, i32 0, i32 0)) #6, !dbg !5822
  %0 = bitcast %struct.buffer_t* %buf to i8*, !dbg !5823
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !5824
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !1616, metadata !2613) #2, !dbg !5826
  %call.i.19 = tail call i8* @halide_pointer_to_string(i8* %call.i.16, i8* %add.ptr.i, i8* %0) #6, !dbg !5827
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5828
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5830
  %call.i.22 = tail call i8* @halide_string_to_string(i8* %call.i.19, i8* %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !5831
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !5832
  tail call void @halide_print(i8* null, i8* %call.i) #6, !dbg !5834
  tail call void @halide_free(i8* null, i8* %call.i) #6, !dbg !5835
  %call3 = tail call i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP8buffer_t(i8* %user_context, %struct.buffer_t* %buf) #7, !dbg !5836
  tail call void @llvm.dbg.value(metadata i32 %call3, i64 0, metadata !1506, metadata !2613), !dbg !5837
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !5838
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !1605, metadata !2613) #2, !dbg !5840
  %call.i.26 = tail call i8* @halide_malloc(i8* null, i32 1024) #6, !dbg !5841
  %add.ptr.i.29 = getelementptr inbounds i8, i8* %call.i.26, i32 1023, !dbg !5842
  store i8 0, i8* %add.ptr.i.29, align 1, !dbg !5843, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5844
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.18.122, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5846
  %call.i.33 = tail call i8* @halide_string_to_string(i8* %call.i.26, i8* %add.ptr.i.29, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.18.122, i32 0, i32 0)) #6, !dbg !5847
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !5848
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !1616, metadata !2613) #2, !dbg !5850
  %call.i.36 = tail call i8* @halide_pointer_to_string(i8* %call.i.33, i8* %add.ptr.i.29, i8* %0) #6, !dbg !5851
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5852
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.109, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5854
  %call.i.39 = tail call i8* @halide_string_to_string(i8* %call.i.36, i8* %add.ptr.i.29, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.109, i32 0, i32 0)) #6, !dbg !5855
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1619, metadata !2613) #2, !dbg !5856
  tail call void @llvm.dbg.value(metadata i32 %call3, i64 0, metadata !1620, metadata !2613) #2, !dbg !5858
  %conv.i = sext i32 %call3 to i64, !dbg !5859
  %call.i.42 = tail call i8* @halide_int64_to_string(i8* %call.i.39, i8* %add.ptr.i.29, i64 %conv.i, i32 1) #6, !dbg !5860
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5861
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19.123, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5863
  %call.i.45 = tail call i8* @halide_string_to_string(i8* %call.i.42, i8* %add.ptr.i.29, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19.123, i32 0, i32 0)) #6, !dbg !5864
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !5865
  tail call void @halide_print(i8* null, i8* %call.i.26) #6, !dbg !5867
  tail call void @halide_free(i8* null, i8* %call.i.26) #6, !dbg !5868
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1505, metadata !2613), !dbg !5807
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1552, metadata !2613) #2, !dbg !5869
  tail call void @halide_mutex_unlock(%struct.pthread_mutex_t* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #6, !dbg !5871
  ret i32 %call3, !dbg !5873
}

; Function Attrs: nounwind
define weak i32 @halide_copy_to_device(i8* %user_context, %struct.buffer_t* %buf, %struct.halide_device_interface* %interface) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1511, metadata !2613), !dbg !5874
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %buf, i64 0, metadata !1512, metadata !2613), !dbg !5875
  tail call void @llvm.dbg.value(metadata %struct.halide_device_interface* %interface, i64 0, metadata !1513, metadata !2613), !dbg !5876
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1514, metadata !2613), !dbg !5877
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1515, metadata !2613), !dbg !5878
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1548, metadata !2613) #2, !dbg !5879
  tail call void @llvm.dbg.value(metadata %struct.pthread_mutex_t* @_ZN6Halide7Runtime8Internal17device_copy_mutexE, i64 0, metadata !1549, metadata !2613) #2, !dbg !5881
  tail call void @halide_mutex_lock(%struct.pthread_mutex_t* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #6, !dbg !5882
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !5883
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1605, metadata !2613) #2, !dbg !5885
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !5886
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !5887
  store i8 0, i8* %add.ptr.i, align 1, !dbg !5888, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5889
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.124, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5891
  %call.i.159 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.124, i32 0, i32 0)) #6, !dbg !5892
  %0 = bitcast %struct.buffer_t* %buf to i8*, !dbg !5893
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !5894
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !1616, metadata !2613) #2, !dbg !5896
  %call.i.162 = tail call i8* @halide_pointer_to_string(i8* %call.i.159, i8* %add.ptr.i, i8* %0) #6, !dbg !5897
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5898
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21.125, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5900
  %call.i.165 = tail call i8* @halide_string_to_string(i8* %call.i.162, i8* %add.ptr.i, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21.125, i32 0, i32 0)) #6, !dbg !5901
  %host = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 1, !dbg !5902
  %1 = load i8*, i8** %host, align 4, !dbg !5902, !tbaa !4725
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !5903
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1616, metadata !2613) #2, !dbg !5905
  %call.i.168 = tail call i8* @halide_pointer_to_string(i8* %call.i.165, i8* %add.ptr.i, i8* %1) #6, !dbg !5906
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5907
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22.126, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5909
  %call.i.171 = tail call i8* @halide_string_to_string(i8* %call.i.168, i8* %add.ptr.i, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22.126, i32 0, i32 0)) #6, !dbg !5910
  %dev = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 0, !dbg !5911
  %2 = load i64, i64* %dev, align 8, !dbg !5911, !tbaa !5488
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1623, metadata !2613) #2, !dbg !5912
  tail call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !1624, metadata !2613) #2, !dbg !5914
  %call.i.174 = tail call i8* @halide_uint64_to_string(i8* %call.i.171, i8* %add.ptr.i, i64 %2, i32 1) #6, !dbg !5915
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5916
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23.127, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5918
  %call.i.177 = tail call i8* @halide_string_to_string(i8* %call.i.174, i8* %add.ptr.i, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23.127, i32 0, i32 0)) #6, !dbg !5919
  %host_dirty = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 6, !dbg !5920
  %3 = load i8, i8* %host_dirty, align 1, !dbg !5920, !tbaa !5493, !range !2621
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1619, metadata !2613) #2, !dbg !5921
  %conv.i = zext i8 %3 to i64, !dbg !5923
  %call.i.180 = tail call i8* @halide_int64_to_string(i8* %call.i.177, i8* %add.ptr.i, i64 %conv.i, i32 1) #6, !dbg !5924
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5925
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24.128, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5927
  %call.i.183 = tail call i8* @halide_string_to_string(i8* %call.i.180, i8* %add.ptr.i, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24.128, i32 0, i32 0)) #6, !dbg !5928
  %dev_dirty = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 7, !dbg !5929
  %4 = load i8, i8* %dev_dirty, align 1, !dbg !5929, !tbaa !5457, !range !2621
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1619, metadata !2613) #2, !dbg !5930
  %conv.i.186 = zext i8 %4 to i64, !dbg !5932
  %call.i.187 = tail call i8* @halide_int64_to_string(i8* %call.i.183, i8* %add.ptr.i, i64 %conv.i.186, i32 1) #6, !dbg !5933
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5934
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5936
  %call.i.190 = tail call i8* @halide_string_to_string(i8* %call.i.187, i8* %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !5937
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !5938
  tail call void @halide_print(i8* %user_context, i8* %call.i) #6, !dbg !5940
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !5941
  %5 = load i64, i64* %dev, align 8, !dbg !5942, !tbaa !5488
  %call14 = tail call %struct.halide_device_interface* @halide_get_device_interface(i64 %5) #7, !dbg !5943
  tail call void @llvm.dbg.value(metadata %struct.halide_device_interface* %call14, i64 0, metadata !1516, metadata !2613), !dbg !5944
  %cmp = icmp eq %struct.halide_device_interface* %interface, null, !dbg !5945
  br i1 %cmp, label %if.then, label %if.end.25, !dbg !5947

if.then:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !5948
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1605, metadata !2613) #2, !dbg !5951
  %call.i.194 = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !5952
  %add.ptr.i.197 = getelementptr inbounds i8, i8* %call.i.194, i32 1023, !dbg !5953
  store i8 0, i8* %add.ptr.i.197, align 1, !dbg !5954, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5955
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.124, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5957
  %call.i.201 = tail call i8* @halide_string_to_string(i8* %call.i.194, i8* %add.ptr.i.197, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.124, i32 0, i32 0)) #6, !dbg !5958
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !5959
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !1616, metadata !2613) #2, !dbg !5961
  %call.i.204 = tail call i8* @halide_pointer_to_string(i8* %call.i.201, i8* %add.ptr.i.197, i8* %0) #6, !dbg !5962
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5963
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3.107, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5965
  %call.i.207 = tail call i8* @halide_string_to_string(i8* %call.i.204, i8* %add.ptr.i.197, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3.107, i32 0, i32 0)) #6, !dbg !5966
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !5967
  tail call void @halide_print(i8* %user_context, i8* %call.i.194) #6, !dbg !5969
  tail call void @halide_free(i8* %user_context, i8* %call.i.194) #6, !dbg !5970
  %cmp19 = icmp eq %struct.halide_device_interface* %call14, null, !dbg !5971
  br i1 %cmp19, label %if.then.20, label %if.end.25, !dbg !5973

if.then.20:                                       ; preds = %if.then
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !5974
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1605, metadata !2613) #2, !dbg !5977
  %call.i.211 = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !5978
  %add.ptr.i.214 = getelementptr inbounds i8, i8* %call.i.211, i32 1023, !dbg !5979
  store i8 0, i8* %add.ptr.i.214, align 1, !dbg !5980, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5981
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.124, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5983
  %call.i.218 = tail call i8* @halide_string_to_string(i8* %call.i.211, i8* %add.ptr.i.214, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.124, i32 0, i32 0)) #6, !dbg !5984
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !5985
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !1616, metadata !2613) #2, !dbg !5987
  %call.i.221 = tail call i8* @halide_pointer_to_string(i8* %call.i.218, i8* %add.ptr.i.214, i8* %0) #6, !dbg !5988
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !5989
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.25.129, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !5991
  %call.i.224 = tail call i8* @halide_string_to_string(i8* %call.i.221, i8* %add.ptr.i.214, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.25.129, i32 0, i32 0)) #6, !dbg !5992
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !5993
  tail call void @halide_print(i8* %user_context, i8* %call.i.211) #6, !dbg !5995
  tail call void @halide_free(i8* %user_context, i8* %call.i.211) #6, !dbg !5996
  br label %cleanup, !dbg !5997

if.end.25:                                        ; preds = %if.then, %entry
  %interface.addr.0 = phi %struct.halide_device_interface* [ %interface, %entry ], [ %call14, %if.then ]
  %6 = load i64, i64* %dev, align 8, !dbg !5998, !tbaa !5488
  %tobool27 = icmp eq i64 %6, 0, !dbg !6000
  %cmp28 = icmp eq %struct.halide_device_interface* %call14, %interface.addr.0, !dbg !6001
  %or.cond = or i1 %cmp28, %tobool27, !dbg !6002
  br i1 %or.cond, label %if.end.61, label %if.then.29, !dbg !6002

if.then.29:                                       ; preds = %if.end.25
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !6003
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1605, metadata !2613) #2, !dbg !6006
  %call.i.228 = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !6007
  %add.ptr.i.231 = getelementptr inbounds i8, i8* %call.i.228, i32 1023, !dbg !6008
  store i8 0, i8* %add.ptr.i.231, align 1, !dbg !6009, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6010
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.124, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6012
  %call.i.235 = tail call i8* @halide_string_to_string(i8* %call.i.228, i8* %add.ptr.i.231, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.124, i32 0, i32 0)) #6, !dbg !6013
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !6014
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !1616, metadata !2613) #2, !dbg !6016
  %call.i.238 = tail call i8* @halide_pointer_to_string(i8* %call.i.235, i8* %add.ptr.i.231, i8* %0) #6, !dbg !6017
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6018
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26.130, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6020
  %call.i.241 = tail call i8* @halide_string_to_string(i8* %call.i.238, i8* %add.ptr.i.231, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26.130, i32 0, i32 0)) #6, !dbg !6021
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !6022
  tail call void @halide_print(i8* %user_context, i8* %call.i.228) #6, !dbg !6024
  tail call void @halide_free(i8* %user_context, i8* %call.i.228) #6, !dbg !6025
  %cmp34 = icmp eq %struct.halide_device_interface* %call14, null, !dbg !6026
  br i1 %cmp34, label %if.end.51, label %land.lhs.true.35, !dbg !6028

land.lhs.true.35:                                 ; preds = %if.then.29
  %7 = load i8, i8* %dev_dirty, align 1, !dbg !6029, !tbaa !5457, !range !2621
  %tobool37 = icmp eq i8 %7, 0, !dbg !6029
  br i1 %tobool37, label %if.end.51, label %if.then.38, !dbg !6030

if.then.38:                                       ; preds = %land.lhs.true.35
  %8 = load i8, i8* %host_dirty, align 1, !dbg !6031, !tbaa !5493, !range !2621
  %tobool40 = icmp eq i8 %8, 0, !dbg !6031
  br i1 %tobool40, label %if.end.42, label %if.then.41, !dbg !6034

if.then.41:                                       ; preds = %if.then.38
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.27.131, i32 0, i32 0)) #6, !dbg !6035
  br label %if.end.42, !dbg !6035

if.end.42:                                        ; preds = %if.then.41, %if.then.38
  %call43 = tail call i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP8buffer_t(i8* %user_context, %struct.buffer_t* %buf) #7, !dbg !6037
  tail call void @llvm.dbg.value(metadata i32 %call43, i64 0, metadata !1514, metadata !2613), !dbg !5877
  %cmp44 = icmp eq i32 %call43, 0, !dbg !6038
  br i1 %cmp44, label %if.end.51, label %if.then.45, !dbg !6040

if.then.45:                                       ; preds = %if.end.42
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !6041
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1605, metadata !2613) #2, !dbg !6044
  %call.i.245 = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !6045
  %add.ptr.i.248 = getelementptr inbounds i8, i8* %call.i.245, i32 1023, !dbg !6046
  store i8 0, i8* %add.ptr.i.248, align 1, !dbg !6047, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6048
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.124, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6050
  %call.i.252 = tail call i8* @halide_string_to_string(i8* %call.i.245, i8* %add.ptr.i.248, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.124, i32 0, i32 0)) #6, !dbg !6051
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !6052
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !1616, metadata !2613) #2, !dbg !6054
  %call.i.255 = tail call i8* @halide_pointer_to_string(i8* %call.i.252, i8* %add.ptr.i.248, i8* %0) #6, !dbg !6055
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6056
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.28.132, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6058
  %call.i.258 = tail call i8* @halide_string_to_string(i8* %call.i.255, i8* %add.ptr.i.248, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.28.132, i32 0, i32 0)) #6, !dbg !6059
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !6060
  tail call void @halide_print(i8* %user_context, i8* %call.i.245) #6, !dbg !6062
  tail call void @halide_free(i8* %user_context, i8* %call.i.245) #6, !dbg !6063
  br label %cleanup, !dbg !6064

if.end.51:                                        ; preds = %if.end.42, %land.lhs.true.35, %if.then.29
  %call52 = tail call i32 @halide_device_free(i8* %user_context, %struct.buffer_t* %buf) #7, !dbg !6065
  tail call void @llvm.dbg.value(metadata i32 %call52, i64 0, metadata !1514, metadata !2613), !dbg !5877
  %cmp53 = icmp eq i32 %call52, 0, !dbg !6066
  br i1 %cmp53, label %if.end.59, label %if.then.54, !dbg !6068

if.then.54:                                       ; preds = %if.end.51
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !6069
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1605, metadata !2613) #2, !dbg !6072
  %call.i.262 = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !6073
  %add.ptr.i.265 = getelementptr inbounds i8, i8* %call.i.262, i32 1023, !dbg !6074
  store i8 0, i8* %add.ptr.i.265, align 1, !dbg !6075, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6076
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.124, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6078
  %call.i.269 = tail call i8* @halide_string_to_string(i8* %call.i.262, i8* %add.ptr.i.265, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.124, i32 0, i32 0)) #6, !dbg !6079
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !6080
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !1616, metadata !2613) #2, !dbg !6082
  %call.i.272 = tail call i8* @halide_pointer_to_string(i8* %call.i.269, i8* %add.ptr.i.265, i8* %0) #6, !dbg !6083
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6084
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.29.133, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6086
  %call.i.275 = tail call i8* @halide_string_to_string(i8* %call.i.272, i8* %add.ptr.i.265, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.29.133, i32 0, i32 0)) #6, !dbg !6087
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !6088
  tail call void @halide_print(i8* %user_context, i8* %call.i.262) #6, !dbg !6090
  tail call void @halide_free(i8* %user_context, i8* %call.i.262) #6, !dbg !6091
  br label %cleanup, !dbg !6092

if.end.59:                                        ; preds = %if.end.51
  store i8 1, i8* %host_dirty, align 1, !dbg !6093, !tbaa !5493
  %.pr = load i64, i64* %dev, align 8, !dbg !6094, !tbaa !5488
  br label %if.end.61, !dbg !6096

if.end.61:                                        ; preds = %if.end.59, %if.end.25
  %9 = phi i64 [ %6, %if.end.25 ], [ %.pr, %if.end.59 ], !dbg !6094
  %cmp63 = icmp eq i64 %9, 0, !dbg !6097
  br i1 %cmp63, label %if.then.64, label %if.end.73, !dbg !6098

if.then.64:                                       ; preds = %if.end.61
  %call65 = tail call i32 @halide_device_malloc(i8* %user_context, %struct.buffer_t* %buf, %struct.halide_device_interface* %interface.addr.0) #7, !dbg !6099
  tail call void @llvm.dbg.value(metadata i32 %call65, i64 0, metadata !1514, metadata !2613), !dbg !5877
  %cmp66 = icmp eq i32 %call65, 0, !dbg !6101
  br i1 %cmp66, label %if.end.73, label %if.then.67, !dbg !6103

if.then.67:                                       ; preds = %if.then.64
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !6104
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1605, metadata !2613) #2, !dbg !6107
  %call.i.279 = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !6108
  %add.ptr.i.282 = getelementptr inbounds i8, i8* %call.i.279, i32 1023, !dbg !6109
  store i8 0, i8* %add.ptr.i.282, align 1, !dbg !6110, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6111
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.124, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6113
  %call.i.286 = tail call i8* @halide_string_to_string(i8* %call.i.279, i8* %add.ptr.i.282, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.124, i32 0, i32 0)) #6, !dbg !6114
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !6115
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !1616, metadata !2613) #2, !dbg !6117
  %call.i.289 = tail call i8* @halide_pointer_to_string(i8* %call.i.286, i8* %add.ptr.i.282, i8* %0) #6, !dbg !6118
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6119
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.30.134, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6121
  %call.i.292 = tail call i8* @halide_string_to_string(i8* %call.i.289, i8* %add.ptr.i.282, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.30.134, i32 0, i32 0)) #6, !dbg !6122
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !6123
  tail call void @halide_print(i8* %user_context, i8* %call.i.279) #6, !dbg !6125
  tail call void @halide_free(i8* %user_context, i8* %call.i.279) #6, !dbg !6126
  br label %cleanup, !dbg !6127

if.end.73:                                        ; preds = %if.then.64, %if.end.61
  %10 = load i8, i8* %host_dirty, align 1, !dbg !6128, !tbaa !5493, !range !2621
  %tobool75 = icmp eq i8 %10, 0, !dbg !6128
  br i1 %tobool75, label %cleanup, label %if.then.76, !dbg !6130

if.then.76:                                       ; preds = %if.end.73
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !6131
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1605, metadata !2613) #2, !dbg !6134
  %call.i.296 = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !6135
  %add.ptr.i.299 = getelementptr inbounds i8, i8* %call.i.296, i32 1023, !dbg !6136
  store i8 0, i8* %add.ptr.i.299, align 1, !dbg !6137, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6138
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.124, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6140
  %call.i.303 = tail call i8* @halide_string_to_string(i8* %call.i.296, i8* %add.ptr.i.299, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.124, i32 0, i32 0)) #6, !dbg !6141
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !6142
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !1616, metadata !2613) #2, !dbg !6144
  %call.i.306 = tail call i8* @halide_pointer_to_string(i8* %call.i.303, i8* %add.ptr.i.299, i8* %0) #6, !dbg !6145
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6146
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31.135, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6148
  %call.i.309 = tail call i8* @halide_string_to_string(i8* %call.i.306, i8* %add.ptr.i.299, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31.135, i32 0, i32 0)) #6, !dbg !6149
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !6150
  tail call void @halide_print(i8* %user_context, i8* %call.i.296) #6, !dbg !6152
  tail call void @halide_free(i8* %user_context, i8* %call.i.296) #6, !dbg !6153
  %11 = load i8, i8* %dev_dirty, align 1, !dbg !6154, !tbaa !5457, !range !2621
  %tobool82 = icmp eq i8 %11, 0, !dbg !6154
  br i1 %tobool82, label %if.else, label %if.then.83, !dbg !6156

if.then.83:                                       ; preds = %if.then.76
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !6157
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1605, metadata !2613) #2, !dbg !6160
  %call.i.313 = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !6161
  %add.ptr.i.316 = getelementptr inbounds i8, i8* %call.i.313, i32 1023, !dbg !6162
  store i8 0, i8* %add.ptr.i.316, align 1, !dbg !6163, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6164
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.124, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6166
  %call.i.320 = tail call i8* @halide_string_to_string(i8* %call.i.313, i8* %add.ptr.i.316, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.124, i32 0, i32 0)) #6, !dbg !6167
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !6168
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !1616, metadata !2613) #2, !dbg !6170
  %call.i.323 = tail call i8* @halide_pointer_to_string(i8* %call.i.320, i8* %add.ptr.i.316, i8* %0) #6, !dbg !6171
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6172
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.32.136, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6174
  %call.i.326 = tail call i8* @halide_string_to_string(i8* %call.i.323, i8* %add.ptr.i.316, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.32.136, i32 0, i32 0)) #6, !dbg !6175
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !6176
  tail call void @halide_print(i8* %user_context, i8* %call.i.313) #6, !dbg !6178
  tail call void @halide_free(i8* %user_context, i8* %call.i.313) #6, !dbg !6179
  tail call void @llvm.dbg.value(metadata i32 -15, i64 0, metadata !1514, metadata !2613), !dbg !5877
  br label %cleanup, !dbg !6180

if.else:                                          ; preds = %if.then.76
  %copy_to_device = getelementptr inbounds %struct.halide_device_interface, %struct.halide_device_interface* %interface.addr.0, i32 0, i32 7, !dbg !6181
  %12 = load i32 (i8*, %struct.buffer_t*)*, i32 (i8*, %struct.buffer_t*)** %copy_to_device, align 4, !dbg !6181, !tbaa !6183
  %call88 = tail call i32 %12(i8* %user_context, %struct.buffer_t* %buf) #6, !dbg !6184
  tail call void @llvm.dbg.value(metadata i32 %call88, i64 0, metadata !1514, metadata !2613), !dbg !5877
  %cmp89 = icmp eq i32 %call88, 0, !dbg !6185
  br i1 %cmp89, label %if.then.90, label %if.else.92, !dbg !6187

if.then.90:                                       ; preds = %if.else
  store i8 0, i8* %host_dirty, align 1, !dbg !6188, !tbaa !5493
  br label %cleanup

if.else.92:                                       ; preds = %if.else
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !6190
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1605, metadata !2613) #2, !dbg !6193
  %call.i.330 = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !6194
  %add.ptr.i.333 = getelementptr inbounds i8, i8* %call.i.330, i32 1023, !dbg !6195
  store i8 0, i8* %add.ptr.i.333, align 1, !dbg !6196, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6197
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.124, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6199
  %call.i.337 = tail call i8* @halide_string_to_string(i8* %call.i.330, i8* %add.ptr.i.333, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.124, i32 0, i32 0)) #6, !dbg !6200
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !6201
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !1616, metadata !2613) #2, !dbg !6203
  %call.i.340 = tail call i8* @halide_pointer_to_string(i8* %call.i.337, i8* %add.ptr.i.333, i8* %0) #6, !dbg !6204
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6205
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.33.137, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6207
  %call.i.343 = tail call i8* @halide_string_to_string(i8* %call.i.340, i8* %add.ptr.i.333, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.33.137, i32 0, i32 0)) #6, !dbg !6208
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !6209
  tail call void @halide_print(i8* %user_context, i8* %call.i.330) #6, !dbg !6211
  tail call void @halide_free(i8* %user_context, i8* %call.i.330) #6, !dbg !6212
  br label %cleanup, !dbg !6213

cleanup:                                          ; preds = %if.else.92, %if.then.90, %if.then.83, %if.end.73, %if.then.67, %if.then.54, %if.then.45, %if.then.20
  %retval.0 = phi i32 [ -19, %if.then.20 ], [ %call43, %if.then.45 ], [ %call52, %if.then.54 ], [ %call65, %if.then.67 ], [ -15, %if.else.92 ], [ 0, %if.end.73 ], [ 0, %if.then.83 ], [ 0, %if.then.90 ]
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1515, metadata !2613), !dbg !5878
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1552, metadata !2613) #2, !dbg !6214
  tail call void @halide_mutex_unlock(%struct.pthread_mutex_t* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #6, !dbg !6216
  ret i32 %retval.0, !dbg !6217
}

; Function Attrs: nounwind
define weak i32 @halide_device_free(i8* %user_context, %struct.buffer_t* %buf) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1532, metadata !2613), !dbg !6218
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %buf, i64 0, metadata !1533, metadata !2613), !dbg !6219
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1534, metadata !2613), !dbg !6220
  %tobool = icmp ne %struct.buffer_t* %buf, null, !dbg !6221
  %dev = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 0, !dbg !6223
  br i1 %tobool, label %if.then, label %if.end, !dbg !6225

if.then:                                          ; preds = %entry
  %0 = load i64, i64* %dev, align 8, !dbg !6223, !tbaa !5488
  tail call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !1534, metadata !2613), !dbg !6220
  br label %if.end, !dbg !6226

if.end:                                           ; preds = %if.then, %entry
  %dev_field.0 = phi i64 [ %0, %if.then ], [ 0, %entry ]
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !6227
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1605, metadata !2613) #2, !dbg !6229
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !6230
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !6231
  store i8 0, i8* %add.ptr.i, align 1, !dbg !6232, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6233
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.41, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6235
  %call.i.55 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.41, i32 0, i32 0)) #6, !dbg !6236
  %1 = bitcast %struct.buffer_t* %buf to i8*, !dbg !6237
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !6238
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1616, metadata !2613) #2, !dbg !6240
  %call.i.58 = tail call i8* @halide_pointer_to_string(i8* %call.i.55, i8* %add.ptr.i, i8* %1) #6, !dbg !6241
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6242
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6244
  %call.i.61 = tail call i8* @halide_string_to_string(i8* %call.i.58, i8* %add.ptr.i, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i32 0, i32 0)) #6, !dbg !6245
  %2 = load i64, i64* %dev, align 8, !dbg !6246, !tbaa !5488
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1623, metadata !2613) #2, !dbg !6247
  tail call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !1624, metadata !2613) #2, !dbg !6249
  %call.i.64 = tail call i8* @halide_uint64_to_string(i8* %call.i.61, i8* %add.ptr.i, i64 %2, i32 1) #6, !dbg !6250
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6251
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36.138, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6253
  %call.i.67 = tail call i8* @halide_string_to_string(i8* %call.i.64, i8* %add.ptr.i, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36.138, i32 0, i32 0)) #6, !dbg !6254
  %call6 = tail call %struct.halide_device_interface* @halide_get_device_interface(i64 %dev_field.0) #7, !dbg !6255
  %3 = bitcast %struct.halide_device_interface* %call6 to i8*, !dbg !6255
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !6256
  tail call void @llvm.dbg.value(metadata i8* %3, i64 0, metadata !1616, metadata !2613) #2, !dbg !6258
  %call.i.70 = tail call i8* @halide_pointer_to_string(i8* %call.i.67, i8* %add.ptr.i, i8* %3) #6, !dbg !6259
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6260
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6262
  %call.i.73 = tail call i8* @halide_string_to_string(i8* %call.i.70, i8* %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !6263
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !6264
  tail call void @halide_print(i8* %user_context, i8* %call.i) #6, !dbg !6266
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !6267
  br i1 %tobool, label %if.then.9, label %if.end.31, !dbg !6268

if.then.9:                                        ; preds = %if.end
  %call10 = tail call %struct.halide_device_interface* @halide_get_device_interface(i64 %dev_field.0) #7, !dbg !6269
  tail call void @llvm.dbg.value(metadata %struct.halide_device_interface* %call10, i64 0, metadata !1535, metadata !2613), !dbg !6270
  %cmp11 = icmp eq %struct.halide_device_interface* %call10, null, !dbg !6271
  br i1 %cmp11, label %if.end.31, label %if.then.12, !dbg !6272

if.then.12:                                       ; preds = %if.then.9
  %use_module = getelementptr inbounds %struct.halide_device_interface, %struct.halide_device_interface* %call10, i32 0, i32 0, !dbg !6273
  %4 = load void ()*, void ()** %use_module, align 4, !dbg !6273, !tbaa !5643
  tail call void %4() #6, !dbg !6274
  %device_free = getelementptr inbounds %struct.halide_device_interface, %struct.halide_device_interface* %call10, i32 0, i32 3, !dbg !6275
  %5 = load i32 (i8*, %struct.buffer_t*)*, i32 (i8*, %struct.buffer_t*)** %device_free, align 4, !dbg !6275, !tbaa !6276
  %call13 = tail call i32 %5(i8* %user_context, %struct.buffer_t* %buf) #6, !dbg !6277
  tail call void @llvm.dbg.value(metadata i32 %call13, i64 0, metadata !1538, metadata !2613), !dbg !6278
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !6279
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1605, metadata !2613) #2, !dbg !6281
  %call.i.77 = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !6282
  %add.ptr.i.80 = getelementptr inbounds i8, i8* %call.i.77, i32 1023, !dbg !6283
  store i8 0, i8* %add.ptr.i.80, align 1, !dbg !6284, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6285
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.43.139, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6287
  %call.i.84 = tail call i8* @halide_string_to_string(i8* %call.i.77, i8* %add.ptr.i.80, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.43.139, i32 0, i32 0)) #6, !dbg !6288
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1619, metadata !2613) #2, !dbg !6289
  tail call void @llvm.dbg.value(metadata i32 %call13, i64 0, metadata !1620, metadata !2613) #2, !dbg !6291
  %conv.i = sext i32 %call13 to i64, !dbg !6292
  %call.i.87 = tail call i8* @halide_int64_to_string(i8* %call.i.84, i8* %add.ptr.i.80, i64 %conv.i, i32 1) #6, !dbg !6293
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6294
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6296
  %call.i.90 = tail call i8* @halide_string_to_string(i8* %call.i.87, i8* %add.ptr.i.80, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !6297
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !6298
  tail call void @halide_print(i8* %user_context, i8* %call.i.77) #6, !dbg !6300
  tail call void @halide_free(i8* %user_context, i8* %call.i.77) #6, !dbg !6301
  %release_module = getelementptr inbounds %struct.halide_device_interface, %struct.halide_device_interface* %call10, i32 0, i32 1, !dbg !6302
  %6 = load void ()*, void ()** %release_module, align 4, !dbg !6302, !tbaa !5693
  tail call void %6() #6, !dbg !6303
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !6304
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1605, metadata !2613) #2, !dbg !6306
  %call.i.94 = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !6307
  %add.ptr.i.97 = getelementptr inbounds i8, i8* %call.i.94, i32 1023, !dbg !6308
  store i8 0, i8* %add.ptr.i.97, align 1, !dbg !6309, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6310
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.44, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6312
  %call.i.101 = tail call i8* @halide_string_to_string(i8* %call.i.94, i8* %add.ptr.i.97, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.44, i32 0, i32 0)) #6, !dbg !6313
  %7 = load i64, i64* %dev, align 8, !dbg !6314, !tbaa !5488
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1623, metadata !2613) #2, !dbg !6315
  tail call void @llvm.dbg.value(metadata i64 %7, i64 0, metadata !1624, metadata !2613) #2, !dbg !6317
  %call.i.104 = tail call i8* @halide_uint64_to_string(i8* %call.i.101, i8* %add.ptr.i.97, i64 %7, i32 1) #6, !dbg !6318
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6319
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6321
  %call.i.107 = tail call i8* @halide_string_to_string(i8* %call.i.104, i8* %add.ptr.i.97, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !6322
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !6323
  tail call void @halide_print(i8* %user_context, i8* %call.i.94) #6, !dbg !6325
  tail call void @halide_free(i8* %user_context, i8* %call.i.94) #6, !dbg !6326
  %8 = load i64, i64* %dev, align 8, !dbg !6327, !tbaa !5488
  %cmp24 = icmp eq i64 %8, 0, !dbg !6327
  br i1 %cmp24, label %cleanup.30, label %if.then.25, !dbg !6329

if.then.25:                                       ; preds = %if.then.12
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.45, i32 0, i32 0)) #6, !dbg !6330
  br label %cleanup.30, !dbg !6330

cleanup.30:                                       ; preds = %if.then.25, %if.then.12
  %tobool27 = icmp eq i32 %call13, 0, !dbg !6332
  %. = select i1 %tobool27, i32 0, i32 -18, !dbg !6334
  br label %cleanup.32

if.end.31:                                        ; preds = %if.then.9, %if.end
  %dev_dirty = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 7, !dbg !6336
  store i8 0, i8* %dev_dirty, align 1, !dbg !6337, !tbaa !5457
  br label %cleanup.32, !dbg !6338

cleanup.32:                                       ; preds = %if.end.31, %cleanup.30
  %retval.2 = phi i32 [ 0, %if.end.31 ], [ %., %cleanup.30 ]
  ret i32 %retval.2, !dbg !6339
}

; Function Attrs: nounwind
define weak i32 @halide_device_malloc(i8* %user_context, %struct.buffer_t* %buf, %struct.halide_device_interface* %interface) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1525, metadata !2613), !dbg !6340
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %buf, i64 0, metadata !1526, metadata !2613), !dbg !6341
  tail call void @llvm.dbg.value(metadata %struct.halide_device_interface* %interface, i64 0, metadata !1527, metadata !2613), !dbg !6342
  %dev = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 0, !dbg !6343
  %0 = load i64, i64* %dev, align 8, !dbg !6343, !tbaa !5488
  %call = tail call %struct.halide_device_interface* @halide_get_device_interface(i64 %0) #7, !dbg !6344
  tail call void @llvm.dbg.value(metadata %struct.halide_device_interface* %call, i64 0, metadata !1528, metadata !2613), !dbg !6345
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !6346
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1605, metadata !2613) #2, !dbg !6348
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !6349
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !6350
  store i8 0, i8* %add.ptr.i, align 1, !dbg !6351, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6352
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.35.140, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6354
  %call.i.53 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.35.140, i32 0, i32 0)) #6, !dbg !6355
  %1 = bitcast %struct.buffer_t* %buf to i8*, !dbg !6356
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !6357
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1616, metadata !2613) #2, !dbg !6359
  %call.i.56 = tail call i8* @halide_pointer_to_string(i8* %call.i.53, i8* %add.ptr.i, i8* %1) #6, !dbg !6360
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6361
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36.138, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6363
  %call.i.59 = tail call i8* @halide_string_to_string(i8* %call.i.56, i8* %add.ptr.i, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36.138, i32 0, i32 0)) #6, !dbg !6364
  %2 = bitcast %struct.halide_device_interface* %interface to i8*, !dbg !6365
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !6366
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1616, metadata !2613) #2, !dbg !6368
  %call.i.62 = tail call i8* @halide_pointer_to_string(i8* %call.i.59, i8* %add.ptr.i, i8* %2) #6, !dbg !6369
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6370
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37.141, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6372
  %call.i.65 = tail call i8* @halide_string_to_string(i8* %call.i.62, i8* %add.ptr.i, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37.141, i32 0, i32 0)) #6, !dbg !6373
  %host = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 1, !dbg !6374
  %3 = load i8*, i8** %host, align 4, !dbg !6374, !tbaa !4725
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !6375
  tail call void @llvm.dbg.value(metadata i8* %3, i64 0, metadata !1616, metadata !2613) #2, !dbg !6377
  %call.i.68 = tail call i8* @halide_pointer_to_string(i8* %call.i.65, i8* %add.ptr.i, i8* %3) #6, !dbg !6378
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6379
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22.126, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6381
  %call.i.71 = tail call i8* @halide_string_to_string(i8* %call.i.68, i8* %add.ptr.i, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22.126, i32 0, i32 0)) #6, !dbg !6382
  %4 = load i64, i64* %dev, align 8, !dbg !6383, !tbaa !5488
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1623, metadata !2613) #2, !dbg !6384
  tail call void @llvm.dbg.value(metadata i64 %4, i64 0, metadata !1624, metadata !2613) #2, !dbg !6386
  %call.i.74 = tail call i8* @halide_uint64_to_string(i8* %call.i.71, i8* %add.ptr.i, i64 %4, i32 1) #6, !dbg !6387
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6388
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23.127, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6390
  %call.i.77 = tail call i8* @halide_string_to_string(i8* %call.i.74, i8* %add.ptr.i, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23.127, i32 0, i32 0)) #6, !dbg !6391
  %host_dirty = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 6, !dbg !6392
  %5 = load i8, i8* %host_dirty, align 1, !dbg !6392, !tbaa !5493, !range !2621
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1619, metadata !2613) #2, !dbg !6393
  %conv.i = zext i8 %5 to i64, !dbg !6395
  %call.i.80 = tail call i8* @halide_int64_to_string(i8* %call.i.77, i8* %add.ptr.i, i64 %conv.i, i32 1) #6, !dbg !6396
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6397
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24.128, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6399
  %call.i.83 = tail call i8* @halide_string_to_string(i8* %call.i.80, i8* %add.ptr.i, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24.128, i32 0, i32 0)) #6, !dbg !6400
  %dev_dirty = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 7, !dbg !6401
  %6 = load i8, i8* %dev_dirty, align 1, !dbg !6401, !tbaa !5457, !range !2621
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1619, metadata !2613) #2, !dbg !6402
  %conv.i.86 = zext i8 %6 to i64, !dbg !6404
  %call.i.87 = tail call i8* @halide_int64_to_string(i8* %call.i.83, i8* %add.ptr.i, i64 %conv.i.86, i32 1) #6, !dbg !6405
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6406
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38.142, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6408
  %call.i.90 = tail call i8* @halide_string_to_string(i8* %call.i.87, i8* %add.ptr.i, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38.142, i32 0, i32 0)) #6, !dbg !6409
  %7 = bitcast %struct.halide_device_interface* %call to i8*, !dbg !6410
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !6411
  tail call void @llvm.dbg.value(metadata i8* %7, i64 0, metadata !1616, metadata !2613) #2, !dbg !6413
  %call.i.93 = tail call i8* @halide_pointer_to_string(i8* %call.i.90, i8* %add.ptr.i, i8* %7) #6, !dbg !6414
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6415
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6417
  %call.i.96 = tail call i8* @halide_string_to_string(i8* %call.i.93, i8* %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !6418
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !6419
  tail call void @halide_print(i8* %user_context, i8* %call.i) #6, !dbg !6421
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !6422
  %cmp = icmp eq %struct.halide_device_interface* %call, null, !dbg !6423
  %cmp19 = icmp eq %struct.halide_device_interface* %call, %interface, !dbg !6425
  %or.cond = or i1 %cmp, %cmp19, !dbg !6426
  br i1 %or.cond, label %if.end, label %if.then, !dbg !6426

if.then:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !6427
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1605, metadata !2613) #2, !dbg !6430
  %call.i.100 = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !6431
  %add.ptr.i.103 = getelementptr inbounds i8, i8* %call.i.100, i32 1023, !dbg !6432
  store i8 0, i8* %add.ptr.i.103, align 1, !dbg !6433, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6434
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.39, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6436
  %call.i.107 = tail call i8* @halide_string_to_string(i8* %call.i.100, i8* %add.ptr.i.103, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.39, i32 0, i32 0)) #6, !dbg !6437
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !6438
  tail call void @halide_print(i8* %user_context, i8* %call.i.100) #6, !dbg !6440
  tail call void @halide_free(i8* %user_context, i8* %call.i.100) #6, !dbg !6441
  br label %cleanup.31, !dbg !6442

if.end:                                           ; preds = %entry
  %use_module = getelementptr inbounds %struct.halide_device_interface, %struct.halide_device_interface* %interface, i32 0, i32 0, !dbg !6443
  %8 = load void ()*, void ()** %use_module, align 4, !dbg !6443, !tbaa !5643
  tail call void %8() #6, !dbg !6444
  %device_malloc = getelementptr inbounds %struct.halide_device_interface, %struct.halide_device_interface* %interface, i32 0, i32 2, !dbg !6445
  %9 = load i32 (i8*, %struct.buffer_t*)*, i32 (i8*, %struct.buffer_t*)** %device_malloc, align 4, !dbg !6445, !tbaa !6446
  %call22 = tail call i32 %9(i8* %user_context, %struct.buffer_t* %buf) #6, !dbg !6447
  tail call void @llvm.dbg.value(metadata i32 %call22, i64 0, metadata !1529, metadata !2613), !dbg !6448
  %release_module = getelementptr inbounds %struct.halide_device_interface, %struct.halide_device_interface* %interface, i32 0, i32 1, !dbg !6449
  %10 = load void ()*, void ()** %release_module, align 4, !dbg !6449, !tbaa !5693
  tail call void %10() #6, !dbg !6450
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !6451
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1605, metadata !2613) #2, !dbg !6453
  %call.i.111 = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !6454
  %add.ptr.i.114 = getelementptr inbounds i8, i8* %call.i.111, i32 1023, !dbg !6455
  store i8 0, i8* %add.ptr.i.114, align 1, !dbg !6456, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6457
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.40, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6459
  %call.i.118 = tail call i8* @halide_string_to_string(i8* %call.i.111, i8* %add.ptr.i.114, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.40, i32 0, i32 0)) #6, !dbg !6460
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1615, metadata !2613) #2, !dbg !6461
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1616, metadata !2613) #2, !dbg !6463
  %call.i.121 = tail call i8* @halide_pointer_to_string(i8* %call.i.118, i8* %add.ptr.i.114, i8* %1) #6, !dbg !6464
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6465
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.109, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6467
  %call.i.124 = tail call i8* @halide_string_to_string(i8* %call.i.121, i8* %add.ptr.i.114, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.109, i32 0, i32 0)) #6, !dbg !6468
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1619, metadata !2613) #2, !dbg !6469
  tail call void @llvm.dbg.value(metadata i32 %call22, i64 0, metadata !1620, metadata !2613) #2, !dbg !6471
  %conv.i.127 = sext i32 %call22 to i64, !dbg !6472
  %call.i.128 = tail call i8* @halide_int64_to_string(i8* %call.i.124, i8* %add.ptr.i.114, i64 %conv.i.127, i32 1) #6, !dbg !6473
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6474
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6476
  %call.i.131 = tail call i8* @halide_string_to_string(i8* %call.i.128, i8* %add.ptr.i.114, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !6477
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !6478
  tail call void @halide_print(i8* %user_context, i8* %call.i.111) #6, !dbg !6480
  tail call void @halide_free(i8* %user_context, i8* %call.i.111) #6, !dbg !6481
  %tobool29 = icmp eq i32 %call22, 0, !dbg !6482
  %. = select i1 %tobool29, i32 0, i32 -16, !dbg !6484
  br label %cleanup.31

cleanup.31:                                       ; preds = %if.end, %if.then
  %retval.1 = phi i32 [ -16, %if.then ], [ %., %if.end ]
  ret i32 %retval.1, !dbg !6486
}

; Function Attrs: nounwind
define weak i32 @halide_device_sync(i8* %user_context, %struct.buffer_t* %buf) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1519, metadata !2613), !dbg !6487
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %buf, i64 0, metadata !1520, metadata !2613), !dbg !6488
  tail call void @llvm.dbg.value(metadata %struct.halide_device_interface* null, i64 0, metadata !1521, metadata !2613), !dbg !6489
  %tobool = icmp eq %struct.buffer_t* %buf, null, !dbg !6490
  br i1 %tobool, label %if.then.1, label %if.end, !dbg !6492

if.end:                                           ; preds = %entry
  %dev = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 0, !dbg !6493
  %0 = load i64, i64* %dev, align 8, !dbg !6493, !tbaa !5488
  %call = tail call %struct.halide_device_interface* @halide_get_device_interface(i64 %0) #7, !dbg !6495
  tail call void @llvm.dbg.value(metadata %struct.halide_device_interface* %call, i64 0, metadata !1521, metadata !2613), !dbg !6489
  %cmp = icmp eq %struct.halide_device_interface* %call, null, !dbg !6496
  br i1 %cmp, label %if.then.1, label %if.end.3, !dbg !6498

if.then.1:                                        ; preds = %if.end, %entry
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1603, metadata !2613) #2, !dbg !6499
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1605, metadata !2613) #2, !dbg !6502
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !6503
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !6504
  store i8 0, i8* %add.ptr.i, align 1, !dbg !6505, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1611, metadata !2613) #2, !dbg !6506
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34.143, i32 0, i32 0), i64 0, metadata !1612, metadata !2613) #2, !dbg !6508
  %call.i.16 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34.143, i32 0, i32 0)) #6, !dbg !6509
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !1608, metadata !2613) #2, !dbg !6510
  tail call void @halide_print(i8* %user_context, i8* %call.i) #6, !dbg !6512
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !6513
  br label %cleanup.7, !dbg !6514

if.end.3:                                         ; preds = %if.end
  %device_sync = getelementptr inbounds %struct.halide_device_interface, %struct.halide_device_interface* %call, i32 0, i32 4, !dbg !6515
  %1 = load i32 (i8*, %struct.buffer_t*)*, i32 (i8*, %struct.buffer_t*)** %device_sync, align 4, !dbg !6515, !tbaa !6516
  %call4 = tail call i32 %1(i8* %user_context, %struct.buffer_t* %buf) #6, !dbg !6517
  tail call void @llvm.dbg.value(metadata i32 %call4, i64 0, metadata !1522, metadata !2613), !dbg !6518
  %tobool5 = icmp eq i32 %call4, 0, !dbg !6519
  %. = select i1 %tobool5, i32 0, i32 -17, !dbg !6521
  br label %cleanup.7

cleanup.7:                                        ; preds = %if.end.3, %if.then.1
  %retval.1 = phi i32 [ -19, %if.then.1 ], [ %., %if.end.3 ]
  ret i32 %retval.1, !dbg !6523
}

; Function Attrs: nounwind
define weak void @halide_device_free_as_destructor(i8* %user_context, i8* %obj) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1543, metadata !2613), !dbg !6524
  tail call void @llvm.dbg.value(metadata i8* %obj, i64 0, metadata !1544, metadata !2613), !dbg !6525
  %0 = bitcast i8* %obj to %struct.buffer_t*, !dbg !6526
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %0, i64 0, metadata !1545, metadata !2613), !dbg !6527
  %call = tail call i32 @halide_device_free(i8* %user_context, %struct.buffer_t* %0) #7, !dbg !6528
  ret void, !dbg !6529
}

; Function Attrs: nounwind
define weak void @halide_runtime_internal_register_metadata(%struct._halide_runtime_internal_registered_filter_t* %info) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct._halide_runtime_internal_registered_filter_t* %info, i64 0, metadata !1653, metadata !2613), !dbg !6530
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1654, metadata !2613), !dbg !6531
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1674, metadata !2613) #2, !dbg !6532
  tail call void @llvm.dbg.value(metadata %struct.pthread_mutex_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::list_head_t", %"struct.Halide::Runtime::Internal::list_head_t"* @_ZN6Halide7Runtime8Internal9list_headE, i32 0, i32 0), i64 0, metadata !1675, metadata !2613) #2, !dbg !6534
  tail call void @halide_mutex_lock(%struct.pthread_mutex_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::list_head_t", %"struct.Halide::Runtime::Internal::list_head_t"* @_ZN6Halide7Runtime8Internal9list_headE, i32 0, i32 0)) #6, !dbg !6535
  %0 = load i32, i32* bitcast (%struct._halide_runtime_internal_registered_filter_t** getelementptr inbounds (%"struct.Halide::Runtime::Internal::list_head_t", %"struct.Halide::Runtime::Internal::list_head_t"* @_ZN6Halide7Runtime8Internal9list_headE, i32 0, i32 1) to i32*), align 8, !dbg !6537, !tbaa !6538
  %1 = bitcast %struct._halide_runtime_internal_registered_filter_t* %info to i32*, !dbg !6541
  store i32 %0, i32* %1, align 4, !dbg !6541, !tbaa !6542
  store %struct._halide_runtime_internal_registered_filter_t* %info, %struct._halide_runtime_internal_registered_filter_t** getelementptr inbounds (%"struct.Halide::Runtime::Internal::list_head_t", %"struct.Halide::Runtime::Internal::list_head_t"* @_ZN6Halide7Runtime8Internal9list_headE, i32 0, i32 1), align 8, !dbg !6544, !tbaa !6538
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1654, metadata !2613), !dbg !6531
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1678, metadata !2613) #2, !dbg !6545
  tail call void @halide_mutex_unlock(%struct.pthread_mutex_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::list_head_t", %"struct.Halide::Runtime::Internal::list_head_t"* @_ZN6Halide7Runtime8Internal9list_headE, i32 0, i32 0)) #6, !dbg !6547
  ret void, !dbg !6549
}

; Function Attrs: nounwind
define weak i32 @halide_enumerate_registered_filters(i8* %user_context, i8* %enumerate_context, i32 (i8*, %struct.halide_filter_metadata_t*, i32 (i8**)*)* %func) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !1663, metadata !2613), !dbg !6550
  tail call void @llvm.dbg.value(metadata i8* %enumerate_context, i64 0, metadata !1664, metadata !2613), !dbg !6551
  tail call void @llvm.dbg.value(metadata i32 (i8*, %struct.halide_filter_metadata_t*, i32 (i8**)*)* %func, i64 0, metadata !1665, metadata !2613), !dbg !6552
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1666, metadata !2613), !dbg !6553
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1674, metadata !2613) #2, !dbg !6554
  tail call void @llvm.dbg.value(metadata %struct.pthread_mutex_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::list_head_t", %"struct.Halide::Runtime::Internal::list_head_t"* @_ZN6Halide7Runtime8Internal9list_headE, i32 0, i32 0), i64 0, metadata !1675, metadata !2613) #2, !dbg !6556
  tail call void @halide_mutex_lock(%struct.pthread_mutex_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::list_head_t", %"struct.Halide::Runtime::Internal::list_head_t"* @_ZN6Halide7Runtime8Internal9list_headE, i32 0, i32 0)) #6, !dbg !6557
  %f.0.15 = load %struct._halide_runtime_internal_registered_filter_t*, %struct._halide_runtime_internal_registered_filter_t** getelementptr inbounds (%"struct.Halide::Runtime::Internal::list_head_t", %"struct.Halide::Runtime::Internal::list_head_t"* @_ZN6Halide7Runtime8Internal9list_headE, i32 0, i32 1), align 8, !dbg !6558
  %cmp.16 = icmp eq %struct._halide_runtime_internal_registered_filter_t* %f.0.15, null, !dbg !6559
  br i1 %cmp.16, label %cleanup.2, label %for.body, !dbg !6560

for.body:                                         ; preds = %entry, %for.inc
  %f.017 = phi %struct._halide_runtime_internal_registered_filter_t* [ %f.0, %for.inc ], [ %f.0.15, %entry ]
  %metadata = getelementptr inbounds %struct._halide_runtime_internal_registered_filter_t, %struct._halide_runtime_internal_registered_filter_t* %f.017, i32 0, i32 1, !dbg !6561
  %0 = load %struct.halide_filter_metadata_t*, %struct.halide_filter_metadata_t** %metadata, align 4, !dbg !6561, !tbaa !6562
  %argv_func = getelementptr inbounds %struct._halide_runtime_internal_registered_filter_t, %struct._halide_runtime_internal_registered_filter_t* %f.017, i32 0, i32 2, !dbg !6563
  %1 = load i32 (i8**)*, i32 (i8**)** %argv_func, align 4, !dbg !6563, !tbaa !6564
  %call = tail call i32 %func(i8* %enumerate_context, %struct.halide_filter_metadata_t* %0, i32 (i8**)* %1) #6, !dbg !6565
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1669, metadata !2613), !dbg !6566
  %cmp1 = icmp eq i32 %call, 0, !dbg !6567
  br i1 %cmp1, label %for.inc, label %cleanup.2

for.inc:                                          ; preds = %for.body
  %2 = bitcast %struct._halide_runtime_internal_registered_filter_t* %f.017 to %struct._halide_runtime_internal_registered_filter_t**, !dbg !6569
  %f.0 = load %struct._halide_runtime_internal_registered_filter_t*, %struct._halide_runtime_internal_registered_filter_t** %2, align 4, !dbg !6558
  %cmp = icmp eq %struct._halide_runtime_internal_registered_filter_t* %f.0, null, !dbg !6559
  br i1 %cmp, label %cleanup.2, label %for.body, !dbg !6560

cleanup.2:                                        ; preds = %for.body, %for.inc, %entry
  %cleanup.dest.slot.1 = phi i32 [ 0, %entry ], [ %call, %for.body ], [ 0, %for.inc ]
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1666, metadata !2613), !dbg !6553
  tail call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::ScopedMutexLock"* undef, i64 0, metadata !1678, metadata !2613) #2, !dbg !6570
  tail call void @halide_mutex_unlock(%struct.pthread_mutex_t* getelementptr inbounds (%"struct.Halide::Runtime::Internal::list_head_t", %"struct.Halide::Runtime::Internal::list_head_t"* @_ZN6Halide7Runtime8Internal9list_headE, i32 0, i32 0)) #6, !dbg !6572
  ret i32 %cleanup.dest.slot.1, !dbg !6573
}

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal21halide_use_jit_moduleEv() #0 {
entry:
  ret void, !dbg !6574
}

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal25halide_release_jit_moduleEv() #0 {
entry:
  ret void, !dbg !6575
}

; Function Attrs: nounwind
define weak i32 @halide_renderscript_acquire_context(i8* %user_context, i8** %dev, i8** %ctx, i1 zeroext %create) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2241, metadata !2613), !dbg !6576
  tail call void @llvm.dbg.value(metadata i8** %dev, i64 0, metadata !2242, metadata !2613), !dbg !6577
  tail call void @llvm.dbg.value(metadata i8** %ctx, i64 0, metadata !2243, metadata !2613), !dbg !6578
  tail call void @llvm.dbg.value(metadata i1 %create, i64 0, metadata !2244, metadata !2613), !dbg !6579
  %cmp = icmp eq i8** %dev, null, !dbg !6580
  br i1 %cmp, label %if.then, label %if.end, !dbg !6582

if.then:                                          ; preds = %entry
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.145, i32 0, i32 0)) #6, !dbg !6583
  br label %if.end, !dbg !6583

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp eq i8** %ctx, null, !dbg !6585
  br i1 %cmp1, label %if.then.2, label %while.cond, !dbg !6587

if.then.2:                                        ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.146, i32 0, i32 0)) #6, !dbg !6588
  br label %while.cond, !dbg !6588

while.cond:                                       ; preds = %if.end, %if.then.2, %while.cond
  %0 = atomicrmw xchg i32* @_ZN6Halide7Runtime8Internal12Renderscript11thread_lockE, i32 1 seq_cst, !dbg !6590
  %tobool = icmp eq i32 %0, 0, !dbg !6590
  br i1 %tobool, label %if.end.7, label %while.cond, !dbg !6593

if.end.7:                                         ; preds = %while.cond
  %1 = load i8*, i8** @_ZN6Halide7Runtime8Internal12Renderscript7contextE, align 4, !dbg !6594, !tbaa !2768
  %cmp8.not = icmp ne i8* %1, null, !dbg !6595
  %create.not = xor i1 %create, true, !dbg !6595
  %brmerge = or i1 %cmp8.not, %create.not, !dbg !6595
  br i1 %brmerge, label %if.end.14, label %if.then.10, !dbg !6595

if.then.10:                                       ; preds = %if.end.7
  %call = tail call i32 @_ZN6Halide7Runtime8Internal12Renderscript27create_renderscript_contextEPvPS3_S4_(i8* %user_context, i8** nonnull @_ZN6Halide7Runtime8Internal12Renderscript6deviceE, i8** nonnull @_ZN6Halide7Runtime8Internal12Renderscript7contextE) #7, !dbg !6596
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !2245, metadata !2613), !dbg !6597
  %cmp11 = icmp eq i32 %call, 0, !dbg !6598
  br i1 %cmp11, label %if.end.14, label %if.then.12, !dbg !6600

if.then.12:                                       ; preds = %if.then.10
  store atomic i32 0, i32* @_ZN6Halide7Runtime8Internal12Renderscript11thread_lockE release, align 4, !dbg !6601
  br label %return

if.end.14:                                        ; preds = %if.then.10, %if.end.7
  %2 = load i32, i32* bitcast (i8** @_ZN6Halide7Runtime8Internal12Renderscript6deviceE to i32*), align 4, !dbg !6603, !tbaa !2768
  %3 = bitcast i8** %dev to i32*, !dbg !6604
  store i32 %2, i32* %3, align 4, !dbg !6604, !tbaa !2768
  %4 = load i32, i32* bitcast (i8** @_ZN6Halide7Runtime8Internal12Renderscript7contextE to i32*), align 4, !dbg !6605, !tbaa !2768
  %5 = bitcast i8** %ctx to i32*, !dbg !6606
  store i32 %4, i32* %5, align 4, !dbg !6606, !tbaa !2768
  br label %return, !dbg !6607

return:                                           ; preds = %if.end.14, %if.then.12
  %retval.1 = phi i32 [ 0, %if.end.14 ], [ %call, %if.then.12 ]
  ret i32 %retval.1, !dbg !6608
}

; Function Attrs: nounwind
define linkonce i32 @_ZN6Halide7Runtime8Internal12Renderscript27create_renderscript_contextEPvPS3_S4_(i8* %user_context, i8** %dev, i8** %ctx) #0 {
entry:
  %buf.i = alloca [256 x i8], align 1
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2276, metadata !2613), !dbg !6609
  tail call void @llvm.dbg.value(metadata i8** %dev, i64 0, metadata !2277, metadata !2613), !dbg !6610
  tail call void @llvm.dbg.value(metadata i8** %ctx, i64 0, metadata !2278, metadata !2613), !dbg !6611
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2279, metadata !2613), !dbg !6612
  tail call void @llvm.dbg.value(metadata i32 21, i64 0, metadata !2280, metadata !2613), !dbg !6613
  %call = tail call noalias i8* @_Znwj(i32 304) #8, !dbg !6614
  store i8* %call, i8** bitcast (%struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE to i8**), align 4, !dbg !6615, !tbaa !2768
  %call1 = tail call i8* @memset(i8* %call, i32 0, i32 304) #6, !dbg !6616
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !2281, metadata !2613), !dbg !6617
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.147, i32 0, i32 0), i64 0, metadata !2428, metadata !2613) #2, !dbg !6618
  %0 = getelementptr inbounds [256 x i8], [256 x i8]* %buf.i, i32 0, i32 0, !dbg !6621
  call void @llvm.lifetime.start(i64 256, i8* %0) #2, !dbg !6621
  %call.i = call i32 @_ZN6Halide7Runtime8Internal12Renderscript12property_getEPKcPcS4_(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.147, i32 0, i32 0), i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.278, i32 0, i32 0)) #6, !dbg !6622
  %call2.i = call i32 @atoi(i8* %0) #6, !dbg !6623
  call void @llvm.lifetime.end(i64 256, i8* %0) #2, !dbg !6624
  %cmp = icmp eq i32 %call2.i, 0, !dbg !6625
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf.i, metadata !2429, metadata !2613), !dbg !6626
  br i1 %cmp, label %if.then, label %if.then.5, !dbg !6627

if.then:                                          ; preds = %entry
  %call3 = call zeroext i1 @_ZN6Halide7Runtime8Internal12Renderscript7Context6loadSOEPKc(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7.148, i32 0, i32 0)) #7, !dbg !6628
  br i1 %call3, label %if.end.12, label %if.then.5, !dbg !6630

if.then.5:                                        ; preds = %if.then, %entry
  %call6 = call zeroext i1 @_ZN6Halide7Runtime8Internal12Renderscript7Context6loadSOEPKc(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8.149, i32 0, i32 0)) #7, !dbg !6631
  br i1 %call6, label %if.end.12, label %if.then.9, !dbg !6635

if.then.9:                                        ; preds = %if.then.5
  %call10 = call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10.151, i32 0, i32 0)) #6, !dbg !6636
  br label %cleanup, !dbg !6638

if.end.12:                                        ; preds = %if.then.5, %if.then
  %1 = load %struct.dispatchTable*, %struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE, align 4, !dbg !6639, !tbaa !2768
  %DeviceCreate = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %1, i32 0, i32 5, !dbg !6640
  %2 = load i8* ()*, i8* ()** %DeviceCreate, align 4, !dbg !6640, !tbaa !6641
  %call13 = call i8* %2() #6, !dbg !6639
  store i8* %call13, i8** %dev, align 4, !dbg !6643, !tbaa !2768
  %cmp14 = icmp eq i8* %call13, null, !dbg !6644
  br i1 %cmp14, label %if.then.15, label %if.end.17, !dbg !6646

if.then.15:                                       ; preds = %if.end.12
  %call16 = call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11.152, i32 0, i32 0)) #6, !dbg !6647
  br label %cleanup, !dbg !6649

if.end.17:                                        ; preds = %if.end.12
  %call18 = call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12.153, i32 0, i32 0), i8* %call13) #6, !dbg !6650
  %3 = load %struct.dispatchTable*, %struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE, align 4, !dbg !6651, !tbaa !2768
  %ContextCreate = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %3, i32 0, i32 8, !dbg !6652
  %4 = load i8* (i8*, i32, i32, i32, i32)*, i8* (i8*, i32, i32, i32, i32)** %ContextCreate, align 4, !dbg !6652, !tbaa !6653
  %5 = load i8*, i8** %dev, align 4, !dbg !6654, !tbaa !2768
  %call23 = call i8* %4(i8* %5, i32 0, i32 21, i32 0, i32 0) #6, !dbg !6651
  store i8* %call23, i8** %ctx, align 4, !dbg !6655, !tbaa !2768
  %cmp24 = icmp eq i8* %call23, null, !dbg !6656
  br i1 %cmp24, label %if.then.25, label %if.end.27, !dbg !6658

if.then.25:                                       ; preds = %if.end.17
  %call26 = call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.154, i32 0, i32 0)) #6, !dbg !6659
  br label %cleanup, !dbg !6661

if.end.27:                                        ; preds = %if.end.17
  %call28 = call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15.155, i32 0, i32 0), i8* %call23) #6, !dbg !6662
  br label %cleanup, !dbg !6663

cleanup:                                          ; preds = %if.end.27, %if.then.25, %if.then.15, %if.then.9
  %retval.0 = phi i32 [ -1, %if.then.9 ], [ -1, %if.then.15 ], [ -1, %if.then.25 ], [ 0, %if.end.27 ]
  ret i32 %retval.0, !dbg !6664
}

; Function Attrs: nounwind
define weak i32 @halide_renderscript_release_context(i8* %user_context) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2250, metadata !2613), !dbg !6665
  store atomic i32 0, i32* @_ZN6Halide7Runtime8Internal12Renderscript11thread_lockE release, align 4, !dbg !6666
  ret i32 0, !dbg !6667
}

; Function Attrs: nounwind
define weak void @halide_set_renderscript_cache_dir(i8* %c) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %c, i64 0, metadata !2255, metadata !2613), !dbg !6668
  store i8* %c, i8** @halide_renderscript_cache_dir, align 4, !dbg !6669, !tbaa !2768
  ret void, !dbg !6670
}

; Function Attrs: nounwind
define weak i8* @halide_get_renderscript_cache_dir(i8* %user_context) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2260, metadata !2613), !dbg !6671
  %0 = load i8*, i8** @halide_renderscript_cache_dir, align 4, !dbg !6672, !tbaa !2768
  %tobool = icmp eq i8* %0, null, !dbg !6672
  br i1 %tobool, label %if.else, label %return, !dbg !6673

if.else:                                          ; preds = %entry
  %call = tail call i8* @getenv(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.156, i32 0, i32 0)) #6, !dbg !6674
  tail call void @llvm.dbg.value(metadata i8* %call, i64 0, metadata !2261, metadata !2613), !dbg !6675
  %tobool1 = icmp eq i8* %call, null, !dbg !6676
  %.call = select i1 %tobool1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.157, i32 0, i32 0), i8* %call, !dbg !6678
  br label %return

return:                                           ; preds = %if.else, %entry
  %retval.1 = phi i8* [ %.call, %if.else ], [ %0, %entry ]
  ret i8* %retval.1, !dbg !6680
}

; Function Attrs: nounwind
define linkonce i32 @_ZN6Halide7Runtime8Internal12Renderscript12property_getEPKcPcS4_(i8* %key, i8* %value, i8* %default_value) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %key, i64 0, metadata !2268, metadata !2613), !dbg !6681
  tail call void @llvm.dbg.value(metadata i8* %value, i64 0, metadata !2269, metadata !2613), !dbg !6682
  tail call void @llvm.dbg.value(metadata i8* %default_value, i64 0, metadata !2270, metadata !2613), !dbg !6683
  %call = tail call i32 @__system_property_get(i8* %key, i8* %value) #6, !dbg !6684
  tail call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !2271, metadata !2613), !dbg !6685
  %cmp = icmp sgt i32 %call, 0, !dbg !6686
  %tobool = icmp eq i8* %default_value, null, !dbg !6688
  %or.cond = or i1 %tobool, %cmp, !dbg !6690
  br i1 %or.cond, label %cleanup, label %if.then.1, !dbg !6690

if.then.1:                                        ; preds = %entry
  %call2 = tail call i32 @strlen(i8* %default_value) #6, !dbg !6691
  tail call void @llvm.dbg.value(metadata i32 %call2, i64 0, metadata !2271, metadata !2613), !dbg !6685
  %add = add nsw i32 %call2, 1, !dbg !6693
  %call3 = tail call i8* @memcpy(i8* %value, i8* %default_value, i32 %add) #6, !dbg !6694
  br label %cleanup, !dbg !6695

cleanup:                                          ; preds = %if.then.1, %entry
  %retval.0 = phi i32 [ %call, %entry ], [ %call2, %if.then.1 ]
  ret i32 %retval.0, !dbg !6696
}

declare i32 @__system_property_get(i8*, i8*) #1

; Function Attrs: nounwind readonly
declare i32 @strlen(i8* nocapture) #4

; Function Attrs: nobuiltin
declare noalias i8* @_Znwj(i32) #5

; Function Attrs: nounwind
define linkonce zeroext i1 @_Z11loadSymbolsPvR13dispatchTablei(i8* %handle, %struct.dispatchTable* dereferenceable(304) %dispatchTab, i32 %device_api) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %handle, i64 0, metadata !2287, metadata !2613), !dbg !6697
  tail call void @llvm.dbg.value(metadata %struct.dispatchTable* %dispatchTab, i64 0, metadata !2288, metadata !2613), !dbg !6698
  tail call void @llvm.dbg.value(metadata i32 %device_api, i64 0, metadata !2289, metadata !2613), !dbg !6699
  %call = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.158, i32 0, i32 0)) #6, !dbg !6700
  %AllocationGetType = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 1, !dbg !6701
  %0 = bitcast i8* (i8*, i8*)** %AllocationGetType to i8**, !dbg !6702
  store i8* %call, i8** %0, align 4, !dbg !6702, !tbaa !6703
  %cmp = icmp eq i8* %call, null, !dbg !6704
  br i1 %cmp, label %if.then, label %if.end, !dbg !6706

if.then:                                          ; preds = %entry
  %call2 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.17.159, i32 0, i32 0)) #6, !dbg !6707
  br label %return, !dbg !6709

if.end:                                           ; preds = %entry
  %call3 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.160, i32 0, i32 0)) #6, !dbg !6710
  %TypeGetNativeData = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 2, !dbg !6711
  %1 = bitcast void (i8*, i8*, i32*, i32)** %TypeGetNativeData to i8**, !dbg !6712
  store i8* %call3, i8** %1, align 4, !dbg !6712, !tbaa !6713
  %cmp5 = icmp eq i8* %call3, null, !dbg !6714
  br i1 %cmp5, label %if.then.6, label %if.end.8, !dbg !6716

if.then.6:                                        ; preds = %if.end
  %call7 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.19.161, i32 0, i32 0)) #6, !dbg !6717
  br label %return, !dbg !6719

if.end.8:                                         ; preds = %if.end
  %call9 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20.162, i32 0, i32 0)) #6, !dbg !6720
  %ElementGetNativeData = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 3, !dbg !6721
  %2 = bitcast void (i8*, i8*, i32*, i32)** %ElementGetNativeData to i8**, !dbg !6722
  store i8* %call9, i8** %2, align 4, !dbg !6722, !tbaa !6723
  %cmp11 = icmp eq i8* %call9, null, !dbg !6724
  br i1 %cmp11, label %if.then.12, label %if.end.14, !dbg !6726

if.then.12:                                       ; preds = %if.end.8
  %call13 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.21.163, i32 0, i32 0)) #6, !dbg !6727
  br label %return, !dbg !6729

if.end.14:                                        ; preds = %if.end.8
  %call15 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.22.164, i32 0, i32 0)) #6, !dbg !6730
  %ElementGetSubElements = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 4, !dbg !6731
  %3 = bitcast void (i8*, i8*, i32*, i8**, i32*, i32)** %ElementGetSubElements to i8**, !dbg !6732
  store i8* %call15, i8** %3, align 4, !dbg !6732, !tbaa !6733
  %cmp17 = icmp eq i8* %call15, null, !dbg !6734
  br i1 %cmp17, label %if.then.18, label %if.end.20, !dbg !6736

if.then.18:                                       ; preds = %if.end.14
  %call19 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.23.165, i32 0, i32 0)) #6, !dbg !6737
  br label %return, !dbg !6739

if.end.20:                                        ; preds = %if.end.14
  %call21 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24.166, i32 0, i32 0)) #6, !dbg !6740
  %DeviceCreate = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 5, !dbg !6741
  %4 = bitcast i8* ()** %DeviceCreate to i8**, !dbg !6742
  store i8* %call21, i8** %4, align 4, !dbg !6742, !tbaa !6641
  %cmp23 = icmp eq i8* %call21, null, !dbg !6743
  br i1 %cmp23, label %if.then.24, label %if.end.26, !dbg !6745

if.then.24:                                       ; preds = %if.end.20
  %call25 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.25.167, i32 0, i32 0)) #6, !dbg !6746
  br label %return, !dbg !6748

if.end.26:                                        ; preds = %if.end.20
  %call27 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26.168, i32 0, i32 0)) #6, !dbg !6749
  %DeviceDestroy = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 6, !dbg !6750
  %5 = bitcast void (i8*)** %DeviceDestroy to i8**, !dbg !6751
  store i8* %call27, i8** %5, align 4, !dbg !6751, !tbaa !6752
  %cmp29 = icmp eq i8* %call27, null, !dbg !6753
  br i1 %cmp29, label %if.then.30, label %if.end.32, !dbg !6755

if.then.30:                                       ; preds = %if.end.26
  %call31 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.27.169, i32 0, i32 0)) #6, !dbg !6756
  br label %return, !dbg !6758

if.end.32:                                        ; preds = %if.end.26
  %call33 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.170, i32 0, i32 0)) #6, !dbg !6759
  %DeviceSetConfig = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 7, !dbg !6760
  %6 = bitcast void (i8*, i32, i32)** %DeviceSetConfig to i8**, !dbg !6761
  store i8* %call33, i8** %6, align 4, !dbg !6761, !tbaa !6762
  %cmp35 = icmp eq i8* %call33, null, !dbg !6763
  br i1 %cmp35, label %if.then.36, label %if.end.38, !dbg !6765

if.then.36:                                       ; preds = %if.end.32
  %call37 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.29.171, i32 0, i32 0)) #6, !dbg !6766
  br label %return, !dbg !6768

if.end.38:                                        ; preds = %if.end.32
  %call39 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30.172, i32 0, i32 0)) #6, !dbg !6769
  %ContextCreate = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 8, !dbg !6770
  %7 = bitcast i8* (i8*, i32, i32, i32, i32)** %ContextCreate to i8**, !dbg !6771
  store i8* %call39, i8** %7, align 4, !dbg !6771, !tbaa !6653
  %cmp41 = icmp eq i8* %call39, null, !dbg !6772
  br i1 %cmp41, label %if.then.42, label %if.end.44, !dbg !6774

if.then.42:                                       ; preds = %if.end.38
  %call43 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.31.173, i32 0, i32 0)) #6, !dbg !6775
  br label %return, !dbg !6777

if.end.44:                                        ; preds = %if.end.38
  %call45 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32.174, i32 0, i32 0)) #6, !dbg !6778
  %GetName = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 9, !dbg !6779
  %8 = bitcast void (i8*, i8*, i8**)** %GetName to i8**, !dbg !6780
  store i8* %call45, i8** %8, align 4, !dbg !6780, !tbaa !6781
  %cmp47 = icmp eq i8* %call45, null, !dbg !6782
  br i1 %cmp47, label %if.then.48, label %if.end.50, !dbg !6784

if.then.48:                                       ; preds = %if.end.44
  %call49 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.33.175, i32 0, i32 0)) #6, !dbg !6785
  br label %return, !dbg !6787

if.end.50:                                        ; preds = %if.end.44
  %call51 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34.176, i32 0, i32 0)) #6, !dbg !6788
  %ContextDestroy = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 10, !dbg !6789
  %9 = bitcast void (i8*)** %ContextDestroy to i8**, !dbg !6790
  store i8* %call51, i8** %9, align 4, !dbg !6790, !tbaa !6791
  %cmp53 = icmp eq i8* %call51, null, !dbg !6792
  br i1 %cmp53, label %if.then.54, label %if.end.56, !dbg !6794

if.then.54:                                       ; preds = %if.end.50
  %call55 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.35.177, i32 0, i32 0)) #6, !dbg !6795
  br label %return, !dbg !6797

if.end.56:                                        ; preds = %if.end.50
  %call57 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.36.178, i32 0, i32 0)) #6, !dbg !6798
  %ContextGetMessage = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 11, !dbg !6799
  %10 = bitcast i32 (i8*, i8*, i32, i32*, i32, i32*, i32)** %ContextGetMessage to i8**, !dbg !6800
  store i8* %call57, i8** %10, align 4, !dbg !6800, !tbaa !6801
  %cmp59 = icmp eq i8* %call57, null, !dbg !6802
  br i1 %cmp59, label %if.then.60, label %if.end.62, !dbg !6804

if.then.60:                                       ; preds = %if.end.56
  %call61 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.37.179, i32 0, i32 0)) #6, !dbg !6805
  br label %return, !dbg !6807

if.end.62:                                        ; preds = %if.end.56
  %call63 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.38.180, i32 0, i32 0)) #6, !dbg !6808
  %ContextPeekMessage = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 12, !dbg !6809
  %11 = bitcast i32 (i8*, i32*, i32, i32*, i32)** %ContextPeekMessage to i8**, !dbg !6810
  store i8* %call63, i8** %11, align 4, !dbg !6810, !tbaa !6811
  %cmp65 = icmp eq i8* %call63, null, !dbg !6812
  br i1 %cmp65, label %if.then.66, label %if.end.68, !dbg !6814

if.then.66:                                       ; preds = %if.end.62
  %call67 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.39.181, i32 0, i32 0)) #6, !dbg !6815
  br label %return, !dbg !6817

if.end.68:                                        ; preds = %if.end.62
  %call69 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.40.182, i32 0, i32 0)) #6, !dbg !6818
  %ContextSendMessage = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 13, !dbg !6819
  %12 = bitcast void (i8*, i32, i8*, i32)** %ContextSendMessage to i8**, !dbg !6820
  store i8* %call69, i8** %12, align 4, !dbg !6820, !tbaa !6821
  %cmp71 = icmp eq i8* %call69, null, !dbg !6822
  br i1 %cmp71, label %if.then.72, label %if.end.74, !dbg !6824

if.then.72:                                       ; preds = %if.end.68
  %call73 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.41.183, i32 0, i32 0)) #6, !dbg !6825
  br label %return, !dbg !6827

if.end.74:                                        ; preds = %if.end.68
  %call75 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.42.184, i32 0, i32 0)) #6, !dbg !6828
  %ContextInitToClient = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 14, !dbg !6829
  %13 = bitcast void (i8*)** %ContextInitToClient to i8**, !dbg !6830
  store i8* %call75, i8** %13, align 4, !dbg !6830, !tbaa !6831
  %cmp77 = icmp eq i8* %call75, null, !dbg !6832
  br i1 %cmp77, label %if.then.78, label %if.end.80, !dbg !6834

if.then.78:                                       ; preds = %if.end.74
  %call79 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.43.185, i32 0, i32 0)) #6, !dbg !6835
  br label %return, !dbg !6837

if.end.80:                                        ; preds = %if.end.74
  %call81 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.44.186, i32 0, i32 0)) #6, !dbg !6838
  %ContextDeinitToClient = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 15, !dbg !6839
  %14 = bitcast void (i8*)** %ContextDeinitToClient to i8**, !dbg !6840
  store i8* %call81, i8** %14, align 4, !dbg !6840, !tbaa !6841
  %cmp83 = icmp eq i8* %call81, null, !dbg !6842
  br i1 %cmp83, label %if.then.84, label %if.end.86, !dbg !6844

if.then.84:                                       ; preds = %if.end.80
  %call85 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.45.187, i32 0, i32 0)) #6, !dbg !6845
  br label %return, !dbg !6847

if.end.86:                                        ; preds = %if.end.80
  %call87 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.46, i32 0, i32 0)) #6, !dbg !6848
  %TypeCreate = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 16, !dbg !6849
  %15 = bitcast i8* (i8*, i8*, i32, i32, i32, i1, i1, i32)** %TypeCreate to i8**, !dbg !6850
  store i8* %call87, i8** %15, align 4, !dbg !6850, !tbaa !6851
  %cmp89 = icmp eq i8* %call87, null, !dbg !6852
  br i1 %cmp89, label %if.then.90, label %if.end.92, !dbg !6854

if.then.90:                                       ; preds = %if.end.86
  %call91 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.47, i32 0, i32 0)) #6, !dbg !6855
  br label %return, !dbg !6857

if.end.92:                                        ; preds = %if.end.86
  %call93 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48, i32 0, i32 0)) #6, !dbg !6858
  %AllocationCreateTyped = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 17, !dbg !6859
  %16 = bitcast i8* (i8*, i8*, i32, i32, i32)** %AllocationCreateTyped to i8**, !dbg !6860
  store i8* %call93, i8** %16, align 4, !dbg !6860, !tbaa !6861
  %cmp95 = icmp eq i8* %call93, null, !dbg !6862
  br i1 %cmp95, label %if.then.96, label %if.end.98, !dbg !6864

if.then.96:                                       ; preds = %if.end.92
  %call97 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.49, i32 0, i32 0)) #6, !dbg !6865
  br label %return, !dbg !6867

if.end.98:                                        ; preds = %if.end.92
  %call99 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.50, i32 0, i32 0)) #6, !dbg !6868
  %AllocationCreateFromBitmap = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 18, !dbg !6869
  %17 = bitcast i8* (i8*, i8*, i32, i8*, i32, i32)** %AllocationCreateFromBitmap to i8**, !dbg !6870
  store i8* %call99, i8** %17, align 4, !dbg !6870, !tbaa !6871
  %cmp101 = icmp eq i8* %call99, null, !dbg !6872
  br i1 %cmp101, label %if.then.102, label %if.end.104, !dbg !6874

if.then.102:                                      ; preds = %if.end.98
  %call103 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.51, i32 0, i32 0)) #6, !dbg !6875
  br label %return, !dbg !6877

if.end.104:                                       ; preds = %if.end.98
  %call105 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.52, i32 0, i32 0)) #6, !dbg !6878
  %AllocationCubeCreateFromBitmap = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 19, !dbg !6879
  %18 = bitcast i8* (i8*, i8*, i32, i8*, i32, i32)** %AllocationCubeCreateFromBitmap to i8**, !dbg !6880
  store i8* %call105, i8** %18, align 4, !dbg !6880, !tbaa !6881
  %cmp107 = icmp eq i8* %call105, null, !dbg !6882
  br i1 %cmp107, label %if.then.108, label %if.end.110, !dbg !6884

if.then.108:                                      ; preds = %if.end.104
  %call109 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.53, i32 0, i32 0)) #6, !dbg !6885
  br label %return, !dbg !6887

if.end.110:                                       ; preds = %if.end.104
  %call111 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.54, i32 0, i32 0)) #6, !dbg !6888
  %AllocationGetSurface = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 20, !dbg !6889
  %19 = bitcast i8* (i8*, i8*)** %AllocationGetSurface to i8**, !dbg !6890
  store i8* %call111, i8** %19, align 4, !dbg !6890, !tbaa !6891
  %cmp113 = icmp eq i8* %call111, null, !dbg !6892
  br i1 %cmp113, label %if.then.114, label %if.end.116, !dbg !6894

if.then.114:                                      ; preds = %if.end.110
  %call115 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.55, i32 0, i32 0)) #6, !dbg !6895
  br label %return, !dbg !6897

if.end.116:                                       ; preds = %if.end.110
  %call117 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.56, i32 0, i32 0)) #6, !dbg !6898
  %AllocationSetSurface = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 21, !dbg !6899
  %20 = bitcast void (i8*, i8*, i8*)** %AllocationSetSurface to i8**, !dbg !6900
  store i8* %call117, i8** %20, align 4, !dbg !6900, !tbaa !6901
  %cmp119 = icmp eq i8* %call117, null, !dbg !6902
  br i1 %cmp119, label %if.then.120, label %if.end.122, !dbg !6904

if.then.120:                                      ; preds = %if.end.116
  %call121 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.57, i32 0, i32 0)) #6, !dbg !6905
  br label %return, !dbg !6907

if.end.122:                                       ; preds = %if.end.116
  %call123 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.58, i32 0, i32 0)) #6, !dbg !6908
  %ContextFinish = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 26, !dbg !6909
  %21 = bitcast void (i8*)** %ContextFinish to i8**, !dbg !6910
  store i8* %call123, i8** %21, align 4, !dbg !6910, !tbaa !6911
  %cmp125 = icmp eq i8* %call123, null, !dbg !6912
  br i1 %cmp125, label %if.then.126, label %if.end.128, !dbg !6914

if.then.126:                                      ; preds = %if.end.122
  %call127 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.59, i32 0, i32 0)) #6, !dbg !6915
  br label %return, !dbg !6917

if.end.128:                                       ; preds = %if.end.122
  %call129 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.60, i32 0, i32 0)) #6, !dbg !6918
  %ContextDump = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 27, !dbg !6919
  %22 = bitcast void (i8*, i32)** %ContextDump to i8**, !dbg !6920
  store i8* %call129, i8** %22, align 4, !dbg !6920, !tbaa !6921
  %cmp131 = icmp eq i8* %call129, null, !dbg !6922
  br i1 %cmp131, label %if.then.132, label %if.end.134, !dbg !6924

if.then.132:                                      ; preds = %if.end.128
  %call133 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.61, i32 0, i32 0)) #6, !dbg !6925
  br label %return, !dbg !6927

if.end.134:                                       ; preds = %if.end.128
  %call135 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.62, i32 0, i32 0)) #6, !dbg !6928
  %ContextSetPriority = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 28, !dbg !6929
  %23 = bitcast void (i8*, i32)** %ContextSetPriority to i8**, !dbg !6930
  store i8* %call135, i8** %23, align 4, !dbg !6930, !tbaa !6931
  %cmp137 = icmp eq i8* %call135, null, !dbg !6932
  br i1 %cmp137, label %if.then.138, label %if.end.140, !dbg !6934

if.then.138:                                      ; preds = %if.end.134
  %call139 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.63, i32 0, i32 0)) #6, !dbg !6935
  br label %return, !dbg !6937

if.end.140:                                       ; preds = %if.end.134
  %call141 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.64, i32 0, i32 0)) #6, !dbg !6938
  %AssignName = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 29, !dbg !6939
  %24 = bitcast void (i8*, i8*, i8*, i32)** %AssignName to i8**, !dbg !6940
  store i8* %call141, i8** %24, align 4, !dbg !6940, !tbaa !6941
  %cmp143 = icmp eq i8* %call141, null, !dbg !6942
  br i1 %cmp143, label %if.then.144, label %if.end.146, !dbg !6944

if.then.144:                                      ; preds = %if.end.140
  %call145 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.65, i32 0, i32 0)) #6, !dbg !6945
  br label %return, !dbg !6947

if.end.146:                                       ; preds = %if.end.140
  %call147 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.66, i32 0, i32 0)) #6, !dbg !6948
  %ObjDestroy = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 30, !dbg !6949
  %25 = bitcast void (i8*, i8*)** %ObjDestroy to i8**, !dbg !6950
  store i8* %call147, i8** %25, align 4, !dbg !6950, !tbaa !6951
  %cmp149 = icmp eq i8* %call147, null, !dbg !6952
  br i1 %cmp149, label %if.then.150, label %if.end.152, !dbg !6954

if.then.150:                                      ; preds = %if.end.146
  %call151 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.67, i32 0, i32 0)) #6, !dbg !6955
  br label %return, !dbg !6957

if.end.152:                                       ; preds = %if.end.146
  %call153 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.68, i32 0, i32 0)) #6, !dbg !6958
  %ElementCreate = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 31, !dbg !6959
  %26 = bitcast i8* (i8*, i32, i32, i1, i32)** %ElementCreate to i8**, !dbg !6960
  store i8* %call153, i8** %26, align 4, !dbg !6960, !tbaa !6961
  %cmp155 = icmp eq i8* %call153, null, !dbg !6962
  br i1 %cmp155, label %if.then.156, label %if.end.158, !dbg !6964

if.then.156:                                      ; preds = %if.end.152
  %call157 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.69, i32 0, i32 0)) #6, !dbg !6965
  br label %return, !dbg !6967

if.end.158:                                       ; preds = %if.end.152
  %call159 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70, i32 0, i32 0)) #6, !dbg !6968
  %ElementCreate2 = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 32, !dbg !6969
  %27 = bitcast i8* (i8*, i8**, i32, i8**, i32, i32*, i32*, i32)** %ElementCreate2 to i8**, !dbg !6970
  store i8* %call159, i8** %27, align 4, !dbg !6970, !tbaa !6971
  %cmp161 = icmp eq i8* %call159, null, !dbg !6972
  br i1 %cmp161, label %if.then.162, label %if.end.164, !dbg !6974

if.then.162:                                      ; preds = %if.end.158
  %call163 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.71, i32 0, i32 0)) #6, !dbg !6975
  br label %return, !dbg !6977

if.end.164:                                       ; preds = %if.end.158
  %call165 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.72, i32 0, i32 0)) #6, !dbg !6978
  %AllocationCopyToBitmap = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 33, !dbg !6979
  %28 = bitcast void (i8*, i8*, i8*, i32)** %AllocationCopyToBitmap to i8**, !dbg !6980
  store i8* %call165, i8** %28, align 4, !dbg !6980, !tbaa !6981
  %cmp167 = icmp eq i8* %call165, null, !dbg !6982
  br i1 %cmp167, label %if.then.168, label %if.end.170, !dbg !6984

if.then.168:                                      ; preds = %if.end.164
  %call169 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.73.188, i32 0, i32 0)) #6, !dbg !6985
  br label %return, !dbg !6987

if.end.170:                                       ; preds = %if.end.164
  %call171 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.74, i32 0, i32 0)) #6, !dbg !6988
  %Allocation1DData = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 34, !dbg !6989
  %29 = bitcast void (i8*, i8*, i32, i32, i32, i8*, i32)** %Allocation1DData to i8**, !dbg !6990
  store i8* %call171, i8** %29, align 4, !dbg !6990, !tbaa !6991
  %cmp173 = icmp eq i8* %call171, null, !dbg !6992
  br i1 %cmp173, label %if.then.174, label %if.end.176, !dbg !6994

if.then.174:                                      ; preds = %if.end.170
  %call175 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.75, i32 0, i32 0)) #6, !dbg !6995
  br label %return, !dbg !6997

if.end.176:                                       ; preds = %if.end.170
  %call177 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.76, i32 0, i32 0)) #6, !dbg !6998
  %Allocation1DElementData = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 35, !dbg !6999
  %30 = bitcast void (i8*, i8*, i32, i32, i8*, i32, i32)** %Allocation1DElementData to i8**, !dbg !7000
  store i8* %call177, i8** %30, align 4, !dbg !7000, !tbaa !7001
  %cmp179 = icmp eq i8* %call177, null, !dbg !7002
  br i1 %cmp179, label %if.then.180, label %if.end.182, !dbg !7004

if.then.180:                                      ; preds = %if.end.176
  %call181 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.77, i32 0, i32 0)) #6, !dbg !7005
  br label %return, !dbg !7007

if.end.182:                                       ; preds = %if.end.176
  %call183 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.78, i32 0, i32 0)) #6, !dbg !7008
  %Allocation2DData = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 37, !dbg !7009
  %31 = bitcast void (i8*, i8*, i32, i32, i32, i32, i32, i32, i8*, i32, i32)** %Allocation2DData to i8**, !dbg !7010
  store i8* %call183, i8** %31, align 4, !dbg !7010, !tbaa !7011
  %cmp185 = icmp eq i8* %call183, null, !dbg !7012
  br i1 %cmp185, label %if.then.186, label %if.end.188, !dbg !7014

if.then.186:                                      ; preds = %if.end.182
  %call187 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.79, i32 0, i32 0)) #6, !dbg !7015
  br label %return, !dbg !7017

if.end.188:                                       ; preds = %if.end.182
  %call189 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.80, i32 0, i32 0)) #6, !dbg !7018
  %Allocation3DData = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 38, !dbg !7019
  %32 = bitcast void (i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32)** %Allocation3DData to i8**, !dbg !7020
  store i8* %call189, i8** %32, align 4, !dbg !7020, !tbaa !7021
  %cmp191 = icmp eq i8* %call189, null, !dbg !7022
  br i1 %cmp191, label %if.then.192, label %if.end.194, !dbg !7024

if.then.192:                                      ; preds = %if.end.188
  %call193 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.81, i32 0, i32 0)) #6, !dbg !7025
  br label %return, !dbg !7027

if.end.194:                                       ; preds = %if.end.188
  %call195 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.82, i32 0, i32 0)) #6, !dbg !7028
  %AllocationGenerateMipmaps = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 39, !dbg !7029
  %33 = bitcast void (i8*, i8*)** %AllocationGenerateMipmaps to i8**, !dbg !7030
  store i8* %call195, i8** %33, align 4, !dbg !7030, !tbaa !7031
  %cmp197 = icmp eq i8* %call195, null, !dbg !7032
  br i1 %cmp197, label %if.then.198, label %if.end.200, !dbg !7034

if.then.198:                                      ; preds = %if.end.194
  %call199 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.83, i32 0, i32 0)) #6, !dbg !7035
  br label %return, !dbg !7037

if.end.200:                                       ; preds = %if.end.194
  %call201 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.84, i32 0, i32 0)) #6, !dbg !7038
  %AllocationRead = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 40, !dbg !7039
  %34 = bitcast void (i8*, i8*, i8*, i32)** %AllocationRead to i8**, !dbg !7040
  store i8* %call201, i8** %34, align 4, !dbg !7040, !tbaa !7041
  %cmp203 = icmp eq i8* %call201, null, !dbg !7042
  br i1 %cmp203, label %if.then.204, label %if.end.206, !dbg !7044

if.then.204:                                      ; preds = %if.end.200
  %call205 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.85, i32 0, i32 0)) #6, !dbg !7045
  br label %return, !dbg !7047

if.end.206:                                       ; preds = %if.end.200
  %call207 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.86, i32 0, i32 0)) #6, !dbg !7048
  %Allocation1DRead = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 41, !dbg !7049
  %35 = bitcast void (i8*, i8*, i32, i32, i32, i8*, i32)** %Allocation1DRead to i8**, !dbg !7050
  store i8* %call207, i8** %35, align 4, !dbg !7050, !tbaa !7051
  %cmp209 = icmp eq i8* %call207, null, !dbg !7052
  br i1 %cmp209, label %if.then.210, label %if.end.212, !dbg !7054

if.then.210:                                      ; preds = %if.end.206
  %call211 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.87, i32 0, i32 0)) #6, !dbg !7055
  br label %return, !dbg !7057

if.end.212:                                       ; preds = %if.end.206
  %call213 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.88, i32 0, i32 0)) #6, !dbg !7058
  %Allocation2DRead = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 43, !dbg !7059
  %36 = bitcast void (i8*, i8*, i32, i32, i32, i32, i32, i32, i8*, i32, i32)** %Allocation2DRead to i8**, !dbg !7060
  store i8* %call213, i8** %36, align 4, !dbg !7060, !tbaa !7061
  %cmp215 = icmp eq i8* %call213, null, !dbg !7062
  br i1 %cmp215, label %if.then.216, label %if.end.218, !dbg !7064

if.then.216:                                      ; preds = %if.end.212
  %call217 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.89.189, i32 0, i32 0)) #6, !dbg !7065
  br label %return, !dbg !7067

if.end.218:                                       ; preds = %if.end.212
  %call219 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.90, i32 0, i32 0)) #6, !dbg !7068
  %AllocationSyncAll = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 45, !dbg !7069
  %37 = bitcast void (i8*, i8*, i32)** %AllocationSyncAll to i8**, !dbg !7070
  store i8* %call219, i8** %37, align 4, !dbg !7070, !tbaa !7071
  %cmp221 = icmp eq i8* %call219, null, !dbg !7072
  br i1 %cmp221, label %if.then.222, label %if.end.224, !dbg !7074

if.then.222:                                      ; preds = %if.end.218
  %call223 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.91, i32 0, i32 0)) #6, !dbg !7075
  br label %return, !dbg !7077

if.end.224:                                       ; preds = %if.end.218
  %call225 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.92, i32 0, i32 0)) #6, !dbg !7078
  %AllocationResize1D = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 46, !dbg !7079
  %38 = bitcast void (i8*, i8*, i32)** %AllocationResize1D to i8**, !dbg !7080
  store i8* %call225, i8** %38, align 4, !dbg !7080, !tbaa !7081
  %cmp227 = icmp eq i8* %call225, null, !dbg !7082
  br i1 %cmp227, label %if.then.228, label %if.end.230, !dbg !7084

if.then.228:                                      ; preds = %if.end.224
  %call229 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.93, i32 0, i32 0)) #6, !dbg !7085
  br label %return, !dbg !7087

if.end.230:                                       ; preds = %if.end.224
  %call231 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.94, i32 0, i32 0)) #6, !dbg !7088
  %AllocationCopy2DRange = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 47, !dbg !7089
  %39 = bitcast void (i8*, i8*, i32, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32)** %AllocationCopy2DRange to i8**, !dbg !7090
  store i8* %call231, i8** %39, align 4, !dbg !7090, !tbaa !7091
  %cmp233 = icmp eq i8* %call231, null, !dbg !7092
  br i1 %cmp233, label %if.then.234, label %if.end.236, !dbg !7094

if.then.234:                                      ; preds = %if.end.230
  %call235 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.95, i32 0, i32 0)) #6, !dbg !7095
  br label %return, !dbg !7097

if.end.236:                                       ; preds = %if.end.230
  %call237 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.96, i32 0, i32 0)) #6, !dbg !7098
  %AllocationCopy3DRange = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 48, !dbg !7099
  %40 = bitcast void (i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32)** %AllocationCopy3DRange to i8**, !dbg !7100
  store i8* %call237, i8** %40, align 4, !dbg !7100, !tbaa !7101
  %cmp239 = icmp eq i8* %call237, null, !dbg !7102
  br i1 %cmp239, label %if.then.240, label %if.end.242, !dbg !7104

if.then.240:                                      ; preds = %if.end.236
  %call241 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.97, i32 0, i32 0)) #6, !dbg !7105
  br label %return, !dbg !7107

if.end.242:                                       ; preds = %if.end.236
  %call243 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.98, i32 0, i32 0)) #6, !dbg !7108
  %SamplerCreate = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 49, !dbg !7109
  %41 = bitcast i8* (i8*, i32, i32, i32, i32, i32, float)** %SamplerCreate to i8**, !dbg !7110
  store i8* %call243, i8** %41, align 4, !dbg !7110, !tbaa !7111
  %cmp245 = icmp eq i8* %call243, null, !dbg !7112
  br i1 %cmp245, label %if.then.246, label %if.end.248, !dbg !7114

if.then.246:                                      ; preds = %if.end.242
  %call247 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.99, i32 0, i32 0)) #6, !dbg !7115
  br label %return, !dbg !7117

if.end.248:                                       ; preds = %if.end.242
  %call249 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.100, i32 0, i32 0)) #6, !dbg !7118
  %ScriptBindAllocation = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 50, !dbg !7119
  %42 = bitcast void (i8*, i8*, i8*, i32)** %ScriptBindAllocation to i8**, !dbg !7120
  store i8* %call249, i8** %42, align 4, !dbg !7120, !tbaa !7121
  %cmp251 = icmp eq i8* %call249, null, !dbg !7122
  br i1 %cmp251, label %if.then.252, label %if.end.254, !dbg !7124

if.then.252:                                      ; preds = %if.end.248
  %call253 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.101, i32 0, i32 0)) #6, !dbg !7125
  br label %return, !dbg !7127

if.end.254:                                       ; preds = %if.end.248
  %call255 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.102, i32 0, i32 0)) #6, !dbg !7128
  %ScriptSetTimeZone = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 51, !dbg !7129
  %43 = bitcast void (i8*, i8*, i8*, i32)** %ScriptSetTimeZone to i8**, !dbg !7130
  store i8* %call255, i8** %43, align 4, !dbg !7130, !tbaa !7131
  %cmp257 = icmp eq i8* %call255, null, !dbg !7132
  br i1 %cmp257, label %if.then.258, label %if.end.260, !dbg !7134

if.then.258:                                      ; preds = %if.end.254
  %call259 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.103, i32 0, i32 0)) #6, !dbg !7135
  br label %return, !dbg !7137

if.end.260:                                       ; preds = %if.end.254
  %call261 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.104.190, i32 0, i32 0)) #6, !dbg !7138
  %ScriptInvoke = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 52, !dbg !7139
  %44 = bitcast void (i8*, i8*, i32)** %ScriptInvoke to i8**, !dbg !7140
  store i8* %call261, i8** %44, align 4, !dbg !7140, !tbaa !7141
  %cmp263 = icmp eq i8* %call261, null, !dbg !7142
  br i1 %cmp263, label %if.then.264, label %if.end.266, !dbg !7144

if.then.264:                                      ; preds = %if.end.260
  %call265 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.105, i32 0, i32 0)) #6, !dbg !7145
  br label %return, !dbg !7147

if.end.266:                                       ; preds = %if.end.260
  %call267 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.106, i32 0, i32 0)) #6, !dbg !7148
  %ScriptInvokeV = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 53, !dbg !7149
  %45 = bitcast void (i8*, i8*, i32, i8*, i32)** %ScriptInvokeV to i8**, !dbg !7150
  store i8* %call267, i8** %45, align 4, !dbg !7150, !tbaa !7151
  %cmp269 = icmp eq i8* %call267, null, !dbg !7152
  br i1 %cmp269, label %if.then.270, label %if.end.272, !dbg !7154

if.then.270:                                      ; preds = %if.end.266
  %call271 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.107, i32 0, i32 0)) #6, !dbg !7155
  br label %return, !dbg !7157

if.end.272:                                       ; preds = %if.end.266
  %call273 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.108, i32 0, i32 0)) #6, !dbg !7158
  %ScriptForEach = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 54, !dbg !7159
  %46 = bitcast void (i8*, i8*, i32, i8*, i8*, i8*, i32, %struct.RsScriptCall*, i32)** %ScriptForEach to i8**, !dbg !7160
  store i8* %call273, i8** %46, align 4, !dbg !7160, !tbaa !7161
  %cmp275 = icmp eq i8* %call273, null, !dbg !7162
  br i1 %cmp275, label %if.then.276, label %if.end.278, !dbg !7164

if.then.276:                                      ; preds = %if.end.272
  %call277 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.109, i32 0, i32 0)) #6, !dbg !7165
  br label %return, !dbg !7167

if.end.278:                                       ; preds = %if.end.272
  %call279 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.110, i32 0, i32 0)) #6, !dbg !7168
  %ScriptSetVarI = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 55, !dbg !7169
  %47 = bitcast void (i8*, i8*, i32, i32)** %ScriptSetVarI to i8**, !dbg !7170
  store i8* %call279, i8** %47, align 4, !dbg !7170, !tbaa !7171
  %cmp281 = icmp eq i8* %call279, null, !dbg !7172
  br i1 %cmp281, label %if.then.282, label %if.end.284, !dbg !7174

if.then.282:                                      ; preds = %if.end.278
  %call283 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.111, i32 0, i32 0)) #6, !dbg !7175
  br label %return, !dbg !7177

if.end.284:                                       ; preds = %if.end.278
  %call285 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.112, i32 0, i32 0)) #6, !dbg !7178
  %ScriptSetVarObj = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 56, !dbg !7179
  %48 = bitcast void (i8*, i8*, i32, i8*)** %ScriptSetVarObj to i8**, !dbg !7180
  store i8* %call285, i8** %48, align 4, !dbg !7180, !tbaa !7181
  %cmp287 = icmp eq i8* %call285, null, !dbg !7182
  br i1 %cmp287, label %if.then.288, label %if.end.290, !dbg !7184

if.then.288:                                      ; preds = %if.end.284
  %call289 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.113, i32 0, i32 0)) #6, !dbg !7185
  br label %return, !dbg !7187

if.end.290:                                       ; preds = %if.end.284
  %call291 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.114, i32 0, i32 0)) #6, !dbg !7188
  %ScriptSetVarJ = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 57, !dbg !7189
  %49 = bitcast void (i8*, i8*, i32, i64)** %ScriptSetVarJ to i8**, !dbg !7190
  store i8* %call291, i8** %49, align 4, !dbg !7190, !tbaa !7191
  %cmp293 = icmp eq i8* %call291, null, !dbg !7192
  br i1 %cmp293, label %if.then.294, label %if.end.296, !dbg !7194

if.then.294:                                      ; preds = %if.end.290
  %call295 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.115, i32 0, i32 0)) #6, !dbg !7195
  br label %return, !dbg !7197

if.end.296:                                       ; preds = %if.end.290
  %call297 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.116, i32 0, i32 0)) #6, !dbg !7198
  %ScriptSetVarF = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 58, !dbg !7199
  %50 = bitcast void (i8*, i8*, i32, float)** %ScriptSetVarF to i8**, !dbg !7200
  store i8* %call297, i8** %50, align 4, !dbg !7200, !tbaa !7201
  %cmp299 = icmp eq i8* %call297, null, !dbg !7202
  br i1 %cmp299, label %if.then.300, label %if.end.302, !dbg !7204

if.then.300:                                      ; preds = %if.end.296
  %call301 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.117, i32 0, i32 0)) #6, !dbg !7205
  br label %return, !dbg !7207

if.end.302:                                       ; preds = %if.end.296
  %call303 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.118, i32 0, i32 0)) #6, !dbg !7208
  %ScriptSetVarD = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 59, !dbg !7209
  %51 = bitcast void (i8*, i8*, i32, double)** %ScriptSetVarD to i8**, !dbg !7210
  store i8* %call303, i8** %51, align 4, !dbg !7210, !tbaa !7211
  %cmp305 = icmp eq i8* %call303, null, !dbg !7212
  br i1 %cmp305, label %if.then.306, label %if.end.308, !dbg !7214

if.then.306:                                      ; preds = %if.end.302
  %call307 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.119, i32 0, i32 0)) #6, !dbg !7215
  br label %return, !dbg !7217

if.end.308:                                       ; preds = %if.end.302
  %call309 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.120, i32 0, i32 0)) #6, !dbg !7218
  %ScriptSetVarV = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 60, !dbg !7219
  %52 = bitcast void (i8*, i8*, i32, i8*, i32)** %ScriptSetVarV to i8**, !dbg !7220
  store i8* %call309, i8** %52, align 4, !dbg !7220, !tbaa !7221
  %cmp311 = icmp eq i8* %call309, null, !dbg !7222
  br i1 %cmp311, label %if.then.312, label %if.end.314, !dbg !7224

if.then.312:                                      ; preds = %if.end.308
  %call313 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.121, i32 0, i32 0)) #6, !dbg !7225
  br label %return, !dbg !7227

if.end.314:                                       ; preds = %if.end.308
  %call315 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.122, i32 0, i32 0)) #6, !dbg !7228
  %ScriptGetVarV = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 61, !dbg !7229
  %53 = bitcast void (i8*, i8*, i32, i8*, i32)** %ScriptGetVarV to i8**, !dbg !7230
  store i8* %call315, i8** %53, align 4, !dbg !7230, !tbaa !7231
  %cmp317 = icmp eq i8* %call315, null, !dbg !7232
  br i1 %cmp317, label %if.then.318, label %if.end.320, !dbg !7234

if.then.318:                                      ; preds = %if.end.314
  %call319 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.123, i32 0, i32 0)) #6, !dbg !7235
  br label %return, !dbg !7237

if.end.320:                                       ; preds = %if.end.314
  %call321 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.124, i32 0, i32 0)) #6, !dbg !7238
  %ScriptSetVarVE = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 62, !dbg !7239
  %54 = bitcast void (i8*, i8*, i32, i8*, i32, i8*, i32*, i32)** %ScriptSetVarVE to i8**, !dbg !7240
  store i8* %call321, i8** %54, align 4, !dbg !7240, !tbaa !7241
  %cmp323 = icmp eq i8* %call321, null, !dbg !7242
  br i1 %cmp323, label %if.then.324, label %if.end.326, !dbg !7244

if.then.324:                                      ; preds = %if.end.320
  %call325 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.125, i32 0, i32 0)) #6, !dbg !7245
  br label %return, !dbg !7247

if.end.326:                                       ; preds = %if.end.320
  %call327 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.126, i32 0, i32 0)) #6, !dbg !7248
  %ScriptCCreate = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 63, !dbg !7249
  %55 = bitcast i8* (i8*, i8*, i32, i8*, i32, i8*, i32)** %ScriptCCreate to i8**, !dbg !7250
  store i8* %call327, i8** %55, align 4, !dbg !7250, !tbaa !7251
  %cmp329 = icmp eq i8* %call327, null, !dbg !7252
  br i1 %cmp329, label %if.then.330, label %if.end.332, !dbg !7254

if.then.330:                                      ; preds = %if.end.326
  %call331 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.127, i32 0, i32 0)) #6, !dbg !7255
  br label %return, !dbg !7257

if.end.332:                                       ; preds = %if.end.326
  %call333 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.128, i32 0, i32 0)) #6, !dbg !7258
  %ScriptIntrinsicCreate = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 64, !dbg !7259
  %56 = bitcast i8* (i8*, i32, i8*)** %ScriptIntrinsicCreate to i8**, !dbg !7260
  store i8* %call333, i8** %56, align 4, !dbg !7260, !tbaa !7261
  %cmp335 = icmp eq i8* %call333, null, !dbg !7262
  br i1 %cmp335, label %if.then.336, label %if.end.338, !dbg !7264

if.then.336:                                      ; preds = %if.end.332
  %call337 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.129, i32 0, i32 0)) #6, !dbg !7265
  br label %return, !dbg !7267

if.end.338:                                       ; preds = %if.end.332
  %call339 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.130, i32 0, i32 0)) #6, !dbg !7268
  %ScriptKernelIDCreate = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 65, !dbg !7269
  %57 = bitcast i8* (i8*, i8*, i32, i32)** %ScriptKernelIDCreate to i8**, !dbg !7270
  store i8* %call339, i8** %57, align 4, !dbg !7270, !tbaa !7271
  %cmp341 = icmp eq i8* %call339, null, !dbg !7272
  br i1 %cmp341, label %if.then.342, label %if.end.344, !dbg !7274

if.then.342:                                      ; preds = %if.end.338
  %call343 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.131, i32 0, i32 0)) #6, !dbg !7275
  br label %return, !dbg !7277

if.end.344:                                       ; preds = %if.end.338
  %call345 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.132, i32 0, i32 0)) #6, !dbg !7278
  %ScriptFieldIDCreate = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 67, !dbg !7279
  %58 = bitcast i8* (i8*, i8*, i32)** %ScriptFieldIDCreate to i8**, !dbg !7280
  store i8* %call345, i8** %58, align 4, !dbg !7280, !tbaa !7281
  %cmp347 = icmp eq i8* %call345, null, !dbg !7282
  br i1 %cmp347, label %if.then.348, label %if.end.350, !dbg !7284

if.then.348:                                      ; preds = %if.end.344
  %call349 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.133, i32 0, i32 0)) #6, !dbg !7285
  br label %return, !dbg !7287

if.end.350:                                       ; preds = %if.end.344
  %call351 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.134, i32 0, i32 0)) #6, !dbg !7288
  %ScriptGroupCreate = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 68, !dbg !7289
  %59 = bitcast i8* (i8*, i8**, i32, i8**, i32, i8**, i32, i8**, i32, i8**, i32)** %ScriptGroupCreate to i8**, !dbg !7290
  store i8* %call351, i8** %59, align 4, !dbg !7290, !tbaa !7291
  %cmp353 = icmp eq i8* %call351, null, !dbg !7292
  br i1 %cmp353, label %if.then.354, label %if.end.356, !dbg !7294

if.then.354:                                      ; preds = %if.end.350
  %call355 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.135, i32 0, i32 0)) #6, !dbg !7295
  br label %return, !dbg !7297

if.end.356:                                       ; preds = %if.end.350
  %call357 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.136, i32 0, i32 0)) #6, !dbg !7298
  %ScriptGroupSetOutput = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 70, !dbg !7299
  %60 = bitcast void (i8*, i8*, i8*, i8*)** %ScriptGroupSetOutput to i8**, !dbg !7300
  store i8* %call357, i8** %60, align 4, !dbg !7300, !tbaa !7301
  %cmp359 = icmp eq i8* %call357, null, !dbg !7302
  br i1 %cmp359, label %if.then.360, label %if.end.362, !dbg !7304

if.then.360:                                      ; preds = %if.end.356
  %call361 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.137, i32 0, i32 0)) #6, !dbg !7305
  br label %return, !dbg !7307

if.end.362:                                       ; preds = %if.end.356
  %call363 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.138, i32 0, i32 0)) #6, !dbg !7308
  %ScriptGroupSetInput = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 71, !dbg !7309
  %61 = bitcast void (i8*, i8*, i8*, i8*)** %ScriptGroupSetInput to i8**, !dbg !7310
  store i8* %call363, i8** %61, align 4, !dbg !7310, !tbaa !7311
  %cmp365 = icmp eq i8* %call363, null, !dbg !7312
  br i1 %cmp365, label %if.then.366, label %if.end.368, !dbg !7314

if.then.366:                                      ; preds = %if.end.362
  %call367 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.139, i32 0, i32 0)) #6, !dbg !7315
  br label %return, !dbg !7317

if.end.368:                                       ; preds = %if.end.362
  %call369 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.140, i32 0, i32 0)) #6, !dbg !7318
  %ScriptGroupExecute = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 72, !dbg !7319
  %62 = bitcast void (i8*, i8*)** %ScriptGroupExecute to i8**, !dbg !7320
  store i8* %call369, i8** %62, align 4, !dbg !7320, !tbaa !7321
  %cmp371 = icmp eq i8* %call369, null, !dbg !7322
  br i1 %cmp371, label %if.then.372, label %if.end.374, !dbg !7324

if.then.372:                                      ; preds = %if.end.368
  %call373 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.141, i32 0, i32 0)) #6, !dbg !7325
  br label %return, !dbg !7327

if.end.374:                                       ; preds = %if.end.368
  %call375 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.142, i32 0, i32 0)) #6, !dbg !7328
  %AllocationIoSend = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 73, !dbg !7329
  %63 = bitcast void (i8*, i8*)** %AllocationIoSend to i8**, !dbg !7330
  store i8* %call375, i8** %63, align 4, !dbg !7330, !tbaa !7331
  %cmp377 = icmp eq i8* %call375, null, !dbg !7332
  br i1 %cmp377, label %if.then.378, label %if.end.380, !dbg !7334

if.then.378:                                      ; preds = %if.end.374
  %call379 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.143, i32 0, i32 0)) #6, !dbg !7335
  br label %return, !dbg !7337

if.end.380:                                       ; preds = %if.end.374
  %call381 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.144, i32 0, i32 0)) #6, !dbg !7338
  %AllocationIoReceive = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 74, !dbg !7339
  %64 = bitcast void (i8*, i8*)** %AllocationIoReceive to i8**, !dbg !7340
  store i8* %call381, i8** %64, align 4, !dbg !7340, !tbaa !7341
  %cmp383 = icmp eq i8* %call381, null, !dbg !7342
  br i1 %cmp383, label %if.then.384, label %if.end.386, !dbg !7344

if.then.384:                                      ; preds = %if.end.380
  %call385 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.145.191, i32 0, i32 0)) #6, !dbg !7345
  br label %return, !dbg !7347

if.end.386:                                       ; preds = %if.end.380
  %cmp387 = icmp sgt i32 %device_api, 20, !dbg !7348
  br i1 %cmp387, label %if.then.388, label %return, !dbg !7350

if.then.388:                                      ; preds = %if.end.386
  %call389 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.146, i32 0, i32 0)) #6, !dbg !7351
  %AllocationGetPointer = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 75, !dbg !7353
  %65 = bitcast i8* (i8*, i8*, i32, i32, i32, i32, i32*, i32)** %AllocationGetPointer to i8**, !dbg !7354
  store i8* %call389, i8** %65, align 4, !dbg !7354, !tbaa !7355
  %cmp391 = icmp eq i8* %call389, null, !dbg !7356
  br i1 %cmp391, label %if.then.392, label %if.end.395, !dbg !7358

if.then.392:                                      ; preds = %if.then.388
  %call393 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.147, i32 0, i32 0)) #6, !dbg !7359
  br label %return, !dbg !7361

if.end.395:                                       ; preds = %if.then.388
  %cmp396 = icmp sgt i32 %device_api, 22, !dbg !7362
  br i1 %cmp396, label %if.then.397, label %if.end.446, !dbg !7364

if.then.397:                                      ; preds = %if.end.395
  %call398 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.148, i32 0, i32 0)) #6, !dbg !7365
  %ScriptInvokeIDCreate = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 66, !dbg !7367
  %66 = bitcast i8* (i8*, i8*, i32)** %ScriptInvokeIDCreate to i8**, !dbg !7368
  store i8* %call398, i8** %66, align 4, !dbg !7368, !tbaa !7369
  %cmp400 = icmp eq i8* %call398, null, !dbg !7370
  br i1 %cmp400, label %if.then.401, label %if.end.403, !dbg !7372

if.then.401:                                      ; preds = %if.then.397
  %call402 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.149, i32 0, i32 0)) #6, !dbg !7373
  br label %return, !dbg !7375

if.end.403:                                       ; preds = %if.then.397
  %call404 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.150, i32 0, i32 0)) #6, !dbg !7376
  %ClosureCreate = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 22, !dbg !7377
  %67 = bitcast i8* (i8*, i8*, i8*, i8**, i32, i32*, i32, i32*, i32, i8**, i32, i8**, i32)** %ClosureCreate to i8**, !dbg !7378
  store i8* %call404, i8** %67, align 4, !dbg !7378, !tbaa !7379
  %cmp406 = icmp eq i8* %call404, null, !dbg !7380
  br i1 %cmp406, label %if.then.407, label %if.end.409, !dbg !7382

if.then.407:                                      ; preds = %if.end.403
  %call408 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.151, i32 0, i32 0)) #6, !dbg !7383
  br label %return, !dbg !7385

if.end.409:                                       ; preds = %if.end.403
  %call410 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.152, i32 0, i32 0)) #6, !dbg !7386
  %InvokeClosureCreate = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 23, !dbg !7387
  %68 = bitcast i8* (i8*, i8*, i8*, i32, i8**, i32, i32*, i32, i32*, i32)** %InvokeClosureCreate to i8**, !dbg !7388
  store i8* %call410, i8** %68, align 4, !dbg !7388, !tbaa !7389
  %cmp412 = icmp eq i8* %call410, null, !dbg !7390
  br i1 %cmp412, label %if.then.413, label %if.end.415, !dbg !7392

if.then.413:                                      ; preds = %if.end.409
  %call414 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.153, i32 0, i32 0)) #6, !dbg !7393
  br label %return, !dbg !7395

if.end.415:                                       ; preds = %if.end.409
  %call416 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.154, i32 0, i32 0)) #6, !dbg !7396
  %ClosureSetArg = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 24, !dbg !7397
  %69 = bitcast void (i8*, i8*, i32, i32, i32)** %ClosureSetArg to i8**, !dbg !7398
  store i8* %call416, i8** %69, align 4, !dbg !7398, !tbaa !7399
  %cmp418 = icmp eq i8* %call416, null, !dbg !7400
  br i1 %cmp418, label %if.then.419, label %if.end.421, !dbg !7402

if.then.419:                                      ; preds = %if.end.415
  %call420 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.155, i32 0, i32 0)) #6, !dbg !7403
  br label %return, !dbg !7405

if.end.421:                                       ; preds = %if.end.415
  %call422 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.156, i32 0, i32 0)) #6, !dbg !7406
  %ClosureSetGlobal = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 25, !dbg !7407
  %70 = bitcast void (i8*, i8*, i8*, i32, i32)** %ClosureSetGlobal to i8**, !dbg !7408
  store i8* %call422, i8** %70, align 4, !dbg !7408, !tbaa !7409
  %cmp424 = icmp eq i8* %call422, null, !dbg !7410
  br i1 %cmp424, label %if.then.425, label %if.end.427, !dbg !7412

if.then.425:                                      ; preds = %if.end.421
  %call426 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.157, i32 0, i32 0)) #6, !dbg !7413
  br label %return, !dbg !7415

if.end.427:                                       ; preds = %if.end.421
  %call428 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.158, i32 0, i32 0)) #6, !dbg !7416
  %ScriptGroup2Create = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 69, !dbg !7417
  %71 = bitcast i8* (i8*, i8*, i32, i8*, i32, i8**, i32)** %ScriptGroup2Create to i8**, !dbg !7418
  store i8* %call428, i8** %71, align 4, !dbg !7418, !tbaa !7419
  %cmp430 = icmp eq i8* %call428, null, !dbg !7420
  br i1 %cmp430, label %if.then.431, label %if.end.433, !dbg !7422

if.then.431:                                      ; preds = %if.end.427
  %call432 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.159, i32 0, i32 0)) #6, !dbg !7423
  br label %return, !dbg !7425

if.end.433:                                       ; preds = %if.end.427
  %call434 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.160, i32 0, i32 0)) #6, !dbg !7426
  %AllocationElementData = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 36, !dbg !7427
  %72 = bitcast void (i8*, i8*, i32, i32, i32, i32, i8*, i32, i32)** %AllocationElementData to i8**, !dbg !7428
  store i8* %call434, i8** %72, align 4, !dbg !7428, !tbaa !7429
  %cmp436 = icmp eq i8* %call434, null, !dbg !7430
  br i1 %cmp436, label %if.then.437, label %if.end.439, !dbg !7432

if.then.437:                                      ; preds = %if.end.433
  %call438 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.161, i32 0, i32 0)) #6, !dbg !7433
  br label %return, !dbg !7435

if.end.439:                                       ; preds = %if.end.433
  %call440 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.162, i32 0, i32 0)) #6, !dbg !7436
  %AllocationElementRead = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 42, !dbg !7437
  %73 = bitcast void (i8*, i8*, i32, i32, i32, i32, i8*, i32, i32)** %AllocationElementRead to i8**, !dbg !7438
  store i8* %call440, i8** %73, align 4, !dbg !7438, !tbaa !7439
  %cmp442 = icmp eq i8* %call440, null, !dbg !7440
  br i1 %cmp442, label %if.then.443, label %if.then.448, !dbg !7442

if.then.443:                                      ; preds = %if.end.439
  %call444 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.163, i32 0, i32 0)) #6, !dbg !7443
  br label %return, !dbg !7445

if.end.446:                                       ; preds = %if.end.395
  %cmp447 = icmp sgt i32 %device_api, 21, !dbg !7446
  br i1 %cmp447, label %if.then.448, label %return, !dbg !7448

if.then.448:                                      ; preds = %if.end.446, %if.end.439
  %call449 = tail call i8* @dlsym(i8* %handle, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.164, i32 0, i32 0)) #6, !dbg !7449
  %Allocation3DRead = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %dispatchTab, i32 0, i32 44, !dbg !7451
  %74 = bitcast void (i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32)** %Allocation3DRead to i8**, !dbg !7452
  store i8* %call449, i8** %74, align 4, !dbg !7452, !tbaa !7453
  %cmp451 = icmp eq i8* %call449, null, !dbg !7454
  br i1 %cmp451, label %if.then.452, label %return, !dbg !7456

if.then.452:                                      ; preds = %if.then.448
  %call453 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.165, i32 0, i32 0)) #6, !dbg !7457
  br label %return, !dbg !7459

return:                                           ; preds = %if.then.452, %if.then.448, %if.end.446, %if.then.443, %if.then.437, %if.then.431, %if.then.425, %if.then.419, %if.then.413, %if.then.407, %if.then.401, %if.then.392, %if.end.386, %if.then.384, %if.then.378, %if.then.372, %if.then.366, %if.then.360, %if.then.354, %if.then.348, %if.then.342, %if.then.336, %if.then.330, %if.then.324, %if.then.318, %if.then.312, %if.then.306, %if.then.300, %if.then.294, %if.then.288, %if.then.282, %if.then.276, %if.then.270, %if.then.264, %if.then.258, %if.then.252, %if.then.246, %if.then.240, %if.then.234, %if.then.228, %if.then.222, %if.then.216, %if.then.210, %if.then.204, %if.then.198, %if.then.192, %if.then.186, %if.then.180, %if.then.174, %if.then.168, %if.then.162, %if.then.156, %if.then.150, %if.then.144, %if.then.138, %if.then.132, %if.then.126, %if.then.120, %if.then.114, %if.then.108, %if.then.102, %if.then.96, %if.then.90, %if.then.84, %if.then.78, %if.then.72, %if.then.66, %if.then.60, %if.then.54, %if.then.48, %if.then.42, %if.then.36, %if.then.30, %if.then.24, %if.then.18, %if.then.12, %if.then.6, %if.then
  %retval.0 = phi i1 [ false, %if.then ], [ false, %if.then.6 ], [ false, %if.then.12 ], [ false, %if.then.18 ], [ false, %if.then.24 ], [ false, %if.then.30 ], [ false, %if.then.36 ], [ false, %if.then.42 ], [ false, %if.then.48 ], [ false, %if.then.54 ], [ false, %if.then.60 ], [ false, %if.then.66 ], [ false, %if.then.72 ], [ false, %if.then.78 ], [ false, %if.then.84 ], [ false, %if.then.90 ], [ false, %if.then.96 ], [ false, %if.then.102 ], [ false, %if.then.108 ], [ false, %if.then.114 ], [ false, %if.then.120 ], [ false, %if.then.126 ], [ false, %if.then.132 ], [ false, %if.then.138 ], [ false, %if.then.144 ], [ false, %if.then.150 ], [ false, %if.then.156 ], [ false, %if.then.162 ], [ false, %if.then.168 ], [ false, %if.then.174 ], [ false, %if.then.180 ], [ false, %if.then.186 ], [ false, %if.then.192 ], [ false, %if.then.198 ], [ false, %if.then.204 ], [ false, %if.then.210 ], [ false, %if.then.216 ], [ false, %if.then.222 ], [ false, %if.then.228 ], [ false, %if.then.234 ], [ false, %if.then.240 ], [ false, %if.then.246 ], [ false, %if.then.252 ], [ false, %if.then.258 ], [ false, %if.then.264 ], [ false, %if.then.270 ], [ false, %if.then.276 ], [ false, %if.then.282 ], [ false, %if.then.288 ], [ false, %if.then.294 ], [ false, %if.then.300 ], [ false, %if.then.306 ], [ false, %if.then.312 ], [ false, %if.then.318 ], [ false, %if.then.324 ], [ false, %if.then.330 ], [ false, %if.then.336 ], [ false, %if.then.342 ], [ false, %if.then.348 ], [ false, %if.then.354 ], [ false, %if.then.360 ], [ false, %if.then.366 ], [ false, %if.then.372 ], [ false, %if.then.378 ], [ false, %if.then.384 ], [ false, %if.then.392 ], [ false, %if.then.401 ], [ false, %if.then.407 ], [ false, %if.then.413 ], [ false, %if.then.419 ], [ false, %if.then.425 ], [ false, %if.then.431 ], [ false, %if.then.437 ], [ false, %if.then.443 ], [ true, %if.then.448 ], [ true, %if.then.452 ], [ true, %if.end.446 ], [ true, %if.end.386 ]
  ret i1 %retval.0, !dbg !7460
}

; Function Attrs: nounwind
define weak i32 @halide_renderscript_initialize_kernels(i8* %user_context, i8** %state_ptr, i8* %src, i32 %size) #0 {
entry:
  %ctx = alloca %"class.Halide::Runtime::Internal::Renderscript::Context", align 4
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2294, metadata !2613), !dbg !7461
  tail call void @llvm.dbg.value(metadata i8** %state_ptr, i64 0, metadata !2295, metadata !2613), !dbg !7462
  tail call void @llvm.dbg.value(metadata i8* %src, i64 0, metadata !2296, metadata !2613), !dbg !7463
  tail call void @llvm.dbg.value(metadata i32 %size, i64 0, metadata !2297, metadata !2613), !dbg !7464
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !7465
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !7467
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !7468
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !7470
  store i8 0, i8* %add.ptr.i, align 1, !dbg !7471, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7472
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.166, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7474
  %call.i.73 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.166, i32 0, i32 0)) #6, !dbg !7475
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !7476
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2504, metadata !2613) #2, !dbg !7478
  %call.i.76 = tail call i8* @halide_pointer_to_string(i8* %call.i.73, i8* %add.ptr.i, i8* %user_context) #6, !dbg !7479
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7480
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.167, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7482
  %call.i.79 = tail call i8* @halide_string_to_string(i8* %call.i.76, i8* %add.ptr.i, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.167, i32 0, i32 0)) #6, !dbg !7483
  %0 = bitcast i8** %state_ptr to i8*, !dbg !7484
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !7485
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !2504, metadata !2613) #2, !dbg !7487
  %call.i.82 = tail call i8* @halide_pointer_to_string(i8* %call.i.79, i8* %add.ptr.i, i8* %0) #6, !dbg !7488
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7489
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.168, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7491
  %call.i.85 = tail call i8* @halide_string_to_string(i8* %call.i.82, i8* %add.ptr.i, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.168, i32 0, i32 0)) #6, !dbg !7492
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !7493
  tail call void @llvm.dbg.value(metadata i8* %src, i64 0, metadata !2504, metadata !2613) #2, !dbg !7495
  %call.i.88 = tail call i8* @halide_pointer_to_string(i8* %call.i.85, i8* %add.ptr.i, i8* %src) #6, !dbg !7496
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7497
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.169, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7499
  %call.i.91 = tail call i8* @halide_string_to_string(i8* %call.i.88, i8* %add.ptr.i, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.169, i32 0, i32 0)) #6, !dbg !7500
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !7501
  tail call void @llvm.dbg.value(metadata i32 %size, i64 0, metadata !2508, metadata !2613) #2, !dbg !7503
  %conv.i = sext i32 %size to i64, !dbg !7504
  %call.i.94 = tail call i8* @halide_int64_to_string(i8* %call.i.91, i8* %add.ptr.i, i64 %conv.i, i32 1) #6, !dbg !7505
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7506
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7508
  %call.i.97 = tail call i8* @halide_string_to_string(i8* %call.i.94, i8* %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !7509
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !7510
  tail call void @halide_print(i8* %user_context, i8* %call.i) #6, !dbg !7512
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !7517
  %1 = bitcast %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx to i8*, !dbg !7518
  call void @llvm.lifetime.start(i64 16, i8* %1) #2, !dbg !7518
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2298, metadata !2613), !dbg !7519
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2437, metadata !2613) #2, !dbg !7520
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2439, metadata !2613) #2, !dbg !7522
  %user_context2.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 0, !dbg !7523
  store i8* %user_context, i8** %user_context2.i, align 4, !dbg !7523, !tbaa !7524
  %mDev.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 1, !dbg !7526
  store i8* null, i8** %mDev.i, align 4, !dbg !7526, !tbaa !7527
  %mContext.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 2, !dbg !7528
  store i8* null, i8** %mContext.i, align 4, !dbg !7528, !tbaa !7529
  %error.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 3, !dbg !7530
  store i32 2, i32* %error.i, align 4, !dbg !7530, !tbaa !7531
  %call.i.100 = tail call i32 @halide_start_clock(i8* %user_context) #6, !dbg !7532
  %call5.i = call i32 @halide_renderscript_acquire_context(i8* %user_context, i8** %mDev.i, i8** %mContext.i, i1 zeroext true) #6, !dbg !7534
  store i32 %call5.i, i32* %error.i, align 4, !dbg !7535, !tbaa !7531
  %2 = load i8*, i8** %mDev.i, align 4, !dbg !7536, !tbaa !7527
  %cmp.i = icmp eq i8* %2, null, !dbg !7536
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !7538

if.then.i:                                        ; preds = %entry
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.283, i32 0, i32 0)) #6, !dbg !7539
  br label %if.end.i, !dbg !7539

if.end.i:                                         ; preds = %if.then.i, %entry
  %3 = load i8*, i8** %mContext.i, align 4, !dbg !7541, !tbaa !7529
  %cmp9.i = icmp eq i8* %3, null, !dbg !7541
  br i1 %cmp9.i, label %if.then.10.i, label %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit, !dbg !7543

if.then.10.i:                                     ; preds = %if.end.i
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.284, i32 0, i32 0)) #6, !dbg !7544
  br label %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit, !dbg !7544

_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit: ; preds = %if.then.10.i, %if.end.i
  %4 = load i32, i32* %error.i, align 4, !dbg !7546, !tbaa !7531
  %cmp = icmp eq i32 %4, 0, !dbg !7548
  br i1 %cmp, label %if.end, label %if.then, !dbg !7549

if.then:                                          ; preds = %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !7550
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !7553
  %call.i.102 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !7554
  %add.ptr.i.105 = getelementptr inbounds i8, i8* %call.i.102, i32 1023, !dbg !7555
  store i8 0, i8* %add.ptr.i.105, align 1, !dbg !7556, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7557
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.171, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7559
  %call.i.109 = call i8* @halide_string_to_string(i8* %call.i.102, i8* %add.ptr.i.105, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.171, i32 0, i32 0)) #6, !dbg !7560
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7561
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.172, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7563
  %call.i.112 = call i8* @halide_string_to_string(i8* %call.i.109, i8* %add.ptr.i.105, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.172, i32 0, i32 0)) #6, !dbg !7564
  %5 = load i32, i32* %error.i, align 4, !dbg !7565, !tbaa !7531
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !7566
  call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !2508, metadata !2613) #2, !dbg !7568
  %conv.i.115 = sext i32 %5 to i64, !dbg !7569
  %call.i.116 = call i8* @halide_int64_to_string(i8* %call.i.112, i8* %add.ptr.i.105, i64 %conv.i.115, i32 1) #6, !dbg !7570
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7571
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7573
  %call.i.119 = call i8* @halide_string_to_string(i8* %call.i.116, i8* %add.ptr.i.105, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !7574
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !7575
  call void @halide_print(i8* %user_context, i8* %call.i.102) #6, !dbg !7577
  call void @halide_free(i8* %user_context, i8* %call.i.102) #6, !dbg !7578
  %6 = load i32, i32* %error.i, align 4, !dbg !7579, !tbaa !7531
  br label %cleanup, !dbg !7580

if.end:                                           ; preds = %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit
  %call16 = call i64 @halide_current_time_ns(i8* %user_context) #6, !dbg !7581
  call void @llvm.dbg.value(metadata i64 %call16, i64 0, metadata !2299, metadata !2613), !dbg !7582
  %7 = bitcast i8** %state_ptr to %"struct.Halide::Runtime::Internal::Renderscript::module_state"**, !dbg !7583
  call void @llvm.dbg.value(metadata %"struct.Halide::Runtime::Internal::Renderscript::module_state"** %7, i64 0, metadata !2300, metadata !2613), !dbg !7584
  %8 = load %"struct.Halide::Runtime::Internal::Renderscript::module_state"*, %"struct.Halide::Runtime::Internal::Renderscript::module_state"** %7, align 4, !dbg !7585, !tbaa !2768
  %tobool = icmp eq %"struct.Halide::Runtime::Internal::Renderscript::module_state"* %8, null, !dbg !7587
  br i1 %tobool, label %if.then.17, label %if.end.19, !dbg !7588

if.then.17:                                       ; preds = %if.end
  %call18 = call i8* @malloc(i32 8) #6, !dbg !7589
  store i8* %call18, i8** %state_ptr, align 4, !dbg !7591, !tbaa !2768
  %module = bitcast i8* %call18 to i8**, !dbg !7592
  store i8* null, i8** %module, align 4, !dbg !7593, !tbaa !7594
  %9 = load i32, i32* bitcast (%"struct.Halide::Runtime::Internal::Renderscript::module_state"** @_ZN6Halide7Runtime8Internal12Renderscript10state_listE to i32*), align 4, !dbg !7596, !tbaa !2768
  %next = getelementptr inbounds i8, i8* %call18, i32 4, !dbg !7597
  %10 = bitcast i8* %next to i32*, !dbg !7598
  store i32 %9, i32* %10, align 4, !dbg !7598, !tbaa !7599
  %11 = ptrtoint i8* %call18 to i32, !dbg !7600
  store i32 %11, i32* bitcast (%"struct.Halide::Runtime::Internal::Renderscript::module_state"** @_ZN6Halide7Runtime8Internal12Renderscript10state_listE to i32*), align 4, !dbg !7601, !tbaa !2768
  %.pre = load %"struct.Halide::Runtime::Internal::Renderscript::module_state"*, %"struct.Halide::Runtime::Internal::Renderscript::module_state"** %7, align 4, !dbg !7602, !tbaa !2768
  br label %if.end.19, !dbg !7603

if.end.19:                                        ; preds = %if.then.17, %if.end
  %12 = phi %"struct.Halide::Runtime::Internal::Renderscript::module_state"* [ %8, %if.end ], [ %.pre, %if.then.17 ], !dbg !7602
  %module20 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Renderscript::module_state", %"struct.Halide::Runtime::Internal::Renderscript::module_state"* %12, i32 0, i32 0, !dbg !7604
  %13 = load i8*, i8** %module20, align 4, !dbg !7604, !tbaa !7594
  %tobool21 = icmp eq i8* %13, null, !dbg !7605
  br i1 %tobool21, label %if.then.22, label %if.end.37, !dbg !7606

if.then.22:                                       ; preds = %if.end.19
  %call23 = call i8* @halide_get_renderscript_cache_dir(i8* %user_context) #7, !dbg !7607
  call void @llvm.dbg.value(metadata i8* %call23, i64 0, metadata !2301, metadata !2613), !dbg !7608
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !7609
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !7611
  %call.i.123 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !7612
  %add.ptr.i.126 = getelementptr inbounds i8, i8* %call.i.123, i32 1023, !dbg !7613
  store i8 0, i8* %add.ptr.i.126, align 1, !dbg !7614, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7615
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.173, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7617
  %call.i.130 = call i8* @halide_string_to_string(i8* %call.i.123, i8* %add.ptr.i.126, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.173, i32 0, i32 0)) #6, !dbg !7618
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7619
  call void @llvm.dbg.value(metadata i8* %call23, i64 0, metadata !2500, metadata !2613) #2, !dbg !7621
  %call.i.133 = call i8* @halide_string_to_string(i8* %call.i.130, i8* %add.ptr.i.126, i8* %call23) #6, !dbg !7622
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7623
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7625
  %call.i.136 = call i8* @halide_string_to_string(i8* %call.i.133, i8* %add.ptr.i.126, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !7626
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !7627
  call void @halide_print(i8* %user_context, i8* %call.i.123) #6, !dbg !7629
  call void @halide_free(i8* %user_context, i8* %call.i.123) #6, !dbg !7630
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.174, i32 0, i32 0), i64 0, metadata !2304, metadata !2613), !dbg !7631
  %14 = load %struct.dispatchTable*, %struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE, align 4, !dbg !7632, !tbaa !2768
  %ScriptCCreate = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %14, i32 0, i32 63, !dbg !7633
  %15 = load i8* (i8*, i8*, i32, i8*, i32, i8*, i32)*, i8* (i8*, i8*, i32, i8*, i32, i8*, i32)** %ScriptCCreate, align 4, !dbg !7633, !tbaa !7251
  %16 = load i8*, i8** %mContext.i, align 4, !dbg !7634, !tbaa !7529
  %call28 = call i32 @strlen(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.174, i32 0, i32 0)) #6, !dbg !7635
  %call29 = call i32 @strlen(i8* %call23) #6, !dbg !7636
  %call30 = call i8* %15(i8* %16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.174, i32 0, i32 0), i32 %call28, i8* %call23, i32 %call29, i8* %src, i32 %size) #6, !dbg !7632
  %17 = load %"struct.Halide::Runtime::Internal::Renderscript::module_state"*, %"struct.Halide::Runtime::Internal::Renderscript::module_state"** %7, align 4, !dbg !7637, !tbaa !2768
  %module31 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Renderscript::module_state", %"struct.Halide::Runtime::Internal::Renderscript::module_state"* %17, i32 0, i32 0, !dbg !7638
  store i8* %call30, i8** %module31, align 4, !dbg !7639, !tbaa !7594
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !7640
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !7642
  %call.i.140 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !7643
  %add.ptr.i.143 = getelementptr inbounds i8, i8* %call.i.140, i32 1023, !dbg !7644
  store i8 0, i8* %add.ptr.i.143, align 1, !dbg !7645, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7646
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.175, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7648
  %call.i.147 = call i8* @halide_string_to_string(i8* %call.i.140, i8* %add.ptr.i.143, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.175, i32 0, i32 0)) #6, !dbg !7649
  %18 = load %"struct.Halide::Runtime::Internal::Renderscript::module_state"*, %"struct.Halide::Runtime::Internal::Renderscript::module_state"** %7, align 4, !dbg !7650, !tbaa !2768
  %module34 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Renderscript::module_state", %"struct.Halide::Runtime::Internal::Renderscript::module_state"* %18, i32 0, i32 0, !dbg !7651
  %19 = load i8*, i8** %module34, align 4, !dbg !7651, !tbaa !7594
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !7652
  call void @llvm.dbg.value(metadata i8* %19, i64 0, metadata !2504, metadata !2613) #2, !dbg !7654
  %call.i.150 = call i8* @halide_pointer_to_string(i8* %call.i.147, i8* %add.ptr.i.143, i8* %19) #6, !dbg !7655
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7656
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7658
  %call.i.153 = call i8* @halide_string_to_string(i8* %call.i.150, i8* %add.ptr.i.143, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !7659
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !7660
  call void @halide_print(i8* %user_context, i8* %call.i.140) #6, !dbg !7662
  call void @halide_free(i8* %user_context, i8* %call.i.140) #6, !dbg !7663
  br label %if.end.37, !dbg !7664

if.end.37:                                        ; preds = %if.then.22, %if.end.19
  %call38 = call i64 @halide_current_time_ns(i8* %user_context) #6, !dbg !7665
  call void @llvm.dbg.value(metadata i64 %call38, i64 0, metadata !2305, metadata !2613), !dbg !7666
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !7667
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !7669
  %call.i.157 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !7670
  %add.ptr.i.160 = getelementptr inbounds i8, i8* %call.i.157, i32 1023, !dbg !7671
  store i8 0, i8* %add.ptr.i.160, align 1, !dbg !7672, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7673
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.176, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7675
  %call.i.164 = call i8* @halide_string_to_string(i8* %call.i.157, i8* %add.ptr.i.160, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.176, i32 0, i32 0)) #6, !dbg !7676
  %sub = sub i64 %call38, %call16, !dbg !7677
  %conv = uitofp i64 %sub to double, !dbg !7678
  %div = fdiv double %conv, 1.000000e+06, !dbg !7679
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2511, metadata !2613) #2, !dbg !7680
  call void @llvm.dbg.value(metadata double %div, i64 0, metadata !2512, metadata !2613) #2, !dbg !7682
  %call.i.167 = call i8* @halide_double_to_string(i8* %call.i.164, i8* %add.ptr.i.160, double %div, i32 1) #6, !dbg !7683
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7684
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7686
  %call.i.170 = call i8* @halide_string_to_string(i8* %call.i.167, i8* %add.ptr.i.160, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0)) #6, !dbg !7687
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !7688
  call void @halide_print(i8* %user_context, i8* %call.i.157) #6, !dbg !7690
  call void @halide_free(i8* %user_context, i8* %call.i.157) #6, !dbg !7691
  br label %cleanup

cleanup:                                          ; preds = %if.end.37, %if.then
  %retval.0 = phi i32 [ %6, %if.then ], [ 0, %if.end.37 ]
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2298, metadata !2613), !dbg !7519
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2442, metadata !2613) #2, !dbg !7692
  %20 = load i8*, i8** %user_context2.i, align 4, !dbg !7694, !tbaa !7524
  %call.i.174 = call i32 @halide_renderscript_release_context(i8* %20) #6, !dbg !7696
  call void @llvm.lifetime.end(i64 16, i8* %1) #2, !dbg !7697
  ret i32 %retval.0, !dbg !7697
}

; Function Attrs: nounwind
define weak i32 @halide_renderscript_device_free(i8* %user_context, %struct.buffer_t* %buf) #0 {
entry:
  %ctx = alloca %"class.Halide::Runtime::Internal::Renderscript::Context", align 4
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2310, metadata !2613), !dbg !7698
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %buf, i64 0, metadata !2311, metadata !2613), !dbg !7699
  %dev = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 0, !dbg !7700
  %0 = load i64, i64* %dev, align 8, !dbg !7700, !tbaa !5488
  %cmp = icmp eq i64 %0, 0, !dbg !7702
  br i1 %cmp, label %return, label %if.end, !dbg !7703

if.end:                                           ; preds = %entry
  %call = tail call i64 @halide_get_device_handle(i64 %0) #6, !dbg !7704
  tail call void @llvm.dbg.value(metadata i8* %6, i64 0, metadata !2312, metadata !2613), !dbg !7705
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !7706
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !7708
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !7709
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !7710
  store i8 0, i8* %add.ptr.i, align 1, !dbg !7711, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7712
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.178, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7714
  %call.i.39 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.178, i32 0, i32 0)) #6, !dbg !7715
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !7716
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2504, metadata !2613) #2, !dbg !7718
  %call.i.42 = tail call i8* @halide_pointer_to_string(i8* %call.i.39, i8* %add.ptr.i, i8* %user_context) #6, !dbg !7719
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7720
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.179, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7722
  %call.i.45 = tail call i8* @halide_string_to_string(i8* %call.i.42, i8* %add.ptr.i, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.179, i32 0, i32 0)) #6, !dbg !7723
  %1 = bitcast %struct.buffer_t* %buf to i8*, !dbg !7724
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !7725
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !2504, metadata !2613) #2, !dbg !7727
  %call.i.48 = tail call i8* @halide_pointer_to_string(i8* %call.i.45, i8* %add.ptr.i, i8* %1) #6, !dbg !7728
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7729
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.180, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7731
  %call.i.51 = tail call i8* @halide_string_to_string(i8* %call.i.48, i8* %add.ptr.i, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.180, i32 0, i32 0)) #6, !dbg !7732
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !7733
  tail call void @halide_print(i8* %user_context, i8* %call.i) #6, !dbg !7735
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !7736
  %2 = bitcast %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx to i8*, !dbg !7737
  call void @llvm.lifetime.start(i64 16, i8* %2) #2, !dbg !7737
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2313, metadata !2613), !dbg !7738
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2437, metadata !2613) #2, !dbg !7739
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2439, metadata !2613) #2, !dbg !7741
  %user_context2.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 0, !dbg !7742
  store i8* %user_context, i8** %user_context2.i, align 4, !dbg !7742, !tbaa !7524
  %mDev.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 1, !dbg !7743
  store i8* null, i8** %mDev.i, align 4, !dbg !7743, !tbaa !7527
  %mContext.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 2, !dbg !7744
  store i8* null, i8** %mContext.i, align 4, !dbg !7744, !tbaa !7529
  %error.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 3, !dbg !7745
  store i32 2, i32* %error.i, align 4, !dbg !7745, !tbaa !7531
  %call.i.54 = tail call i32 @halide_start_clock(i8* %user_context) #6, !dbg !7746
  %call5.i = call i32 @halide_renderscript_acquire_context(i8* %user_context, i8** %mDev.i, i8** %mContext.i, i1 zeroext true) #6, !dbg !7747
  store i32 %call5.i, i32* %error.i, align 4, !dbg !7748, !tbaa !7531
  %3 = load i8*, i8** %mDev.i, align 4, !dbg !7749, !tbaa !7527
  %cmp.i = icmp eq i8* %3, null, !dbg !7749
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !7750

if.then.i:                                        ; preds = %if.end
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.283, i32 0, i32 0)) #6, !dbg !7751
  br label %if.end.i, !dbg !7751

if.end.i:                                         ; preds = %if.then.i, %if.end
  %4 = load i8*, i8** %mContext.i, align 4, !dbg !7752, !tbaa !7529
  %cmp9.i = icmp eq i8* %4, null, !dbg !7752
  br i1 %cmp9.i, label %if.then.10.i, label %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit, !dbg !7753

if.then.10.i:                                     ; preds = %if.end.i
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.284, i32 0, i32 0)) #6, !dbg !7754
  br label %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit, !dbg !7754

_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit: ; preds = %if.then.10.i, %if.end.i
  %5 = load i32, i32* %error.i, align 4, !dbg !7755, !tbaa !7531
  %cmp7 = icmp eq i32 %5, 0, !dbg !7757
  br i1 %cmp7, label %if.end.10, label %cleanup, !dbg !7758

if.end.10:                                        ; preds = %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit
  %conv = trunc i64 %call to i32, !dbg !7759
  %6 = inttoptr i32 %conv to i8*, !dbg !7759
  %call11 = call i64 @halide_current_time_ns(i8* %user_context) #6, !dbg !7760
  call void @llvm.dbg.value(metadata i64 %call11, i64 0, metadata !2314, metadata !2613), !dbg !7761
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !7762
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !7764
  %call.i.56 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !7765
  %add.ptr.i.59 = getelementptr inbounds i8, i8* %call.i.56, i32 1023, !dbg !7766
  store i8 0, i8* %add.ptr.i.59, align 1, !dbg !7767, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7768
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.181, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7770
  %call.i.63 = call i8* @halide_string_to_string(i8* %call.i.56, i8* %add.ptr.i.59, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.181, i32 0, i32 0)) #6, !dbg !7771
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !7772
  call void @llvm.dbg.value(metadata i8* %6, i64 0, metadata !2504, metadata !2613) #2, !dbg !7774
  %call.i.66 = call i8* @halide_pointer_to_string(i8* %call.i.63, i8* %add.ptr.i.59, i8* %6) #6, !dbg !7775
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7776
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7778
  %call.i.69 = call i8* @halide_string_to_string(i8* %call.i.66, i8* %add.ptr.i.59, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !7779
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !7780
  call void @halide_print(i8* %user_context, i8* %call.i.56) #6, !dbg !7782
  call void @halide_free(i8* %user_context, i8* %call.i.56) #6, !dbg !7783
  store i64 0, i64* %dev, align 8, !dbg !7784, !tbaa !5488
  %call17 = call i64 @halide_current_time_ns(i8* %user_context) #6, !dbg !7785
  call void @llvm.dbg.value(metadata i64 %call17, i64 0, metadata !2315, metadata !2613), !dbg !7786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !7787
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !7789
  %call.i.73 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !7790
  %add.ptr.i.76 = getelementptr inbounds i8, i8* %call.i.73, i32 1023, !dbg !7791
  store i8 0, i8* %add.ptr.i.76, align 1, !dbg !7792, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7793
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.176, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7795
  %call.i.80 = call i8* @halide_string_to_string(i8* %call.i.73, i8* %add.ptr.i.76, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.176, i32 0, i32 0)) #6, !dbg !7796
  %sub = sub i64 %call17, %call11, !dbg !7797
  %conv20 = uitofp i64 %sub to double, !dbg !7798
  %div = fdiv double %conv20, 1.000000e+06, !dbg !7799
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2511, metadata !2613) #2, !dbg !7800
  call void @llvm.dbg.value(metadata double %div, i64 0, metadata !2512, metadata !2613) #2, !dbg !7802
  %call.i.83 = call i8* @halide_double_to_string(i8* %call.i.80, i8* %add.ptr.i.76, double %div, i32 1) #6, !dbg !7803
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7804
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7806
  %call.i.86 = call i8* @halide_string_to_string(i8* %call.i.83, i8* %add.ptr.i.76, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0)) #6, !dbg !7807
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !7808
  call void @halide_print(i8* %user_context, i8* %call.i.73) #6, !dbg !7810
  call void @halide_free(i8* %user_context, i8* %call.i.73) #6, !dbg !7811
  br label %cleanup

cleanup:                                          ; preds = %if.end.10, %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit
  %retval.0 = phi i32 [ 0, %if.end.10 ], [ %5, %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit ]
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2313, metadata !2613), !dbg !7738
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2442, metadata !2613) #2, !dbg !7812
  %7 = load i8*, i8** %user_context2.i, align 4, !dbg !7814, !tbaa !7524
  %call.i.90 = call i32 @halide_renderscript_release_context(i8* %7) #6, !dbg !7815
  call void @llvm.lifetime.end(i64 16, i8* %2) #2, !dbg !7816
  br label %return

return:                                           ; preds = %cleanup, %entry
  %retval.1 = phi i32 [ %retval.0, %cleanup ], [ 0, %entry ]
  ret i32 %retval.1, !dbg !7816
}

; Function Attrs: nounwind
define weak i32 @halide_renderscript_device_release(i8* %user_context) #0 {
entry:
  %ctx = alloca %"class.Halide::Runtime::Internal::Renderscript::Context", align 4
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2318, metadata !2613), !dbg !7817
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !7818
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !7820
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !7821
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !7822
  store i8 0, i8* %add.ptr.i, align 1, !dbg !7823, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7824
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.182, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7826
  %call.i.41 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.182, i32 0, i32 0)) #6, !dbg !7827
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !7828
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2504, metadata !2613) #2, !dbg !7830
  %call.i.44 = tail call i8* @halide_pointer_to_string(i8* %call.i.41, i8* %add.ptr.i, i8* %user_context) #6, !dbg !7831
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7832
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.180, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7834
  %call.i.47 = tail call i8* @halide_string_to_string(i8* %call.i.44, i8* %add.ptr.i, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.180, i32 0, i32 0)) #6, !dbg !7835
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !7836
  tail call void @halide_print(i8* %user_context, i8* %call.i) #6, !dbg !7838
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !7839
  %0 = bitcast %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx to i8*, !dbg !7840
  call void @llvm.lifetime.start(i64 16, i8* %0) #2, !dbg !7840
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2319, metadata !2613), !dbg !7841
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2437, metadata !2613) #2, !dbg !7842
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2439, metadata !2613) #2, !dbg !7844
  %user_context2.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 0, !dbg !7845
  store i8* %user_context, i8** %user_context2.i, align 4, !dbg !7845, !tbaa !7524
  %mDev.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 1, !dbg !7846
  store i8* null, i8** %mDev.i, align 4, !dbg !7846, !tbaa !7527
  %mContext.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 2, !dbg !7847
  store i8* null, i8** %mContext.i, align 4, !dbg !7847, !tbaa !7529
  %error.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 3, !dbg !7848
  store i32 2, i32* %error.i, align 4, !dbg !7848, !tbaa !7531
  %call.i.50 = tail call i32 @halide_start_clock(i8* %user_context) #6, !dbg !7849
  %call5.i = call i32 @halide_renderscript_acquire_context(i8* %user_context, i8** %mDev.i, i8** %mContext.i, i1 zeroext true) #6, !dbg !7850
  store i32 %call5.i, i32* %error.i, align 4, !dbg !7851, !tbaa !7531
  %1 = load i8*, i8** %mDev.i, align 4, !dbg !7852, !tbaa !7527
  %cmp.i = icmp eq i8* %1, null, !dbg !7852
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !7853

if.then.i:                                        ; preds = %entry
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.283, i32 0, i32 0)) #6, !dbg !7854
  br label %if.end.i, !dbg !7854

if.end.i:                                         ; preds = %if.then.i, %entry
  %2 = load i8*, i8** %mContext.i, align 4, !dbg !7855, !tbaa !7529
  %cmp9.i = icmp eq i8* %2, null, !dbg !7855
  br i1 %cmp9.i, label %if.then.10.i, label %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit, !dbg !7856

if.then.10.i:                                     ; preds = %if.end.i
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.284, i32 0, i32 0)) #6, !dbg !7857
  br label %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit, !dbg !7857

_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit: ; preds = %if.then.10.i, %if.end.i
  %3 = load i32, i32* %error.i, align 4, !dbg !7858, !tbaa !7531
  %cmp = icmp eq i32 %3, 0, !dbg !7860
  br i1 %cmp, label %while.cond.preheader, label %if.then, !dbg !7861

while.cond.preheader:                             ; preds = %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit
  %state.0.133 = load %"struct.Halide::Runtime::Internal::Renderscript::module_state"*, %"struct.Halide::Runtime::Internal::Renderscript::module_state"** @_ZN6Halide7Runtime8Internal12Renderscript10state_listE, align 4, !dbg !7862
  %tobool.134 = icmp eq %"struct.Halide::Runtime::Internal::Renderscript::module_state"* %state.0.133, null, !dbg !7863
  br i1 %tobool.134, label %while.end, label %while.body, !dbg !7866

if.then:                                          ; preds = %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !7867
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !7870
  %call.i.52 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !7871
  %add.ptr.i.55 = getelementptr inbounds i8, i8* %call.i.52, i32 1023, !dbg !7872
  store i8 0, i8* %add.ptr.i.55, align 1, !dbg !7873, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7874
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.183, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7876
  %call.i.59 = call i8* @halide_string_to_string(i8* %call.i.52, i8* %add.ptr.i.55, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.183, i32 0, i32 0)) #6, !dbg !7877
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7878
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.184, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7880
  %call.i.62 = call i8* @halide_string_to_string(i8* %call.i.59, i8* %add.ptr.i.55, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.184, i32 0, i32 0)) #6, !dbg !7881
  %4 = load i32, i32* %error.i, align 4, !dbg !7882, !tbaa !7531
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !7883
  call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !2508, metadata !2613) #2, !dbg !7885
  %conv.i = sext i32 %4 to i64, !dbg !7886
  %call.i.65 = call i8* @halide_int64_to_string(i8* %call.i.62, i8* %add.ptr.i.55, i64 %conv.i, i32 1) #6, !dbg !7887
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7888
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7890
  %call.i.68 = call i8* @halide_string_to_string(i8* %call.i.65, i8* %add.ptr.i.55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !7891
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !7892
  call void @halide_print(i8* %user_context, i8* %call.i.52) #6, !dbg !7894
  call void @halide_free(i8* %user_context, i8* %call.i.52) #6, !dbg !7895
  %5 = load i32, i32* %error.i, align 4, !dbg !7896, !tbaa !7531
  br label %cleanup, !dbg !7897

while.body:                                       ; preds = %while.cond.preheader, %if.end.18
  %state.0135 = phi %"struct.Halide::Runtime::Internal::Renderscript::module_state"* [ %state.0, %if.end.18 ], [ %state.0.133, %while.cond.preheader ]
  %module = getelementptr inbounds %"struct.Halide::Runtime::Internal::Renderscript::module_state", %"struct.Halide::Runtime::Internal::Renderscript::module_state"* %state.0135, i32 0, i32 0, !dbg !7898
  %6 = load i8*, i8** %module, align 4, !dbg !7898, !tbaa !7594
  %tobool10 = icmp eq i8* %6, null, !dbg !7901
  br i1 %tobool10, label %if.end.18, label %if.then.11, !dbg !7902

if.then.11:                                       ; preds = %while.body
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !7903
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !7906
  %call.i.72 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !7907
  %add.ptr.i.75 = getelementptr inbounds i8, i8* %call.i.72, i32 1023, !dbg !7908
  store i8 0, i8* %add.ptr.i.75, align 1, !dbg !7909, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7910
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.185, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7912
  %call.i.79 = call i8* @halide_string_to_string(i8* %call.i.72, i8* %add.ptr.i.75, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.185, i32 0, i32 0)) #6, !dbg !7913
  %7 = load i8*, i8** %module, align 4, !dbg !7914, !tbaa !7594
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !7915
  call void @llvm.dbg.value(metadata i8* %7, i64 0, metadata !2504, metadata !2613) #2, !dbg !7917
  %call.i.82 = call i8* @halide_pointer_to_string(i8* %call.i.79, i8* %add.ptr.i.75, i8* %7) #6, !dbg !7918
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7919
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7921
  %call.i.85 = call i8* @halide_string_to_string(i8* %call.i.82, i8* %add.ptr.i.75, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !7922
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !7923
  call void @halide_print(i8* %user_context, i8* %call.i.72) #6, !dbg !7925
  call void @halide_free(i8* %user_context, i8* %call.i.72) #6, !dbg !7926
  store i8* null, i8** %module, align 4, !dbg !7927, !tbaa !7594
  br label %if.end.18, !dbg !7928

if.end.18:                                        ; preds = %if.then.11, %while.body
  %next = getelementptr inbounds %"struct.Halide::Runtime::Internal::Renderscript::module_state", %"struct.Halide::Runtime::Internal::Renderscript::module_state"* %state.0135, i32 0, i32 1, !dbg !7929
  %state.0 = load %"struct.Halide::Runtime::Internal::Renderscript::module_state"*, %"struct.Halide::Runtime::Internal::Renderscript::module_state"** %next, align 4, !dbg !7862
  %tobool = icmp eq %"struct.Halide::Runtime::Internal::Renderscript::module_state"* %state.0, null, !dbg !7863
  br i1 %tobool, label %while.end, label %while.body, !dbg !7866

while.end:                                        ; preds = %if.end.18, %while.cond.preheader
  %8 = load i8*, i8** %mContext.i, align 4, !dbg !7930, !tbaa !7529
  %9 = load i8*, i8** @_ZN6Halide7Runtime8Internal12Renderscript7contextE, align 4, !dbg !7932, !tbaa !2768
  %cmp19 = icmp eq i8* %8, %9, !dbg !7933
  br i1 %cmp19, label %if.then.20, label %if.end.25, !dbg !7934

if.then.20:                                       ; preds = %while.end
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !7935
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !7938
  %call.i.89 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !7939
  %add.ptr.i.92 = getelementptr inbounds i8, i8* %call.i.89, i32 1023, !dbg !7940
  store i8 0, i8* %add.ptr.i.92, align 1, !dbg !7941, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7942
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.186, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7944
  %call.i.96 = call i8* @halide_string_to_string(i8* %call.i.89, i8* %add.ptr.i.92, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.186, i32 0, i32 0)) #6, !dbg !7945
  %10 = load i8*, i8** @_ZN6Halide7Runtime8Internal12Renderscript7contextE, align 4, !dbg !7946, !tbaa !2768
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !7947
  call void @llvm.dbg.value(metadata i8* %10, i64 0, metadata !2504, metadata !2613) #2, !dbg !7949
  %call.i.99 = call i8* @halide_pointer_to_string(i8* %call.i.96, i8* %add.ptr.i.92, i8* %10) #6, !dbg !7950
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !7951
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !7953
  %call.i.102 = call i8* @halide_string_to_string(i8* %call.i.99, i8* %add.ptr.i.92, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !7954
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !7955
  call void @halide_print(i8* %user_context, i8* %call.i.89) #6, !dbg !7957
  call void @halide_free(i8* %user_context, i8* %call.i.89) #6, !dbg !7958
  store i8* null, i8** @_ZN6Halide7Runtime8Internal12Renderscript7contextE, align 4, !dbg !7959, !tbaa !2768
  br label %if.end.25, !dbg !7960

if.end.25:                                        ; preds = %if.then.20, %while.end
  %call26 = call i32 @halide_renderscript_release_context(i8* %user_context) #7, !dbg !7961
  br label %cleanup

cleanup:                                          ; preds = %if.end.25, %if.then
  %retval.0 = phi i32 [ %5, %if.then ], [ 0, %if.end.25 ]
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2319, metadata !2613), !dbg !7841
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2442, metadata !2613) #2, !dbg !7962
  %11 = load i8*, i8** %user_context2.i, align 4, !dbg !7964, !tbaa !7524
  %call.i.106 = call i32 @halide_renderscript_release_context(i8* %11) #6, !dbg !7965
  call void @llvm.lifetime.end(i64 16, i8* %0) #2, !dbg !7966
  ret i32 %retval.0, !dbg !7966
}

; Function Attrs: nounwind
define linkonce i32 @buf_size(i8* %user_context, %struct.buffer_t* %buf) #0 {
entry:
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2325, metadata !2613), !dbg !7967
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %buf, i64 0, metadata !2326, metadata !2613), !dbg !7968
  %elem_size = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 5, !dbg !7969
  %0 = load i32, i32* %elem_size, align 4, !dbg !7969, !tbaa !4706
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !2327, metadata !2613), !dbg !7970
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2328, metadata !2613), !dbg !7971
  %arrayidx = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 2, i32 0, !dbg !7972
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7972, !tbaa !2786
  %mul = mul nsw i32 %1, %0, !dbg !7973
  %arrayidx2 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 3, i32 0, !dbg !7974
  %2 = load i32, i32* %arrayidx2, align 4, !dbg !7974, !tbaa !2786
  %mul3 = mul nsw i32 %mul, %2, !dbg !7975
  tail call void @llvm.dbg.value(metadata i32 %mul3, i64 0, metadata !2330, metadata !2613), !dbg !7976
  %cmp4 = icmp ugt i32 %mul3, %0, !dbg !7977
  tail call void @llvm.dbg.value(metadata i32 %mul3, i64 0, metadata !2327, metadata !2613), !dbg !7970
  %mul3.size.0 = select i1 %cmp4, i32 %mul3, i32 %0, !dbg !7979
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2328, metadata !2613), !dbg !7971
  %arrayidx.1 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 2, i32 1, !dbg !7972
  %3 = load i32, i32* %arrayidx.1, align 4, !dbg !7972, !tbaa !2786
  %mul.1 = mul nsw i32 %3, %0, !dbg !7973
  %arrayidx2.1 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 3, i32 1, !dbg !7974
  %4 = load i32, i32* %arrayidx2.1, align 4, !dbg !7974, !tbaa !2786
  %mul3.1 = mul nsw i32 %mul.1, %4, !dbg !7975
  tail call void @llvm.dbg.value(metadata i32 %mul3, i64 0, metadata !2330, metadata !2613), !dbg !7976
  %cmp4.1 = icmp ugt i32 %mul3.1, %mul3.size.0, !dbg !7977
  tail call void @llvm.dbg.value(metadata i32 %mul3, i64 0, metadata !2327, metadata !2613), !dbg !7970
  %mul3.size.0.1 = select i1 %cmp4.1, i32 %mul3.1, i32 %mul3.size.0, !dbg !7979
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2328, metadata !2613), !dbg !7971
  %arrayidx.2 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 2, i32 2, !dbg !7972
  %5 = load i32, i32* %arrayidx.2, align 4, !dbg !7972, !tbaa !2786
  %mul.2 = mul nsw i32 %5, %0, !dbg !7973
  %arrayidx2.2 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 3, i32 2, !dbg !7974
  %6 = load i32, i32* %arrayidx2.2, align 4, !dbg !7974, !tbaa !2786
  %mul3.2 = mul nsw i32 %mul.2, %6, !dbg !7975
  tail call void @llvm.dbg.value(metadata i32 %mul3, i64 0, metadata !2330, metadata !2613), !dbg !7976
  %cmp4.2 = icmp ugt i32 %mul3.2, %mul3.size.0.1, !dbg !7977
  tail call void @llvm.dbg.value(metadata i32 %mul3, i64 0, metadata !2327, metadata !2613), !dbg !7970
  %mul3.size.0.2 = select i1 %cmp4.2, i32 %mul3.2, i32 %mul3.size.0.1, !dbg !7979
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2328, metadata !2613), !dbg !7971
  %arrayidx.3 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 2, i32 3, !dbg !7972
  %7 = load i32, i32* %arrayidx.3, align 4, !dbg !7972, !tbaa !2786
  %mul.3 = mul nsw i32 %7, %0, !dbg !7973
  %arrayidx2.3 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 3, i32 3, !dbg !7974
  %8 = load i32, i32* %arrayidx2.3, align 4, !dbg !7974, !tbaa !2786
  %mul3.3 = mul nsw i32 %mul.3, %8, !dbg !7975
  tail call void @llvm.dbg.value(metadata i32 %mul3, i64 0, metadata !2330, metadata !2613), !dbg !7976
  %cmp4.3 = icmp ugt i32 %mul3.3, %mul3.size.0.2, !dbg !7977
  tail call void @llvm.dbg.value(metadata i32 %mul3, i64 0, metadata !2327, metadata !2613), !dbg !7970
  %mul3.size.0.3 = select i1 %cmp4.3, i32 %mul3.3, i32 %mul3.size.0.2, !dbg !7979
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2328, metadata !2613), !dbg !7971
  %tobool = icmp eq i32 %mul3.size.0.3, 0, !dbg !7980
  br i1 %tobool, label %if.then.5, label %if.end.6, !dbg !7982

if.then.5:                                        ; preds = %entry
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.187, i32 0, i32 0)) #6, !dbg !7983
  br label %if.end.6, !dbg !7983

if.end.6:                                         ; preds = %if.then.5, %entry
  ret i32 %mul3.size.0.3, !dbg !7985
}

; Function Attrs: nounwind
define linkonce zeroext i1 @is_interleaved_rgba_buffer_t(%struct.buffer_t* %buf) #0 {
entry:
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %buf, i64 0, metadata !2338, metadata !2613), !dbg !7986
  %arrayidx = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 3, i32 2, !dbg !7987
  %0 = load i32, i32* %arrayidx, align 4, !dbg !7987, !tbaa !2786
  %cmp = icmp eq i32 %0, 1, !dbg !7988
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7989

land.rhs:                                         ; preds = %entry
  %arrayidx1 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 2, i32 2, !dbg !7990
  %1 = load i32, i32* %arrayidx1, align 4, !dbg !7990, !tbaa !2786
  %cmp2 = icmp eq i32 %1, 4, !dbg !7991
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp2, %land.rhs ]
  ret i1 %2, !dbg !7992
}

; Function Attrs: nounwind
define weak i32 @halide_renderscript_device_malloc(i8* %user_context, %struct.buffer_t* %buf) #0 {
entry:
  %ctx = alloca %"class.Halide::Runtime::Internal::Renderscript::Context", align 4
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2341, metadata !2613), !dbg !7994
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %buf, i64 0, metadata !2342, metadata !2613), !dbg !7995
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !7996
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !7998
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !7999
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !8000
  store i8 0, i8* %add.ptr.i, align 1, !dbg !8001, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8002
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.188, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8004
  %call.i.230 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.188, i32 0, i32 0)) #6, !dbg !8005
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !8006
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2504, metadata !2613) #2, !dbg !8008
  %call.i.233 = tail call i8* @halide_pointer_to_string(i8* %call.i.230, i8* %add.ptr.i, i8* %user_context) #6, !dbg !8009
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8010
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.179, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8012
  %call.i.236 = tail call i8* @halide_string_to_string(i8* %call.i.233, i8* %add.ptr.i, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.179, i32 0, i32 0)) #6, !dbg !8013
  %0 = bitcast %struct.buffer_t* %buf to i8*, !dbg !8014
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !8015
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !2504, metadata !2613) #2, !dbg !8017
  %call.i.239 = tail call i8* @halide_pointer_to_string(i8* %call.i.236, i8* %add.ptr.i, i8* %0) #6, !dbg !8018
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8019
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.180, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8021
  %call.i.242 = tail call i8* @halide_string_to_string(i8* %call.i.239, i8* %add.ptr.i, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.180, i32 0, i32 0)) #6, !dbg !8022
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !8023
  tail call void @halide_print(i8* %user_context, i8* %call.i) #6, !dbg !8025
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !8026
  %1 = bitcast %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx to i8*, !dbg !8027
  call void @llvm.lifetime.start(i64 16, i8* %1) #2, !dbg !8027
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2343, metadata !2613), !dbg !8028
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2437, metadata !2613) #2, !dbg !8029
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2439, metadata !2613) #2, !dbg !8031
  %user_context2.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 0, !dbg !8032
  store i8* %user_context, i8** %user_context2.i, align 4, !dbg !8032, !tbaa !7524
  %mDev.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 1, !dbg !8033
  store i8* null, i8** %mDev.i, align 4, !dbg !8033, !tbaa !7527
  %mContext.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 2, !dbg !8034
  store i8* null, i8** %mContext.i, align 4, !dbg !8034, !tbaa !7529
  %error.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 3, !dbg !8035
  store i32 2, i32* %error.i, align 4, !dbg !8035, !tbaa !7531
  %call.i.245 = tail call i32 @halide_start_clock(i8* %user_context) #6, !dbg !8036
  %call5.i = call i32 @halide_renderscript_acquire_context(i8* %user_context, i8** %mDev.i, i8** %mContext.i, i1 zeroext true) #6, !dbg !8037
  store i32 %call5.i, i32* %error.i, align 4, !dbg !8038, !tbaa !7531
  %2 = load i8*, i8** %mDev.i, align 4, !dbg !8039, !tbaa !7527
  %cmp.i = icmp eq i8* %2, null, !dbg !8039
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !8040

if.then.i:                                        ; preds = %entry
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.283, i32 0, i32 0)) #6, !dbg !8041
  br label %if.end.i, !dbg !8041

if.end.i:                                         ; preds = %if.then.i, %entry
  %3 = load i8*, i8** %mContext.i, align 4, !dbg !8042, !tbaa !7529
  %cmp9.i = icmp eq i8* %3, null, !dbg !8042
  br i1 %cmp9.i, label %if.then.10.i, label %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit, !dbg !8043

if.then.10.i:                                     ; preds = %if.end.i
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.284, i32 0, i32 0)) #6, !dbg !8044
  br label %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit, !dbg !8044

_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit: ; preds = %if.then.10.i, %if.end.i
  %4 = load i32, i32* %error.i, align 4, !dbg !8045, !tbaa !7531
  %cmp = icmp eq i32 %4, 0, !dbg !8047
  br i1 %cmp, label %if.end, label %cleanup.165, !dbg !8048

if.end:                                           ; preds = %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit
  %call6 = call i32 @buf_size(i8* %user_context, %struct.buffer_t* %buf) #7, !dbg !8049
  call void @llvm.dbg.value(metadata i32 %call6, i64 0, metadata !2344, metadata !2613), !dbg !8050
  %dev = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 0, !dbg !8051
  %5 = load i64, i64* %dev, align 8, !dbg !8051, !tbaa !5488
  %tobool = icmp eq i64 %5, 0, !dbg !8053
  br i1 %tobool, label %if.end.10, label %if.then.7, !dbg !8054

if.then.7:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !8055
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !8058
  %call.i.247 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !8059
  %add.ptr.i.250 = getelementptr inbounds i8, i8* %call.i.247, i32 1023, !dbg !8060
  store i8 0, i8* %add.ptr.i.250, align 1, !dbg !8061, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8062
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.189, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8064
  %call.i.254 = call i8* @halide_string_to_string(i8* %call.i.247, i8* %add.ptr.i.250, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.189, i32 0, i32 0)) #6, !dbg !8065
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !8066
  call void @halide_print(i8* %user_context, i8* %call.i.247) #6, !dbg !8068
  call void @halide_free(i8* %user_context, i8* %call.i.247) #6, !dbg !8069
  br label %cleanup.165, !dbg !8070

if.end.10:                                        ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 3, i32 0, !dbg !8071
  %6 = load i32, i32* %arrayidx, align 4, !dbg !8071, !tbaa !2786
  %cmp11 = icmp sgt i32 %6, -1, !dbg !8071
  %arrayidx13 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 3, i32 1, !dbg !8073
  br i1 %cmp11, label %land.lhs.true, label %if.then.23, !dbg !8071

land.lhs.true:                                    ; preds = %if.end.10
  %7 = load i32, i32* %arrayidx13, align 4, !dbg !8073, !tbaa !2786
  %cmp14 = icmp sgt i32 %7, -1, !dbg !8073
  br i1 %cmp14, label %land.lhs.true.15, label %if.then.23, !dbg !8073

land.lhs.true.15:                                 ; preds = %land.lhs.true
  %arrayidx17 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 3, i32 2, !dbg !8075
  %8 = load i32, i32* %arrayidx17, align 4, !dbg !8075, !tbaa !2786
  %cmp18 = icmp sgt i32 %8, -1, !dbg !8075
  br i1 %cmp18, label %land.lhs.true.19, label %if.then.23, !dbg !8075

land.lhs.true.19:                                 ; preds = %land.lhs.true.15
  %arrayidx21 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 3, i32 3, !dbg !8077
  %9 = load i32, i32* %arrayidx21, align 4, !dbg !8077, !tbaa !2786
  %cmp22 = icmp sgt i32 %9, -1, !dbg !8077
  br i1 %cmp22, label %if.end.24, label %if.then.23, !dbg !8079

if.then.23:                                       ; preds = %land.lhs.true.19, %land.lhs.true.15, %land.lhs.true, %if.end.10
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.190, i32 0, i32 0)) #6, !dbg !8080
  %.pre657 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 3, i32 2, !dbg !8085
  %.pre658 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 3, i32 3, !dbg !8086
  br label %if.end.24, !dbg !8080

if.end.24:                                        ; preds = %if.then.23, %land.lhs.true.19
  %arrayidx62.pre-phi = phi i32* [ %.pre658, %if.then.23 ], [ %arrayidx21, %land.lhs.true.19 ], !dbg !8086
  %arrayidx58.pre-phi = phi i32* [ %.pre657, %if.then.23 ], [ %arrayidx17, %land.lhs.true.19 ], !dbg !8085
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !8087
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !8089
  %call.i.258 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !8090
  %add.ptr.i.261 = getelementptr inbounds i8, i8* %call.i.258, i32 1023, !dbg !8091
  store i8 0, i8* %add.ptr.i.261, align 1, !dbg !8092, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8093
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.191, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8095
  %call.i.265 = call i8* @halide_string_to_string(i8* %call.i.258, i8* %add.ptr.i.261, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.191, i32 0, i32 0)) #6, !dbg !8096
  %call27 = call zeroext i1 @is_interleaved_rgba_buffer_t(%struct.buffer_t* %buf) #7, !dbg !8097
  %cond = select i1 %call27, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.193, i32 0, i32 0), !dbg !8097
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8098
  call void @llvm.dbg.value(metadata i8* %cond, i64 0, metadata !2500, metadata !2613) #2, !dbg !8100
  %call.i.268 = call i8* @halide_string_to_string(i8* %call.i.265, i8* %add.ptr.i.261, i8* %cond) #6, !dbg !8101
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8102
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.194, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8104
  %call.i.271 = call i8* @halide_string_to_string(i8* %call.i.268, i8* %add.ptr.i.261, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.194, i32 0, i32 0)) #6, !dbg !8105
  %conv = zext i32 %call6 to i64, !dbg !8106
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2515, metadata !2613) #2, !dbg !8107
  call void @llvm.dbg.value(metadata i64 %conv, i64 0, metadata !2516, metadata !2613) #2, !dbg !8109
  %call.i.274 = call i8* @halide_int64_to_string(i8* %call.i.271, i8* %add.ptr.i.261, i64 %conv, i32 1) #6, !dbg !8110
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8111
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.195, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8113
  %call.i.277 = call i8* @halide_string_to_string(i8* %call.i.274, i8* %add.ptr.i.261, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.195, i32 0, i32 0)) #6, !dbg !8114
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8115
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.196, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8117
  %call.i.280 = call i8* @halide_string_to_string(i8* %call.i.277, i8* %add.ptr.i.261, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.196, i32 0, i32 0)) #6, !dbg !8118
  %arrayidx33 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 2, i32 0, !dbg !8119
  %10 = load i32, i32* %arrayidx33, align 4, !dbg !8119, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !8120
  call void @llvm.dbg.value(metadata i32 %10, i64 0, metadata !2508, metadata !2613) #2, !dbg !8122
  %conv.i = sext i32 %10 to i64, !dbg !8123
  %call.i.283 = call i8* @halide_int64_to_string(i8* %call.i.280, i8* %add.ptr.i.261, i64 %conv.i, i32 1) #6, !dbg !8124
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8125
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8127
  %call.i.286 = call i8* @halide_string_to_string(i8* %call.i.283, i8* %add.ptr.i.261, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0)) #6, !dbg !8128
  %arrayidx37 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 2, i32 1, !dbg !8129
  %11 = load i32, i32* %arrayidx37, align 4, !dbg !8129, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !8130
  call void @llvm.dbg.value(metadata i32 %11, i64 0, metadata !2508, metadata !2613) #2, !dbg !8132
  %conv.i.289 = sext i32 %11 to i64, !dbg !8133
  %call.i.290 = call i8* @halide_int64_to_string(i8* %call.i.286, i8* %add.ptr.i.261, i64 %conv.i.289, i32 1) #6, !dbg !8134
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8135
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8137
  %call.i.293 = call i8* @halide_string_to_string(i8* %call.i.290, i8* %add.ptr.i.261, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0)) #6, !dbg !8138
  %arrayidx41 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 2, i32 2, !dbg !8139
  %12 = load i32, i32* %arrayidx41, align 4, !dbg !8139, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !8140
  call void @llvm.dbg.value(metadata i32 %12, i64 0, metadata !2508, metadata !2613) #2, !dbg !8142
  %conv.i.296 = sext i32 %12 to i64, !dbg !8143
  %call.i.297 = call i8* @halide_int64_to_string(i8* %call.i.293, i8* %add.ptr.i.261, i64 %conv.i.296, i32 1) #6, !dbg !8144
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8145
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8147
  %call.i.300 = call i8* @halide_string_to_string(i8* %call.i.297, i8* %add.ptr.i.261, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0)) #6, !dbg !8148
  %arrayidx45 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 2, i32 3, !dbg !8149
  %13 = load i32, i32* %arrayidx45, align 4, !dbg !8149, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !8150
  call void @llvm.dbg.value(metadata i32 %13, i64 0, metadata !2508, metadata !2613) #2, !dbg !8152
  %conv.i.303 = sext i32 %13 to i64, !dbg !8153
  %call.i.304 = call i8* @halide_int64_to_string(i8* %call.i.300, i8* %add.ptr.i.261, i64 %conv.i.303, i32 1) #6, !dbg !8154
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8155
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.198, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8157
  %call.i.307 = call i8* @halide_string_to_string(i8* %call.i.304, i8* %add.ptr.i.261, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.198, i32 0, i32 0)) #6, !dbg !8158
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8159
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.199, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8161
  %call.i.310 = call i8* @halide_string_to_string(i8* %call.i.307, i8* %add.ptr.i.261, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.199, i32 0, i32 0)) #6, !dbg !8162
  %14 = load i32, i32* %arrayidx, align 4, !dbg !8163, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !8164
  call void @llvm.dbg.value(metadata i32 %14, i64 0, metadata !2508, metadata !2613) #2, !dbg !8166
  %conv.i.313 = sext i32 %14 to i64, !dbg !8167
  %call.i.314 = call i8* @halide_int64_to_string(i8* %call.i.310, i8* %add.ptr.i.261, i64 %conv.i.313, i32 1) #6, !dbg !8168
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8169
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8171
  %call.i.317 = call i8* @halide_string_to_string(i8* %call.i.314, i8* %add.ptr.i.261, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0)) #6, !dbg !8172
  %15 = load i32, i32* %arrayidx13, align 4, !dbg !8173, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !8174
  call void @llvm.dbg.value(metadata i32 %15, i64 0, metadata !2508, metadata !2613) #2, !dbg !8176
  %conv.i.320 = sext i32 %15 to i64, !dbg !8177
  %call.i.321 = call i8* @halide_int64_to_string(i8* %call.i.317, i8* %add.ptr.i.261, i64 %conv.i.320, i32 1) #6, !dbg !8178
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8179
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8181
  %call.i.324 = call i8* @halide_string_to_string(i8* %call.i.321, i8* %add.ptr.i.261, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0)) #6, !dbg !8182
  %16 = load i32, i32* %arrayidx58.pre-phi, align 4, !dbg !8085, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !8183
  call void @llvm.dbg.value(metadata i32 %16, i64 0, metadata !2508, metadata !2613) #2, !dbg !8185
  %conv.i.327 = sext i32 %16 to i64, !dbg !8186
  %call.i.328 = call i8* @halide_int64_to_string(i8* %call.i.324, i8* %add.ptr.i.261, i64 %conv.i.327, i32 1) #6, !dbg !8187
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8188
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8190
  %call.i.331 = call i8* @halide_string_to_string(i8* %call.i.328, i8* %add.ptr.i.261, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0)) #6, !dbg !8191
  %17 = load i32, i32* %arrayidx62.pre-phi, align 4, !dbg !8086, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !8192
  call void @llvm.dbg.value(metadata i32 %17, i64 0, metadata !2508, metadata !2613) #2, !dbg !8194
  %conv.i.334 = sext i32 %17 to i64, !dbg !8195
  %call.i.335 = call i8* @halide_int64_to_string(i8* %call.i.331, i8* %add.ptr.i.261, i64 %conv.i.334, i32 1) #6, !dbg !8196
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8197
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.198, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8199
  %call.i.338 = call i8* @halide_string_to_string(i8* %call.i.335, i8* %add.ptr.i.261, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.198, i32 0, i32 0)) #6, !dbg !8200
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8201
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8203
  %call.i.341 = call i8* @halide_string_to_string(i8* %call.i.338, i8* %add.ptr.i.261, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i32 0, i32 0)) #6, !dbg !8204
  %elem_size = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 5, !dbg !8205
  %18 = load i32, i32* %elem_size, align 4, !dbg !8205, !tbaa !4706
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !8206
  call void @llvm.dbg.value(metadata i32 %18, i64 0, metadata !2508, metadata !2613) #2, !dbg !8208
  %conv.i.344 = sext i32 %18 to i64, !dbg !8209
  %call.i.345 = call i8* @halide_int64_to_string(i8* %call.i.341, i8* %add.ptr.i.261, i64 %conv.i.344, i32 1) #6, !dbg !8210
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8211
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.201, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8213
  %call.i.348 = call i8* @halide_string_to_string(i8* %call.i.345, i8* %add.ptr.i.261, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.201, i32 0, i32 0)) #6, !dbg !8214
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !8215
  call void @halide_print(i8* %user_context, i8* %call.i.258) #6, !dbg !8217
  call void @halide_free(i8* %user_context, i8* %call.i.258) #6, !dbg !8218
  %call68 = call i64 @halide_current_time_ns(i8* %user_context) #6, !dbg !8219
  call void @llvm.dbg.value(metadata i64 %call68, i64 0, metadata !2345, metadata !2613), !dbg !8220
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !2346, metadata !2613), !dbg !8221
  %19 = load i32, i32* %elem_size, align 4, !dbg !8222, !tbaa !4706
  switch i32 %19, label %sw.default [
    i32 1, label %sw.epilog
    i32 2, label %sw.bb.70
    i32 4, label %sw.bb.71
  ], !dbg !8223

sw.bb.70:                                         ; preds = %if.end.24
  call void @llvm.dbg.value(metadata i32 9, i64 0, metadata !2347, metadata !2613), !dbg !8224
  br label %sw.epilog, !dbg !8225

sw.bb.71:                                         ; preds = %if.end.24
  call void @llvm.dbg.value(metadata i32 2, i64 0, metadata !2347, metadata !2613), !dbg !8224
  br label %sw.epilog, !dbg !8227

sw.default:                                       ; preds = %if.end.24
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2565, metadata !2613) #2, !dbg !8228
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2567, metadata !2613) #2, !dbg !8230
  %call.i.352 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !8231
  %add.ptr.i.355 = getelementptr inbounds i8, i8* %call.i.352, i32 1023, !dbg !8233
  store i8 0, i8* %add.ptr.i.355, align 1, !dbg !8234, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2573, metadata !2613) #2, !dbg !8235
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.202, i32 0, i32 0), i64 0, metadata !2574, metadata !2613) #2, !dbg !8237
  %call.i.359 = call i8* @halide_string_to_string(i8* %call.i.352, i8* %add.ptr.i.355, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.202, i32 0, i32 0)) #6, !dbg !8238
  %20 = load i32, i32* %elem_size, align 4, !dbg !8239, !tbaa !4706
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2577, metadata !2613) #2, !dbg !8240
  call void @llvm.dbg.value(metadata i32 %20, i64 0, metadata !2578, metadata !2613) #2, !dbg !8242
  %conv.i.362 = sext i32 %20 to i64, !dbg !8243
  %call.i.363 = call i8* @halide_int64_to_string(i8* %call.i.359, i8* %add.ptr.i.355, i64 %conv.i.362, i32 1) #6, !dbg !8244
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2573, metadata !2613) #2, !dbg !8245
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !2574, metadata !2613) #2, !dbg !8247
  %call.i.366 = call i8* @halide_string_to_string(i8* %call.i.363, i8* %add.ptr.i.355, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !8248
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2570, metadata !2613) #2, !dbg !8249
  call void @halide_error(i8* %user_context, i8* %call.i.352) #6, !dbg !8251
  call void @halide_free(i8* %user_context, i8* %call.i.352) #6, !dbg !8255
  br label %sw.epilog, !dbg !8256

sw.epilog:                                        ; preds = %sw.default, %sw.bb.71, %sw.bb.70, %if.end.24
  %datatype.0 = phi i32 [ undef, %sw.default ], [ 2, %sw.bb.71 ], [ 9, %sw.bb.70 ], [ 8, %if.end.24 ]
  %call77 = call zeroext i1 @is_interleaved_rgba_buffer_t(%struct.buffer_t* %buf) #7, !dbg !8257
  %21 = load %struct.dispatchTable*, %struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE, align 4, !dbg !8258, !tbaa !2768
  %ElementCreate = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %21, i32 0, i32 31, !dbg !8259
  %22 = load i8* (i8*, i32, i32, i1, i32)*, i8* (i8*, i32, i32, i1, i32)** %ElementCreate, align 4, !dbg !8259, !tbaa !6961
  %23 = load i8*, i8** %mContext.i, align 4, !dbg !8260, !tbaa !7529
  br i1 %call77, label %if.then.78, label %if.else, !dbg !8261

if.then.78:                                       ; preds = %sw.epilog
  %call79 = call i8* %22(i8* %23, i32 %datatype.0, i32 11, i1 zeroext true, i32 4) #6, !dbg !8258
  call void @llvm.dbg.value(metadata i8* %call79, i64 0, metadata !2348, metadata !2613), !dbg !8262
  %24 = load %struct.dispatchTable*, %struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE, align 4, !dbg !8263, !tbaa !2768
  %TypeCreate = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %24, i32 0, i32 16, !dbg !8264
  %25 = load i8* (i8*, i8*, i32, i32, i32, i1, i1, i32)*, i8* (i8*, i8*, i32, i32, i32, i1, i1, i32)** %TypeCreate, align 4, !dbg !8264, !tbaa !6851
  %26 = load i8*, i8** %mContext.i, align 4, !dbg !8265, !tbaa !7529
  %27 = load i32, i32* %arrayidx33, align 4, !dbg !8266, !tbaa !2786
  %28 = load i32, i32* %arrayidx37, align 4, !dbg !8267, !tbaa !2786
  %call85 = call i8* %25(i8* %26, i8* %call79, i32 %27, i32 %28, i32 0, i1 zeroext false, i1 zeroext false, i32 0) #6, !dbg !8263
  call void @llvm.dbg.value(metadata i8* %call85, i64 0, metadata !2346, metadata !2613), !dbg !8221
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !8268
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !8270
  %call.i.370 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !8271
  %add.ptr.i.373 = getelementptr inbounds i8, i8* %call.i.370, i32 1023, !dbg !8272
  store i8 0, i8* %add.ptr.i.373, align 1, !dbg !8273, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8274
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.203, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8276
  %call.i.377 = call i8* @halide_string_to_string(i8* %call.i.370, i8* %add.ptr.i.373, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.203, i32 0, i32 0)) #6, !dbg !8277
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !8278
  call void @llvm.dbg.value(metadata i8* %call85, i64 0, metadata !2504, metadata !2613) #2, !dbg !8280
  %call.i.380 = call i8* @halide_pointer_to_string(i8* %call.i.377, i8* %add.ptr.i.373, i8* %call85) #6, !dbg !8281
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8282
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.198, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8284
  %call.i.383 = call i8* @halide_string_to_string(i8* %call.i.380, i8* %add.ptr.i.373, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.198, i32 0, i32 0)) #6, !dbg !8285
  %29 = load i32, i32* %arrayidx33, align 4, !dbg !8286, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !8287
  call void @llvm.dbg.value(metadata i32 %29, i64 0, metadata !2508, metadata !2613) #2, !dbg !8289
  %conv.i.386 = sext i32 %29 to i64, !dbg !8290
  %call.i.387 = call i8* @halide_int64_to_string(i8* %call.i.383, i8* %add.ptr.i.373, i64 %conv.i.386, i32 1) #6, !dbg !8291
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8292
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8294
  %call.i.390 = call i8* @halide_string_to_string(i8* %call.i.387, i8* %add.ptr.i.373, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0)) #6, !dbg !8295
  %30 = load i32, i32* %arrayidx37, align 4, !dbg !8296, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !8297
  call void @llvm.dbg.value(metadata i32 %30, i64 0, metadata !2508, metadata !2613) #2, !dbg !8299
  %conv.i.393 = sext i32 %30 to i64, !dbg !8300
  %call.i.394 = call i8* @halide_int64_to_string(i8* %call.i.390, i8* %add.ptr.i.373, i64 %conv.i.393, i32 1) #6, !dbg !8301
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8302
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8304
  %call.i.397 = call i8* @halide_string_to_string(i8* %call.i.394, i8* %add.ptr.i.373, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !8305
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !8306
  call void @halide_print(i8* %user_context, i8* %call.i.370) #6, !dbg !8308
  call void @halide_free(i8* %user_context, i8* %call.i.370) #6, !dbg !8309
  br label %if.end.126, !dbg !8310

if.else:                                          ; preds = %sw.epilog
  %call100 = call i8* %22(i8* %23, i32 %datatype.0, i32 0, i1 zeroext true, i32 1) #6, !dbg !8311
  call void @llvm.dbg.value(metadata i8* %call100, i64 0, metadata !2351, metadata !2613), !dbg !8312
  %31 = load %struct.dispatchTable*, %struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE, align 4, !dbg !8313, !tbaa !2768
  %TypeCreate101 = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %31, i32 0, i32 16, !dbg !8314
  %32 = load i8* (i8*, i8*, i32, i32, i32, i1, i1, i32)*, i8* (i8*, i8*, i32, i32, i32, i1, i1, i32)** %TypeCreate101, align 4, !dbg !8314, !tbaa !6851
  %33 = load i8*, i8** %mContext.i, align 4, !dbg !8315, !tbaa !7529
  %34 = load i32, i32* %arrayidx33, align 4, !dbg !8316, !tbaa !2786
  %35 = load i32, i32* %arrayidx37, align 4, !dbg !8317, !tbaa !2786
  %36 = load i32, i32* %arrayidx41, align 4, !dbg !8318, !tbaa !2786
  %call109 = call i8* %32(i8* %33, i8* %call100, i32 %34, i32 %35, i32 %36, i1 zeroext false, i1 zeroext false, i32 0) #6, !dbg !8313
  call void @llvm.dbg.value(metadata i8* %call109, i64 0, metadata !2346, metadata !2613), !dbg !8221
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !8319
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !8321
  %call.i.401 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !8322
  %add.ptr.i.404 = getelementptr inbounds i8, i8* %call.i.401, i32 1023, !dbg !8323
  store i8 0, i8* %add.ptr.i.404, align 1, !dbg !8324, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8325
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.204, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8327
  %call.i.408 = call i8* @halide_string_to_string(i8* %call.i.401, i8* %add.ptr.i.404, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.204, i32 0, i32 0)) #6, !dbg !8328
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !8329
  call void @llvm.dbg.value(metadata i8* %call109, i64 0, metadata !2504, metadata !2613) #2, !dbg !8331
  %call.i.411 = call i8* @halide_pointer_to_string(i8* %call.i.408, i8* %add.ptr.i.404, i8* %call109) #6, !dbg !8332
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8333
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.198, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8335
  %call.i.414 = call i8* @halide_string_to_string(i8* %call.i.411, i8* %add.ptr.i.404, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.198, i32 0, i32 0)) #6, !dbg !8336
  %37 = load i32, i32* %arrayidx33, align 4, !dbg !8337, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !8338
  call void @llvm.dbg.value(metadata i32 %37, i64 0, metadata !2508, metadata !2613) #2, !dbg !8340
  %conv.i.417 = sext i32 %37 to i64, !dbg !8341
  %call.i.418 = call i8* @halide_int64_to_string(i8* %call.i.414, i8* %add.ptr.i.404, i64 %conv.i.417, i32 1) #6, !dbg !8342
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8343
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8345
  %call.i.421 = call i8* @halide_string_to_string(i8* %call.i.418, i8* %add.ptr.i.404, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0)) #6, !dbg !8346
  %38 = load i32, i32* %arrayidx37, align 4, !dbg !8347, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !8348
  call void @llvm.dbg.value(metadata i32 %38, i64 0, metadata !2508, metadata !2613) #2, !dbg !8350
  %conv.i.424 = sext i32 %38 to i64, !dbg !8351
  %call.i.425 = call i8* @halide_int64_to_string(i8* %call.i.421, i8* %add.ptr.i.404, i64 %conv.i.424, i32 1) #6, !dbg !8352
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8353
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8355
  %call.i.428 = call i8* @halide_string_to_string(i8* %call.i.425, i8* %add.ptr.i.404, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0)) #6, !dbg !8356
  %39 = load i32, i32* %arrayidx41, align 4, !dbg !8357, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !8358
  call void @llvm.dbg.value(metadata i32 %39, i64 0, metadata !2508, metadata !2613) #2, !dbg !8360
  %conv.i.431 = sext i32 %39 to i64, !dbg !8361
  %call.i.432 = call i8* @halide_int64_to_string(i8* %call.i.428, i8* %add.ptr.i.404, i64 %conv.i.431, i32 1) #6, !dbg !8362
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8363
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8365
  %call.i.435 = call i8* @halide_string_to_string(i8* %call.i.432, i8* %add.ptr.i.404, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !8366
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !8367
  call void @halide_print(i8* %user_context, i8* %call.i.401) #6, !dbg !8369
  call void @halide_free(i8* %user_context, i8* %call.i.401) #6, !dbg !8370
  br label %if.end.126

if.end.126:                                       ; preds = %if.else, %if.then.78
  %typeID.0 = phi i8* [ %call85, %if.then.78 ], [ %call109, %if.else ]
  %40 = load %struct.dispatchTable*, %struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE, align 4, !dbg !8371, !tbaa !2768
  %AllocationCreateTyped = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %40, i32 0, i32 17, !dbg !8372
  %41 = load i8* (i8*, i8*, i32, i32, i32)*, i8* (i8*, i8*, i32, i32, i32)** %AllocationCreateTyped, align 4, !dbg !8372, !tbaa !6861
  %42 = load i8*, i8** %mContext.i, align 4, !dbg !8373, !tbaa !7529
  %call128 = call i8* %41(i8* %42, i8* %typeID.0, i32 0, i32 129, i32 0) #6, !dbg !8371
  call void @llvm.dbg.value(metadata i8* %call128, i64 0, metadata !2353, metadata !2613), !dbg !8374
  %cmp129 = icmp eq i8* %call128, null, !dbg !8375
  %call.i.439 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !8377
  %add.ptr.i.442 = getelementptr inbounds i8, i8* %call.i.439, i32 1023, !dbg !8380
  store i8 0, i8* %add.ptr.i.442, align 1, !dbg !8381, !tbaa !3047
  br i1 %cmp129, label %if.then.130, label %if.else.133, !dbg !8382

if.then.130:                                      ; preds = %if.end.126
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2565, metadata !2613) #2, !dbg !8383
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2567, metadata !2613) #2, !dbg !8384
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2573, metadata !2613) #2, !dbg !8385
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.205, i32 0, i32 0), i64 0, metadata !2574, metadata !2613) #2, !dbg !8387
  %call.i.446 = call i8* @halide_string_to_string(i8* %call.i.439, i8* %add.ptr.i.442, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.205, i32 0, i32 0)) #6, !dbg !8388
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2570, metadata !2613) #2, !dbg !8389
  call void @halide_error(i8* %user_context, i8* %call.i.439) #6, !dbg !8391
  call void @halide_free(i8* %user_context, i8* %call.i.439) #6, !dbg !8392
  br label %cleanup.165, !dbg !8393

if.else.133:                                      ; preds = %if.end.126
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !8394
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !8397
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8398
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.206, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8400
  %call.i.457 = call i8* @halide_string_to_string(i8* %call.i.439, i8* %add.ptr.i.442, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.206, i32 0, i32 0)) #6, !dbg !8401
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !8402
  call void @llvm.dbg.value(metadata i8* %call128, i64 0, metadata !2504, metadata !2613) #2, !dbg !8404
  %call.i.460 = call i8* @halide_pointer_to_string(i8* %call.i.457, i8* %add.ptr.i.442, i8* %call128) #6, !dbg !8405
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8406
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8408
  %call.i.463 = call i8* @halide_string_to_string(i8* %call.i.460, i8* %add.ptr.i.442, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0)) #6, !dbg !8409
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !8410
  call void @llvm.dbg.value(metadata i8* %typeID.0, i64 0, metadata !2504, metadata !2613) #2, !dbg !8412
  %call.i.466 = call i8* @halide_pointer_to_string(i8* %call.i.463, i8* %add.ptr.i.442, i8* %typeID.0) #6, !dbg !8413
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8414
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.208, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8416
  %call.i.469 = call i8* @halide_string_to_string(i8* %call.i.466, i8* %add.ptr.i.442, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.208, i32 0, i32 0)) #6, !dbg !8417
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !8418
  call void @halide_print(i8* %user_context, i8* %call.i.439) #6, !dbg !8420
  call void @halide_free(i8* %user_context, i8* %call.i.439) #6, !dbg !8421
  %43 = ptrtoint i8* %call128 to i32, !dbg !8422
  %44 = zext i32 %43 to i64, !dbg !8422
  %call141 = call i64 @halide_new_device_wrapper(i64 %44, %struct.halide_device_interface* nonnull @_ZN6Halide7Runtime8Internal12Renderscript29renderscript_device_interfaceE) #6, !dbg !8423
  store i64 %call141, i64* %dev, align 8, !dbg !8424, !tbaa !5488
  %cmp144 = icmp eq i64 %call141, 0, !dbg !8425
  %call.i.473 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !8427
  %add.ptr.i.476 = getelementptr inbounds i8, i8* %call.i.473, i32 1023, !dbg !8430
  store i8 0, i8* %add.ptr.i.476, align 1, !dbg !8431, !tbaa !3047
  br i1 %cmp144, label %if.then.145, label %if.end.148, !dbg !8432

if.then.145:                                      ; preds = %if.else.133
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2565, metadata !2613) #2, !dbg !8433
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2567, metadata !2613) #2, !dbg !8434
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2573, metadata !2613) #2, !dbg !8435
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.209, i32 0, i32 0), i64 0, metadata !2574, metadata !2613) #2, !dbg !8437
  %call.i.480 = call i8* @halide_string_to_string(i8* %call.i.473, i8* %add.ptr.i.476, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.209, i32 0, i32 0)) #6, !dbg !8438
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2570, metadata !2613) #2, !dbg !8439
  call void @halide_error(i8* %user_context, i8* %call.i.473) #6, !dbg !8441
  call void @halide_free(i8* %user_context, i8* %call.i.473) #6, !dbg !8442
  br label %cleanup.165, !dbg !8443

if.end.148:                                       ; preds = %if.else.133
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !8444
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !8446
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8447
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.210, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8449
  %call.i.491 = call i8* @halide_string_to_string(i8* %call.i.473, i8* %add.ptr.i.476, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.210, i32 0, i32 0)) #6, !dbg !8450
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !8451
  call void @llvm.dbg.value(metadata i8* %call128, i64 0, metadata !2504, metadata !2613) #2, !dbg !8453
  %call.i.494 = call i8* @halide_pointer_to_string(i8* %call.i.491, i8* %add.ptr.i.476, i8* %call128) #6, !dbg !8454
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8455
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8457
  %call.i.497 = call i8* @halide_string_to_string(i8* %call.i.494, i8* %add.ptr.i.476, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.207, i32 0, i32 0)) #6, !dbg !8458
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !8459
  call void @llvm.dbg.value(metadata i8* %typeID.0, i64 0, metadata !2504, metadata !2613) #2, !dbg !8461
  %call.i.500 = call i8* @halide_pointer_to_string(i8* %call.i.497, i8* %add.ptr.i.476, i8* %typeID.0) #6, !dbg !8462
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8463
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8465
  %call.i.503 = call i8* @halide_string_to_string(i8* %call.i.500, i8* %add.ptr.i.476, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !8466
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !8467
  call void @halide_print(i8* %user_context, i8* %call.i.473) #6, !dbg !8469
  call void @halide_free(i8* %user_context, i8* %call.i.473) #6, !dbg !8470
  %call155 = call i64 @halide_current_time_ns(i8* %user_context) #6, !dbg !8471
  call void @llvm.dbg.value(metadata i64 %call155, i64 0, metadata !2354, metadata !2613), !dbg !8472
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !8473
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !8475
  %call.i.507 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !8476
  %add.ptr.i.510 = getelementptr inbounds i8, i8* %call.i.507, i32 1023, !dbg !8477
  store i8 0, i8* %add.ptr.i.510, align 1, !dbg !8478, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8479
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.211, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8481
  %call.i.514 = call i8* @halide_string_to_string(i8* %call.i.507, i8* %add.ptr.i.510, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.211, i32 0, i32 0)) #6, !dbg !8482
  %sub = sub i64 %call155, %call68, !dbg !8483
  %conv158 = uitofp i64 %sub to double, !dbg !8484
  %div = fdiv double %conv158, 1.000000e+06, !dbg !8485
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2511, metadata !2613) #2, !dbg !8486
  call void @llvm.dbg.value(metadata double %div, i64 0, metadata !2512, metadata !2613) #2, !dbg !8488
  %call.i.517 = call i8* @halide_double_to_string(i8* %call.i.514, i8* %add.ptr.i.510, double %div, i32 1) #6, !dbg !8489
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8490
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8492
  %call.i.520 = call i8* @halide_string_to_string(i8* %call.i.517, i8* %add.ptr.i.510, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0)) #6, !dbg !8493
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !8494
  call void @halide_print(i8* %user_context, i8* %call.i.507) #6, !dbg !8496
  call void @halide_free(i8* %user_context, i8* %call.i.507) #6, !dbg !8497
  br label %cleanup.165

cleanup.165:                                      ; preds = %if.end.148, %if.then.145, %if.then.130, %if.then.7, %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit
  %retval.2 = phi i32 [ %4, %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit ], [ 0, %if.then.7 ], [ -1, %if.then.130 ], [ -1, %if.then.145 ], [ 0, %if.end.148 ]
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2343, metadata !2613), !dbg !8028
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2442, metadata !2613) #2, !dbg !8498
  %45 = load i8*, i8** %user_context2.i, align 4, !dbg !8500, !tbaa !7524
  %call.i.524 = call i32 @halide_renderscript_release_context(i8* %45) #6, !dbg !8501
  call void @llvm.lifetime.end(i64 16, i8* %1) #2, !dbg !8502
  ret i32 %retval.2, !dbg !8502
}

; Function Attrs: nounwind
define weak i32 @halide_renderscript_copy_to_device(i8* %user_context, %struct.buffer_t* %buf) #0 {
entry:
  %ctx = alloca %"class.Halide::Runtime::Internal::Renderscript::Context", align 4
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2357, metadata !2613), !dbg !8503
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %buf, i64 0, metadata !2358, metadata !2613), !dbg !8504
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !8505
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !8507
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !8508
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !8509
  store i8 0, i8* %add.ptr.i, align 1, !dbg !8510, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8511
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.212, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8513
  %call.i.161 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.212, i32 0, i32 0)) #6, !dbg !8514
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !8515
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2504, metadata !2613) #2, !dbg !8517
  %call.i.164 = tail call i8* @halide_pointer_to_string(i8* %call.i.161, i8* %add.ptr.i, i8* %user_context) #6, !dbg !8518
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8519
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.213, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8521
  %call.i.167 = tail call i8* @halide_string_to_string(i8* %call.i.164, i8* %add.ptr.i, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.213, i32 0, i32 0)) #6, !dbg !8522
  %call3 = tail call zeroext i1 @is_interleaved_rgba_buffer_t(%struct.buffer_t* %buf) #7, !dbg !8523
  %cond = select i1 %call3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.214, i32 0, i32 0), !dbg !8523
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8524
  tail call void @llvm.dbg.value(metadata i8* %cond, i64 0, metadata !2500, metadata !2613) #2, !dbg !8526
  %call.i.170 = tail call i8* @halide_string_to_string(i8* %call.i.167, i8* %add.ptr.i, i8* %cond) #6, !dbg !8527
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8528
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.215, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8530
  %call.i.173 = tail call i8* @halide_string_to_string(i8* %call.i.170, i8* %add.ptr.i, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.215, i32 0, i32 0)) #6, !dbg !8531
  %0 = bitcast %struct.buffer_t* %buf to i8*, !dbg !8532
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !8533
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !2504, metadata !2613) #2, !dbg !8535
  %call.i.176 = tail call i8* @halide_pointer_to_string(i8* %call.i.173, i8* %add.ptr.i, i8* %0) #6, !dbg !8536
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8537
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.180, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8539
  %call.i.179 = tail call i8* @halide_string_to_string(i8* %call.i.176, i8* %add.ptr.i, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.180, i32 0, i32 0)) #6, !dbg !8540
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !8541
  tail call void @halide_print(i8* %user_context, i8* %call.i) #6, !dbg !8543
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !8544
  %1 = bitcast %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx to i8*, !dbg !8545
  call void @llvm.lifetime.start(i64 16, i8* %1) #2, !dbg !8545
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2359, metadata !2613), !dbg !8546
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2437, metadata !2613) #2, !dbg !8547
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2439, metadata !2613) #2, !dbg !8549
  %user_context2.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 0, !dbg !8550
  store i8* %user_context, i8** %user_context2.i, align 4, !dbg !8550, !tbaa !7524
  %mDev.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 1, !dbg !8551
  store i8* null, i8** %mDev.i, align 4, !dbg !8551, !tbaa !7527
  %mContext.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 2, !dbg !8552
  store i8* null, i8** %mContext.i, align 4, !dbg !8552, !tbaa !7529
  %error.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 3, !dbg !8553
  store i32 2, i32* %error.i, align 4, !dbg !8553, !tbaa !7531
  %call.i.182 = tail call i32 @halide_start_clock(i8* %user_context) #6, !dbg !8554
  %call5.i = call i32 @halide_renderscript_acquire_context(i8* %user_context, i8** %mDev.i, i8** %mContext.i, i1 zeroext true) #6, !dbg !8555
  store i32 %call5.i, i32* %error.i, align 4, !dbg !8556, !tbaa !7531
  %2 = load i8*, i8** %mDev.i, align 4, !dbg !8557, !tbaa !7527
  %cmp.i = icmp eq i8* %2, null, !dbg !8557
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !8558

if.then.i:                                        ; preds = %entry
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.283, i32 0, i32 0)) #6, !dbg !8559
  br label %if.end.i, !dbg !8559

if.end.i:                                         ; preds = %if.then.i, %entry
  %3 = load i8*, i8** %mContext.i, align 4, !dbg !8560, !tbaa !7529
  %cmp9.i = icmp eq i8* %3, null, !dbg !8560
  br i1 %cmp9.i, label %if.then.10.i, label %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit, !dbg !8561

if.then.10.i:                                     ; preds = %if.end.i
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.284, i32 0, i32 0)) #6, !dbg !8562
  br label %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit, !dbg !8562

_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit: ; preds = %if.then.10.i, %if.end.i
  %4 = load i32, i32* %error.i, align 4, !dbg !8563, !tbaa !7531
  %cmp = icmp eq i32 %4, 0, !dbg !8565
  br i1 %cmp, label %if.end, label %cleanup, !dbg !8566

if.end:                                           ; preds = %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit
  %call9 = call i64 @halide_current_time_ns(i8* %user_context) #6, !dbg !8567
  call void @llvm.dbg.value(metadata i64 %call9, i64 0, metadata !2360, metadata !2613), !dbg !8568
  %host = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 1, !dbg !8569
  %5 = load i8*, i8** %host, align 4, !dbg !8569, !tbaa !4725
  %tobool = icmp eq i8* %5, null, !dbg !8569
  br i1 %tobool, label %if.then.11, label %land.lhs.true, !dbg !8569

land.lhs.true:                                    ; preds = %if.end
  %dev = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 0, !dbg !8571
  %6 = load i64, i64* %dev, align 8, !dbg !8571, !tbaa !5488
  %tobool10 = icmp eq i64 %6, 0, !dbg !8571
  br i1 %tobool10, label %if.then.11, label %if.end.12, !dbg !8573

if.then.11:                                       ; preds = %land.lhs.true, %if.end
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.216, i32 0, i32 0)) #6, !dbg !8574
  br label %if.end.12, !dbg !8574

if.end.12:                                        ; preds = %if.then.11, %land.lhs.true
  %call13 = call zeroext i1 @is_interleaved_rgba_buffer_t(%struct.buffer_t* %buf) #7, !dbg !8577
  %.pre = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 2, i32 2, !dbg !8579
  br i1 %call13, label %if.then.15, label %lor.lhs.false, !dbg !8581

lor.lhs.false:                                    ; preds = %if.end.12
  %7 = load i32, i32* %.pre, align 4, !dbg !8582, !tbaa !2786
  %cmp14 = icmp eq i32 %7, 0, !dbg !8583
  br i1 %cmp14, label %if.then.15, label %if.else, !dbg !8584

if.then.15:                                       ; preds = %lor.lhs.false, %if.end.12
  %8 = load %struct.dispatchTable*, %struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE, align 4, !dbg !8585, !tbaa !2768
  %Allocation2DData = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %8, i32 0, i32 37, !dbg !8586
  %9 = load void (i8*, i8*, i32, i32, i32, i32, i32, i32, i8*, i32, i32)*, void (i8*, i8*, i32, i32, i32, i32, i32, i32, i8*, i32, i32)** %Allocation2DData, align 4, !dbg !8586, !tbaa !7011
  %10 = load i8*, i8** %mContext.i, align 4, !dbg !8587, !tbaa !7529
  %dev16 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 0, !dbg !8588
  %11 = load i64, i64* %dev16, align 8, !dbg !8588, !tbaa !5488
  %call17 = call i64 @halide_get_device_handle(i64 %11) #6, !dbg !8589
  %conv = trunc i64 %call17 to i32, !dbg !8590
  %12 = inttoptr i32 %conv to i8*, !dbg !8590
  %arrayidx19 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 2, i32 0, !dbg !8591
  %13 = load i32, i32* %arrayidx19, align 4, !dbg !8591, !tbaa !2786
  %arrayidx21 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 2, i32 1, !dbg !8592
  %14 = load i32, i32* %arrayidx21, align 4, !dbg !8592, !tbaa !2786
  %15 = load i8*, i8** %host, align 4, !dbg !8593, !tbaa !4725
  %mul = mul nsw i32 %14, %13, !dbg !8594
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2586, metadata !2613), !dbg !8595
  tail call void @llvm.dbg.value(metadata i32* %.pre, i64 0, metadata !2587, metadata !2613), !dbg !8597
  %16 = load i32, i32* %.pre, align 4, !dbg !8598, !tbaa !2786
  %cmp.i.183 = icmp slt i32 %16, 1, !dbg !8599
  %..i = select i1 %cmp.i.183, i32 1, i32 %16, !dbg !8600
  %elem_size = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 5, !dbg !8601
  %17 = load i32, i32* %elem_size, align 4, !dbg !8601, !tbaa !4706
  %mul30 = mul i32 %mul, %17, !dbg !8602
  %mul31 = mul i32 %mul30, %..i, !dbg !8603
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2586, metadata !2613), !dbg !8604
  tail call void @llvm.dbg.value(metadata i32* %.pre, i64 0, metadata !2587, metadata !2613), !dbg !8606
  %mul38 = mul i32 %17, %13, !dbg !8607
  %mul40 = mul i32 %mul38, %..i, !dbg !8608
  call void %9(i8* %10, i8* %12, i32 0, i32 0, i32 0, i32 0, i32 %13, i32 %14, i8* %15, i32 %mul31, i32 %mul40) #6, !dbg !8585
  br label %if.end.66, !dbg !8609

if.else:                                          ; preds = %lor.lhs.false
  %18 = load %struct.dispatchTable*, %struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE, align 4, !dbg !8610, !tbaa !2768
  %Allocation3DData = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %18, i32 0, i32 38, !dbg !8612
  %19 = load void (i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32)*, void (i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32)** %Allocation3DData, align 4, !dbg !8612, !tbaa !7021
  %20 = load i8*, i8** %mContext.i, align 4, !dbg !8613, !tbaa !7529
  %dev42 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 0, !dbg !8614
  %21 = load i64, i64* %dev42, align 8, !dbg !8614, !tbaa !5488
  %call43 = call i64 @halide_get_device_handle(i64 %21) #6, !dbg !8615
  %conv44 = trunc i64 %call43 to i32, !dbg !8616
  %22 = inttoptr i32 %conv44 to i8*, !dbg !8616
  %arrayidx46 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 2, i32 0, !dbg !8617
  %23 = load i32, i32* %arrayidx46, align 4, !dbg !8617, !tbaa !2786
  %arrayidx48 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 2, i32 1, !dbg !8618
  %24 = load i32, i32* %arrayidx48, align 4, !dbg !8618, !tbaa !2786
  %25 = load i32, i32* %.pre, align 4, !dbg !8619, !tbaa !2786
  %26 = load i8*, i8** %host, align 4, !dbg !8620, !tbaa !4725
  %mul56 = mul nsw i32 %24, %23, !dbg !8621
  %mul59 = mul nsw i32 %mul56, %25, !dbg !8622
  %elem_size60 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 5, !dbg !8623
  %27 = load i32, i32* %elem_size60, align 4, !dbg !8623, !tbaa !4706
  %mul61 = mul nsw i32 %mul59, %27, !dbg !8624
  %mul65 = mul nsw i32 %27, %23, !dbg !8625
  call void %19(i8* %20, i8* %22, i32 0, i32 0, i32 0, i32 0, i32 %23, i32 %24, i32 %25, i8* %26, i32 %mul61, i32 %mul65) #6, !dbg !8610
  br label %if.end.66

if.end.66:                                        ; preds = %if.else, %if.then.15
  %elem_size86.pre-phi = phi i32* [ %elem_size60, %if.else ], [ %elem_size, %if.then.15 ], !dbg !8626
  %arrayidx79.pre-phi = phi i32* [ %arrayidx48, %if.else ], [ %arrayidx21, %if.then.15 ], !dbg !8627
  %arrayidx75.pre-phi = phi i32* [ %arrayidx46, %if.else ], [ %arrayidx19, %if.then.15 ], !dbg !8628
  %dev69.pre-phi = phi i64* [ %dev42, %if.else ], [ %dev16, %if.then.15 ], !dbg !8629
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !8630
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !8632
  %call.i.187 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !8633
  %add.ptr.i.190 = getelementptr inbounds i8, i8* %call.i.187, i32 1023, !dbg !8634
  store i8 0, i8* %add.ptr.i.190, align 1, !dbg !8635, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8636
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.217, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8638
  %call.i.194 = call i8* @halide_string_to_string(i8* %call.i.187, i8* %add.ptr.i.190, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.217, i32 0, i32 0)) #6, !dbg !8639
  %28 = load i64, i64* %dev69.pre-phi, align 8, !dbg !8629, !tbaa !5488
  %call70 = call i64 @halide_get_device_handle(i64 %28) #6, !dbg !8640
  %conv71 = trunc i64 %call70 to i32, !dbg !8641
  %29 = inttoptr i32 %conv71 to i8*, !dbg !8641
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !8642
  call void @llvm.dbg.value(metadata i8* %29, i64 0, metadata !2504, metadata !2613) #2, !dbg !8644
  %call.i.197 = call i8* @halide_pointer_to_string(i8* %call.i.194, i8* %add.ptr.i.190, i8* %29) #6, !dbg !8645
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8646
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.198, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8648
  %call.i.200 = call i8* @halide_string_to_string(i8* %call.i.197, i8* %add.ptr.i.190, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.198, i32 0, i32 0)) #6, !dbg !8649
  %30 = load i32, i32* %arrayidx75.pre-phi, align 4, !dbg !8628, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !8650
  call void @llvm.dbg.value(metadata i32 %30, i64 0, metadata !2508, metadata !2613) #2, !dbg !8652
  %conv.i = sext i32 %30 to i64, !dbg !8653
  %call.i.203 = call i8* @halide_int64_to_string(i8* %call.i.200, i8* %add.ptr.i.190, i64 %conv.i, i32 1) #6, !dbg !8654
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8655
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8657
  %call.i.206 = call i8* @halide_string_to_string(i8* %call.i.203, i8* %add.ptr.i.190, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0)) #6, !dbg !8658
  %31 = load i32, i32* %arrayidx79.pre-phi, align 4, !dbg !8627, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !8659
  call void @llvm.dbg.value(metadata i32 %31, i64 0, metadata !2508, metadata !2613) #2, !dbg !8661
  %conv.i.209 = sext i32 %31 to i64, !dbg !8662
  %call.i.210 = call i8* @halide_int64_to_string(i8* %call.i.206, i8* %add.ptr.i.190, i64 %conv.i.209, i32 1) #6, !dbg !8663
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8664
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8666
  %call.i.213 = call i8* @halide_string_to_string(i8* %call.i.210, i8* %add.ptr.i.190, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0)) #6, !dbg !8667
  %32 = load i32, i32* %.pre, align 4, !dbg !8668, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !8669
  call void @llvm.dbg.value(metadata i32 %32, i64 0, metadata !2508, metadata !2613) #2, !dbg !8671
  %conv.i.216 = sext i32 %32 to i64, !dbg !8672
  %call.i.217 = call i8* @halide_int64_to_string(i8* %call.i.213, i8* %add.ptr.i.190, i64 %conv.i.216, i32 1) #6, !dbg !8673
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8674
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.218, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8676
  %call.i.220 = call i8* @halide_string_to_string(i8* %call.i.217, i8* %add.ptr.i.190, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.218, i32 0, i32 0)) #6, !dbg !8677
  %33 = load i32, i32* %elem_size86.pre-phi, align 4, !dbg !8626, !tbaa !4706
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !8678
  call void @llvm.dbg.value(metadata i32 %33, i64 0, metadata !2508, metadata !2613) #2, !dbg !8680
  %conv.i.223 = sext i32 %33 to i64, !dbg !8681
  %call.i.224 = call i8* @halide_int64_to_string(i8* %call.i.220, i8* %add.ptr.i.190, i64 %conv.i.223, i32 1) #6, !dbg !8682
  %34 = load i32, i32* %elem_size86.pre-phi, align 4, !dbg !8683, !tbaa !4706
  %cmp89 = icmp eq i32 %34, 4, !dbg !8684
  %.str.219..str.220 = select i1 %cmp89, [14 x i8]* @.str.219, [14 x i8]* @.str.220, !dbg !8685
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %.str.219..str.220, i32 0, i32 0, !dbg !8687
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8690
  call void @llvm.dbg.value(metadata i8* %arraydecay, i64 0, metadata !2500, metadata !2613) #2, !dbg !8692
  %call.i.227 = call i8* @halide_string_to_string(i8* %call.i.224, i8* %add.ptr.i.190, i8* %arraydecay) #6, !dbg !8693
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8694
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.221, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8696
  %call.i.230 = call i8* @halide_string_to_string(i8* %call.i.227, i8* %add.ptr.i.190, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.221, i32 0, i32 0)) #6, !dbg !8697
  %35 = load i8*, i8** %host, align 4, !dbg !8698, !tbaa !4725
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !8699
  call void @llvm.dbg.value(metadata i8* %35, i64 0, metadata !2504, metadata !2613) #2, !dbg !8701
  %call.i.233 = call i8* @halide_pointer_to_string(i8* %call.i.230, i8* %add.ptr.i.190, i8* %35) #6, !dbg !8702
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8703
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.222, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8705
  %call.i.236 = call i8* @halide_string_to_string(i8* %call.i.233, i8* %add.ptr.i.190, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.222, i32 0, i32 0)) #6, !dbg !8706
  %36 = load i32, i32* %elem_size86.pre-phi, align 4, !dbg !8707, !tbaa !4706
  %cmp96 = icmp eq i32 %36, 4, !dbg !8708
  %37 = load i8*, i8** %host, align 4, !dbg !8709, !tbaa !4725
  br i1 %cmp96, label %cond.true.97, label %cond.false.99, !dbg !8710

cond.true.97:                                     ; preds = %if.end.66
  %38 = bitcast i8* %37 to float*, !dbg !8711
  %39 = load float, float* %38, align 4, !dbg !8712, !tbaa !3360
  br label %cond.end.103, !dbg !8710

cond.false.99:                                    ; preds = %if.end.66
  %40 = bitcast i8* %37 to i16*, !dbg !8713
  %41 = load i16, i16* %40, align 2, !dbg !8714, !tbaa !3293
  %conv102 = uitofp i16 %41 to float, !dbg !8715
  br label %cond.end.103, !dbg !8710

cond.end.103:                                     ; preds = %cond.false.99, %cond.true.97
  %cond104 = phi float [ %39, %cond.true.97 ], [ %conv102, %cond.false.99 ], !dbg !8710
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2590, metadata !2613) #2, !dbg !8716
  call void @llvm.dbg.value(metadata float %cond104, i64 0, metadata !2591, metadata !2613) #2, !dbg !8718
  %conv.i.239 = fpext float %cond104 to double, !dbg !8719
  %call.i.240 = call i8* @halide_double_to_string(i8* %call.i.236, i8* %add.ptr.i.190, double %conv.i.239, i32 0) #6, !dbg !8720
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8721
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8723
  %call.i.243 = call i8* @halide_string_to_string(i8* %call.i.240, i8* %add.ptr.i.190, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !8724
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !8725
  call void @halide_print(i8* %user_context, i8* %call.i.187) #6, !dbg !8727
  call void @halide_free(i8* %user_context, i8* %call.i.187) #6, !dbg !8728
  %call107 = call i64 @halide_current_time_ns(i8* %user_context) #6, !dbg !8729
  call void @llvm.dbg.value(metadata i64 %call107, i64 0, metadata !2361, metadata !2613), !dbg !8730
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !8731
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !8733
  %call.i.247 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !8734
  %add.ptr.i.250 = getelementptr inbounds i8, i8* %call.i.247, i32 1023, !dbg !8735
  store i8 0, i8* %add.ptr.i.250, align 1, !dbg !8736, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8737
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.176, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8739
  %call.i.254 = call i8* @halide_string_to_string(i8* %call.i.247, i8* %add.ptr.i.250, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.176, i32 0, i32 0)) #6, !dbg !8740
  %sub = sub i64 %call107, %call9, !dbg !8741
  %conv110 = uitofp i64 %sub to double, !dbg !8742
  %div = fdiv double %conv110, 1.000000e+06, !dbg !8743
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2511, metadata !2613) #2, !dbg !8744
  call void @llvm.dbg.value(metadata double %div, i64 0, metadata !2512, metadata !2613) #2, !dbg !8746
  %call.i.257 = call i8* @halide_double_to_string(i8* %call.i.254, i8* %add.ptr.i.250, double %div, i32 1) #6, !dbg !8747
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8748
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8750
  %call.i.260 = call i8* @halide_string_to_string(i8* %call.i.257, i8* %add.ptr.i.250, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0)) #6, !dbg !8751
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !8752
  call void @halide_print(i8* %user_context, i8* %call.i.247) #6, !dbg !8754
  call void @halide_free(i8* %user_context, i8* %call.i.247) #6, !dbg !8755
  br label %cleanup

cleanup:                                          ; preds = %cond.end.103, %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit
  %retval.0 = phi i32 [ 0, %cond.end.103 ], [ %4, %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit ]
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2359, metadata !2613), !dbg !8546
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2442, metadata !2613) #2, !dbg !8756
  %42 = load i8*, i8** %user_context2.i, align 4, !dbg !8758, !tbaa !7524
  %call.i.264 = call i32 @halide_renderscript_release_context(i8* %42) #6, !dbg !8759
  call void @llvm.lifetime.end(i64 16, i8* %1) #2, !dbg !8760
  ret i32 %retval.0, !dbg !8760
}

; Function Attrs: nounwind
define weak i32 @halide_renderscript_copy_to_host(i8* %user_context, %struct.buffer_t* %buf) #0 {
entry:
  %ctx = alloca %"class.Halide::Runtime::Internal::Renderscript::Context", align 4
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2364, metadata !2613), !dbg !8761
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %buf, i64 0, metadata !2365, metadata !2613), !dbg !8762
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !8763
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !8765
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !8766
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !8767
  store i8 0, i8* %add.ptr.i, align 1, !dbg !8768, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8769
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.223, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8771
  %call.i.311 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.223, i32 0, i32 0)) #6, !dbg !8772
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !8773
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2504, metadata !2613) #2, !dbg !8775
  %call.i.314 = tail call i8* @halide_pointer_to_string(i8* %call.i.311, i8* %add.ptr.i, i8* %user_context) #6, !dbg !8776
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8777
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.213, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8779
  %call.i.317 = tail call i8* @halide_string_to_string(i8* %call.i.314, i8* %add.ptr.i, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.213, i32 0, i32 0)) #6, !dbg !8780
  %call3 = tail call zeroext i1 @is_interleaved_rgba_buffer_t(%struct.buffer_t* %buf) #7, !dbg !8781
  %cond = select i1 %call3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.214, i32 0, i32 0), !dbg !8781
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8782
  tail call void @llvm.dbg.value(metadata i8* %cond, i64 0, metadata !2500, metadata !2613) #2, !dbg !8784
  %call.i.320 = tail call i8* @halide_string_to_string(i8* %call.i.317, i8* %add.ptr.i, i8* %cond) #6, !dbg !8785
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8786
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.224, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8788
  %call.i.323 = tail call i8* @halide_string_to_string(i8* %call.i.320, i8* %add.ptr.i, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.224, i32 0, i32 0)) #6, !dbg !8789
  %0 = bitcast %struct.buffer_t* %buf to i8*, !dbg !8790
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !8791
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !2504, metadata !2613) #2, !dbg !8793
  %call.i.326 = tail call i8* @halide_pointer_to_string(i8* %call.i.323, i8* %add.ptr.i, i8* %0) #6, !dbg !8794
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8795
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.225, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8797
  %call.i.329 = tail call i8* @halide_string_to_string(i8* %call.i.326, i8* %add.ptr.i, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.225, i32 0, i32 0)) #6, !dbg !8798
  %dev = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 0, !dbg !8799
  %1 = load i64, i64* %dev, align 8, !dbg !8799, !tbaa !5488
  %call8 = tail call %struct.halide_device_interface* @halide_get_device_interface(i64 %1) #6, !dbg !8800
  %2 = bitcast %struct.halide_device_interface* %call8 to i8*, !dbg !8800
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !8801
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !2504, metadata !2613) #2, !dbg !8803
  %call.i.332 = tail call i8* @halide_pointer_to_string(i8* %call.i.329, i8* %add.ptr.i, i8* %2) #6, !dbg !8804
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8805
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.226, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8807
  %call.i.335 = tail call i8* @halide_string_to_string(i8* %call.i.332, i8* %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.226, i32 0, i32 0)) #6, !dbg !8808
  %3 = load i64, i64* %dev, align 8, !dbg !8809, !tbaa !5488
  %call12 = tail call i64 @halide_get_device_handle(i64 %3) #6, !dbg !8810
  %conv = trunc i64 %call12 to i32, !dbg !8811
  %4 = inttoptr i32 %conv to i8*, !dbg !8811
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !8812
  tail call void @llvm.dbg.value(metadata i8* %4, i64 0, metadata !2504, metadata !2613) #2, !dbg !8814
  %call.i.338 = tail call i8* @halide_pointer_to_string(i8* %call.i.335, i8* %add.ptr.i, i8* %4) #6, !dbg !8815
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8816
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.180, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8818
  %call.i.341 = tail call i8* @halide_string_to_string(i8* %call.i.338, i8* %add.ptr.i, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.180, i32 0, i32 0)) #6, !dbg !8819
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !8820
  tail call void @halide_print(i8* %user_context, i8* %call.i) #6, !dbg !8822
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !8823
  %5 = bitcast %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx to i8*, !dbg !8824
  call void @llvm.lifetime.start(i64 16, i8* %5) #2, !dbg !8824
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2366, metadata !2613), !dbg !8825
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2437, metadata !2613) #2, !dbg !8826
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2439, metadata !2613) #2, !dbg !8828
  %user_context2.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 0, !dbg !8829
  store i8* %user_context, i8** %user_context2.i, align 4, !dbg !8829, !tbaa !7524
  %mDev.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 1, !dbg !8830
  store i8* null, i8** %mDev.i, align 4, !dbg !8830, !tbaa !7527
  %mContext.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 2, !dbg !8831
  store i8* null, i8** %mContext.i, align 4, !dbg !8831, !tbaa !7529
  %error.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 3, !dbg !8832
  store i32 2, i32* %error.i, align 4, !dbg !8832, !tbaa !7531
  %call.i.344 = tail call i32 @halide_start_clock(i8* %user_context) #6, !dbg !8833
  %call5.i = call i32 @halide_renderscript_acquire_context(i8* %user_context, i8** %mDev.i, i8** %mContext.i, i1 zeroext true) #6, !dbg !8834
  store i32 %call5.i, i32* %error.i, align 4, !dbg !8835, !tbaa !7531
  %6 = load i8*, i8** %mDev.i, align 4, !dbg !8836, !tbaa !7527
  %cmp.i = icmp eq i8* %6, null, !dbg !8836
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !8837

if.then.i:                                        ; preds = %entry
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.283, i32 0, i32 0)) #6, !dbg !8838
  br label %if.end.i, !dbg !8838

if.end.i:                                         ; preds = %if.then.i, %entry
  %7 = load i8*, i8** %mContext.i, align 4, !dbg !8839, !tbaa !7529
  %cmp9.i = icmp eq i8* %7, null, !dbg !8839
  br i1 %cmp9.i, label %if.then.10.i, label %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit, !dbg !8840

if.then.10.i:                                     ; preds = %if.end.i
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.284, i32 0, i32 0)) #6, !dbg !8841
  br label %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit, !dbg !8841

_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit: ; preds = %if.then.10.i, %if.end.i
  %8 = load i32, i32* %error.i, align 4, !dbg !8842, !tbaa !7531
  %cmp = icmp eq i32 %8, 0, !dbg !8844
  br i1 %cmp, label %if.end, label %cleanup, !dbg !8845

if.end:                                           ; preds = %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit
  %call16 = call i64 @halide_current_time_ns(i8* %user_context) #6, !dbg !8846
  call void @llvm.dbg.value(metadata i64 %call16, i64 0, metadata !2367, metadata !2613), !dbg !8847
  %host = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 1, !dbg !8848
  %9 = load i8*, i8** %host, align 4, !dbg !8848, !tbaa !4725
  %tobool = icmp eq i8* %9, null, !dbg !8848
  br i1 %tobool, label %if.then.19, label %land.lhs.true, !dbg !8848

land.lhs.true:                                    ; preds = %if.end
  %10 = load i64, i64* %dev, align 8, !dbg !8850, !tbaa !5488
  %tobool18 = icmp eq i64 %10, 0, !dbg !8850
  br i1 %tobool18, label %if.then.19, label %if.end.20, !dbg !8852

if.then.19:                                       ; preds = %land.lhs.true, %if.end
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.216, i32 0, i32 0)) #6, !dbg !8853
  br label %if.end.20, !dbg !8853

if.end.20:                                        ; preds = %if.then.19, %land.lhs.true
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !8856
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !8858
  %call.i.346 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !8859
  %add.ptr.i.349 = getelementptr inbounds i8, i8* %call.i.346, i32 1023, !dbg !8860
  store i8 0, i8* %add.ptr.i.349, align 1, !dbg !8861, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8862
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.227, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8864
  %call.i.353 = call i8* @halide_string_to_string(i8* %call.i.346, i8* %add.ptr.i.349, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.227, i32 0, i32 0)) #6, !dbg !8865
  %11 = load i64, i64* %dev, align 8, !dbg !8866, !tbaa !5488
  %call24 = call i64 @halide_get_device_handle(i64 %11) #6, !dbg !8867
  %conv25 = trunc i64 %call24 to i32, !dbg !8868
  %12 = inttoptr i32 %conv25 to i8*, !dbg !8868
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !8869
  call void @llvm.dbg.value(metadata i8* %12, i64 0, metadata !2504, metadata !2613) #2, !dbg !8871
  %call.i.356 = call i8* @halide_pointer_to_string(i8* %call.i.353, i8* %add.ptr.i.349, i8* %12) #6, !dbg !8872
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8873
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.198, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8875
  %call.i.359 = call i8* @halide_string_to_string(i8* %call.i.356, i8* %add.ptr.i.349, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.198, i32 0, i32 0)) #6, !dbg !8876
  %arrayidx = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 2, i32 0, !dbg !8877
  %13 = load i32, i32* %arrayidx, align 4, !dbg !8877, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !8878
  call void @llvm.dbg.value(metadata i32 %13, i64 0, metadata !2508, metadata !2613) #2, !dbg !8880
  %conv.i = sext i32 %13 to i64, !dbg !8881
  %call.i.362 = call i8* @halide_int64_to_string(i8* %call.i.359, i8* %add.ptr.i.349, i64 %conv.i, i32 1) #6, !dbg !8882
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8883
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8885
  %call.i.365 = call i8* @halide_string_to_string(i8* %call.i.362, i8* %add.ptr.i.349, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0)) #6, !dbg !8886
  %arrayidx31 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 2, i32 1, !dbg !8887
  %14 = load i32, i32* %arrayidx31, align 4, !dbg !8887, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !8888
  call void @llvm.dbg.value(metadata i32 %14, i64 0, metadata !2508, metadata !2613) #2, !dbg !8890
  %conv.i.368 = sext i32 %14 to i64, !dbg !8891
  %call.i.369 = call i8* @halide_int64_to_string(i8* %call.i.365, i8* %add.ptr.i.349, i64 %conv.i.368, i32 1) #6, !dbg !8892
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8893
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8895
  %call.i.372 = call i8* @halide_string_to_string(i8* %call.i.369, i8* %add.ptr.i.349, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0)) #6, !dbg !8896
  %arrayidx35 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 2, i32 2, !dbg !8897
  %15 = load i32, i32* %arrayidx35, align 4, !dbg !8897, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !8898
  call void @llvm.dbg.value(metadata i32 %15, i64 0, metadata !2508, metadata !2613) #2, !dbg !8900
  %conv.i.375 = sext i32 %15 to i64, !dbg !8901
  %call.i.376 = call i8* @halide_int64_to_string(i8* %call.i.372, i8* %add.ptr.i.349, i64 %conv.i.375, i32 1) #6, !dbg !8902
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8903
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.218, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8905
  %call.i.379 = call i8* @halide_string_to_string(i8* %call.i.376, i8* %add.ptr.i.349, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.218, i32 0, i32 0)) #6, !dbg !8906
  %elem_size = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %buf, i32 0, i32 5, !dbg !8907
  %16 = load i32, i32* %elem_size, align 4, !dbg !8907, !tbaa !4706
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !8908
  call void @llvm.dbg.value(metadata i32 %16, i64 0, metadata !2508, metadata !2613) #2, !dbg !8910
  %conv.i.382 = sext i32 %16 to i64, !dbg !8911
  %call.i.383 = call i8* @halide_int64_to_string(i8* %call.i.379, i8* %add.ptr.i.349, i64 %conv.i.382, i32 1) #6, !dbg !8912
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8913
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.228, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8915
  %call.i.386 = call i8* @halide_string_to_string(i8* %call.i.383, i8* %add.ptr.i.349, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.228, i32 0, i32 0)) #6, !dbg !8916
  %17 = load i8*, i8** %host, align 4, !dbg !8917, !tbaa !4725
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !8918
  call void @llvm.dbg.value(metadata i8* %17, i64 0, metadata !2504, metadata !2613) #2, !dbg !8920
  %call.i.389 = call i8* @halide_pointer_to_string(i8* %call.i.386, i8* %add.ptr.i.349, i8* %17) #6, !dbg !8921
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8922
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8924
  %call.i.392 = call i8* @halide_string_to_string(i8* %call.i.389, i8* %add.ptr.i.349, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !8925
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !8926
  call void @halide_print(i8* %user_context, i8* %call.i.346) #6, !dbg !8928
  call void @halide_free(i8* %user_context, i8* %call.i.346) #6, !dbg !8929
  %18 = load %struct.dispatchTable*, %struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE, align 4, !dbg !8930, !tbaa !2768
  %AllocationSyncAll = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %18, i32 0, i32 45, !dbg !8931
  %19 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %AllocationSyncAll, align 4, !dbg !8931, !tbaa !7071
  %20 = load i8*, i8** %mContext.i, align 4, !dbg !8932, !tbaa !7529
  %21 = load i64, i64* %dev, align 8, !dbg !8933, !tbaa !5488
  %call44 = call i64 @halide_get_device_handle(i64 %21) #6, !dbg !8934
  %conv45 = trunc i64 %call44 to i32, !dbg !8935
  %22 = inttoptr i32 %conv45 to i8*, !dbg !8935
  call void %19(i8* %20, i8* %22, i32 1) #6, !dbg !8930
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !8936
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !8938
  %call.i.396 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !8939
  %add.ptr.i.399 = getelementptr inbounds i8, i8* %call.i.396, i32 1023, !dbg !8940
  store i8 0, i8* %add.ptr.i.399, align 1, !dbg !8941, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8942
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.229, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8944
  %call.i.403 = call i8* @halide_string_to_string(i8* %call.i.396, i8* %add.ptr.i.399, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.229, i32 0, i32 0)) #6, !dbg !8945
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !8946
  call void @halide_print(i8* %user_context, i8* %call.i.396) #6, !dbg !8948
  call void @halide_free(i8* %user_context, i8* %call.i.396) #6, !dbg !8949
  %call48 = call zeroext i1 @is_interleaved_rgba_buffer_t(%struct.buffer_t* %buf) #7, !dbg !8950
  br i1 %call48, label %if.then.52, label %lor.lhs.false, !dbg !8951

lor.lhs.false:                                    ; preds = %if.end.20
  %23 = load i32, i32* %arrayidx35, align 4, !dbg !8952, !tbaa !2786
  %cmp51 = icmp eq i32 %23, 0, !dbg !8953
  br i1 %cmp51, label %if.then.52, label %if.else, !dbg !8954

if.then.52:                                       ; preds = %lor.lhs.false, %if.end.20
  %24 = load %struct.dispatchTable*, %struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE, align 4, !dbg !8955, !tbaa !2768
  %Allocation2DRead = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %24, i32 0, i32 43, !dbg !8955
  %25 = load void (i8*, i8*, i32, i32, i32, i32, i32, i32, i8*, i32, i32)*, void (i8*, i8*, i32, i32, i32, i32, i32, i32, i8*, i32, i32)** %Allocation2DRead, align 4, !dbg !8955, !tbaa !7061
  %cmp53 = icmp eq void (i8*, i8*, i32, i32, i32, i32, i32, i32, i8*, i32, i32)* %25, null, !dbg !8955
  br i1 %cmp53, label %if.then.54, label %if.end.55, !dbg !8957

if.then.54:                                       ; preds = %if.then.52
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.230, i32 0, i32 0)) #6, !dbg !8958
  br label %if.end.55, !dbg !8958

if.end.55:                                        ; preds = %if.then.54, %if.then.52
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !8960
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !8962
  %call.i.407 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !8963
  %add.ptr.i.410 = getelementptr inbounds i8, i8* %call.i.407, i32 1023, !dbg !8964
  store i8 0, i8* %add.ptr.i.410, align 1, !dbg !8965, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8966
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.231, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8968
  %call.i.414 = call i8* @halide_string_to_string(i8* %call.i.407, i8* %add.ptr.i.410, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.231, i32 0, i32 0)) #6, !dbg !8969
  %26 = load i32, i32* %arrayidx, align 4, !dbg !8970, !tbaa !2786
  %27 = load i32, i32* %arrayidx31, align 4, !dbg !8971, !tbaa !2786
  %mul = mul nsw i32 %27, %26, !dbg !8972
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2586, metadata !2613), !dbg !8973
  tail call void @llvm.dbg.value(metadata i32* %arrayidx35, i64 0, metadata !2587, metadata !2613), !dbg !8975
  %28 = load i32, i32* %arrayidx35, align 4, !dbg !8976, !tbaa !2786
  %cmp.i.415 = icmp slt i32 %28, 1, !dbg !8977
  %..i = select i1 %cmp.i.415, i32 1, i32 %28, !dbg !8978
  %29 = load i32, i32* %elem_size, align 4, !dbg !8979, !tbaa !4706
  %mul65 = mul i32 %mul, %29, !dbg !8980
  %mul67 = mul i32 %mul65, %..i, !dbg !8981
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !8982
  call void @llvm.dbg.value(metadata i32 %mul67, i64 0, metadata !2508, metadata !2613) #2, !dbg !8984
  %conv.i.418 = sext i32 %mul67 to i64, !dbg !8985
  %call.i.419 = call i8* @halide_int64_to_string(i8* %call.i.414, i8* %add.ptr.i.410, i64 %conv.i.418, i32 1) #6, !dbg !8986
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !8987
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.232, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !8989
  %call.i.422 = call i8* @halide_string_to_string(i8* %call.i.419, i8* %add.ptr.i.410, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.232, i32 0, i32 0)) #6, !dbg !8990
  %30 = load i32, i32* %arrayidx, align 4, !dbg !8991, !tbaa !2786
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2586, metadata !2613), !dbg !8992
  tail call void @llvm.dbg.value(metadata i32* %arrayidx35, i64 0, metadata !2587, metadata !2613), !dbg !8994
  %31 = load i32, i32* %arrayidx35, align 4, !dbg !8995, !tbaa !2786
  %cmp.i.423 = icmp slt i32 %31, 1, !dbg !8996
  %..i.424 = select i1 %cmp.i.423, i32 1, i32 %31, !dbg !8997
  %32 = load i32, i32* %elem_size, align 4, !dbg !8998, !tbaa !4706
  %mul76 = mul i32 %32, %30, !dbg !8999
  %mul78 = mul i32 %mul76, %..i.424, !dbg !9000
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !9001
  call void @llvm.dbg.value(metadata i32 %mul78, i64 0, metadata !2508, metadata !2613) #2, !dbg !9003
  %conv.i.427 = sext i32 %mul78 to i64, !dbg !9004
  %call.i.428 = call i8* @halide_int64_to_string(i8* %call.i.422, i8* %add.ptr.i.410, i64 %conv.i.427, i32 1) #6, !dbg !9005
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !9006
  call void @halide_print(i8* %user_context, i8* %call.i.407) #6, !dbg !9008
  call void @halide_free(i8* %user_context, i8* %call.i.407) #6, !dbg !9009
  %33 = load i32, i32* %arrayidx, align 4, !dbg !9010, !tbaa !2786
  %34 = load i32, i32* %arrayidx31, align 4, !dbg !9011, !tbaa !2786
  %mul84 = mul nsw i32 %34, %33, !dbg !9012
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2586, metadata !2613), !dbg !9013
  tail call void @llvm.dbg.value(metadata i32* %arrayidx35, i64 0, metadata !2587, metadata !2613), !dbg !9015
  %35 = load i32, i32* %arrayidx35, align 4, !dbg !9016, !tbaa !2786
  %cmp.i.431 = icmp slt i32 %35, 1, !dbg !9017
  %..i.432 = select i1 %cmp.i.431, i32 1, i32 %35, !dbg !9018
  %36 = load i32, i32* %elem_size, align 4, !dbg !9019, !tbaa !4706
  %mul89 = mul i32 %mul84, %36, !dbg !9020
  %mul91 = mul i32 %mul89, %..i.432, !dbg !9021
  call void @llvm.dbg.value(metadata i32 %mul91, i64 0, metadata !2368, metadata !2613), !dbg !9022
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !9023
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !9025
  %call.i.434 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !9026
  %add.ptr.i.437 = getelementptr inbounds i8, i8* %call.i.434, i32 1023, !dbg !9027
  store i8 0, i8* %add.ptr.i.437, align 1, !dbg !9028, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9029
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.233, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9031
  %call.i.441 = call i8* @halide_string_to_string(i8* %call.i.434, i8* %add.ptr.i.437, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.233, i32 0, i32 0)) #6, !dbg !9032
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2594, metadata !2613) #2, !dbg !9033
  call void @llvm.dbg.value(metadata i32 %mul91, i64 0, metadata !2595, metadata !2613) #2, !dbg !9035
  %conv.i.444 = zext i32 %mul91 to i64, !dbg !9036
  %call.i.445 = call i8* @halide_uint64_to_string(i8* %call.i.441, i8* %add.ptr.i.437, i64 %conv.i.444, i32 1) #6, !dbg !9037
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9038
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9040
  %call.i.448 = call i8* @halide_string_to_string(i8* %call.i.445, i8* %add.ptr.i.437, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !9041
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !9042
  call void @halide_print(i8* %user_context, i8* %call.i.434) #6, !dbg !9044
  call void @halide_free(i8* %user_context, i8* %call.i.434) #6, !dbg !9045
  %37 = load i32, i32* %arrayidx, align 4, !dbg !9046, !tbaa !2786
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2586, metadata !2613), !dbg !9047
  tail call void @llvm.dbg.value(metadata i32* %arrayidx35, i64 0, metadata !2587, metadata !2613), !dbg !9049
  %38 = load i32, i32* %arrayidx35, align 4, !dbg !9050, !tbaa !2786
  %cmp.i.451 = icmp slt i32 %38, 1, !dbg !9051
  %..i.452 = select i1 %cmp.i.451, i32 1, i32 %38, !dbg !9052
  %39 = load i32, i32* %elem_size, align 4, !dbg !9053, !tbaa !4706
  %mul102 = mul i32 %39, %37, !dbg !9054
  %mul104 = mul i32 %mul102, %..i.452, !dbg !9055
  call void @llvm.dbg.value(metadata i32 %mul104, i64 0, metadata !2371, metadata !2613), !dbg !9056
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !9057
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !9059
  %call.i.454 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !9060
  %add.ptr.i.457 = getelementptr inbounds i8, i8* %call.i.454, i32 1023, !dbg !9061
  store i8 0, i8* %add.ptr.i.457, align 1, !dbg !9062, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9063
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.234, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9065
  %call.i.461 = call i8* @halide_string_to_string(i8* %call.i.454, i8* %add.ptr.i.457, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.234, i32 0, i32 0)) #6, !dbg !9066
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2594, metadata !2613) #2, !dbg !9067
  call void @llvm.dbg.value(metadata i32 %mul104, i64 0, metadata !2595, metadata !2613) #2, !dbg !9069
  %conv.i.464 = zext i32 %mul104 to i64, !dbg !9070
  %call.i.465 = call i8* @halide_uint64_to_string(i8* %call.i.461, i8* %add.ptr.i.457, i64 %conv.i.464, i32 1) #6, !dbg !9071
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9072
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9074
  %call.i.468 = call i8* @halide_string_to_string(i8* %call.i.465, i8* %add.ptr.i.457, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !9075
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !9076
  call void @halide_print(i8* %user_context, i8* %call.i.454) #6, !dbg !9078
  call void @halide_free(i8* %user_context, i8* %call.i.454) #6, !dbg !9079
  %40 = load %struct.dispatchTable*, %struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE, align 4, !dbg !9080, !tbaa !2768
  %Allocation2DRead109 = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %40, i32 0, i32 43, !dbg !9081
  %41 = load void (i8*, i8*, i32, i32, i32, i32, i32, i32, i8*, i32, i32)*, void (i8*, i8*, i32, i32, i32, i32, i32, i32, i8*, i32, i32)** %Allocation2DRead109, align 4, !dbg !9081, !tbaa !7061
  %42 = load i8*, i8** %mContext.i, align 4, !dbg !9082, !tbaa !7529
  %43 = load i64, i64* %dev, align 8, !dbg !9083, !tbaa !5488
  %call112 = call i64 @halide_get_device_handle(i64 %43) #6, !dbg !9084
  %conv113 = trunc i64 %call112 to i32, !dbg !9085
  %44 = inttoptr i32 %conv113 to i8*, !dbg !9085
  %45 = load i32, i32* %arrayidx, align 4, !dbg !9086, !tbaa !2786
  %46 = load i32, i32* %arrayidx31, align 4, !dbg !9087, !tbaa !2786
  %47 = load i8*, i8** %host, align 4, !dbg !9088, !tbaa !4725
  call void %41(i8* %42, i8* %44, i32 0, i32 0, i32 0, i32 0, i32 %45, i32 %46, i8* %47, i32 %mul91, i32 %mul104) #6, !dbg !9080
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !9089
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !9091
  %call.i.472 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !9092
  %add.ptr.i.475 = getelementptr inbounds i8, i8* %call.i.472, i32 1023, !dbg !9093
  store i8 0, i8* %add.ptr.i.475, align 1, !dbg !9094, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9095
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.235, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9097
  %call.i.479 = call i8* @halide_string_to_string(i8* %call.i.472, i8* %add.ptr.i.475, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.235, i32 0, i32 0)) #6, !dbg !9098
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !9099
  call void @halide_print(i8* %user_context, i8* %call.i.472) #6, !dbg !9101
  call void @halide_free(i8* %user_context, i8* %call.i.472) #6, !dbg !9102
  br label %if.end.190, !dbg !9103

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !9104
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !9107
  %call.i.483 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !9108
  %add.ptr.i.486 = getelementptr inbounds i8, i8* %call.i.483, i32 1023, !dbg !9109
  store i8 0, i8* %add.ptr.i.486, align 1, !dbg !9110, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9111
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.236, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9113
  %call.i.490 = call i8* @halide_string_to_string(i8* %call.i.483, i8* %add.ptr.i.486, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.236, i32 0, i32 0)) #6, !dbg !9114
  %48 = load %struct.dispatchTable*, %struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE, align 4, !dbg !9115, !tbaa !2768
  %Allocation3DRead = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %48, i32 0, i32 44, !dbg !9116
  %49 = bitcast void (i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32)** %Allocation3DRead to i8**, !dbg !9116
  %50 = load i8*, i8** %49, align 4, !dbg !9116, !tbaa !7453
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !9117
  call void @llvm.dbg.value(metadata i8* %50, i64 0, metadata !2504, metadata !2613) #2, !dbg !9119
  %call.i.493 = call i8* @halide_pointer_to_string(i8* %call.i.490, i8* %add.ptr.i.486, i8* %50) #6, !dbg !9120
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9121
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.237, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9123
  %call.i.496 = call i8* @halide_string_to_string(i8* %call.i.493, i8* %add.ptr.i.486, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.237, i32 0, i32 0)) #6, !dbg !9124
  %51 = load i32, i32* %arrayidx, align 4, !dbg !9125, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !9126
  call void @llvm.dbg.value(metadata i32 %51, i64 0, metadata !2508, metadata !2613) #2, !dbg !9128
  %conv.i.499 = sext i32 %51 to i64, !dbg !9129
  %call.i.500 = call i8* @halide_int64_to_string(i8* %call.i.496, i8* %add.ptr.i.486, i64 %conv.i.499, i32 1) #6, !dbg !9130
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9131
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.238, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9133
  %call.i.503 = call i8* @halide_string_to_string(i8* %call.i.500, i8* %add.ptr.i.486, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.238, i32 0, i32 0)) #6, !dbg !9134
  %52 = load i32, i32* %arrayidx31, align 4, !dbg !9135, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !9136
  call void @llvm.dbg.value(metadata i32 %52, i64 0, metadata !2508, metadata !2613) #2, !dbg !9138
  %conv.i.506 = sext i32 %52 to i64, !dbg !9139
  %call.i.507 = call i8* @halide_int64_to_string(i8* %call.i.503, i8* %add.ptr.i.486, i64 %conv.i.506, i32 1) #6, !dbg !9140
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9141
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.239, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9143
  %call.i.510 = call i8* @halide_string_to_string(i8* %call.i.507, i8* %add.ptr.i.486, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.239, i32 0, i32 0)) #6, !dbg !9144
  %53 = load i32, i32* %arrayidx35, align 4, !dbg !9145, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !9146
  call void @llvm.dbg.value(metadata i32 %53, i64 0, metadata !2508, metadata !2613) #2, !dbg !9148
  %conv.i.513 = sext i32 %53 to i64, !dbg !9149
  %call.i.514 = call i8* @halide_int64_to_string(i8* %call.i.510, i8* %add.ptr.i.486, i64 %conv.i.513, i32 1) #6, !dbg !9150
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9151
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.240, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9153
  %call.i.517 = call i8* @halide_string_to_string(i8* %call.i.514, i8* %add.ptr.i.486, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.240, i32 0, i32 0)) #6, !dbg !9154
  %54 = load i8*, i8** %host, align 4, !dbg !9155, !tbaa !4725
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !9156
  call void @llvm.dbg.value(metadata i8* %54, i64 0, metadata !2504, metadata !2613) #2, !dbg !9158
  %call.i.520 = call i8* @halide_pointer_to_string(i8* %call.i.517, i8* %add.ptr.i.486, i8* %54) #6, !dbg !9159
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9160
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.241, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9162
  %call.i.523 = call i8* @halide_string_to_string(i8* %call.i.520, i8* %add.ptr.i.486, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.241, i32 0, i32 0)) #6, !dbg !9163
  %55 = load i32, i32* %arrayidx, align 4, !dbg !9164, !tbaa !2786
  %56 = load i32, i32* %arrayidx31, align 4, !dbg !9165, !tbaa !2786
  %mul144 = mul nsw i32 %56, %55, !dbg !9166
  %57 = load i32, i32* %arrayidx35, align 4, !dbg !9167, !tbaa !2786
  %mul147 = mul nsw i32 %mul144, %57, !dbg !9168
  %58 = load i32, i32* %elem_size, align 4, !dbg !9169, !tbaa !4706
  %mul149 = mul nsw i32 %mul147, %58, !dbg !9170
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !9171
  call void @llvm.dbg.value(metadata i32 %mul149, i64 0, metadata !2508, metadata !2613) #2, !dbg !9173
  %conv.i.526 = sext i32 %mul149 to i64, !dbg !9174
  %call.i.527 = call i8* @halide_int64_to_string(i8* %call.i.523, i8* %add.ptr.i.486, i64 %conv.i.526, i32 1) #6, !dbg !9175
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9176
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.242, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9178
  %call.i.530 = call i8* @halide_string_to_string(i8* %call.i.527, i8* %add.ptr.i.486, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.242, i32 0, i32 0)) #6, !dbg !9179
  %59 = load i32, i32* %arrayidx, align 4, !dbg !9180, !tbaa !2786
  %60 = load i32, i32* %elem_size, align 4, !dbg !9181, !tbaa !4706
  %mul155 = mul nsw i32 %60, %59, !dbg !9182
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !9183
  call void @llvm.dbg.value(metadata i32 %mul155, i64 0, metadata !2508, metadata !2613) #2, !dbg !9185
  %conv.i.533 = sext i32 %mul155 to i64, !dbg !9186
  %call.i.534 = call i8* @halide_int64_to_string(i8* %call.i.530, i8* %add.ptr.i.486, i64 %conv.i.533, i32 1) #6, !dbg !9187
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9188
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.243, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9190
  %call.i.537 = call i8* @halide_string_to_string(i8* %call.i.534, i8* %add.ptr.i.486, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.243, i32 0, i32 0)) #6, !dbg !9191
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !9192
  call void @halide_print(i8* %user_context, i8* %call.i.483) #6, !dbg !9194
  call void @halide_free(i8* %user_context, i8* %call.i.483) #6, !dbg !9195
  %61 = load %struct.dispatchTable*, %struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE, align 4, !dbg !9196, !tbaa !2768
  %Allocation3DRead158 = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %61, i32 0, i32 44, !dbg !9196
  %62 = load void (i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32)*, void (i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32)** %Allocation3DRead158, align 4, !dbg !9196, !tbaa !7453
  %cmp159 = icmp eq void (i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32)* %62, null, !dbg !9196
  br i1 %cmp159, label %if.then.160, label %if.end.161, !dbg !9198

if.then.160:                                      ; preds = %if.else
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.244, i32 0, i32 0)) #6, !dbg !9199
  %.pre = load %struct.dispatchTable*, %struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE, align 4, !dbg !9201, !tbaa !2768
  %Allocation3DRead162.phi.trans.insert = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %.pre, i32 0, i32 44, !dbg !9202
  %.pre768 = load void (i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32)*, void (i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32)** %Allocation3DRead162.phi.trans.insert, align 4, !dbg !9202, !tbaa !7453
  br label %if.end.161, !dbg !9199

if.end.161:                                       ; preds = %if.then.160, %if.else
  %63 = phi void (i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32)* [ %62, %if.else ], [ %.pre768, %if.then.160 ], !dbg !9202
  %64 = load i8*, i8** %mContext.i, align 4, !dbg !9203, !tbaa !7529
  %65 = load i64, i64* %dev, align 8, !dbg !9204, !tbaa !5488
  %call165 = call i64 @halide_get_device_handle(i64 %65) #6, !dbg !9205
  %conv166 = trunc i64 %call165 to i32, !dbg !9206
  %66 = inttoptr i32 %conv166 to i8*, !dbg !9206
  %67 = load i32, i32* %arrayidx, align 4, !dbg !9207, !tbaa !2786
  %68 = load i32, i32* %arrayidx31, align 4, !dbg !9208, !tbaa !2786
  %69 = load i32, i32* %arrayidx35, align 4, !dbg !9209, !tbaa !2786
  %70 = load i8*, i8** %host, align 4, !dbg !9210, !tbaa !4725
  %mul178 = mul nsw i32 %68, %67, !dbg !9211
  %mul181 = mul nsw i32 %mul178, %69, !dbg !9212
  %71 = load i32, i32* %elem_size, align 4, !dbg !9213, !tbaa !4706
  %mul183 = mul nsw i32 %mul181, %71, !dbg !9214
  %mul187 = mul nsw i32 %71, %67, !dbg !9215
  call void %63(i8* %64, i8* %66, i32 0, i32 0, i32 0, i32 0, i32 %67, i32 %68, i32 %69, i8* %70, i32 %mul183, i32 %mul187) #6, !dbg !9201
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !9216
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !9218
  %call.i.541 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !9219
  %add.ptr.i.544 = getelementptr inbounds i8, i8* %call.i.541, i32 1023, !dbg !9220
  store i8 0, i8* %add.ptr.i.544, align 1, !dbg !9221, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9222
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.245, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9224
  %call.i.548 = call i8* @halide_string_to_string(i8* %call.i.541, i8* %add.ptr.i.544, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.245, i32 0, i32 0)) #6, !dbg !9225
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !9226
  call void @halide_print(i8* %user_context, i8* %call.i.541) #6, !dbg !9228
  call void @halide_free(i8* %user_context, i8* %call.i.541) #6, !dbg !9229
  br label %if.end.190

if.end.190:                                       ; preds = %if.end.161, %if.end.55
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !9230
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !9232
  %call.i.552 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !9233
  %add.ptr.i.555 = getelementptr inbounds i8, i8* %call.i.552, i32 1023, !dbg !9234
  store i8 0, i8* %add.ptr.i.555, align 1, !dbg !9235, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9236
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.246, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9238
  %call.i.559 = call i8* @halide_string_to_string(i8* %call.i.552, i8* %add.ptr.i.555, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.246, i32 0, i32 0)) #6, !dbg !9239
  %72 = load i32, i32* %arrayidx, align 4, !dbg !9240, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !9241
  call void @llvm.dbg.value(metadata i32 %72, i64 0, metadata !2508, metadata !2613) #2, !dbg !9243
  %conv.i.562 = sext i32 %72 to i64, !dbg !9244
  %call.i.563 = call i8* @halide_int64_to_string(i8* %call.i.559, i8* %add.ptr.i.555, i64 %conv.i.562, i32 1) #6, !dbg !9245
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9246
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9248
  %call.i.566 = call i8* @halide_string_to_string(i8* %call.i.563, i8* %add.ptr.i.555, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0)) #6, !dbg !9249
  %73 = load i32, i32* %arrayidx31, align 4, !dbg !9250, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !9251
  call void @llvm.dbg.value(metadata i32 %73, i64 0, metadata !2508, metadata !2613) #2, !dbg !9253
  %conv.i.569 = sext i32 %73 to i64, !dbg !9254
  %call.i.570 = call i8* @halide_int64_to_string(i8* %call.i.566, i8* %add.ptr.i.555, i64 %conv.i.569, i32 1) #6, !dbg !9255
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9256
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9258
  %call.i.573 = call i8* @halide_string_to_string(i8* %call.i.570, i8* %add.ptr.i.555, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0)) #6, !dbg !9259
  %74 = load i32, i32* %arrayidx35, align 4, !dbg !9260, !tbaa !2786
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !9261
  call void @llvm.dbg.value(metadata i32 %74, i64 0, metadata !2508, metadata !2613) #2, !dbg !9263
  %conv.i.576 = sext i32 %74 to i64, !dbg !9264
  %call.i.577 = call i8* @halide_int64_to_string(i8* %call.i.573, i8* %add.ptr.i.555, i64 %conv.i.576, i32 1) #6, !dbg !9265
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9266
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.218, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9268
  %call.i.580 = call i8* @halide_string_to_string(i8* %call.i.577, i8* %add.ptr.i.555, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.218, i32 0, i32 0)) #6, !dbg !9269
  %75 = load i32, i32* %elem_size, align 4, !dbg !9270, !tbaa !4706
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !9271
  call void @llvm.dbg.value(metadata i32 %75, i64 0, metadata !2508, metadata !2613) #2, !dbg !9273
  %conv.i.583 = sext i32 %75 to i64, !dbg !9274
  %call.i.584 = call i8* @halide_int64_to_string(i8* %call.i.580, i8* %add.ptr.i.555, i64 %conv.i.583, i32 1) #6, !dbg !9275
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9276
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.247, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9278
  %call.i.587 = call i8* @halide_string_to_string(i8* %call.i.584, i8* %add.ptr.i.555, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.247, i32 0, i32 0)) #6, !dbg !9279
  %76 = load i64, i64* %dev, align 8, !dbg !9280, !tbaa !5488
  %call209 = call i64 @halide_get_device_handle(i64 %76) #6, !dbg !9281
  %conv210 = trunc i64 %call209 to i32, !dbg !9282
  %77 = inttoptr i32 %conv210 to i8*, !dbg !9282
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !9283
  call void @llvm.dbg.value(metadata i8* %77, i64 0, metadata !2504, metadata !2613) #2, !dbg !9285
  %call.i.590 = call i8* @halide_pointer_to_string(i8* %call.i.587, i8* %add.ptr.i.555, i8* %77) #6, !dbg !9286
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9287
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.248, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9289
  %call.i.593 = call i8* @halide_string_to_string(i8* %call.i.590, i8* %add.ptr.i.555, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.248, i32 0, i32 0)) #6, !dbg !9290
  %78 = load i8*, i8** %host, align 4, !dbg !9291, !tbaa !4725
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !9292
  call void @llvm.dbg.value(metadata i8* %78, i64 0, metadata !2504, metadata !2613) #2, !dbg !9294
  %call.i.596 = call i8* @halide_pointer_to_string(i8* %call.i.593, i8* %add.ptr.i.555, i8* %78) #6, !dbg !9295
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9296
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.249, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9298
  %call.i.599 = call i8* @halide_string_to_string(i8* %call.i.596, i8* %add.ptr.i.555, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.249, i32 0, i32 0)) #6, !dbg !9299
  %79 = bitcast i8** %host to float**, !dbg !9300
  %80 = load float*, float** %79, align 4, !dbg !9300, !tbaa !4725
  %81 = load float, float* %80, align 4, !dbg !9301, !tbaa !3360
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2590, metadata !2613) #2, !dbg !9302
  call void @llvm.dbg.value(metadata float %81, i64 0, metadata !2591, metadata !2613) #2, !dbg !9304
  %conv.i.602 = fpext float %81 to double, !dbg !9305
  %call.i.603 = call i8* @halide_double_to_string(i8* %call.i.599, i8* %add.ptr.i.555, double %conv.i.602, i32 0) #6, !dbg !9306
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9307
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9309
  %call.i.606 = call i8* @halide_string_to_string(i8* %call.i.603, i8* %add.ptr.i.555, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !9310
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !9311
  call void @halide_print(i8* %user_context, i8* %call.i.552) #6, !dbg !9313
  call void @halide_free(i8* %user_context, i8* %call.i.552) #6, !dbg !9314
  %call219 = call i64 @halide_current_time_ns(i8* %user_context) #6, !dbg !9315
  call void @llvm.dbg.value(metadata i64 %call219, i64 0, metadata !2372, metadata !2613), !dbg !9316
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !9317
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !9319
  %call.i.610 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !9320
  %add.ptr.i.613 = getelementptr inbounds i8, i8* %call.i.610, i32 1023, !dbg !9321
  store i8 0, i8* %add.ptr.i.613, align 1, !dbg !9322, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9323
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.176, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9325
  %call.i.617 = call i8* @halide_string_to_string(i8* %call.i.610, i8* %add.ptr.i.613, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.176, i32 0, i32 0)) #6, !dbg !9326
  %sub = sub i64 %call219, %call16, !dbg !9327
  %conv222 = uitofp i64 %sub to double, !dbg !9328
  %div = fdiv double %conv222, 1.000000e+06, !dbg !9329
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2511, metadata !2613) #2, !dbg !9330
  call void @llvm.dbg.value(metadata double %div, i64 0, metadata !2512, metadata !2613) #2, !dbg !9332
  %call.i.620 = call i8* @halide_double_to_string(i8* %call.i.617, i8* %add.ptr.i.613, double %div, i32 1) #6, !dbg !9333
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9334
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9336
  %call.i.623 = call i8* @halide_string_to_string(i8* %call.i.620, i8* %add.ptr.i.613, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0)) #6, !dbg !9337
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !9338
  call void @halide_print(i8* %user_context, i8* %call.i.610) #6, !dbg !9340
  call void @halide_free(i8* %user_context, i8* %call.i.610) #6, !dbg !9341
  br label %cleanup

cleanup:                                          ; preds = %if.end.190, %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit
  %retval.0 = phi i32 [ 0, %if.end.190 ], [ %8, %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit ]
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2366, metadata !2613), !dbg !8825
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2442, metadata !2613) #2, !dbg !9342
  %82 = load i8*, i8** %user_context2.i, align 4, !dbg !9344, !tbaa !7524
  %call.i.627 = call i32 @halide_renderscript_release_context(i8* %82) #6, !dbg !9345
  call void @llvm.lifetime.end(i64 16, i8* %5) #2, !dbg !9346
  ret i32 %retval.0, !dbg !9346
}

; Function Attrs: nounwind
define weak i32 @halide_renderscript_device_sync(i8* %user_context, %struct.buffer_t*) #0 {
entry:
  %ctx = alloca %"class.Halide::Runtime::Internal::Renderscript::Context", align 4
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2375, metadata !2613), !dbg !9347
  tail call void @llvm.dbg.value(metadata %struct.buffer_t* %0, i64 0, metadata !2376, metadata !2613), !dbg !9348
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !9349
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !9351
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !9352
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !9353
  store i8 0, i8* %add.ptr.i, align 1, !dbg !9354, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9355
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.250, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9357
  %call.i.20 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.250, i32 0, i32 0)) #6, !dbg !9358
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !9359
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2504, metadata !2613) #2, !dbg !9361
  %call.i.23 = tail call i8* @halide_pointer_to_string(i8* %call.i.20, i8* %add.ptr.i, i8* %user_context) #6, !dbg !9362
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9363
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.180, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9365
  %call.i.26 = tail call i8* @halide_string_to_string(i8* %call.i.23, i8* %add.ptr.i, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.180, i32 0, i32 0)) #6, !dbg !9366
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !9367
  tail call void @halide_print(i8* %user_context, i8* %call.i) #6, !dbg !9369
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !9370
  %1 = bitcast %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx to i8*, !dbg !9371
  call void @llvm.lifetime.start(i64 16, i8* %1) #2, !dbg !9371
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2377, metadata !2613), !dbg !9372
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2437, metadata !2613) #2, !dbg !9373
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2439, metadata !2613) #2, !dbg !9375
  %user_context2.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 0, !dbg !9376
  store i8* %user_context, i8** %user_context2.i, align 4, !dbg !9376, !tbaa !7524
  %mDev.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 1, !dbg !9377
  store i8* null, i8** %mDev.i, align 4, !dbg !9377, !tbaa !7527
  %mContext.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 2, !dbg !9378
  store i8* null, i8** %mContext.i, align 4, !dbg !9378, !tbaa !7529
  %error.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 3, !dbg !9379
  store i32 2, i32* %error.i, align 4, !dbg !9379, !tbaa !7531
  %call.i.29 = tail call i32 @halide_start_clock(i8* %user_context) #6, !dbg !9380
  %call5.i = call i32 @halide_renderscript_acquire_context(i8* %user_context, i8** %mDev.i, i8** %mContext.i, i1 zeroext true) #6, !dbg !9381
  store i32 %call5.i, i32* %error.i, align 4, !dbg !9382, !tbaa !7531
  %2 = load i8*, i8** %mDev.i, align 4, !dbg !9383, !tbaa !7527
  %cmp.i = icmp eq i8* %2, null, !dbg !9383
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !9384

if.then.i:                                        ; preds = %entry
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.283, i32 0, i32 0)) #6, !dbg !9385
  br label %if.end.i, !dbg !9385

if.end.i:                                         ; preds = %if.then.i, %entry
  %3 = load i8*, i8** %mContext.i, align 4, !dbg !9386, !tbaa !7529
  %cmp9.i = icmp eq i8* %3, null, !dbg !9386
  br i1 %cmp9.i, label %if.then.10.i, label %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit, !dbg !9387

if.then.10.i:                                     ; preds = %if.end.i
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.284, i32 0, i32 0)) #6, !dbg !9388
  br label %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit, !dbg !9388

_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit: ; preds = %if.then.10.i, %if.end.i
  %4 = load i32, i32* %error.i, align 4, !dbg !9389, !tbaa !7531
  %cmp = icmp eq i32 %4, 0, !dbg !9391
  br i1 %cmp, label %if.end, label %cleanup, !dbg !9392

if.end:                                           ; preds = %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit
  %call4 = call i64 @halide_current_time_ns(i8* %user_context) #6, !dbg !9393
  call void @llvm.dbg.value(metadata i64 %call4, i64 0, metadata !2378, metadata !2613), !dbg !9394
  %5 = load %struct.dispatchTable*, %struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE, align 4, !dbg !9395, !tbaa !2768
  %ContextFinish = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %5, i32 0, i32 26, !dbg !9396
  %6 = load void (i8*)*, void (i8*)** %ContextFinish, align 4, !dbg !9396, !tbaa !6911
  %7 = load i8*, i8** %mContext.i, align 4, !dbg !9397, !tbaa !7529
  call void %6(i8* %7) #6, !dbg !9395
  %call5 = call i64 @halide_current_time_ns(i8* %user_context) #6, !dbg !9398
  call void @llvm.dbg.value(metadata i64 %call5, i64 0, metadata !2379, metadata !2613), !dbg !9399
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !9400
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !9402
  %call.i.31 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !9403
  %add.ptr.i.34 = getelementptr inbounds i8, i8* %call.i.31, i32 1023, !dbg !9404
  store i8 0, i8* %add.ptr.i.34, align 1, !dbg !9405, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9406
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.176, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9408
  %call.i.38 = call i8* @halide_string_to_string(i8* %call.i.31, i8* %add.ptr.i.34, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.176, i32 0, i32 0)) #6, !dbg !9409
  %sub = sub i64 %call5, %call4, !dbg !9410
  %conv = uitofp i64 %sub to double, !dbg !9411
  %div = fdiv double %conv, 1.000000e+06, !dbg !9412
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2511, metadata !2613) #2, !dbg !9413
  call void @llvm.dbg.value(metadata double %div, i64 0, metadata !2512, metadata !2613) #2, !dbg !9415
  %call.i.41 = call i8* @halide_double_to_string(i8* %call.i.38, i8* %add.ptr.i.34, double %div, i32 1) #6, !dbg !9416
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9417
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9419
  %call.i.44 = call i8* @halide_string_to_string(i8* %call.i.41, i8* %add.ptr.i.34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0)) #6, !dbg !9420
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !9421
  call void @halide_print(i8* %user_context, i8* %call.i.31) #6, !dbg !9423
  call void @halide_free(i8* %user_context, i8* %call.i.31) #6, !dbg !9424
  br label %cleanup

cleanup:                                          ; preds = %if.end, %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit
  %retval.0 = phi i32 [ 0, %if.end ], [ %4, %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit ]
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2377, metadata !2613), !dbg !9372
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2442, metadata !2613) #2, !dbg !9425
  %8 = load i8*, i8** %user_context2.i, align 4, !dbg !9427, !tbaa !7524
  %call.i.48 = call i32 @halide_renderscript_release_context(i8* %8) #6, !dbg !9428
  call void @llvm.lifetime.end(i64 16, i8* %1) #2, !dbg !9429
  ret i32 %retval.0, !dbg !9429
}

; Function Attrs: nounwind
define weak i32 @halide_renderscript_run(i8* %user_context, i8* %state_ptr, i8* %entry_name, i32 %blocksX, i32 %blocksY, i32 %blocksZ, i32 %threadsX, i32 %threadsY, i32 %threadsZ, i32 %shared_mem_bytes, i32* %arg_sizes, i8** %args, i8* %arg_is_buffer, i32 %num_attributes, float* %vertex_buffer, i32 %num_coords_dim0, i32 %num_coords_dim1) #0 {
entry:
  %ctx = alloca %"class.Halide::Runtime::Internal::Renderscript::Context", align 4
  %arg_value = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2384, metadata !2613), !dbg !9430
  tail call void @llvm.dbg.value(metadata i8* %state_ptr, i64 0, metadata !2385, metadata !2613), !dbg !9431
  tail call void @llvm.dbg.value(metadata i8* %entry_name, i64 0, metadata !2386, metadata !2613), !dbg !9432
  tail call void @llvm.dbg.value(metadata i32 %blocksX, i64 0, metadata !2387, metadata !2613), !dbg !9433
  tail call void @llvm.dbg.value(metadata i32 %blocksY, i64 0, metadata !2388, metadata !2613), !dbg !9434
  tail call void @llvm.dbg.value(metadata i32 %blocksZ, i64 0, metadata !2389, metadata !2613), !dbg !9435
  tail call void @llvm.dbg.value(metadata i32 %threadsX, i64 0, metadata !2390, metadata !2613), !dbg !9436
  tail call void @llvm.dbg.value(metadata i32 %threadsY, i64 0, metadata !2391, metadata !2613), !dbg !9437
  tail call void @llvm.dbg.value(metadata i32 %threadsZ, i64 0, metadata !2392, metadata !2613), !dbg !9438
  tail call void @llvm.dbg.value(metadata i32 %shared_mem_bytes, i64 0, metadata !2393, metadata !2613), !dbg !9439
  tail call void @llvm.dbg.value(metadata i32* %arg_sizes, i64 0, metadata !2394, metadata !2613), !dbg !9440
  tail call void @llvm.dbg.value(metadata i8** %args, i64 0, metadata !2395, metadata !2613), !dbg !9441
  tail call void @llvm.dbg.value(metadata i8* %arg_is_buffer, i64 0, metadata !2396, metadata !2613), !dbg !9442
  tail call void @llvm.dbg.value(metadata i32 %num_attributes, i64 0, metadata !2397, metadata !2613), !dbg !9443
  tail call void @llvm.dbg.value(metadata float* %vertex_buffer, i64 0, metadata !2398, metadata !2613), !dbg !9444
  tail call void @llvm.dbg.value(metadata i32 %num_coords_dim0, i64 0, metadata !2399, metadata !2613), !dbg !9445
  tail call void @llvm.dbg.value(metadata i32 %num_coords_dim1, i64 0, metadata !2400, metadata !2613), !dbg !9446
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !9447
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !9449
  %call.i = tail call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !9450
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i32 1023, !dbg !9451
  store i8 0, i8* %add.ptr.i, align 1, !dbg !9452, !tbaa !3047
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9453
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.251, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9455
  %call.i.154 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %add.ptr.i, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.251, i32 0, i32 0)) #6, !dbg !9456
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !9457
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2504, metadata !2613) #2, !dbg !9459
  %call.i.157 = tail call i8* @halide_pointer_to_string(i8* %call.i.154, i8* %add.ptr.i, i8* %user_context) #6, !dbg !9460
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9461
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.213, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9463
  %call.i.160 = tail call i8* @halide_string_to_string(i8* %call.i.157, i8* %add.ptr.i, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.213, i32 0, i32 0)) #6, !dbg !9464
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9465
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.252, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9467
  %call.i.163 = tail call i8* @halide_string_to_string(i8* %call.i.160, i8* %add.ptr.i, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.252, i32 0, i32 0)) #6, !dbg !9468
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9469
  tail call void @llvm.dbg.value(metadata i8* %entry_name, i64 0, metadata !2500, metadata !2613) #2, !dbg !9471
  %call.i.166 = tail call i8* @halide_string_to_string(i8* %call.i.163, i8* %add.ptr.i, i8* %entry_name) #6, !dbg !9472
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9473
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.213, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9475
  %call.i.169 = tail call i8* @halide_string_to_string(i8* %call.i.166, i8* %add.ptr.i, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.213, i32 0, i32 0)) #6, !dbg !9476
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9477
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.253, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9479
  %call.i.172 = tail call i8* @halide_string_to_string(i8* %call.i.169, i8* %add.ptr.i, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.253, i32 0, i32 0)) #6, !dbg !9480
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !9481
  tail call void @llvm.dbg.value(metadata i32 %blocksX, i64 0, metadata !2508, metadata !2613) #2, !dbg !9483
  %conv.i = sext i32 %blocksX to i64, !dbg !9484
  %call.i.175 = tail call i8* @halide_int64_to_string(i8* %call.i.172, i8* %add.ptr.i, i64 %conv.i, i32 1) #6, !dbg !9485
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9486
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9488
  %call.i.178 = tail call i8* @halide_string_to_string(i8* %call.i.175, i8* %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0)) #6, !dbg !9489
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !9490
  tail call void @llvm.dbg.value(metadata i32 %blocksY, i64 0, metadata !2508, metadata !2613) #2, !dbg !9492
  %conv.i.181 = sext i32 %blocksY to i64, !dbg !9493
  %call.i.182 = tail call i8* @halide_int64_to_string(i8* %call.i.178, i8* %add.ptr.i, i64 %conv.i.181, i32 1) #6, !dbg !9494
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9495
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9497
  %call.i.185 = tail call i8* @halide_string_to_string(i8* %call.i.182, i8* %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0)) #6, !dbg !9498
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !9499
  tail call void @llvm.dbg.value(metadata i32 %blocksZ, i64 0, metadata !2508, metadata !2613) #2, !dbg !9501
  %conv.i.188 = sext i32 %blocksZ to i64, !dbg !9502
  %call.i.189 = tail call i8* @halide_int64_to_string(i8* %call.i.185, i8* %add.ptr.i, i64 %conv.i.188, i32 1) #6, !dbg !9503
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9504
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.213, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9506
  %call.i.192 = tail call i8* @halide_string_to_string(i8* %call.i.189, i8* %add.ptr.i, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.213, i32 0, i32 0)) #6, !dbg !9507
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9508
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.254, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9510
  %call.i.195 = tail call i8* @halide_string_to_string(i8* %call.i.192, i8* %add.ptr.i, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.254, i32 0, i32 0)) #6, !dbg !9511
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !9512
  tail call void @llvm.dbg.value(metadata i32 %threadsX, i64 0, metadata !2508, metadata !2613) #2, !dbg !9514
  %conv.i.198 = sext i32 %threadsX to i64, !dbg !9515
  %call.i.199 = tail call i8* @halide_int64_to_string(i8* %call.i.195, i8* %add.ptr.i, i64 %conv.i.198, i32 1) #6, !dbg !9516
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9517
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9519
  %call.i.202 = tail call i8* @halide_string_to_string(i8* %call.i.199, i8* %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0)) #6, !dbg !9520
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !9521
  tail call void @llvm.dbg.value(metadata i32 %threadsY, i64 0, metadata !2508, metadata !2613) #2, !dbg !9523
  %conv.i.205 = sext i32 %threadsY to i64, !dbg !9524
  %call.i.206 = tail call i8* @halide_int64_to_string(i8* %call.i.202, i8* %add.ptr.i, i64 %conv.i.205, i32 1) #6, !dbg !9525
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9526
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9528
  %call.i.209 = tail call i8* @halide_string_to_string(i8* %call.i.206, i8* %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.197, i32 0, i32 0)) #6, !dbg !9529
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !9530
  tail call void @llvm.dbg.value(metadata i32 %threadsZ, i64 0, metadata !2508, metadata !2613) #2, !dbg !9532
  %conv.i.212 = sext i32 %threadsZ to i64, !dbg !9533
  %call.i.213 = tail call i8* @halide_int64_to_string(i8* %call.i.209, i8* %add.ptr.i, i64 %conv.i.212, i32 1) #6, !dbg !9534
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9535
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.213, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9537
  %call.i.216 = tail call i8* @halide_string_to_string(i8* %call.i.213, i8* %add.ptr.i, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.213, i32 0, i32 0)) #6, !dbg !9538
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9539
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.255, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9541
  %call.i.219 = tail call i8* @halide_string_to_string(i8* %call.i.216, i8* %add.ptr.i, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.255, i32 0, i32 0)) #6, !dbg !9542
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !9543
  tail call void @llvm.dbg.value(metadata i32 %shared_mem_bytes, i64 0, metadata !2508, metadata !2613) #2, !dbg !9545
  %conv.i.222 = sext i32 %shared_mem_bytes to i64, !dbg !9546
  %call.i.223 = tail call i8* @halide_int64_to_string(i8* %call.i.219, i8* %add.ptr.i, i64 %conv.i.222, i32 1) #6, !dbg !9547
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9548
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9550
  %call.i.226 = tail call i8* @halide_string_to_string(i8* %call.i.223, i8* %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !9551
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !9552
  tail call void @halide_print(i8* %user_context, i8* %call.i) #6, !dbg !9554
  tail call void @halide_free(i8* %user_context, i8* %call.i) #6, !dbg !9555
  %0 = bitcast %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx to i8*, !dbg !9556
  call void @llvm.lifetime.start(i64 16, i8* %0) #2, !dbg !9556
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2401, metadata !2613), !dbg !9557
  tail call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2437, metadata !2613) #2, !dbg !9558
  tail call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2439, metadata !2613) #2, !dbg !9560
  %user_context2.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 0, !dbg !9561
  store i8* %user_context, i8** %user_context2.i, align 4, !dbg !9561, !tbaa !7524
  %mDev.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 1, !dbg !9562
  store i8* null, i8** %mDev.i, align 4, !dbg !9562, !tbaa !7527
  %mContext.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 2, !dbg !9563
  store i8* null, i8** %mContext.i, align 4, !dbg !9563, !tbaa !7529
  %error.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Renderscript::Context", %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i32 0, i32 3, !dbg !9564
  store i32 2, i32* %error.i, align 4, !dbg !9564, !tbaa !7531
  %call.i.229 = tail call i32 @halide_start_clock(i8* %user_context) #6, !dbg !9565
  %call5.i = call i32 @halide_renderscript_acquire_context(i8* %user_context, i8** %mDev.i, i8** %mContext.i, i1 zeroext true) #6, !dbg !9566
  store i32 %call5.i, i32* %error.i, align 4, !dbg !9567, !tbaa !7531
  %1 = load i8*, i8** %mDev.i, align 4, !dbg !9568, !tbaa !7527
  %cmp.i = icmp eq i8* %1, null, !dbg !9568
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !9569

if.then.i:                                        ; preds = %entry
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.283, i32 0, i32 0)) #6, !dbg !9570
  br label %if.end.i, !dbg !9570

if.end.i:                                         ; preds = %if.then.i, %entry
  %2 = load i8*, i8** %mContext.i, align 4, !dbg !9571, !tbaa !7529
  %cmp9.i = icmp eq i8* %2, null, !dbg !9571
  br i1 %cmp9.i, label %if.then.10.i, label %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit, !dbg !9572

if.then.10.i:                                     ; preds = %if.end.i
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.284, i32 0, i32 0)) #6, !dbg !9573
  br label %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit, !dbg !9573

_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit: ; preds = %if.then.10.i, %if.end.i
  %3 = load i32, i32* %error.i, align 4, !dbg !9574, !tbaa !7531
  %cmp = icmp eq i32 %3, 0, !dbg !9576
  br i1 %cmp, label %if.end, label %cleanup, !dbg !9577

if.end:                                           ; preds = %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !9578
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !9580
  %call.i.231 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !9581
  %add.ptr.i.234 = getelementptr inbounds i8, i8* %call.i.231, i32 1023, !dbg !9582
  store i8 0, i8* %add.ptr.i.234, align 1, !dbg !9583, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9584
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.256, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9586
  %call.i.238 = call i8* @halide_string_to_string(i8* %call.i.231, i8* %add.ptr.i.234, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.256, i32 0, i32 0)) #6, !dbg !9587
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !9588
  call void @halide_print(i8* %user_context, i8* %call.i.231) #6, !dbg !9590
  call void @halide_free(i8* %user_context, i8* %call.i.231) #6, !dbg !9591
  %call26 = call i64 @halide_current_time_ns(i8* %user_context) #6, !dbg !9592
  call void @llvm.dbg.value(metadata i64 %call26, i64 0, metadata !2402, metadata !2613), !dbg !9593
  %tobool = icmp eq i8* %state_ptr, null, !dbg !9594
  br i1 %tobool, label %if.then.27, label %if.end.28, !dbg !9596

if.then.27:                                       ; preds = %if.end
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.257, i32 0, i32 0)) #6, !dbg !9597
  br label %if.end.28, !dbg !9597

if.end.28:                                        ; preds = %if.then.27, %if.end
  %module29 = bitcast i8* %state_ptr to i8**, !dbg !9599
  %4 = load i8*, i8** %module29, align 4, !dbg !9599, !tbaa !7594
  call void @llvm.dbg.value(metadata i8* %4, i64 0, metadata !2403, metadata !2613), !dbg !9600
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !9601
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !9603
  %call.i.242 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !9604
  %add.ptr.i.245 = getelementptr inbounds i8, i8* %call.i.242, i32 1023, !dbg !9605
  store i8 0, i8* %add.ptr.i.245, align 1, !dbg !9606, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9607
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.258, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9609
  %call.i.249 = call i8* @halide_string_to_string(i8* %call.i.242, i8* %add.ptr.i.245, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.258, i32 0, i32 0)) #6, !dbg !9610
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !9611
  call void @llvm.dbg.value(metadata i8* %4, i64 0, metadata !2504, metadata !2613) #2, !dbg !9613
  %call.i.252 = call i8* @halide_pointer_to_string(i8* %call.i.249, i8* %add.ptr.i.245, i8* %4) #6, !dbg !9614
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9615
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9617
  %call.i.255 = call i8* @halide_string_to_string(i8* %call.i.252, i8* %add.ptr.i.245, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !9618
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !9619
  call void @halide_print(i8* %user_context, i8* %call.i.242) #6, !dbg !9621
  call void @halide_free(i8* %user_context, i8* %call.i.242) #6, !dbg !9622
  %tobool34 = icmp eq i8* %4, null, !dbg !9623
  br i1 %tobool34, label %if.then.35, label %while.cond.preheader, !dbg !9625

if.then.35:                                       ; preds = %if.end.28
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.259, i32 0, i32 0)) #6, !dbg !9626
  br label %while.cond.preheader, !dbg !9626

while.cond.preheader:                             ; preds = %if.then.35, %if.end.28
  %5 = load i32, i32* %arg_sizes, align 4, !dbg !9628, !tbaa !2786
  %cmp37.488 = icmp eq i32 %5, 0, !dbg !9629
  br i1 %cmp37.488, label %while.end, label %while.body.lr.ph, !dbg !9630

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %6 = bitcast i32* %arg_value to i8*, !dbg !9631
  br label %while.body, !dbg !9630

while.body:                                       ; preds = %if.end.67, %while.body.lr.ph
  %arrayidx492 = phi i32* [ %arg_sizes, %while.body.lr.ph ], [ %arrayidx, %if.end.67 ]
  %num_args.0491 = phi i32 [ 0, %while.body.lr.ph ], [ %inc, %if.end.67 ]
  %output_arg.0490 = phi i64 [ 0, %while.body.lr.ph ], [ %output_arg.2, %if.end.67 ]
  %input_arg.0489 = phi i64 [ 0, %while.body.lr.ph ], [ %input_arg.2, %if.end.67 ]
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !9632
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !9634
  %call.i.259 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !9635
  %add.ptr.i.262 = getelementptr inbounds i8, i8* %call.i.259, i32 1023, !dbg !9636
  store i8 0, i8* %add.ptr.i.262, align 1, !dbg !9637, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9638
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.260, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9640
  %call.i.266 = call i8* @halide_string_to_string(i8* %call.i.259, i8* %add.ptr.i.262, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.260, i32 0, i32 0)) #6, !dbg !9641
  %conv = zext i32 %num_args.0491 to i64, !dbg !9642
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2515, metadata !2613) #2, !dbg !9643
  call void @llvm.dbg.value(metadata i64 %conv, i64 0, metadata !2516, metadata !2613) #2, !dbg !9645
  %call.i.269 = call i8* @halide_int64_to_string(i8* %call.i.266, i8* %add.ptr.i.262, i64 %conv, i32 1) #6, !dbg !9646
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9647
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.198, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9649
  %call.i.272 = call i8* @halide_string_to_string(i8* %call.i.269, i8* %add.ptr.i.262, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.198, i32 0, i32 0)) #6, !dbg !9650
  %7 = load i32, i32* %arrayidx492, align 4, !dbg !9651, !tbaa !2786
  %conv43 = zext i32 %7 to i64, !dbg !9651
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2515, metadata !2613) #2, !dbg !9652
  call void @llvm.dbg.value(metadata i64 %conv43, i64 0, metadata !2516, metadata !2613) #2, !dbg !9654
  %call.i.275 = call i8* @halide_int64_to_string(i8* %call.i.272, i8* %add.ptr.i.262, i64 %conv43, i32 1) #6, !dbg !9655
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9656
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.261, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9658
  %call.i.278 = call i8* @halide_string_to_string(i8* %call.i.275, i8* %add.ptr.i.262, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.261, i32 0, i32 0)) #6, !dbg !9659
  %arrayidx46 = getelementptr inbounds i8*, i8** %args, i32 %num_args.0491, !dbg !9660
  %8 = bitcast i8** %arrayidx46 to i8***, !dbg !9660
  %9 = load i8**, i8*** %8, align 4, !dbg !9660, !tbaa !2768
  %10 = load i8*, i8** %9, align 4, !dbg !9661, !tbaa !2768
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !9662
  call void @llvm.dbg.value(metadata i8* %10, i64 0, metadata !2504, metadata !2613) #2, !dbg !9664
  %call.i.281 = call i8* @halide_pointer_to_string(i8* %call.i.278, i8* %add.ptr.i.262, i8* %10) #6, !dbg !9665
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9666
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.262, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9668
  %call.i.284 = call i8* @halide_string_to_string(i8* %call.i.281, i8* %add.ptr.i.262, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.262, i32 0, i32 0)) #6, !dbg !9669
  %arrayidx49 = getelementptr inbounds i8, i8* %arg_is_buffer, i32 %num_args.0491, !dbg !9670
  %11 = load i8, i8* %arrayidx49, align 1, !dbg !9670, !tbaa !3047
  %tobool50 = icmp ne i8 %11, 0, !dbg !9670
  %cond = select i1 %tobool50, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.263, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.264, i32 0, i32 0), !dbg !9670
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9671
  call void @llvm.dbg.value(metadata i8* %cond, i64 0, metadata !2500, metadata !2613) #2, !dbg !9673
  %call.i.287 = call i8* @halide_string_to_string(i8* %call.i.284, i8* %add.ptr.i.262, i8* %cond) #6, !dbg !9674
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9675
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9677
  %call.i.290 = call i8* @halide_string_to_string(i8* %call.i.287, i8* %add.ptr.i.262, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !9678
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !9679
  call void @halide_print(i8* %user_context, i8* %call.i.259) #6, !dbg !9681
  call void @halide_free(i8* %user_context, i8* %call.i.259) #6, !dbg !9682
  %12 = load i8, i8* %arrayidx49, align 1, !dbg !9683, !tbaa !3047
  %cmp55 = icmp eq i8 %12, 0, !dbg !9684
  br i1 %cmp55, label %if.then.56, label %if.else, !dbg !9685

if.then.56:                                       ; preds = %while.body
  call void @llvm.lifetime.start(i64 4, i8* %6) #2, !dbg !9631
  %13 = bitcast i8** %arrayidx46 to i32**, !dbg !9686
  %14 = load i32*, i32** %13, align 4, !dbg !9686, !tbaa !2768
  %15 = load i32, i32* %14, align 4, !dbg !9687, !tbaa !2786
  call void @llvm.dbg.value(metadata i32 %15, i64 0, metadata !2407, metadata !2613), !dbg !9688
  store i32 %15, i32* %arg_value, align 4, !dbg !9688, !tbaa !2786
  %16 = load %struct.dispatchTable*, %struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE, align 4, !dbg !9689, !tbaa !2768
  %ScriptSetVarV = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %16, i32 0, i32 60, !dbg !9690
  %17 = load void (i8*, i8*, i32, i8*, i32)*, void (i8*, i8*, i32, i8*, i32)** %ScriptSetVarV, align 4, !dbg !9690, !tbaa !7221
  %18 = load i8*, i8** %mContext.i, align 4, !dbg !9691, !tbaa !7529
  call void %17(i8* %18, i8* %4, i32 %num_args.0491, i8* %6, i32 4) #6, !dbg !9689
  call void @llvm.lifetime.end(i64 4, i8* %6) #2, !dbg !9692
  br label %if.end.67, !dbg !9693

if.else:                                          ; preds = %while.body
  %19 = bitcast i8** %arrayidx46 to i64**, !dbg !9694
  %20 = load i64*, i64** %19, align 4, !dbg !9694, !tbaa !2768
  %21 = load i64, i64* %20, align 8, !dbg !9695, !tbaa !3312
  call void @llvm.dbg.value(metadata i64 %21, i64 0, metadata !2411, metadata !2613), !dbg !9696
  %22 = load %struct.dispatchTable*, %struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE, align 4, !dbg !9697, !tbaa !2768
  %ScriptSetVarObj = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %22, i32 0, i32 56, !dbg !9698
  %23 = load void (i8*, i8*, i32, i8*)*, void (i8*, i8*, i32, i8*)** %ScriptSetVarObj, align 4, !dbg !9698, !tbaa !7181
  %24 = load i8*, i8** %mContext.i, align 4, !dbg !9699, !tbaa !7529
  %call61 = call i64 @halide_get_device_handle(i64 %21) #6, !dbg !9700
  %conv62 = trunc i64 %call61 to i32, !dbg !9701
  %25 = inttoptr i32 %conv62 to i8*, !dbg !9701
  call void %23(i8* %24, i8* %4, i32 %num_args.0491, i8* %25) #6, !dbg !9697
  %cmp63 = icmp eq i64 %input_arg.0489, 0, !dbg !9702
  %.input_arg.0 = select i1 %cmp63, i64 %21, i64 %input_arg.0489, !dbg !9704
  %output_arg.0. = select i1 %cmp63, i64 %output_arg.0490, i64 %21, !dbg !9704
  br label %if.end.67

if.end.67:                                        ; preds = %if.else, %if.then.56
  %input_arg.2 = phi i64 [ %input_arg.0489, %if.then.56 ], [ %.input_arg.0, %if.else ]
  %output_arg.2 = phi i64 [ %output_arg.0490, %if.then.56 ], [ %output_arg.0., %if.else ]
  %inc = add i32 %num_args.0491, 1, !dbg !9706
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !2404, metadata !2613), !dbg !9707
  %arrayidx = getelementptr inbounds i32, i32* %arg_sizes, i32 %inc, !dbg !9628
  %26 = load i32, i32* %arrayidx, align 4, !dbg !9628, !tbaa !2786
  %cmp37 = icmp eq i32 %26, 0, !dbg !9629
  br i1 %cmp37, label %while.end, label %while.body, !dbg !9630

while.end:                                        ; preds = %if.end.67, %while.cond.preheader
  %output_arg.0.lcssa = phi i64 [ 0, %while.cond.preheader ], [ %output_arg.2, %if.end.67 ]
  %input_arg.0.lcssa = phi i64 [ 0, %while.cond.preheader ], [ %input_arg.2, %if.end.67 ]
  %call68 = call i32 @atoi(i8* %entry_name) #6, !dbg !9708
  call void @llvm.dbg.value(metadata i32 %call68, i64 0, metadata !2413, metadata !2613), !dbg !9709
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !9710
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !9712
  %call.i.294 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !9713
  %add.ptr.i.297 = getelementptr inbounds i8, i8* %call.i.294, i32 1023, !dbg !9714
  store i8 0, i8* %add.ptr.i.297, align 1, !dbg !9715, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9716
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.265, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9718
  %call.i.301 = call i8* @halide_string_to_string(i8* %call.i.294, i8* %add.ptr.i.297, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.265, i32 0, i32 0)) #6, !dbg !9719
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2507, metadata !2613) #2, !dbg !9720
  call void @llvm.dbg.value(metadata i32 %call68, i64 0, metadata !2508, metadata !2613) #2, !dbg !9722
  %conv.i.304 = sext i32 %call68 to i64, !dbg !9723
  %call.i.305 = call i8* @halide_int64_to_string(i8* %call.i.301, i8* %add.ptr.i.297, i64 %conv.i.304, i32 1) #6, !dbg !9724
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9725
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.266, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9727
  %call.i.308 = call i8* @halide_string_to_string(i8* %call.i.305, i8* %add.ptr.i.297, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.266, i32 0, i32 0)) #6, !dbg !9728
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !9729
  call void @llvm.dbg.value(metadata i8* %4, i64 0, metadata !2504, metadata !2613) #2, !dbg !9731
  %call.i.311 = call i8* @halide_pointer_to_string(i8* %call.i.308, i8* %add.ptr.i.297, i8* %4) #6, !dbg !9732
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9733
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.267, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9735
  %call.i.314 = call i8* @halide_string_to_string(i8* %call.i.311, i8* %add.ptr.i.297, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.267, i32 0, i32 0)) #6, !dbg !9736
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9737
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.268, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9739
  %call.i.317 = call i8* @halide_string_to_string(i8* %call.i.314, i8* %add.ptr.i.297, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.268, i32 0, i32 0)) #6, !dbg !9740
  %call76 = call i64 @halide_get_device_handle(i64 %input_arg.0.lcssa) #6, !dbg !9741
  %conv77 = trunc i64 %call76 to i32, !dbg !9742
  %27 = inttoptr i32 %conv77 to i8*, !dbg !9742
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !9743
  call void @llvm.dbg.value(metadata i8* %27, i64 0, metadata !2504, metadata !2613) #2, !dbg !9745
  %call.i.320 = call i8* @halide_pointer_to_string(i8* %call.i.317, i8* %add.ptr.i.297, i8* %27) #6, !dbg !9746
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9747
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.269, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9749
  %call.i.323 = call i8* @halide_string_to_string(i8* %call.i.320, i8* %add.ptr.i.297, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.269, i32 0, i32 0)) #6, !dbg !9750
  %call80 = call i64 @halide_get_device_handle(i64 %output_arg.0.lcssa) #6, !dbg !9751
  %conv81 = trunc i64 %call80 to i32, !dbg !9752
  %28 = inttoptr i32 %conv81 to i8*, !dbg !9752
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2503, metadata !2613) #2, !dbg !9753
  call void @llvm.dbg.value(metadata i8* %28, i64 0, metadata !2504, metadata !2613) #2, !dbg !9755
  %call.i.326 = call i8* @halide_pointer_to_string(i8* %call.i.323, i8* %add.ptr.i.297, i8* %28) #6, !dbg !9756
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9757
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9759
  %call.i.329 = call i8* @halide_string_to_string(i8* %call.i.326, i8* %add.ptr.i.297, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.170, i32 0, i32 0)) #6, !dbg !9760
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !9761
  call void @halide_print(i8* %user_context, i8* %call.i.294) #6, !dbg !9763
  call void @halide_free(i8* %user_context, i8* %call.i.294) #6, !dbg !9764
  %29 = load %struct.dispatchTable*, %struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE, align 4, !dbg !9765, !tbaa !2768
  %ScriptForEach = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %29, i32 0, i32 54, !dbg !9766
  %30 = load void (i8*, i8*, i32, i8*, i8*, i8*, i32, %struct.RsScriptCall*, i32)*, void (i8*, i8*, i32, i8*, i8*, i8*, i32, %struct.RsScriptCall*, i32)** %ScriptForEach, align 4, !dbg !9766, !tbaa !7161
  %31 = load i8*, i8** %mContext.i, align 4, !dbg !9767, !tbaa !7529
  %call85 = call i64 @halide_get_device_handle(i64 %output_arg.0.lcssa) #6, !dbg !9768
  %conv86 = trunc i64 %call85 to i32, !dbg !9769
  %32 = inttoptr i32 %conv86 to i8*, !dbg !9769
  call void %30(i8* %31, i8* %4, i32 %call68, i8* null, i8* %32, i8* null, i32 0, %struct.RsScriptCall* null, i32 0) #6, !dbg !9765
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !9770
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !9772
  %call.i.333 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !9773
  %add.ptr.i.336 = getelementptr inbounds i8, i8* %call.i.333, i32 1023, !dbg !9774
  store i8 0, i8* %add.ptr.i.336, align 1, !dbg !9775, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9776
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.270, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9778
  %call.i.340 = call i8* @halide_string_to_string(i8* %call.i.333, i8* %add.ptr.i.336, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.270, i32 0, i32 0)) #6, !dbg !9779
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !9780
  call void @halide_print(i8* %user_context, i8* %call.i.333) #6, !dbg !9782
  call void @halide_free(i8* %user_context, i8* %call.i.333) #6, !dbg !9783
  %33 = load %struct.dispatchTable*, %struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE, align 4, !dbg !9784, !tbaa !2768
  %ContextFinish = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %33, i32 0, i32 26, !dbg !9785
  %34 = load void (i8*)*, void (i8*)** %ContextFinish, align 4, !dbg !9785, !tbaa !6911
  %35 = load i8*, i8** %mContext.i, align 4, !dbg !9786, !tbaa !7529
  call void %34(i8* %35) #6, !dbg !9784
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !9787
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !9789
  %call.i.344 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !9790
  %add.ptr.i.347 = getelementptr inbounds i8, i8* %call.i.344, i32 1023, !dbg !9791
  store i8 0, i8* %add.ptr.i.347, align 1, !dbg !9792, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9793
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.271, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9795
  %call.i.351 = call i8* @halide_string_to_string(i8* %call.i.344, i8* %add.ptr.i.347, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.271, i32 0, i32 0)) #6, !dbg !9796
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !9797
  call void @halide_print(i8* %user_context, i8* %call.i.344) #6, !dbg !9799
  call void @halide_free(i8* %user_context, i8* %call.i.344) #6, !dbg !9800
  %36 = load %struct.dispatchTable*, %struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE, align 4, !dbg !9801, !tbaa !2768
  %AllocationSyncAll = getelementptr inbounds %struct.dispatchTable, %struct.dispatchTable* %36, i32 0, i32 45, !dbg !9802
  %37 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %AllocationSyncAll, align 4, !dbg !9802, !tbaa !7071
  %38 = load i8*, i8** %mContext.i, align 4, !dbg !9803, !tbaa !7529
  %call93 = call i64 @halide_get_device_handle(i64 %output_arg.0.lcssa) #6, !dbg !9804
  %conv94 = trunc i64 %call93 to i32, !dbg !9805
  %39 = inttoptr i32 %conv94 to i8*, !dbg !9805
  call void %37(i8* %38, i8* %39, i32 1) #6, !dbg !9801
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !9806
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !9808
  %call.i.355 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !9809
  %add.ptr.i.358 = getelementptr inbounds i8, i8* %call.i.355, i32 1023, !dbg !9810
  store i8 0, i8* %add.ptr.i.358, align 1, !dbg !9811, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9812
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.272, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9814
  %call.i.362 = call i8* @halide_string_to_string(i8* %call.i.355, i8* %add.ptr.i.358, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.272, i32 0, i32 0)) #6, !dbg !9815
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !9816
  call void @halide_print(i8* %user_context, i8* %call.i.355) #6, !dbg !9818
  call void @halide_free(i8* %user_context, i8* %call.i.355) #6, !dbg !9819
  %call97 = call i64 @halide_current_time_ns(i8* %user_context) #6, !dbg !9820
  call void @llvm.dbg.value(metadata i64 %call97, i64 0, metadata !2414, metadata !2613), !dbg !9821
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2491, metadata !2613) #2, !dbg !9822
  call void @llvm.dbg.value(metadata i8* %user_context, i64 0, metadata !2493, metadata !2613) #2, !dbg !9824
  %call.i.366 = call i8* @halide_malloc(i8* %user_context, i32 1024) #6, !dbg !9825
  %add.ptr.i.369 = getelementptr inbounds i8, i8* %call.i.366, i32 1023, !dbg !9826
  store i8 0, i8* %add.ptr.i.369, align 1, !dbg !9827, !tbaa !3047
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9828
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.176, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9830
  %call.i.373 = call i8* @halide_string_to_string(i8* %call.i.366, i8* %add.ptr.i.369, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.176, i32 0, i32 0)) #6, !dbg !9831
  %sub = sub i64 %call97, %call26, !dbg !9832
  %conv100 = uitofp i64 %sub to double, !dbg !9833
  %div = fdiv double %conv100, 1.000000e+06, !dbg !9834
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2511, metadata !2613) #2, !dbg !9835
  call void @llvm.dbg.value(metadata double %div, i64 0, metadata !2512, metadata !2613) #2, !dbg !9837
  %call.i.376 = call i8* @halide_double_to_string(i8* %call.i.373, i8* %add.ptr.i.369, double %div, i32 1) #6, !dbg !9838
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2499, metadata !2613) #2, !dbg !9839
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0), i64 0, metadata !2500, metadata !2613) #2, !dbg !9841
  %call.i.379 = call i8* @halide_string_to_string(i8* %call.i.376, i8* %add.ptr.i.369, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0)) #6, !dbg !9842
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::(anonymous namespace)::Printer"* undef, i64 0, metadata !2496, metadata !2613) #2, !dbg !9843
  call void @halide_print(i8* %user_context, i8* %call.i.366) #6, !dbg !9845
  call void @halide_free(i8* %user_context, i8* %call.i.366) #6, !dbg !9846
  br label %cleanup

cleanup:                                          ; preds = %while.end, %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit
  %retval.0 = phi i32 [ 0, %while.end ], [ %3, %_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv.exit ]
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2401, metadata !2613), !dbg !9557
  call void @llvm.dbg.value(metadata %"class.Halide::Runtime::Internal::Renderscript::Context"* %ctx, i64 0, metadata !2442, metadata !2613) #2, !dbg !9847
  %40 = load i8*, i8** %user_context2.i, align 4, !dbg !9849, !tbaa !7524
  %call.i.383 = call i32 @halide_renderscript_release_context(i8* %40) #6, !dbg !9850
  call void @llvm.lifetime.end(i64 16, i8* %0) #2, !dbg !9851
  ret i32 %retval.0, !dbg !9851
}

; Function Attrs: nounwind
define weak %struct.halide_device_interface* @halide_renderscript_device_interface() #0 {
entry:
  ret %struct.halide_device_interface* @_ZN6Halide7Runtime8Internal12Renderscript29renderscript_device_interfaceE, !dbg !9852
}

; Function Attrs: nounwind
define weak void @halide_renderscript_cleanup() #0 {
entry:
  %call = tail call i32 @halide_renderscript_device_release(i8* null) #7, !dbg !9853
  ret void, !dbg !9854
}

declare i8** @dlerror() #1

; Function Attrs: nounwind
define linkonce_odr zeroext i1 @_ZN6Halide7Runtime8Internal12Renderscript7Context6loadSOEPKc(i8* %filename) #0 comdat align 2 {
entry:
  %buf.i = alloca [256 x i8], align 1
  tail call void @llvm.dbg.value(metadata i8* %filename, i64 0, metadata !2433, metadata !2613), !dbg !9855
  %call = tail call i8* @dlopen(i8* %filename, i32 5) #6, !dbg !9856
  tail call void @llvm.dbg.value(metadata i8* %call, i64 0, metadata !2434, metadata !2613), !dbg !9857
  %cmp = icmp eq i8* %call, null, !dbg !9858
  tail call void @llvm.dbg.declare(metadata [256 x i8]* %buf.i, metadata !2429, metadata !2613), !dbg !9860
  br i1 %cmp, label %if.then, label %if.end, !dbg !9863

if.then:                                          ; preds = %entry
  %call1 = tail call i8** @dlerror() #6, !dbg !9864
  %call2 = tail call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.279, i32 0, i32 0), i8* %filename, i8** %call1) #6, !dbg !9864
  br label %cleanup, !dbg !9866

if.end:                                           ; preds = %entry
  %0 = load %struct.dispatchTable*, %struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE, align 4, !dbg !9867, !tbaa !2768
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.280, i32 0, i32 0), i64 0, metadata !2428, metadata !2613) #2, !dbg !9868
  %1 = getelementptr inbounds [256 x i8], [256 x i8]* %buf.i, i32 0, i32 0, !dbg !9869
  call void @llvm.lifetime.start(i64 256, i8* %1) #2, !dbg !9869
  %call.i = call i32 @_ZN6Halide7Runtime8Internal12Renderscript12property_getEPKcPcS4_(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.280, i32 0, i32 0), i8* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.278, i32 0, i32 0)) #6, !dbg !9870
  %call2.i = call i32 @atoi(i8* %1) #6, !dbg !9871
  call void @llvm.lifetime.end(i64 256, i8* %1) #2, !dbg !9872
  %call4 = call zeroext i1 @_Z11loadSymbolsPvR13dispatchTablei(i8* %call, %struct.dispatchTable* dereferenceable(304) %0, i32 %call2.i) #7, !dbg !9873
  br i1 %call4, label %if.end.8, label %if.then.6, !dbg !9874

if.then.6:                                        ; preds = %if.end
  %call7 = call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.281, i32 0, i32 0), i8* %filename) #6, !dbg !9875
  br label %cleanup, !dbg !9877

if.end.8:                                         ; preds = %if.end
  %call9 = call i32 (i32, i8*, i8*, ...) @__android_log_print(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.282, i32 0, i32 0), i8* %filename) #6, !dbg !9878
  br label %cleanup, !dbg !9879

cleanup:                                          ; preds = %if.end.8, %if.then.6, %if.then
  %retval.0 = phi i1 [ false, %if.then ], [ false, %if.then.6 ], [ true, %if.end.8 ]
  ret i1 %retval.0, !dbg !9880
}

; Function Attrs: nounwind
define i32 @__test_arm(%struct.buffer_t* noalias %input.buffer, %struct.buffer_t* noalias %g.buffer) #2 {
entry:
  %"2_arg_is_buffer151" = alloca [5 x [5 x i8]], align 1
  %"2_arg_sizes152" = alloca [5 x [5 x i32]], align 4
  %"2_args153" = alloca [5 x [5 x i8*]], align 4
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !374, metadata !2613), !dbg !9881
  %"1_arg_is_buffer154" = alloca [11 x [11 x i8]], align 1
  %"1_arg_sizes155" = alloca [11 x [11 x i32]], align 4
  %"1_args156" = alloca [11 x [11 x i8*]], align 4
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !374, metadata !2613), !dbg !9881
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !374, metadata !2613), !dbg !9881
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !374, metadata !2613), !dbg !9881
  %f.buffer = alloca %struct.buffer_t, align 8
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !374, metadata !2613), !dbg !9881
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !374, metadata !2613), !dbg !9881
  %buf_host = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %input.buffer, i32 0, i32 1
  %input.host = load i8*, i8** %buf_host, align 4
  %buf_dev = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %input.buffer, i32 0, i32 0
  %input.dev = load i64, i64* %buf_dev, align 8
  %0 = tail call i32 @halide_renderscript_initialize_kernels(i8* null, i8** nonnull @module_state___test_arm_renderscript, i8* getelementptr inbounds ([2076 x i8], [2076 x i8]* @halide___test_arm_renderscript_kernel_src, i32 0, i32 0), i32 2076)
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %"assert succeeded", label %call_destructor.exit144, !prof !9882

"assert succeeded":                               ; preds = %entry
  %2 = icmp eq i8* %input.host, null
  %3 = icmp eq i64 %input.dev, 0
  %input.host_and_dev_are_null = and i1 %2, %3
  %buf_extent = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %input.buffer, i32 0, i32 2, i32 0
  %input.extent.0 = load i32, i32* %buf_extent, align 4
  %buf_extent1 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %input.buffer, i32 0, i32 2, i32 1
  %input.extent.1 = load i32, i32* %buf_extent1, align 4
  %buf_stride = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %input.buffer, i32 0, i32 3, i32 0
  %input.stride.0 = load i32, i32* %buf_stride, align 4
  %buf_stride4 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %input.buffer, i32 0, i32 3, i32 1
  %input.stride.1 = load i32, i32* %buf_stride4, align 4
  %buf_min = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %input.buffer, i32 0, i32 4, i32 0
  %input.min.0 = load i32, i32* %buf_min, align 4
  %buf_min7 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %input.buffer, i32 0, i32 4, i32 1
  %input.min.1 = load i32, i32* %buf_min7, align 4
  %buf_elem_size = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %input.buffer, i32 0, i32 5
  %input.elem_size = load i32, i32* %buf_elem_size, align 4
  %4 = icmp eq %struct.buffer_t* %g.buffer, null
  br i1 %4, label %"assert failed12", label %"assert succeeded13", !prof !9883

if.then.i:                                        ; preds = %"assert succeeded115", %"produce g", %"assert succeeded120", %"assert succeeded122"
  %5 = phi i32 [ %161, %"assert succeeded122" ], [ %"copy_to_device_result$5", %"assert succeeded115" ], [ %"copy_to_device_result$4", %"produce g" ], [ %"copy_to_device_result$3", %"assert succeeded120" ]
  call void @halide_device_free_as_destructor(i8* null, i8* %136) #6, !dbg !9884
  br label %if.then.i.137, !dbg !9887

if.then.i.137:                                    ; preds = %"assert succeeded107", %"assert succeeded109", %"assert succeeded111", %if.then.i
  %6 = phi i32 [ %5, %if.then.i ], [ %device_malloc_result, %"assert succeeded107" ], [ %copy_to_device_result, %"assert succeeded109" ], [ %134, %"assert succeeded111" ]
  call void @halide_device_free_as_destructor(i8* null, i8* %86) #6, !dbg !9884
  br label %call_destructor.exit138, !dbg !9887

call_destructor.exit138:                          ; preds = %"assert succeeded88", %if.then.i.137
  %7 = phi i32 [ %6, %if.then.i.137 ], [ %"copy_to_device_result$2", %"assert succeeded88" ]
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !372, metadata !2613) #2, !dbg !9888
  call void @llvm.dbg.value(metadata void (i8*, i8*)* @halide_device_free_as_destructor, i64 0, metadata !373, metadata !2613) #2, !dbg !9889
  call void @llvm.dbg.value(metadata i8* %84, i64 0, metadata !375, metadata !2613) #2, !dbg !9890
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !374, metadata !2613), !dbg !9881
  %tobool.i.139 = icmp eq %struct.buffer_t* %input.buffer, null, !dbg !9891
  br i1 %tobool.i.139, label %call_destructor.exit141, label %if.then.i.140, !dbg !9892

if.then.i.140:                                    ; preds = %call_destructor.exit138
  call void @halide_device_free_as_destructor(i8* null, i8* %84) #6, !dbg !9884
  br label %call_destructor.exit141, !dbg !9887

call_destructor.exit141:                          ; preds = %call_destructor.exit138, %if.then.i.140
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !372, metadata !2613) #2, !dbg !9888
  call void @llvm.dbg.value(metadata void (i8*, i8*)* @halide_free, i64 0, metadata !373, metadata !2613) #2, !dbg !9889
  call void @llvm.dbg.value(metadata i8* %f.host, i64 0, metadata !375, metadata !2613) #2, !dbg !9890
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !374, metadata !2613), !dbg !9881
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !374, metadata !2613), !dbg !9881
  %tobool.i.142 = icmp eq i8* %f.host, null, !dbg !9891
  br i1 %tobool.i.142, label %call_destructor.exit144, label %if.then.i.143, !dbg !9892

if.then.i.143:                                    ; preds = %call_destructor.exit141
  call void @halide_free(i8* null, i8* %f.host) #6, !dbg !9884
  br label %call_destructor.exit144, !dbg !9887

call_destructor.exit144:                          ; preds = %"assert failed12", %"assert failed61", %"assert failed63", %"assert failed65", %"assert failed67", %"assert failed69", %"assert failed71", %"assert failed75", %"assert failed77", %"assert failed81", %"assert failed83", %"assert failed85", %"assert failed87", %entry, %after_bb44.thread, %call_destructor.exit150, %after_bb44, %call_destructor.exit141, %if.then.i.143
  %merge = phi i32 [ %7, %call_destructor.exit141 ], [ %7, %if.then.i.143 ], [ 0, %after_bb44 ], [ 0, %call_destructor.exit150 ], [ 0, %after_bb44.thread ], [ %0, %entry ], [ %82, %"assert failed87" ], [ %76, %"assert failed85" ], [ %70, %"assert failed83" ], [ %68, %"assert failed81" ], [ %64, %"assert failed77" ], [ %62, %"assert failed75" ], [ %54, %"assert failed71" ], [ %52, %"assert failed69" ], [ %50, %"assert failed67" ], [ %44, %"assert failed65" ], [ %38, %"assert failed63" ], [ %36, %"assert failed61" ], [ %8, %"assert failed12" ]
  ret i32 %merge

"assert failed12":                                ; preds = %"assert succeeded"
  %8 = tail call i32 @halide_error_buffer_argument_is_null(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.192, i32 0, i32 0)) #2
  br label %call_destructor.exit144

"assert succeeded13":                             ; preds = %"assert succeeded"
  %buf_dev11 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %g.buffer, i32 0, i32 0
  %g.dev = load i64, i64* %buf_dev11, align 8
  %buf_host10 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %g.buffer, i32 0, i32 1
  %g.host = load i8*, i8** %buf_host10, align 4
  %9 = icmp eq i8* %g.host, null
  %10 = icmp eq i64 %g.dev, 0
  %g.host_and_dev_are_null = and i1 %10, %9
  %buf_extent16 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %g.buffer, i32 0, i32 2, i32 0
  %g.extent.0 = load i32, i32* %buf_extent16, align 4
  %buf_extent17 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %g.buffer, i32 0, i32 2, i32 1
  %g.extent.1 = load i32, i32* %buf_extent17, align 4
  %buf_stride20 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %g.buffer, i32 0, i32 3, i32 0
  %g.stride.0 = load i32, i32* %buf_stride20, align 4
  %buf_stride21 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %g.buffer, i32 0, i32 3, i32 1
  %g.stride.1 = load i32, i32* %buf_stride21, align 4
  %buf_min24 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %g.buffer, i32 0, i32 4, i32 0
  %g.min.0 = load i32, i32* %buf_min24, align 4
  %buf_min25 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %g.buffer, i32 0, i32 4, i32 1
  %g.min.1 = load i32, i32* %buf_min25, align 4
  %buf_elem_size28 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %g.buffer, i32 0, i32 5
  %g.elem_size = load i32, i32* %buf_elem_size28, align 4
  %11 = add nsw i32 %g.min.0, %g.extent.0
  %12 = icmp slt i32 %11, %input.extent.0
  %13 = select i1 %12, i32 %11, i32 %input.extent.0
  %14 = add nsw i32 %13, -1
  %15 = icmp slt i32 %14, 0
  %16 = select i1 %15, i32 0, i32 %14
  %17 = add i32 %input.extent.0, -1
  %18 = icmp slt i32 %g.min.0, %17
  %19 = select i1 %18, i32 %g.min.0, i32 %17
  %20 = icmp slt i32 %19, 0
  %21 = select i1 %20, i32 0, i32 %19
  %input.extent.0.required.s = sub nsw i32 %16, %21
  %22 = add nsw i32 %g.min.1, %g.extent.1
  %23 = icmp slt i32 %22, %input.extent.1
  %24 = select i1 %23, i32 %22, i32 %input.extent.1
  %25 = add nsw i32 %24, -1
  %26 = icmp slt i32 %25, 0
  %27 = select i1 %26, i32 0, i32 %25
  %28 = add i32 %input.extent.1, -1
  %29 = icmp slt i32 %g.min.1, %28
  %30 = select i1 %29, i32 %g.min.1, i32 %28
  %31 = icmp slt i32 %30, 0
  %32 = select i1 %31, i32 0, i32 %30
  br i1 %g.host_and_dev_are_null, label %true_bb, label %after_bb

true_bb:                                          ; preds = %"assert succeeded13"
  store i32 4, i32* %buf_elem_size28, align 4
  store i32 %g.min.0, i32* %buf_min24, align 4
  store i32 %g.extent.0, i32* %buf_extent16, align 4
  store i32 1, i32* %buf_stride20, align 4
  store i32 %g.min.1, i32* %buf_min25, align 4
  store i32 %g.extent.1, i32* %buf_extent17, align 4
  store i32 %g.extent.0, i32* %buf_stride21, align 4
  %buf_min36 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %g.buffer, i32 0, i32 4, i32 2
  store i32 0, i32* %buf_min36, align 4
  %buf_extent37 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %g.buffer, i32 0, i32 2, i32 2
  store i32 0, i32* %buf_extent37, align 4
  %buf_stride38 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %g.buffer, i32 0, i32 3, i32 2
  store i32 0, i32* %buf_stride38, align 4
  %buf_min39 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %g.buffer, i32 0, i32 4, i32 3
  store i32 0, i32* %buf_min39, align 4
  %buf_extent40 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %g.buffer, i32 0, i32 2, i32 3
  store i32 0, i32* %buf_extent40, align 4
  %buf_stride41 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %g.buffer, i32 0, i32 3, i32 3
  store i32 0, i32* %buf_stride41, align 4
  br label %after_bb

after_bb:                                         ; preds = %"assert succeeded13", %true_bb
  br i1 %input.host_and_dev_are_null, label %after_bb44.thread, label %after_bb44

after_bb44.thread:                                ; preds = %after_bb
  store i32 4, i32* %buf_elem_size, align 4
  store i32 %21, i32* %buf_min, align 4
  %33 = add nsw i32 %input.extent.0.required.s, 1
  store i32 %33, i32* %buf_extent, align 4
  store i32 1, i32* %buf_stride, align 4
  store i32 %32, i32* %buf_min7, align 4
  %input.extent.1.required.s = sub i32 1, %32
  %34 = add i32 %input.extent.1.required.s, %27
  store i32 %34, i32* %buf_extent1, align 4
  store i32 %33, i32* %buf_stride4, align 4
  %buf_min52 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %input.buffer, i32 0, i32 4, i32 2
  store i32 0, i32* %buf_min52, align 4
  %buf_extent53 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %input.buffer, i32 0, i32 2, i32 2
  store i32 0, i32* %buf_extent53, align 4
  %buf_stride54 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %input.buffer, i32 0, i32 3, i32 2
  store i32 0, i32* %buf_stride54, align 4
  %buf_min55 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %input.buffer, i32 0, i32 4, i32 3
  store i32 0, i32* %buf_min55, align 4
  %buf_extent56 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %input.buffer, i32 0, i32 2, i32 3
  store i32 0, i32* %buf_extent56, align 4
  %buf_stride57 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %input.buffer, i32 0, i32 3, i32 3
  store i32 0, i32* %buf_stride57, align 4
  br label %call_destructor.exit144

after_bb44:                                       ; preds = %after_bb
  br i1 %g.host_and_dev_are_null, label %call_destructor.exit144, label %true_bb58

true_bb58:                                        ; preds = %after_bb44
  %35 = icmp eq i32 %g.elem_size, 4
  br i1 %35, label %"assert succeeded62", label %"assert failed61", !prof !9882

"assert failed61":                                ; preds = %true_bb58
  %36 = tail call i32 @halide_error_bad_elem_size(i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.193, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.194, i32 0, i32 0), i32 %g.elem_size, i32 4) #2
  br label %call_destructor.exit144

"assert succeeded62":                             ; preds = %true_bb58
  %37 = icmp eq i32 %input.elem_size, 4
  br i1 %37, label %"assert succeeded64", label %"assert failed63", !prof !9882

"assert failed63":                                ; preds = %"assert succeeded62"
  %38 = tail call i32 @halide_error_bad_elem_size(i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.195, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.194, i32 0, i32 0), i32 %input.elem_size, i32 4) #2
  br label %call_destructor.exit144

"assert succeeded64":                             ; preds = %"assert succeeded62"
  %39 = icmp sle i32 %input.min.0, %21
  %40 = sub nsw i32 %16, %input.extent.0
  %41 = icmp slt i32 %40, %input.min.0
  %42 = and i1 %39, %41
  br i1 %42, label %"assert succeeded66", label %"assert failed65", !prof !9882

"assert failed65":                                ; preds = %"assert succeeded64"
  %43 = add i32 %17, %input.min.0
  %44 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.195, i32 0, i32 0), i32 0, i32 %21, i32 %16, i32 %input.min.0, i32 %43) #2
  br label %call_destructor.exit144

"assert succeeded66":                             ; preds = %"assert succeeded64"
  %45 = icmp sle i32 %input.min.1, %32
  %46 = sub nsw i32 %27, %input.extent.1
  %47 = icmp slt i32 %46, %input.min.1
  %48 = and i1 %45, %47
  br i1 %48, label %"assert succeeded68", label %"assert failed67", !prof !9882

"assert failed67":                                ; preds = %"assert succeeded66"
  %49 = add i32 %28, %input.min.1
  %50 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.195, i32 0, i32 0), i32 1, i32 %32, i32 %27, i32 %input.min.1, i32 %49) #2
  br label %call_destructor.exit144

"assert succeeded68":                             ; preds = %"assert succeeded66"
  %51 = icmp eq i32 %g.stride.0, 1
  br i1 %51, label %"assert succeeded70", label %"assert failed69", !prof !9882

"assert failed69":                                ; preds = %"assert succeeded68"
  %52 = tail call i32 @halide_error_constraint_violated(i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.196, i32 0, i32 0), i32 %g.stride.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @entry_name, i32 0, i32 0), i32 1) #2
  br label %call_destructor.exit144

"assert succeeded70":                             ; preds = %"assert succeeded68"
  %53 = icmp eq i32 %input.stride.0, 1
  br i1 %53, label %"assert succeeded72", label %"assert failed71", !prof !9882

"assert failed71":                                ; preds = %"assert succeeded70"
  %54 = tail call i32 @halide_error_constraint_violated(i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.198, i32 0, i32 0), i32 %input.stride.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @entry_name, i32 0, i32 0), i32 1) #2
  br label %call_destructor.exit144

"assert succeeded72":                             ; preds = %"assert succeeded70"
  %55 = sext i32 %g.extent.1 to i64
  %56 = sext i32 %g.extent.0 to i64
  %g.total_extent.1 = mul nsw i64 %55, %56
  %57 = sext i32 %input.extent.1 to i64
  %58 = sext i32 %input.extent.0 to i64
  %input.total_extent.1 = mul nsw i64 %57, %58
  %59 = sext i32 %g.stride.1 to i64
  %60 = mul nsw i64 %59, %55
  %61 = icmp slt i64 %60, 2147483648
  br i1 %61, label %"assert succeeded76", label %"assert failed75", !prof !9882

"assert failed75":                                ; preds = %"assert succeeded72"
  %62 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.192, i32 0, i32 0), i64 %60, i64 2147483647) #2
  br label %call_destructor.exit144

"assert succeeded76":                             ; preds = %"assert succeeded72"
  %63 = icmp slt i64 %g.total_extent.1, 2147483648
  br i1 %63, label %"assert succeeded80", label %"assert failed77", !prof !9882

"assert failed77":                                ; preds = %"assert succeeded76"
  %64 = tail call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.192, i32 0, i32 0), i64 %g.total_extent.1, i64 2147483647) #2
  br label %call_destructor.exit144

"assert succeeded80":                             ; preds = %"assert succeeded76"
  %65 = sext i32 %input.stride.1 to i64
  %66 = mul nsw i64 %65, %57
  %67 = icmp slt i64 %66, 2147483648
  br i1 %67, label %"assert succeeded82", label %"assert failed81", !prof !9882

"assert failed81":                                ; preds = %"assert succeeded80"
  %68 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str, i32 0, i32 0), i64 %66, i64 2147483647) #2
  br label %call_destructor.exit144

"assert succeeded82":                             ; preds = %"assert succeeded80"
  %69 = icmp slt i64 %input.total_extent.1, 2147483648
  br i1 %69, label %"assert succeeded84", label %"assert failed83", !prof !9882

"assert failed83":                                ; preds = %"assert succeeded82"
  %70 = tail call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str, i32 0, i32 0), i64 %input.total_extent.1, i64 2147483647) #2
  br label %call_destructor.exit144

"assert succeeded84":                             ; preds = %"assert succeeded82"
  %71 = shl nsw i64 %56, 2
  %72 = mul nsw i64 %71, %55
  %73 = icmp slt i64 %71, %72
  %74 = select i1 %73, i64 %72, i64 %71
  %75 = icmp slt i64 %74, 2147483648
  br i1 %75, label %"assert succeeded86", label %"assert failed85", !prof !9882

"assert failed85":                                ; preds = %"assert succeeded84"
  %76 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.199, i32 0, i32 0), i64 %72, i64 2147483647) #2
  br label %call_destructor.exit144

"assert succeeded86":                             ; preds = %"assert succeeded84"
  %77 = shl i32 %g.extent.0, 2
  %78 = mul i32 %77, %g.extent.1
  %f.host = tail call i8* @halide_malloc(i8* null, i32 %78)
  %79 = icmp ne i8* %f.host, null
  %80 = icmp eq i32 %78, 0
  %81 = or i1 %80, %79
  br i1 %81, label %"assert succeeded88", label %"assert failed87", !prof !9882

"assert failed87":                                ; preds = %"assert succeeded86"
  %82 = tail call i32 @halide_error_out_of_memory(i8* null) #2
  br label %call_destructor.exit144

"assert succeeded88":                             ; preds = %"assert succeeded86"
  tail call void @llvm.dbg.value(metadata i8* %f.host, i64 0, metadata !374, metadata !2613), !dbg !9881
  tail call void @llvm.dbg.value(metadata i8* %f.host, i64 0, metadata !374, metadata !2613), !dbg !9881
  %buf_host89 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %f.buffer, i32 0, i32 1
  store i8* %f.host, i8** %buf_host89, align 8
  %buf_elem_size90 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %f.buffer, i32 0, i32 5
  store i32 4, i32* %buf_elem_size90, align 4
  %buf_min91 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %f.buffer, i32 0, i32 4, i32 0
  store i32 %g.min.0, i32* %buf_min91, align 4
  %buf_extent92 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %f.buffer, i32 0, i32 2, i32 0
  store i32 %g.extent.0, i32* %buf_extent92, align 4
  %buf_stride93 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %f.buffer, i32 0, i32 3, i32 0
  store i32 1, i32* %buf_stride93, align 4
  %buf_min94 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %f.buffer, i32 0, i32 4, i32 1
  store i32 %g.min.1, i32* %buf_min94, align 4
  %buf_extent95 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %f.buffer, i32 0, i32 2, i32 1
  store i32 %g.extent.1, i32* %buf_extent95, align 4
  %buf_stride96 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %f.buffer, i32 0, i32 3, i32 1
  store i32 %g.extent.0, i32* %buf_stride96, align 4
  %buf_min97 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %f.buffer, i32 0, i32 4, i32 2
  store i32 0, i32* %buf_min97, align 4
  %buf_extent98 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %f.buffer, i32 0, i32 2, i32 2
  store i32 0, i32* %buf_extent98, align 4
  %buf_stride99 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %f.buffer, i32 0, i32 3, i32 2
  store i32 0, i32* %buf_stride99, align 4
  %buf_min100 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %f.buffer, i32 0, i32 4, i32 3
  store i32 0, i32* %buf_min100, align 4
  %buf_extent101 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %f.buffer, i32 0, i32 2, i32 3
  store i32 0, i32* %buf_extent101, align 4
  %buf_stride102 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %f.buffer, i32 0, i32 3, i32 3
  store i32 0, i32* %buf_stride102, align 4
  %buffer_host_dirty103 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %f.buffer, i32 0, i32 6
  store i8 0, i8* %buffer_host_dirty103, align 8
  %buffer_dev_dirty104 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %f.buffer, i32 0, i32 7
  store i8 0, i8* %buffer_dev_dirty104, align 1
  %buf_dev105 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %f.buffer, i32 0, i32 0
  store i64 0, i64* %buf_dev105, align 8
  %83 = tail call %struct.halide_device_interface* @halide_renderscript_device_interface() #3
  %"copy_to_device_result$2" = tail call i32 @halide_copy_to_device(i8* null, %struct.buffer_t* %input.buffer, %struct.halide_device_interface* %83) #2
  %84 = bitcast %struct.buffer_t* %input.buffer to i8*
  tail call void @llvm.dbg.value(metadata i8* %84, i64 0, metadata !374, metadata !2613), !dbg !9881
  %85 = icmp eq i32 %"copy_to_device_result$2", 0
  br i1 %85, label %"assert succeeded107", label %call_destructor.exit138, !prof !9882

"assert succeeded107":                            ; preds = %"assert succeeded88"
  %device_malloc_result = call i32 @halide_device_malloc(i8* null, %struct.buffer_t* nonnull %f.buffer, %struct.halide_device_interface* %83) #2
  %86 = bitcast %struct.buffer_t* %f.buffer to i8*
  call void @llvm.dbg.value(metadata i8* %86, i64 0, metadata !374, metadata !2613), !dbg !9881
  call void @llvm.dbg.value(metadata i8* %86, i64 0, metadata !374, metadata !2613), !dbg !9881
  %87 = icmp eq i32 %device_malloc_result, 0
  br i1 %87, label %"assert succeeded109", label %if.then.i.137, !prof !9882

"assert succeeded109":                            ; preds = %"assert succeeded107"
  %copy_to_device_result = call i32 @halide_copy_to_device(i8* null, %struct.buffer_t* nonnull %f.buffer, %struct.halide_device_interface* %83) #2
  %88 = icmp eq i32 %copy_to_device_result, 0
  br i1 %88, label %"assert succeeded111", label %if.then.i.137, !prof !9882

"assert succeeded111":                            ; preds = %"assert succeeded109"
  %g.extent.0.stack = alloca i32, align 4
  store i32 %g.extent.0, i32* %g.extent.0.stack, align 4
  %89 = bitcast [11 x [11 x i8*]]* %"1_args156" to i32**
  store i32* %g.extent.0.stack, i32** %89, align 4
  %90 = getelementptr [11 x [11 x i32]], [11 x [11 x i32]]* %"1_arg_sizes155", i32 0, i32 0, i32 0
  store i32 4, i32* %90, align 4
  %91 = getelementptr [11 x [11 x i8]], [11 x [11 x i8]]* %"1_arg_is_buffer154", i32 0, i32 0, i32 0
  store i8 0, i8* %91, align 1
  %g.extent.1.stack = alloca i32, align 4
  store i32 %g.extent.1, i32* %g.extent.1.stack, align 4
  %92 = getelementptr [11 x [11 x i8*]], [11 x [11 x i8*]]* %"1_args156", i32 0, i32 0, i32 1
  %93 = bitcast i8** %92 to i32**
  store i32* %g.extent.1.stack, i32** %93, align 4
  %94 = getelementptr [11 x [11 x i32]], [11 x [11 x i32]]* %"1_arg_sizes155", i32 0, i32 0, i32 1
  store i32 4, i32* %94, align 4
  %95 = getelementptr [11 x [11 x i8]], [11 x [11 x i8]]* %"1_arg_is_buffer154", i32 0, i32 0, i32 1
  store i8 0, i8* %95, align 1
  %g.min.0.stack = alloca i32, align 4
  store i32 %g.min.0, i32* %g.min.0.stack, align 4
  %96 = getelementptr [11 x [11 x i8*]], [11 x [11 x i8*]]* %"1_args156", i32 0, i32 0, i32 2
  %97 = bitcast i8** %96 to i32**
  store i32* %g.min.0.stack, i32** %97, align 4
  %98 = getelementptr [11 x [11 x i32]], [11 x [11 x i32]]* %"1_arg_sizes155", i32 0, i32 0, i32 2
  store i32 4, i32* %98, align 4
  %99 = getelementptr [11 x [11 x i8]], [11 x [11 x i8]]* %"1_arg_is_buffer154", i32 0, i32 0, i32 2
  store i8 0, i8* %99, align 1
  %g.min.1.stack = alloca i32, align 4
  store i32 %g.min.1, i32* %g.min.1.stack, align 4
  %100 = getelementptr [11 x [11 x i8*]], [11 x [11 x i8*]]* %"1_args156", i32 0, i32 0, i32 3
  %101 = bitcast i8** %100 to i32**
  store i32* %g.min.1.stack, i32** %101, align 4
  %102 = getelementptr [11 x [11 x i32]], [11 x [11 x i32]]* %"1_arg_sizes155", i32 0, i32 0, i32 3
  store i32 4, i32* %102, align 4
  %103 = getelementptr [11 x [11 x i8]], [11 x [11 x i8]]* %"1_arg_is_buffer154", i32 0, i32 0, i32 3
  store i8 0, i8* %103, align 1
  %input.extent.0.stack = alloca i32, align 4
  store i32 %input.extent.0, i32* %input.extent.0.stack, align 4
  %104 = getelementptr [11 x [11 x i8*]], [11 x [11 x i8*]]* %"1_args156", i32 0, i32 0, i32 4
  %105 = bitcast i8** %104 to i32**
  store i32* %input.extent.0.stack, i32** %105, align 4
  %106 = getelementptr [11 x [11 x i32]], [11 x [11 x i32]]* %"1_arg_sizes155", i32 0, i32 0, i32 4
  store i32 4, i32* %106, align 4
  %107 = getelementptr [11 x [11 x i8]], [11 x [11 x i8]]* %"1_arg_is_buffer154", i32 0, i32 0, i32 4
  store i8 0, i8* %107, align 1
  %input.extent.1.stack = alloca i32, align 4
  store i32 %input.extent.1, i32* %input.extent.1.stack, align 4
  %108 = getelementptr [11 x [11 x i8*]], [11 x [11 x i8*]]* %"1_args156", i32 0, i32 0, i32 5
  %109 = bitcast i8** %108 to i32**
  store i32* %input.extent.1.stack, i32** %109, align 4
  %110 = getelementptr [11 x [11 x i32]], [11 x [11 x i32]]* %"1_arg_sizes155", i32 0, i32 0, i32 5
  store i32 4, i32* %110, align 4
  %111 = getelementptr [11 x [11 x i8]], [11 x [11 x i8]]* %"1_arg_is_buffer154", i32 0, i32 0, i32 5
  store i8 0, i8* %111, align 1
  %input.min.0.stack = alloca i32, align 4
  store i32 %input.min.0, i32* %input.min.0.stack, align 4
  %112 = getelementptr [11 x [11 x i8*]], [11 x [11 x i8*]]* %"1_args156", i32 0, i32 0, i32 6
  %113 = bitcast i8** %112 to i32**
  store i32* %input.min.0.stack, i32** %113, align 4
  %114 = getelementptr [11 x [11 x i32]], [11 x [11 x i32]]* %"1_arg_sizes155", i32 0, i32 0, i32 6
  store i32 4, i32* %114, align 4
  %115 = getelementptr [11 x [11 x i8]], [11 x [11 x i8]]* %"1_arg_is_buffer154", i32 0, i32 0, i32 6
  store i8 0, i8* %115, align 1
  %input.min.1.stack = alloca i32, align 4
  store i32 %input.min.1, i32* %input.min.1.stack, align 4
  %116 = getelementptr [11 x [11 x i8*]], [11 x [11 x i8*]]* %"1_args156", i32 0, i32 0, i32 7
  %117 = bitcast i8** %116 to i32**
  store i32* %input.min.1.stack, i32** %117, align 4
  %118 = getelementptr [11 x [11 x i32]], [11 x [11 x i32]]* %"1_arg_sizes155", i32 0, i32 0, i32 7
  store i32 4, i32* %118, align 4
  %119 = getelementptr [11 x [11 x i8]], [11 x [11 x i8]]* %"1_arg_is_buffer154", i32 0, i32 0, i32 7
  store i8 0, i8* %119, align 1
  %120 = load i64, i64* %buf_dev, align 8
  %input.stack = alloca i64, align 8
  store i64 %120, i64* %input.stack, align 8
  %121 = getelementptr [11 x [11 x i8*]], [11 x [11 x i8*]]* %"1_args156", i32 0, i32 0, i32 8
  %122 = bitcast i8** %121 to i64**
  store i64* %input.stack, i64** %122, align 4
  %123 = getelementptr [11 x [11 x i32]], [11 x [11 x i32]]* %"1_arg_sizes155", i32 0, i32 0, i32 8
  store i32 4, i32* %123, align 4
  %124 = getelementptr [11 x [11 x i8]], [11 x [11 x i8]]* %"1_arg_is_buffer154", i32 0, i32 0, i32 8
  store i8 1, i8* %124, align 1
  %125 = load i64, i64* %buf_dev105, align 8
  %f.stack = alloca i64, align 8
  store i64 %125, i64* %f.stack, align 8
  %126 = getelementptr [11 x [11 x i8*]], [11 x [11 x i8*]]* %"1_args156", i32 0, i32 0, i32 9
  %127 = bitcast i8** %126 to i64**
  store i64* %f.stack, i64** %127, align 4
  %128 = getelementptr [11 x [11 x i32]], [11 x [11 x i32]]* %"1_arg_sizes155", i32 0, i32 0, i32 9
  store i32 4, i32* %128, align 4
  %129 = getelementptr [11 x [11 x i8]], [11 x [11 x i8]]* %"1_arg_is_buffer154", i32 0, i32 0, i32 9
  store i8 1, i8* %129, align 1
  %130 = getelementptr [11 x [11 x i8*]], [11 x [11 x i8*]]* %"1_args156", i32 0, i32 0, i32 10
  store i8* null, i8** %130, align 4
  %131 = getelementptr [11 x [11 x i32]], [11 x [11 x i32]]* %"1_arg_sizes155", i32 0, i32 0, i32 10
  store i32 0, i32* %131, align 4
  %132 = getelementptr [11 x [11 x i8]], [11 x [11 x i8]]* %"1_arg_is_buffer154", i32 0, i32 0, i32 10
  store i8 0, i8* %132, align 1
  %133 = load i8*, i8** @module_state___test_arm_renderscript, align 4
  %gpu_args_arr_refrenderscript = getelementptr [11 x [11 x i8*]], [11 x [11 x i8*]]* %"1_args156", i32 0, i32 0, i32 0
  %134 = call i32 @halide_renderscript_run(i8* null, i8* %133, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @entry_name, i32 0, i32 0), i32 %g.extent.0, i32 %g.extent.1, i32 1, i32 1, i32 1, i32 1, i32 0, i32* %90, i8** %gpu_args_arr_refrenderscript, i8* %91, i32 0, float* null, i32 0, i32 0)
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %"assert succeeded115", label %if.then.i.137, !prof !9882

"assert succeeded115":                            ; preds = %"assert succeeded111"
  store i8 1, i8* %buffer_dev_dirty104, align 1
  %"copy_to_device_result$5" = call i32 @halide_copy_to_device(i8* null, %struct.buffer_t* %g.buffer, %struct.halide_device_interface* %83) #2
  %136 = bitcast %struct.buffer_t* %g.buffer to i8*
  call void @llvm.dbg.value(metadata i8* %136, i64 0, metadata !374, metadata !2613), !dbg !9881
  %137 = icmp eq i32 %"copy_to_device_result$5", 0
  br i1 %137, label %"produce g", label %if.then.i, !prof !9882

"produce g":                                      ; preds = %"assert succeeded115"
  %"copy_to_device_result$4" = call i32 @halide_copy_to_device(i8* null, %struct.buffer_t* %g.buffer, %struct.halide_device_interface* %83) #2
  %138 = icmp eq i32 %"copy_to_device_result$4", 0
  br i1 %138, label %"assert succeeded120", label %if.then.i, !prof !9882

"assert succeeded120":                            ; preds = %"produce g"
  %"copy_to_device_result$3" = call i32 @halide_copy_to_device(i8* null, %struct.buffer_t* nonnull %f.buffer, %struct.halide_device_interface* %83) #2
  %139 = icmp eq i32 %"copy_to_device_result$3", 0
  br i1 %139, label %"assert succeeded122", label %if.then.i, !prof !9882

"assert succeeded122":                            ; preds = %"assert succeeded120"
  %g.extent.0.stack123 = alloca i32, align 4
  store i32 %g.extent.0, i32* %g.extent.0.stack123, align 4
  %140 = bitcast [5 x [5 x i8*]]* %"2_args153" to i32**
  store i32* %g.extent.0.stack123, i32** %140, align 4
  %141 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %"2_arg_sizes152", i32 0, i32 0, i32 0
  store i32 4, i32* %141, align 4
  %142 = getelementptr [5 x [5 x i8]], [5 x [5 x i8]]* %"2_arg_is_buffer151", i32 0, i32 0, i32 0
  store i8 0, i8* %142, align 1
  %g.extent.1.stack124 = alloca i32, align 4
  store i32 %g.extent.1, i32* %g.extent.1.stack124, align 4
  %143 = getelementptr [5 x [5 x i8*]], [5 x [5 x i8*]]* %"2_args153", i32 0, i32 0, i32 1
  %144 = bitcast i8** %143 to i32**
  store i32* %g.extent.1.stack124, i32** %144, align 4
  %145 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %"2_arg_sizes152", i32 0, i32 0, i32 1
  store i32 4, i32* %145, align 4
  %146 = getelementptr [5 x [5 x i8]], [5 x [5 x i8]]* %"2_arg_is_buffer151", i32 0, i32 0, i32 1
  store i8 0, i8* %146, align 1
  %147 = load i64, i64* %buf_dev105, align 8
  %f.stack126 = alloca i64, align 8
  store i64 %147, i64* %f.stack126, align 8
  %148 = getelementptr [5 x [5 x i8*]], [5 x [5 x i8*]]* %"2_args153", i32 0, i32 0, i32 2
  %149 = bitcast i8** %148 to i64**
  store i64* %f.stack126, i64** %149, align 4
  %150 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %"2_arg_sizes152", i32 0, i32 0, i32 2
  store i32 4, i32* %150, align 4
  %151 = getelementptr [5 x [5 x i8]], [5 x [5 x i8]]* %"2_arg_is_buffer151", i32 0, i32 0, i32 2
  store i8 1, i8* %151, align 1
  %152 = load i64, i64* %buf_dev11, align 8
  %g.stack = alloca i64, align 8
  store i64 %152, i64* %g.stack, align 8
  %153 = getelementptr [5 x [5 x i8*]], [5 x [5 x i8*]]* %"2_args153", i32 0, i32 0, i32 3
  %154 = bitcast i8** %153 to i64**
  store i64* %g.stack, i64** %154, align 4
  %155 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %"2_arg_sizes152", i32 0, i32 0, i32 3
  store i32 4, i32* %155, align 4
  %156 = getelementptr [5 x [5 x i8]], [5 x [5 x i8]]* %"2_arg_is_buffer151", i32 0, i32 0, i32 3
  store i8 1, i8* %156, align 1
  %157 = getelementptr [5 x [5 x i8*]], [5 x [5 x i8*]]* %"2_args153", i32 0, i32 0, i32 4
  store i8* null, i8** %157, align 4
  %158 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* %"2_arg_sizes152", i32 0, i32 0, i32 4
  store i32 0, i32* %158, align 4
  %159 = getelementptr [5 x [5 x i8]], [5 x [5 x i8]]* %"2_arg_is_buffer151", i32 0, i32 0, i32 4
  store i8 0, i8* %159, align 1
  %160 = load i8*, i8** @module_state___test_arm_renderscript, align 4
  %gpu_args_arr_refrenderscript129 = getelementptr [5 x [5 x i8*]], [5 x [5 x i8*]]* %"2_args153", i32 0, i32 0, i32 0
  %161 = call i32 @halide_renderscript_run(i8* null, i8* %160, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @entry_name.200, i32 0, i32 0), i32 %g.extent.0, i32 %g.extent.1, i32 1, i32 1, i32 1, i32 1, i32 0, i32* %141, i8** %gpu_args_arr_refrenderscript129, i8* %142, i32 0, float* null, i32 0, i32 0)
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %"assert succeeded132", label %if.then.i, !prof !9882

"assert succeeded132":                            ; preds = %"assert succeeded122"
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !372, metadata !2613) #2, !dbg !9888
  call void @llvm.dbg.value(metadata void (i8*, i8*)* @halide_free, i64 0, metadata !373, metadata !2613) #2, !dbg !9889
  call void @llvm.dbg.value(metadata i8* %f.host, i64 0, metadata !375, metadata !2613) #2, !dbg !9890
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !374, metadata !2613), !dbg !9881
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !374, metadata !2613), !dbg !9881
  %tobool.i.145 = icmp eq i8* %f.host, null, !dbg !9891
  br i1 %tobool.i.145, label %call_destructor.exit150, label %if.then.i.146, !dbg !9892

if.then.i.146:                                    ; preds = %"assert succeeded132"
  call void @halide_free(i8* null, i8* %f.host) #6, !dbg !9884
  br label %call_destructor.exit150, !dbg !9887

call_destructor.exit150:                          ; preds = %"assert succeeded132", %if.then.i.146
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !372, metadata !2613) #2, !dbg !9888
  call void @llvm.dbg.value(metadata void (i8*, i8*)* @halide_device_free_as_destructor, i64 0, metadata !373, metadata !2613) #2, !dbg !9889
  call void @llvm.dbg.value(metadata i8* %86, i64 0, metadata !375, metadata !2613) #2, !dbg !9890
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !374, metadata !2613), !dbg !9881
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !374, metadata !2613), !dbg !9881
  call void @halide_device_free_as_destructor(i8* null, i8* %86) #6, !dbg !9884
  %buffer_dev_dirty133 = getelementptr inbounds %struct.buffer_t, %struct.buffer_t* %g.buffer, i32 0, i32 7
  store i8 1, i8* %buffer_dev_dirty133, align 1
  br label %call_destructor.exit144
}

; Function Attrs: nounwind
define i32 @test_arm(%struct.buffer_t* noalias %input.buffer, %struct.buffer_t* noalias %g.buffer) #2 {
entry:
  %0 = icmp eq %struct.buffer_t* %input.buffer, null
  br i1 %0, label %"assert failed", label %"assert succeeded", !prof !9883

"assert failed":                                  ; preds = %entry
  %1 = tail call i32 @halide_error_buffer_argument_is_null(i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str, i32 0, i32 0)) #2
  br label %destructor_block

"assert succeeded":                               ; preds = %entry
  %2 = icmp eq %struct.buffer_t* %g.buffer, null
  br i1 %2, label %"assert failed12", label %"assert succeeded13", !prof !9883

destructor_block:                                 ; preds = %"assert succeeded13", %"assert failed12", %"assert failed"
  %3 = phi i32 [ %1, %"assert failed" ], [ %4, %"assert failed12" ], [ %__test_arm_result, %"assert succeeded13" ]
  ret i32 %3

"assert failed12":                                ; preds = %"assert succeeded"
  %4 = tail call i32 @halide_error_buffer_argument_is_null(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.192, i32 0, i32 0)) #2
  br label %destructor_block

"assert succeeded13":                             ; preds = %"assert succeeded"
  %__test_arm_result = tail call i32 @__test_arm(%struct.buffer_t* %input.buffer, %struct.buffer_t* %g.buffer) #2
  br label %destructor_block
}

; Function Attrs: nounwind
define i32 @test_arm_argv(i8** nocapture readonly) #2 {
entry:
  %1 = bitcast i8** %0 to %struct.buffer_t**
  %2 = load %struct.buffer_t*, %struct.buffer_t** %1, align 4
  %3 = getelementptr i8*, i8** %0, i32 1
  %4 = bitcast i8** %3 to %struct.buffer_t**
  %5 = load %struct.buffer_t*, %struct.buffer_t** %4, align 4
  %6 = tail call i32 @test_arm(%struct.buffer_t* %2, %struct.buffer_t* %5)
  ret i32 %6
}

attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { nounwind readnone }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { builtin nobuiltin nounwind }

!llvm.dbg.cu = !{!0, !40, !54, !62, !242, !261, !361, !378, !419, !640, !749, !791, !1053, !1068, !1324, !1433, !1629, !1683, !1696}
!llvm.module.flags = !{!2607, !2608, !2609, !2610, !2611}
!llvm.ident = !{!2612, !2612, !2612, !2612, !2612, !2612, !2612, !2612, !2612, !2612, !2612, !2612, !2612, !2612, !2612, !2612, !2612, !2612, !2612}

!0 = !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1, producer: "clang version 3.7.0 (trunk 240337) (llvm/trunk 240338)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !13, globals: !29, imports: !33)
!1 = !DIFile(filename: "src/runtime/android_clock.cpp", directory: "/Users/aam/halide/halide-aam1")
!2 = !{}
!3 = !{!4, !10}
!4 = !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !5, line: 24, size: 64, align: 32, elements: !6, identifier: "_ZTS8timespec")
!5 = !DIFile(filename: "src/runtime/linux_clock.cpp", directory: "/Users/aam/halide/halide-aam1")
!6 = !{!7, !9}
!7 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !"_ZTS8timespec", file: !5, line: 25, baseType: !8, size: 32, align: 32)
!8 = !DIBasicType(name: "long int", size: 32, align: 32, encoding: DW_ATE_signed)
!9 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !"_ZTS8timespec", file: !5, line: 26, baseType: !8, size: 32, align: 32, offset: 32)
!10 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !11, line: 9, baseType: !12)
!11 = !DIFile(filename: "src/runtime/runtime_internal.h", directory: "/Users/aam/halide/halide-aam1")
!12 = !DIBasicType(name: "long long int", size: 64, align: 64, encoding: DW_ATE_signed)
!13 = !{!14, !21}
!14 = !DISubprogram(name: "halide_start_clock", scope: !5, file: !5, line: 55, type: !15, isLocal: false, isDefinition: true, scopeLine: 55, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*)* @halide_start_clock, variables: !19)
!15 = !DISubroutineType(types: !16)
!16 = !{!17, !18}
!17 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!18 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32, align: 32)
!19 = !{!20}
!20 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !14, file: !5, line: 55, type: !18)
!21 = !DISubprogram(name: "halide_current_time_ns", scope: !5, file: !5, line: 64, type: !22, isLocal: false, isDefinition: true, scopeLine: 64, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i8*)* @halide_current_time_ns, variables: !24)
!22 = !DISubroutineType(types: !23)
!23 = !{!10, !18}
!24 = !{!25, !26, !27, !28}
!25 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !21, file: !5, line: 64, type: !18)
!26 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "now", scope: !21, file: !5, line: 65, type: !"_ZTS8timespec")
!27 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "d", scope: !21, file: !5, line: 69, type: !10)
!28 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nd", scope: !21, file: !5, line: 70, type: !10)
!29 = !{!30, !32}
!30 = !DIGlobalVariable(name: "halide_reference_clock_inited", scope: !0, file: !5, line: 33, type: !31, isLocal: false, isDefinition: true, variable: i8* @halide_reference_clock_inited)
!31 = !DIBasicType(name: "bool", size: 8, align: 8, encoding: DW_ATE_boolean)
!32 = !DIGlobalVariable(name: "halide_reference_clock", scope: !0, file: !5, line: 34, type: !"_ZTS8timespec", isLocal: false, isDefinition: true, variable: %struct.timespec* @halide_reference_clock)
!33 = !{!34, !39}
!34 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !35, entity: !38)
!35 = !DINamespace(name: "Internal", scope: !36, file: !11, line: 105)
!36 = !DINamespace(name: "Runtime", scope: !37, file: !11, line: 105)
!37 = !DINamespace(name: "Halide", scope: null, file: !11, line: 105)
!38 = !DINamespace(scope: !35, file: !11, line: 128)
!39 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !0, entity: !35, line: 243)
!40 = !DICompileUnit(language: DW_LANG_C_plus_plus, file: !41, producer: "clang version 3.7.0 (trunk 240337) (llvm/trunk 240338)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !2, subprograms: !42, globals: !2, imports: !52)
!41 = !DIFile(filename: "src/runtime/android_io.cpp", directory: "/Users/aam/halide/halide-aam1")
!42 = !{!43}
!43 = !DISubprogram(name: "halide_print_impl", linkageName: "_ZN6Halide7Runtime8Internal17halide_print_implEPvPKc", scope: !35, file: !41, line: 13, type: !44, isLocal: false, isDefinition: true, scopeLine: 13, flags: DIFlagPrototyped, isOptimized: true, function: void (i8*, i8*)* @_ZN6Halide7Runtime8Internal17halide_print_implEPvPKc, variables: !49)
!44 = !DISubroutineType(types: !45)
!45 = !{null, !18, !46}
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 32, align: 32)
!47 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !48)
!48 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!49 = !{!50, !51}
!50 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !43, file: !41, line: 13, type: !18)
!51 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "str", arg: 2, scope: !43, file: !41, line: 13, type: !46)
!52 = !{!34, !53}
!53 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !40, entity: !35, line: 243)
!54 = !DICompileUnit(language: DW_LANG_C_plus_plus, file: !55, producer: "clang version 3.7.0 (trunk 240337) (llvm/trunk 240338)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !2, subprograms: !56, globals: !2, imports: !60)
!55 = !DIFile(filename: "src/runtime/android_host_cpu_count.cpp", directory: "/Users/aam/halide/halide-aam1")
!56 = !{!57}
!57 = !DISubprogram(name: "halide_host_cpu_count", scope: !55, file: !55, line: 7, type: !58, isLocal: false, isDefinition: true, scopeLine: 7, flags: DIFlagPrototyped, isOptimized: true, function: i32 ()* @halide_host_cpu_count, variables: !2)
!58 = !DISubroutineType(types: !59)
!59 = !{!17}
!60 = !{!34, !61}
!61 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !54, entity: !35, line: 243)
!62 = !DICompileUnit(language: DW_LANG_C_plus_plus, file: !63, producer: "clang version 3.7.0 (trunk 240337) (llvm/trunk 240338)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !64, subprograms: !126, globals: !234, imports: !240)
!63 = !DIFile(filename: "src/runtime/posix_thread_pool.cpp", directory: "/Users/aam/halide/halide-aam1")
!64 = !{!65, !87, !95, !115, !70, !18, !121, !125}
!65 = !DICompositeType(tag: DW_TAG_structure_type, name: "halide_work_queue_t", scope: !35, file: !63, line: 79, size: 3904, align: 64, elements: !66, identifier: "_ZTSN6Halide7Runtime8Internal19halide_work_queue_tE")
!66 = !{!67, !69, !71, !72, !73, !75, !76, !77, !82, !83}
!67 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !"_ZTSN6Halide7Runtime8Internal19halide_work_queue_tE", file: !63, line: 81, baseType: !68, size: 512, align: 64)
!68 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_mutex_t", file: !63, line: 37, baseType: !"_ZTS15pthread_mutex_t")
!69 = !DIDerivedType(tag: DW_TAG_member, name: "jobs", scope: !"_ZTSN6Halide7Runtime8Internal19halide_work_queue_tE", file: !63, line: 84, baseType: !70, size: 32, align: 32, offset: 512)
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTSN6Halide7Runtime8Internal4workE", size: 32, align: 32)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "a_team_size", scope: !"_ZTSN6Halide7Runtime8Internal19halide_work_queue_tE", file: !63, line: 92, baseType: !17, size: 32, align: 32, offset: 544)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "target_a_team_size", scope: !"_ZTSN6Halide7Runtime8Internal19halide_work_queue_tE", file: !63, line: 92, baseType: !17, size: 32, align: 32, offset: 576)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_owners", scope: !"_ZTSN6Halide7Runtime8Internal19halide_work_queue_tE", file: !63, line: 95, baseType: !74, size: 384, align: 64, offset: 640)
!74 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_cond_t", file: !63, line: 32, baseType: !"_ZTS14pthread_cond_t")
!75 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_a_team", scope: !"_ZTSN6Halide7Runtime8Internal19halide_work_queue_tE", file: !63, line: 98, baseType: !74, size: 384, align: 64, offset: 1024)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_b_team", scope: !"_ZTSN6Halide7Runtime8Internal19halide_work_queue_tE", file: !63, line: 102, baseType: !74, size: 384, align: 64, offset: 1408)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !"_ZTSN6Halide7Runtime8Internal19halide_work_queue_tE", file: !63, line: 105, baseType: !78, size: 2048, align: 32, offset: 1792)
!78 = !DICompositeType(tag: DW_TAG_array_type, baseType: !79, size: 2048, align: 32, elements: !80)
!79 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_t", file: !63, line: 28, baseType: !8)
!80 = !{!81}
!81 = !DISubrange(count: 64)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !"_ZTSN6Halide7Runtime8Internal19halide_work_queue_tE", file: !63, line: 108, baseType: !31, size: 8, align: 8, offset: 3840)
!83 = !DISubprogram(name: "running", linkageName: "_ZN6Halide7Runtime8Internal19halide_work_queue_t7runningEv", scope: !"_ZTSN6Halide7Runtime8Internal19halide_work_queue_tE", file: !63, line: 110, type: !84, isLocal: false, isDefinition: false, scopeLine: 110, flags: DIFlagPrototyped, isOptimized: true)
!84 = !DISubroutineType(types: !85)
!85 = !{!31, !86}
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTSN6Halide7Runtime8Internal19halide_work_queue_tE", size: 32, align: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!87 = !DICompositeType(tag: DW_TAG_structure_type, file: !63, line: 34, size: 512, align: 64, elements: !88, identifier: "_ZTS15pthread_mutex_t")
!88 = !{!89}
!89 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !"_ZTS15pthread_mutex_t", file: !63, line: 36, baseType: !90, size: 512, align: 64)
!90 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 512, align: 64, elements: !93)
!91 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !11, line: 10, baseType: !92)
!92 = !DIBasicType(name: "long long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!93 = !{!94}
!94 = !DISubrange(count: 8)
!95 = !DICompositeType(tag: DW_TAG_structure_type, name: "work", scope: !35, file: !63, line: 66, size: 256, align: 32, elements: !96, identifier: "_ZTSN6Halide7Runtime8Internal4workE")
!96 = !{!97, !98, !105, !106, !107, !108, !109, !110, !111}
!97 = !DIDerivedType(tag: DW_TAG_member, name: "next_job", scope: !"_ZTSN6Halide7Runtime8Internal4workE", file: !63, line: 67, baseType: !70, size: 32, align: 32)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !"_ZTSN6Halide7Runtime8Internal4workE", file: !63, line: 68, baseType: !99, size: 32, align: 32, offset: 32)
!99 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !100, size: 32, align: 32)
!100 = !DISubroutineType(types: !101)
!101 = !{!17, !18, !17, !102}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32, align: 32)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !11, line: 16, baseType: !104)
!104 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "user_context", scope: !"_ZTSN6Halide7Runtime8Internal4workE", file: !63, line: 69, baseType: !18, size: 32, align: 32, offset: 64)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !"_ZTSN6Halide7Runtime8Internal4workE", file: !63, line: 70, baseType: !17, size: 32, align: 32, offset: 96)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !"_ZTSN6Halide7Runtime8Internal4workE", file: !63, line: 70, baseType: !17, size: 32, align: 32, offset: 128)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "closure", scope: !"_ZTSN6Halide7Runtime8Internal4workE", file: !63, line: 71, baseType: !102, size: 32, align: 32, offset: 160)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "active_workers", scope: !"_ZTSN6Halide7Runtime8Internal4workE", file: !63, line: 72, baseType: !17, size: 32, align: 32, offset: 192)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "exit_status", scope: !"_ZTSN6Halide7Runtime8Internal4workE", file: !63, line: 73, baseType: !17, size: 32, align: 32, offset: 224)
!111 = !DISubprogram(name: "running", linkageName: "_ZN6Halide7Runtime8Internal4work7runningEv", scope: !"_ZTSN6Halide7Runtime8Internal4workE", file: !63, line: 74, type: !112, isLocal: false, isDefinition: false, scopeLine: 74, flags: DIFlagPrototyped, isOptimized: true)
!112 = !DISubroutineType(types: !113)
!113 = !{!31, !114}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTSN6Halide7Runtime8Internal4workE", size: 32, align: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!115 = !DICompositeType(tag: DW_TAG_structure_type, file: !63, line: 29, size: 384, align: 64, elements: !116, identifier: "_ZTS14pthread_cond_t")
!116 = !{!117}
!117 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !"_ZTS14pthread_cond_t", file: !63, line: 31, baseType: !118, size: 384, align: 64)
!118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 384, align: 64, elements: !119)
!119 = !{!120}
!120 = !DISubrange(count: 6)
!121 = !DICompositeType(tag: DW_TAG_structure_type, name: "halide_mutex", file: !122, line: 72, size: 512, align: 64, elements: !123, identifier: "_ZTS12halide_mutex")
!122 = !DIFile(filename: "src/runtime/HalideRuntime.h", directory: "/Users/aam/halide/halide-aam1")
!123 = !{!124}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !"_ZTS12halide_mutex", file: !122, line: 73, baseType: !90, size: 512, align: 64)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !68, size: 32, align: 32)
!126 = !{!127, !136, !148, !167, !174, !178, !182, !191, !193, !198, !205, !212, !218, !227, !230}
!127 = !DISubprogram(name: "default_do_task", linkageName: "_ZN6Halide7Runtime8Internal15default_do_taskEPvPFiS2_iPhEiS3_", scope: !35, file: !63, line: 117, type: !128, isLocal: false, isDefinition: true, scopeLine: 118, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* @_ZN6Halide7Runtime8Internal15default_do_taskEPvPFiS2_iPhEiS3_, variables: !131)
!128 = !DISubroutineType(types: !129)
!129 = !{!17, !18, !130, !17, !102}
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "halide_task", file: !63, line: 14, baseType: !99)
!131 = !{!132, !133, !134, !135}
!132 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !127, file: !63, line: 117, type: !18)
!133 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "f", arg: 2, scope: !127, file: !63, line: 117, type: !130)
!134 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "idx", arg: 3, scope: !127, file: !63, line: 117, type: !17)
!135 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "closure", arg: 4, scope: !127, file: !63, line: 118, type: !102)
!136 = !DISubprogram(name: "halide_worker_thread", linkageName: "_ZN6Halide7Runtime8Internal20halide_worker_threadEPv", scope: !35, file: !63, line: 122, type: !137, isLocal: false, isDefinition: true, scopeLine: 122, flags: DIFlagPrototyped, isOptimized: true, function: i8* (i8*)* @_ZN6Halide7Runtime8Internal20halide_worker_threadEPv, variables: !139)
!137 = !DISubroutineType(types: !138)
!138 = !{!18, !18}
!139 = !{!140, !141, !142, !146, !147}
!140 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "void_arg", arg: 1, scope: !136, file: !63, line: 122, type: !18)
!141 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "owned_job", scope: !136, file: !63, line: 123, type: !70)
!142 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "job", scope: !143, file: !63, line: 153, type: !70)
!143 = distinct !DILexicalBlock(scope: !144, file: !63, line: 151, column: 16)
!144 = distinct !DILexicalBlock(scope: !145, file: !63, line: 135, column: 13)
!145 = distinct !DILexicalBlock(scope: !136, file: !63, line: 133, column: 43)
!146 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "myjob", scope: !143, file: !63, line: 156, type: !"_ZTSN6Halide7Runtime8Internal4workE")
!147 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !143, file: !63, line: 172, type: !17)
!148 = !DISubprogram(name: "default_do_par_for", linkageName: "_ZN6Halide7Runtime8Internal18default_do_par_forEPvPFiS2_iPhEiiS3_", scope: !35, file: !63, line: 195, type: !149, isLocal: false, isDefinition: true, scopeLine: 196, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* @_ZN6Halide7Runtime8Internal18default_do_par_forEPvPFiS2_iPhEiiS3_, variables: !151)
!149 = !DISubroutineType(types: !150)
!150 = !{!17, !18, !130, !17, !17, !102}
!151 = !{!152, !153, !154, !155, !156, !157, !163, !165, !166}
!152 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !148, file: !63, line: 195, type: !18)
!153 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "f", arg: 2, scope: !148, file: !63, line: 195, type: !130)
!154 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "min", arg: 3, scope: !148, file: !63, line: 196, type: !17)
!155 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 4, scope: !148, file: !63, line: 196, type: !17)
!156 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "closure", arg: 5, scope: !148, file: !63, line: 196, type: !102)
!157 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "threads_str", scope: !158, file: !63, line: 211, type: !162)
!158 = distinct !DILexicalBlock(scope: !159, file: !63, line: 210, column: 34)
!159 = distinct !DILexicalBlock(scope: !160, file: !63, line: 210, column: 13)
!160 = distinct !DILexicalBlock(scope: !161, file: !63, line: 203, column: 42)
!161 = distinct !DILexicalBlock(scope: !148, file: !63, line: 203, column: 9)
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 32, align: 32)
!163 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !164, file: !63, line: 228, type: !17)
!164 = distinct !DILexicalBlock(scope: !160, file: !63, line: 228, column: 9)
!165 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "job", scope: !148, file: !63, line: 239, type: !"_ZTSN6Halide7Runtime8Internal4workE")
!166 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "wake_b_team", scope: !148, file: !63, line: 260, type: !31)
!167 = !DISubprogram(name: "halide_mutex_cleanup", scope: !63, file: !63, line: 291, type: !168, isLocal: false, isDefinition: true, scopeLine: 291, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.pthread_mutex_t*)* @halide_mutex_cleanup, variables: !171)
!168 = !DISubroutineType(types: !169)
!169 = !{null, !170}
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS12halide_mutex", size: 32, align: 32)
!171 = !{!172, !173}
!172 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mutex_arg", arg: 1, scope: !167, file: !63, line: 291, type: !170)
!173 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mutex", scope: !167, file: !63, line: 292, type: !125)
!174 = !DISubprogram(name: "halide_mutex_lock", scope: !63, file: !63, line: 297, type: !168, isLocal: false, isDefinition: true, scopeLine: 297, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.pthread_mutex_t*)* @halide_mutex_lock, variables: !175)
!175 = !{!176, !177}
!176 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mutex_arg", arg: 1, scope: !174, file: !63, line: 297, type: !170)
!177 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mutex", scope: !174, file: !63, line: 298, type: !125)
!178 = !DISubprogram(name: "halide_mutex_unlock", scope: !63, file: !63, line: 302, type: !168, isLocal: false, isDefinition: true, scopeLine: 302, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.pthread_mutex_t*)* @halide_mutex_unlock, variables: !179)
!179 = !{!180, !181}
!180 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mutex_arg", arg: 1, scope: !178, file: !63, line: 302, type: !170)
!181 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mutex", scope: !178, file: !63, line: 303, type: !125)
!182 = !DISubprogram(name: "halide_shutdown_thread_pool", scope: !63, file: !63, line: 308, type: !183, isLocal: false, isDefinition: true, scopeLine: 308, flags: DIFlagPrototyped, isOptimized: true, function: void ()* @halide_shutdown_thread_pool, variables: !185)
!183 = !DISubroutineType(types: !184)
!184 = !{null}
!185 = !{!186, !188}
!186 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !187, file: !63, line: 321, type: !17)
!187 = distinct !DILexicalBlock(scope: !182, file: !63, line: 321, column: 5)
!188 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "retval", scope: !189, file: !63, line: 323, type: !18)
!189 = distinct !DILexicalBlock(scope: !190, file: !63, line: 321, column: 52)
!190 = distinct !DILexicalBlock(scope: !187, file: !63, line: 321, column: 5)
!191 = !DISubprogram(name: "halide_posix_thread_pool_cleanup", scope: !192, file: !63, line: 340, type: !183, isLocal: false, isDefinition: true, scopeLine: 340, flags: DIFlagPrototyped, isOptimized: true, function: void ()* @halide_posix_thread_pool_cleanup, variables: !2)
!192 = !DINamespace(scope: null, file: !63, line: 338)
!193 = !DISubprogram(name: "halide_set_num_threads", scope: !63, file: !63, line: 345, type: !194, isLocal: false, isDefinition: true, scopeLine: 345, flags: DIFlagPrototyped, isOptimized: true, function: void (i32)* @halide_set_num_threads, variables: !196)
!194 = !DISubroutineType(types: !195)
!195 = !{null, !17}
!196 = !{!197}
!197 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 1, scope: !193, file: !63, line: 345, type: !17)
!198 = !DISubprogram(name: "halide_set_custom_do_task", scope: !63, file: !63, line: 357, type: !199, isLocal: false, isDefinition: true, scopeLine: 358, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* (i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)*)* @halide_set_custom_do_task, variables: !202)
!199 = !DISubroutineType(types: !200)
!200 = !{!201, !201}
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 32, align: 32)
!202 = !{!203, !204}
!203 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "f", arg: 1, scope: !198, file: !63, line: 357, type: !201)
!204 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !198, file: !63, line: 359, type: !201)
!205 = !DISubprogram(name: "halide_set_custom_do_par_for", scope: !63, file: !63, line: 365, type: !206, isLocal: false, isDefinition: true, scopeLine: 366, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* (i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)*)* @halide_set_custom_do_par_for, variables: !209)
!206 = !DISubroutineType(types: !207)
!207 = !{!208, !208}
!208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32, align: 32)
!209 = !{!210, !211}
!210 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "f", arg: 1, scope: !205, file: !63, line: 365, type: !208)
!211 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !205, file: !63, line: 367, type: !208)
!212 = !DISubprogram(name: "halide_do_task", scope: !63, file: !63, line: 372, type: !128, isLocal: false, isDefinition: true, scopeLine: 373, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* @halide_do_task, variables: !213)
!213 = !{!214, !215, !216, !217}
!214 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !212, file: !63, line: 372, type: !18)
!215 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "f", arg: 2, scope: !212, file: !63, line: 372, type: !130)
!216 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "idx", arg: 3, scope: !212, file: !63, line: 372, type: !17)
!217 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "closure", arg: 4, scope: !212, file: !63, line: 373, type: !102)
!218 = !DISubprogram(name: "halide_do_par_for", scope: !63, file: !63, line: 377, type: !219, isLocal: false, isDefinition: true, scopeLine: 378, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* @halide_do_par_for, variables: !221)
!219 = !DISubroutineType(types: !220)
!220 = !{!17, !18, !99, !17, !17, !102}
!221 = !{!222, !223, !224, !225, !226}
!222 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !218, file: !63, line: 377, type: !18)
!223 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "f", arg: 2, scope: !218, file: !63, line: 377, type: !99)
!224 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "min", arg: 3, scope: !218, file: !63, line: 378, type: !17)
!225 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 4, scope: !218, file: !63, line: 378, type: !17)
!226 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "closure", arg: 5, scope: !218, file: !63, line: 378, type: !102)
!227 = !DISubprogram(name: "running", linkageName: "_ZN6Halide7Runtime8Internal4work7runningEv", scope: !"_ZTSN6Halide7Runtime8Internal4workE", file: !63, line: 74, type: !112, isLocal: false, isDefinition: true, scopeLine: 74, flags: DIFlagPrototyped, isOptimized: true, declaration: !111, variables: !228)
!228 = !{!229}
!229 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !227, type: !70, flags: DIFlagArtificial | DIFlagObjectPointer)
!230 = !DISubprogram(name: "running", linkageName: "_ZN6Halide7Runtime8Internal19halide_work_queue_t7runningEv", scope: !"_ZTSN6Halide7Runtime8Internal19halide_work_queue_tE", file: !63, line: 110, type: !84, isLocal: false, isDefinition: true, scopeLine: 110, flags: DIFlagPrototyped, isOptimized: true, declaration: !83, variables: !231)
!231 = !{!232}
!232 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !230, type: !233, flags: DIFlagArtificial | DIFlagObjectPointer)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTSN6Halide7Runtime8Internal19halide_work_queue_tE", size: 32, align: 32)
!234 = !{!235, !236, !237, !238, !239}
!235 = !DIGlobalVariable(name: "halide_num_threads", linkageName: "_ZN6Halide7Runtime8Internal18halide_num_threadsE", scope: !35, file: !63, line: 63, type: !17, isLocal: false, isDefinition: true, variable: i32* @_ZN6Halide7Runtime8Internal18halide_num_threadsE)
!236 = !DIGlobalVariable(name: "halide_thread_pool_initialized", linkageName: "_ZN6Halide7Runtime8Internal30halide_thread_pool_initializedE", scope: !35, file: !63, line: 64, type: !31, isLocal: false, isDefinition: true, variable: i8* @_ZN6Halide7Runtime8Internal30halide_thread_pool_initializedE)
!237 = !DIGlobalVariable(name: "halide_work_queue", linkageName: "_ZN6Halide7Runtime8Internal17halide_work_queueE", scope: !35, file: !63, line: 115, type: !"_ZTSN6Halide7Runtime8Internal19halide_work_queue_tE", isLocal: false, isDefinition: true, variable: %"struct.Halide::Runtime::Internal::halide_work_queue_t"* @_ZN6Halide7Runtime8Internal17halide_work_queueE)
!238 = !DIGlobalVariable(name: "halide_custom_do_task", linkageName: "_ZN6Halide7Runtime8Internal21halide_custom_do_taskE", scope: !35, file: !63, line: 284, type: !201, isLocal: false, isDefinition: true, variable: i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)** @_ZN6Halide7Runtime8Internal21halide_custom_do_taskE)
!239 = !DIGlobalVariable(name: "halide_custom_do_par_for", linkageName: "_ZN6Halide7Runtime8Internal24halide_custom_do_par_forE", scope: !35, file: !63, line: 285, type: !208, isLocal: false, isDefinition: true, variable: i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)** @_ZN6Halide7Runtime8Internal24halide_custom_do_par_forE)
!240 = !{!34, !241}
!241 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !62, entity: !35, line: 243)
!242 = !DICompileUnit(language: DW_LANG_C_plus_plus, file: !243, producer: "clang version 3.7.0 (trunk 240337) (llvm/trunk 240338)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !2, subprograms: !244, globals: !2, imports: !259)
!243 = !DIFile(filename: "src/runtime/posix_get_symbol.cpp", directory: "/Users/aam/halide/halide-aam1")
!244 = !{!245, !250, !253}
!245 = !DISubprogram(name: "halide_get_symbol", scope: !243, file: !243, line: 10, type: !246, isLocal: false, isDefinition: true, scopeLine: 10, flags: DIFlagPrototyped, isOptimized: true, function: i8* (i8*)* @halide_get_symbol, variables: !248)
!246 = !DISubroutineType(types: !247)
!247 = !{!18, !46}
!248 = !{!249}
!249 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "name", arg: 1, scope: !245, file: !243, line: 10, type: !46)
!250 = !DISubprogram(name: "halide_load_library", scope: !243, file: !243, line: 14, type: !246, isLocal: false, isDefinition: true, scopeLine: 14, flags: DIFlagPrototyped, isOptimized: true, function: i8* (i8*)* @halide_load_library, variables: !251)
!251 = !{!252}
!252 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "name", arg: 1, scope: !250, file: !243, line: 14, type: !46)
!253 = !DISubprogram(name: "halide_get_library_symbol", scope: !243, file: !243, line: 18, type: !254, isLocal: false, isDefinition: true, scopeLine: 18, flags: DIFlagPrototyped, isOptimized: true, function: i8* (i8*, i8*)* @halide_get_library_symbol, variables: !256)
!254 = !DISubroutineType(types: !255)
!255 = !{!18, !18, !46}
!256 = !{!257, !258}
!257 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lib", arg: 1, scope: !253, file: !243, line: 18, type: !18)
!258 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "name", arg: 2, scope: !253, file: !243, line: 18, type: !46)
!259 = !{!34, !260}
!260 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !242, entity: !35, line: 243)
!261 = !DICompileUnit(language: DW_LANG_C_plus_plus, file: !262, producer: "clang version 3.7.0 (trunk 240337) (llvm/trunk 240338)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !263, subprograms: !303, globals: !2, imports: !359)
!262 = !DIFile(filename: "src/runtime/posix_math.cpp", directory: "/Users/aam/halide/halide-aam1")
!263 = !{!264, !277, !10, !269, !288}
!264 = !DICompositeType(tag: DW_TAG_union_type, scope: !265, file: !262, line: 25, size: 32, align: 32, elements: !274, identifier: "_ZTSZ15float_from_bitsEUt_")
!265 = !DISubprogram(name: "float_from_bits", scope: !262, file: !262, line: 24, type: !266, isLocal: false, isDefinition: true, scopeLine: 24, flags: DIFlagPrototyped, isOptimized: true, variables: !271)
!266 = !DISubroutineType(types: !267)
!267 = !{!268, !269}
!268 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!269 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !11, line: 12, baseType: !270)
!270 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!271 = !{!272, !273}
!272 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "bits", arg: 1, scope: !265, file: !262, line: 24, type: !269)
!273 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "u", scope: !265, file: !262, line: 28, type: !"_ZTSZ15float_from_bitsEUt_")
!274 = !{!275, !276}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "as_uint", scope: !"_ZTSZ15float_from_bitsEUt_", file: !262, line: 26, baseType: !269, size: 32, align: 32)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "as_float", scope: !"_ZTSZ15float_from_bitsEUt_", file: !262, line: 27, baseType: !268, size: 32, align: 32)
!277 = !DICompositeType(tag: DW_TAG_union_type, scope: !278, file: !262, line: 54, size: 64, align: 64, elements: !285, identifier: "_ZTSZ16double_from_bitsEUt_")
!278 = !DISubprogram(name: "double_from_bits", scope: !262, file: !262, line: 53, type: !279, isLocal: false, isDefinition: true, scopeLine: 53, flags: DIFlagPrototyped, isOptimized: true, variables: !282)
!279 = !DISubroutineType(types: !280)
!280 = !{!281, !91}
!281 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!282 = !{!283, !284}
!283 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "bits", arg: 1, scope: !278, file: !262, line: 53, type: !91)
!284 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "u", scope: !278, file: !262, line: 57, type: !"_ZTSZ16double_from_bitsEUt_")
!285 = !{!286, !287}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "as_uint", scope: !"_ZTSZ16double_from_bitsEUt_", file: !262, line: 55, baseType: !91, size: 64, align: 64)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "as_double", scope: !"_ZTSZ16double_from_bitsEUt_", file: !262, line: 56, baseType: !281, size: 64, align: 64)
!288 = !DICompositeType(tag: DW_TAG_union_type, scope: !289, file: !262, line: 75, size: 64, align: 64, elements: !297, identifier: "_ZTSZ12make_float64EUt_")
!289 = !DISubprogram(name: "make_float64", scope: !262, file: !262, line: 74, type: !290, isLocal: false, isDefinition: true, scopeLine: 74, flags: DIFlagPrototyped, isOptimized: true, variables: !293)
!290 = !DISubroutineType(types: !291)
!291 = !{!281, !292, !292}
!292 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !11, line: 11, baseType: !17)
!293 = !{!294, !295, !296}
!294 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "i0", arg: 1, scope: !289, file: !262, line: 74, type: !292)
!295 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "i1", arg: 2, scope: !289, file: !262, line: 74, type: !292)
!296 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "u", scope: !289, file: !262, line: 78, type: !"_ZTSZ12make_float64EUt_")
!297 = !{!298, !302}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "as_int32", scope: !"_ZTSZ12make_float64EUt_", file: !262, line: 76, baseType: !299, size: 64, align: 32)
!299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !292, size: 64, align: 32, elements: !300)
!300 = !{!301}
!301 = !DISubrange(count: 2)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "as_double", scope: !"_ZTSZ12make_float64EUt_", file: !262, line: 77, baseType: !281, size: 64, align: 64)
!303 = !{!304, !307, !308, !313, !314, !317, !318, !321, !322, !327, !328, !333, !334, !337, !338, !341, !265, !342, !345, !346, !347, !348, !278, !349, !352, !353, !289}
!304 = !DISubprogram(name: "maxval_u8", scope: !262, file: !262, line: 7, type: !305, isLocal: false, isDefinition: true, scopeLine: 7, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!305 = !DISubroutineType(types: !306)
!306 = !{!103}
!307 = !DISubprogram(name: "minval_u8", scope: !262, file: !262, line: 8, type: !305, isLocal: false, isDefinition: true, scopeLine: 8, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!308 = !DISubprogram(name: "maxval_u16", scope: !262, file: !262, line: 9, type: !309, isLocal: false, isDefinition: true, scopeLine: 9, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!309 = !DISubroutineType(types: !310)
!310 = !{!311}
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !11, line: 14, baseType: !312)
!312 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!313 = !DISubprogram(name: "minval_u16", scope: !262, file: !262, line: 10, type: !309, isLocal: false, isDefinition: true, scopeLine: 10, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!314 = !DISubprogram(name: "maxval_u32", scope: !262, file: !262, line: 11, type: !315, isLocal: false, isDefinition: true, scopeLine: 11, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!315 = !DISubroutineType(types: !316)
!316 = !{!269}
!317 = !DISubprogram(name: "minval_u32", scope: !262, file: !262, line: 12, type: !315, isLocal: false, isDefinition: true, scopeLine: 12, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!318 = !DISubprogram(name: "maxval_u64", scope: !262, file: !262, line: 13, type: !319, isLocal: false, isDefinition: true, scopeLine: 13, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!319 = !DISubroutineType(types: !320)
!320 = !{!91}
!321 = !DISubprogram(name: "minval_u64", scope: !262, file: !262, line: 14, type: !319, isLocal: false, isDefinition: true, scopeLine: 14, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!322 = !DISubprogram(name: "maxval_s8", scope: !262, file: !262, line: 15, type: !323, isLocal: false, isDefinition: true, scopeLine: 15, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!323 = !DISubroutineType(types: !324)
!324 = !{!325}
!325 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !11, line: 15, baseType: !326)
!326 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!327 = !DISubprogram(name: "minval_s8", scope: !262, file: !262, line: 16, type: !323, isLocal: false, isDefinition: true, scopeLine: 16, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!328 = !DISubprogram(name: "maxval_s16", scope: !262, file: !262, line: 17, type: !329, isLocal: false, isDefinition: true, scopeLine: 17, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!329 = !DISubroutineType(types: !330)
!330 = !{!331}
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !11, line: 13, baseType: !332)
!332 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!333 = !DISubprogram(name: "minval_s16", scope: !262, file: !262, line: 18, type: !329, isLocal: false, isDefinition: true, scopeLine: 18, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!334 = !DISubprogram(name: "maxval_s32", scope: !262, file: !262, line: 19, type: !335, isLocal: false, isDefinition: true, scopeLine: 19, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!335 = !DISubroutineType(types: !336)
!336 = !{!292}
!337 = !DISubprogram(name: "minval_s32", scope: !262, file: !262, line: 20, type: !335, isLocal: false, isDefinition: true, scopeLine: 20, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!338 = !DISubprogram(name: "maxval_s64", scope: !262, file: !262, line: 21, type: !339, isLocal: false, isDefinition: true, scopeLine: 21, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!339 = !DISubroutineType(types: !340)
!340 = !{!10}
!341 = !DISubprogram(name: "minval_s64", scope: !262, file: !262, line: 22, type: !339, isLocal: false, isDefinition: true, scopeLine: 22, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!342 = !DISubprogram(name: "nan_f32", scope: !262, file: !262, line: 33, type: !343, isLocal: false, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!343 = !DISubroutineType(types: !344)
!344 = !{!268}
!345 = !DISubprogram(name: "neg_inf_f32", scope: !262, file: !262, line: 37, type: !343, isLocal: false, isDefinition: true, scopeLine: 37, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!346 = !DISubprogram(name: "inf_f32", scope: !262, file: !262, line: 41, type: !343, isLocal: false, isDefinition: true, scopeLine: 41, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!347 = !DISubprogram(name: "maxval_f32", scope: !262, file: !262, line: 45, type: !343, isLocal: false, isDefinition: true, scopeLine: 45, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!348 = !DISubprogram(name: "minval_f32", scope: !262, file: !262, line: 49, type: !343, isLocal: false, isDefinition: true, scopeLine: 49, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!349 = !DISubprogram(name: "maxval_f64", scope: !262, file: !262, line: 62, type: !350, isLocal: false, isDefinition: true, scopeLine: 62, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!350 = !DISubroutineType(types: !351)
!351 = !{!281}
!352 = !DISubprogram(name: "minval_f64", scope: !262, file: !262, line: 66, type: !350, isLocal: false, isDefinition: true, scopeLine: 66, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!353 = !DISubprogram(name: "make_int64", scope: !262, file: !262, line: 70, type: !354, isLocal: false, isDefinition: true, scopeLine: 70, flags: DIFlagPrototyped, isOptimized: true, variables: !356)
!354 = !DISubroutineType(types: !355)
!355 = !{!10, !292, !292}
!356 = !{!357, !358}
!357 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "hi", arg: 1, scope: !353, file: !262, line: 70, type: !292)
!358 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lo", arg: 2, scope: !353, file: !262, line: 70, type: !292)
!359 = !{!34, !360}
!360 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !261, entity: !35, line: 243)
!361 = !DICompileUnit(language: DW_LANG_C_plus_plus, file: !362, producer: "clang version 3.7.0 (trunk 240337) (llvm/trunk 240338)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !2, subprograms: !363, globals: !2, imports: !376)
!362 = !DIFile(filename: "src/runtime/destructors.cpp", directory: "/Users/aam/halide/halide-aam1")
!363 = !{!364}
!364 = !DISubprogram(name: "call_destructor", scope: !362, file: !362, line: 7, type: !365, isLocal: false, isDefinition: true, scopeLine: 7, flags: DIFlagPrototyped, isOptimized: true, variables: !371)
!365 = !DISubroutineType(types: !366)
!366 = !{null, !18, !367, !370}
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 32, align: 32)
!368 = !DISubroutineType(types: !369)
!369 = !{null, !18, !18}
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18, size: 32, align: 32)
!371 = !{!372, !373, !374, !375}
!372 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !364, file: !362, line: 7, type: !18)
!373 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fn", arg: 2, scope: !364, file: !362, line: 7, type: !367)
!374 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "object", arg: 3, scope: !364, file: !362, line: 7, type: !370)
!375 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "o", scope: !364, file: !362, line: 8, type: !18)
!376 = !{!34, !377}
!377 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !361, entity: !35, line: 243)
!378 = !DICompileUnit(language: DW_LANG_C_plus_plus, file: !379, producer: "clang version 3.7.0 (trunk 240337) (llvm/trunk 240338)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !380, subprograms: !394, globals: !413, imports: !417)
!379 = !DIFile(filename: "src/runtime/gpu_device_selection.cpp", directory: "/Users/aam/halide/halide-aam1")
!380 = !{!381}
!381 = !DICompositeType(tag: DW_TAG_structure_type, name: "ScopedSpinLock", scope: !35, file: !382, line: 7, size: 32, align: 32, elements: !383, identifier: "_ZTSN6Halide7Runtime8Internal14ScopedSpinLockE")
!382 = !DIFile(filename: "src/runtime/scoped_spin_lock.h", directory: "/Users/aam/halide/halide-aam1")
!383 = !{!384, !387, !391}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !"_ZTSN6Halide7Runtime8Internal14ScopedSpinLockE", file: !382, line: 8, baseType: !385, size: 32, align: 32)
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 32, align: 32)
!386 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !17)
!387 = !DISubprogram(name: "ScopedSpinLock", scope: !"_ZTSN6Halide7Runtime8Internal14ScopedSpinLockE", file: !382, line: 10, type: !388, isLocal: false, isDefinition: false, scopeLine: 10, flags: DIFlagPrototyped, isOptimized: true)
!388 = !DISubroutineType(types: !389)
!389 = !{null, !390, !385}
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTSN6Halide7Runtime8Internal14ScopedSpinLockE", size: 32, align: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!391 = !DISubprogram(name: "~ScopedSpinLock", scope: !"_ZTSN6Halide7Runtime8Internal14ScopedSpinLockE", file: !382, line: 14, type: !392, isLocal: false, isDefinition: false, scopeLine: 14, flags: DIFlagPrototyped, isOptimized: true)
!392 = !DISubroutineType(types: !393)
!393 = !{null, !390}
!394 = !{!395, !398, !405, !410}
!395 = !DISubprogram(name: "halide_set_gpu_device", scope: !379, file: !379, line: 19, type: !194, isLocal: false, isDefinition: true, scopeLine: 19, flags: DIFlagPrototyped, isOptimized: true, function: void (i32)* @halide_set_gpu_device, variables: !396)
!396 = !{!397}
!397 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "d", arg: 1, scope: !395, file: !379, line: 19, type: !17)
!398 = !DISubprogram(name: "halide_get_gpu_device", scope: !379, file: !379, line: 23, type: !15, isLocal: false, isDefinition: true, scopeLine: 23, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*)* @halide_get_gpu_device, variables: !399)
!399 = !{!400, !401, !402}
!400 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !398, file: !379, line: 23, type: !18)
!401 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lock", scope: !398, file: !379, line: 24, type: !"_ZTSN6Halide7Runtime8Internal14ScopedSpinLockE")
!402 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "var", scope: !403, file: !379, line: 26, type: !46)
!403 = distinct !DILexicalBlock(scope: !404, file: !379, line: 25, column: 41)
!404 = distinct !DILexicalBlock(scope: !398, file: !379, line: 25, column: 9)
!405 = !DISubprogram(name: "ScopedSpinLock", linkageName: "_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVi", scope: !"_ZTSN6Halide7Runtime8Internal14ScopedSpinLockE", file: !382, line: 10, type: !388, isLocal: false, isDefinition: true, scopeLine: 10, flags: DIFlagPrototyped, isOptimized: true, declaration: !387, variables: !406)
!406 = !{!407, !409}
!407 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !405, type: !408, flags: DIFlagArtificial | DIFlagObjectPointer)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTSN6Halide7Runtime8Internal14ScopedSpinLockE", size: 32, align: 32)
!409 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "l", arg: 2, scope: !405, file: !382, line: 10, type: !385)
!410 = !DISubprogram(name: "~ScopedSpinLock", linkageName: "_ZN6Halide7Runtime8Internal14ScopedSpinLockD2Ev", scope: !"_ZTSN6Halide7Runtime8Internal14ScopedSpinLockE", file: !382, line: 14, type: !392, isLocal: false, isDefinition: true, scopeLine: 14, flags: DIFlagPrototyped, isOptimized: true, declaration: !391, variables: !411)
!411 = !{!412}
!412 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !410, type: !408, flags: DIFlagArtificial | DIFlagObjectPointer)
!413 = !{!414, !415, !416}
!414 = !DIGlobalVariable(name: "halide_gpu_device", linkageName: "_ZN6Halide7Runtime8Internal17halide_gpu_deviceE", scope: !35, file: !379, line: 8, type: !17, isLocal: false, isDefinition: true, variable: i32* @_ZN6Halide7Runtime8Internal17halide_gpu_deviceE)
!415 = !DIGlobalVariable(name: "halide_gpu_device_lock", linkageName: "_ZN6Halide7Runtime8Internal22halide_gpu_device_lockE", scope: !35, file: !379, line: 9, type: !17, isLocal: false, isDefinition: true, variable: i32* @_ZN6Halide7Runtime8Internal22halide_gpu_device_lockE)
!416 = !DIGlobalVariable(name: "halide_gpu_device_initialized", linkageName: "_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE", scope: !35, file: !379, line: 10, type: !31, isLocal: false, isDefinition: true, variable: i8* @_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE)
!417 = !{!34, !418}
!418 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !378, entity: !35, line: 243)
!419 = !DICompileUnit(language: DW_LANG_C_plus_plus, file: !420, producer: "clang version 3.7.0 (trunk 240337) (llvm/trunk 240338)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !421, retainedTypes: !432, subprograms: !454, globals: !631, imports: !638)
!420 = !DIFile(filename: "src/runtime/tracing.cpp", directory: "/Users/aam/halide/halide-aam1")
!421 = !{!422}
!422 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "halide_trace_event_code", file: !122, line: 129, size: 32, align: 32, elements: !423, identifier: "_ZTS23halide_trace_event_code")
!423 = !{!424, !425, !426, !427, !428, !429, !430, !431}
!424 = !DIEnumerator(name: "halide_trace_load", value: 0)
!425 = !DIEnumerator(name: "halide_trace_store", value: 1)
!426 = !DIEnumerator(name: "halide_trace_begin_realization", value: 2)
!427 = !DIEnumerator(name: "halide_trace_end_realization", value: 3)
!428 = !DIEnumerator(name: "halide_trace_produce", value: 4)
!429 = !DIEnumerator(name: "halide_trace_update", value: 5)
!430 = !DIEnumerator(name: "halide_trace_consume", value: 6)
!431 = !DIEnumerator(name: "halide_trace_end_consume", value: 7)
!432 = !{!433, !422, !445, !102, !446, !447, !448, !449, !450, !451, !452, !453, !370, !381, !162}
!433 = !DICompositeType(tag: DW_TAG_structure_type, name: "halide_trace_event", file: !122, line: 139, size: 320, align: 8, elements: !434, identifier: "_ZTS18halide_trace_event")
!434 = !{!435, !436, !437, !438, !439, !440, !441, !442, !443, !444}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !"_ZTS18halide_trace_event", file: !122, line: 140, baseType: !46, size: 32, align: 32)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !"_ZTS18halide_trace_event", file: !122, line: 141, baseType: !"_ZTS23halide_trace_event_code", size: 32, align: 32, offset: 32)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "parent_id", scope: !"_ZTS18halide_trace_event", file: !122, line: 142, baseType: !292, size: 32, align: 32, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "type_code", scope: !"_ZTS18halide_trace_event", file: !122, line: 143, baseType: !292, size: 32, align: 32, offset: 96)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !"_ZTS18halide_trace_event", file: !122, line: 144, baseType: !292, size: 32, align: 32, offset: 128)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "vector_width", scope: !"_ZTS18halide_trace_event", file: !122, line: 145, baseType: !292, size: 32, align: 32, offset: 160)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "value_index", scope: !"_ZTS18halide_trace_event", file: !122, line: 146, baseType: !292, size: 32, align: 32, offset: 192)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !"_ZTS18halide_trace_event", file: !122, line: 147, baseType: !18, size: 32, align: 32, offset: 224)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "dimensions", scope: !"_ZTS18halide_trace_event", file: !122, line: 148, baseType: !292, size: 32, align: 32, offset: 256)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "coordinates", scope: !"_ZTS18halide_trace_event", file: !122, line: 149, baseType: !445, size: 32, align: 32, offset: 288)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 32, align: 32)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 32, align: 32)
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32, align: 32)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 32, align: 32)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 32, align: 32)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 32, align: 32)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 32, align: 32)
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 32, align: 32)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 32, align: 32)
!454 = !{!455, !549, !557, !560, !570, !574, !579, !581, !585, !588, !593, !596, !600, !604, !608, !612, !616, !620, !624, !628}
!455 = !DISubprogram(name: "default_trace", linkageName: "_ZN6Halide7Runtime8Internal13default_traceEPvPK18halide_trace_event", scope: !35, file: !420, line: 18, type: !456, isLocal: false, isDefinition: true, scopeLine: 18, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, %struct.halide_trace_event*)* @_ZN6Halide7Runtime8Internal13default_traceEPvPK18halide_trace_event, variables: !460)
!456 = !DISubroutineType(types: !457)
!457 = !{!292, !18, !458}
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 32, align: 32)
!459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !"_ZTS18halide_trace_event")
!460 = !{!461, !462, !463, !464, !465, !468, !469, !470, !472, !473, !474, !475, !479, !480, !482, !484, !485, !539, !540, !542, !543, !545}
!461 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !455, file: !420, line: 18, type: !18)
!462 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "e", arg: 2, scope: !455, file: !420, line: 18, type: !458)
!463 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "my_id", scope: !455, file: !420, line: 21, type: !292)
!464 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !455, file: !420, line: 24, type: !17)
!465 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "clamped_width", scope: !466, file: !420, line: 27, type: !103)
!466 = distinct !DILexicalBlock(scope: !467, file: !420, line: 25, column: 17)
!467 = distinct !DILexicalBlock(scope: !455, file: !420, line: 25, column: 9)
!468 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "clamped_dimensions", scope: !466, file: !420, line: 28, type: !103)
!469 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bytes", scope: !466, file: !420, line: 32, type: !17)
!470 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "header_bytes", scope: !466, file: !420, line: 36, type: !471)
!471 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !11, line: 27, baseType: !270)
!472 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value_bytes", scope: !466, file: !420, line: 37, type: !471)
!473 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "int_arg_bytes", scope: !466, file: !420, line: 38, type: !471)
!474 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "total_bytes", scope: !466, file: !420, line: 39, type: !471)
!475 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !466, file: !420, line: 40, type: !476)
!476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 32768, align: 8, elements: !477)
!477 = !{!478}
!478 = !DISubrange(count: 4096)
!479 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !466, file: !420, line: 53, type: !17)
!480 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !481, file: !420, line: 64, type: !471)
!481 = distinct !DILexicalBlock(scope: !466, file: !420, line: 64, column: 9)
!482 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !483, file: !420, line: 69, type: !471)
!483 = distinct !DILexicalBlock(scope: !466, file: !420, line: 69, column: 9)
!484 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "written", scope: !466, file: !420, line: 74, type: !471)
!485 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ss", scope: !486, file: !420, line: 78, type: !487)
!486 = distinct !DILexicalBlock(scope: !467, file: !420, line: 77, column: 12)
!487 = !DIDerivedType(tag: DW_TAG_typedef, name: "stringstream", scope: !38, file: !11, line: 217, baseType: !488)
!488 = !DICompositeType(tag: DW_TAG_class_type, name: "Printer<2, 1024>", scope: !38, file: !11, line: 130, size: 128, align: 32, elements: !489, templateParams: !536)
!489 = !{!490, !491, !492, !493, !494, !498, !502, !505, !508, !511, !514, !517, !520, !525, !528, !533}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !488, file: !11, line: 132, baseType: !162, size: 32, align: 32, flags: DIFlagPublic)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !488, file: !11, line: 132, baseType: !162, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !488, file: !11, line: 132, baseType: !162, size: 32, align: 32, offset: 64, flags: DIFlagPublic)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "user_context", scope: !488, file: !11, line: 133, baseType: !18, size: 32, align: 32, offset: 96, flags: DIFlagPublic)
!494 = !DISubprogram(name: "Printer", scope: !488, file: !11, line: 135, type: !495, isLocal: false, isDefinition: false, scopeLine: 135, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!495 = !DISubroutineType(types: !496)
!496 = !{null, !497, !18}
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 32, align: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!498 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi2ELy1024EElsEPKc", scope: !488, file: !11, line: 142, type: !499, isLocal: false, isDefinition: false, scopeLine: 142, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!499 = !DISubroutineType(types: !500)
!500 = !{!501, !497, !46}
!501 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !488)
!502 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi2ELy1024EElsEx", scope: !488, file: !11, line: 147, type: !503, isLocal: false, isDefinition: false, scopeLine: 147, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!503 = !DISubroutineType(types: !504)
!504 = !{!501, !497, !10}
!505 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi2ELy1024EElsEi", scope: !488, file: !11, line: 152, type: !506, isLocal: false, isDefinition: false, scopeLine: 152, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!506 = !DISubroutineType(types: !507)
!507 = !{!501, !497, !292}
!508 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi2ELy1024EElsEy", scope: !488, file: !11, line: 157, type: !509, isLocal: false, isDefinition: false, scopeLine: 157, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!509 = !DISubroutineType(types: !510)
!510 = !{!501, !497, !91}
!511 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi2ELy1024EElsEj", scope: !488, file: !11, line: 162, type: !512, isLocal: false, isDefinition: false, scopeLine: 162, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!512 = !DISubroutineType(types: !513)
!513 = !{!501, !497, !269}
!514 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi2ELy1024EElsEd", scope: !488, file: !11, line: 167, type: !515, isLocal: false, isDefinition: false, scopeLine: 167, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!515 = !DISubroutineType(types: !516)
!516 = !{!501, !497, !281}
!517 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi2ELy1024EElsEf", scope: !488, file: !11, line: 172, type: !518, isLocal: false, isDefinition: false, scopeLine: 172, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!518 = !DISubroutineType(types: !519)
!519 = !{!501, !497, !268}
!520 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi2ELy1024EElsEPKv", scope: !488, file: !11, line: 177, type: !521, isLocal: false, isDefinition: false, scopeLine: 177, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!521 = !DISubroutineType(types: !522)
!522 = !{!501, !497, !523}
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 32, align: 32)
!524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!525 = !DISubprogram(name: "str", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi2ELy1024EE3strEv", scope: !488, file: !11, line: 183, type: !526, isLocal: false, isDefinition: false, scopeLine: 183, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!526 = !DISubroutineType(types: !527)
!527 = !{!46, !497}
!528 = !DISubprogram(name: "size", linkageName: "_ZNK6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi2ELy1024EE4sizeEv", scope: !488, file: !11, line: 188, type: !529, isLocal: false, isDefinition: false, scopeLine: 188, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!529 = !DISubroutineType(types: !530)
!530 = !{!91, !531}
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 32, align: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !488)
!533 = !DISubprogram(name: "~Printer", scope: !488, file: !11, line: 192, type: !534, isLocal: false, isDefinition: false, scopeLine: 192, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!534 = !DISubroutineType(types: !535)
!535 = !{null, !497}
!536 = !{!537, !538}
!537 = !DITemplateValueParameter(name: "type", type: !17, value: i32 2)
!538 = !DITemplateValueParameter(name: "length", type: !92, value: i64 1024)
!539 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "print_bits", scope: !486, file: !420, line: 81, type: !17)
!540 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "event_types", scope: !486, file: !420, line: 86, type: !541)
!541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 256, align: 32, elements: !93)
!542 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "print_value", scope: !486, file: !420, line: 96, type: !31)
!543 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !544, file: !420, line: 102, type: !17)
!544 = distinct !DILexicalBlock(scope: !486, file: !420, line: 102, column: 9)
!545 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !546, file: !420, line: 124, type: !17)
!546 = distinct !DILexicalBlock(scope: !547, file: !420, line: 124, column: 13)
!547 = distinct !DILexicalBlock(scope: !548, file: !420, line: 118, column: 26)
!548 = distinct !DILexicalBlock(scope: !486, file: !420, line: 118, column: 13)
!549 = !DISubprogram(name: "halide_set_custom_trace", scope: !420, file: !420, line: 177, type: !550, isLocal: false, isDefinition: true, scopeLine: 177, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, %struct.halide_trace_event*)* (i32 (i8*, %struct.halide_trace_event*)*)* @halide_set_custom_trace, variables: !554)
!550 = !DISubroutineType(types: !551)
!551 = !{!552, !552}
!552 = !DIDerivedType(tag: DW_TAG_typedef, name: "trace_fn", file: !420, line: 7, baseType: !553)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 32, align: 32)
!554 = !{!555, !556}
!555 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "t", arg: 1, scope: !549, file: !420, line: 177, type: !552)
!556 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !549, file: !420, line: 178, type: !552)
!557 = !DISubprogram(name: "halide_set_trace_file", scope: !420, file: !420, line: 183, type: !194, isLocal: false, isDefinition: true, scopeLine: 183, flags: DIFlagPrototyped, isOptimized: true, function: void (i32)* @halide_set_trace_file, variables: !558)
!558 = !{!559}
!559 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fd", arg: 1, scope: !557, file: !420, line: 183, type: !17)
!560 = !DISubprogram(name: "halide_get_trace_file", scope: !420, file: !420, line: 193, type: !15, isLocal: false, isDefinition: true, scopeLine: 193, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*)* @halide_get_trace_file, variables: !561)
!561 = !{!562, !563, !564, !567}
!562 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !560, file: !420, line: 193, type: !18)
!563 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lock", scope: !560, file: !420, line: 196, type: !"_ZTSN6Halide7Runtime8Internal14ScopedSpinLockE")
!564 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "trace_file_name", scope: !565, file: !420, line: 198, type: !46)
!565 = distinct !DILexicalBlock(scope: !566, file: !420, line: 197, column: 41)
!566 = distinct !DILexicalBlock(scope: !560, file: !420, line: 197, column: 9)
!567 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !568, file: !420, line: 200, type: !17)
!568 = distinct !DILexicalBlock(scope: !569, file: !420, line: 199, column: 30)
!569 = distinct !DILexicalBlock(scope: !565, file: !420, line: 199, column: 13)
!570 = !DISubprogram(name: "halide_trace", scope: !420, file: !420, line: 211, type: !456, isLocal: false, isDefinition: true, scopeLine: 211, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, %struct.halide_trace_event*)* @halide_trace, variables: !571)
!571 = !{!572, !573}
!572 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !570, file: !420, line: 211, type: !18)
!573 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "e", arg: 2, scope: !570, file: !420, line: 211, type: !458)
!574 = !DISubprogram(name: "halide_shutdown_trace", scope: !420, file: !420, line: 215, type: !58, isLocal: false, isDefinition: true, scopeLine: 215, flags: DIFlagPrototyped, isOptimized: true, function: i32 ()* @halide_shutdown_trace, variables: !575)
!575 = !{!576}
!576 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !577, file: !420, line: 217, type: !17)
!577 = distinct !DILexicalBlock(scope: !578, file: !420, line: 216, column: 46)
!578 = distinct !DILexicalBlock(scope: !574, file: !420, line: 216, column: 9)
!579 = !DISubprogram(name: "halide_trace_cleanup", scope: !580, file: !420, line: 229, type: !183, isLocal: false, isDefinition: true, scopeLine: 229, flags: DIFlagPrototyped, isOptimized: true, function: void ()* @halide_trace_cleanup, variables: !2)
!580 = !DINamespace(scope: null, file: !420, line: 227)
!581 = !DISubprogram(name: "ScopedSpinLock", linkageName: "_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVi", scope: !"_ZTSN6Halide7Runtime8Internal14ScopedSpinLockE", file: !382, line: 10, type: !388, isLocal: false, isDefinition: true, scopeLine: 10, flags: DIFlagPrototyped, isOptimized: true, declaration: !387, variables: !582)
!582 = !{!583, !584}
!583 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !581, type: !408, flags: DIFlagArtificial | DIFlagObjectPointer)
!584 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "l", arg: 2, scope: !581, file: !382, line: 10, type: !385)
!585 = !DISubprogram(name: "~ScopedSpinLock", linkageName: "_ZN6Halide7Runtime8Internal14ScopedSpinLockD2Ev", scope: !"_ZTSN6Halide7Runtime8Internal14ScopedSpinLockE", file: !382, line: 14, type: !392, isLocal: false, isDefinition: true, scopeLine: 14, flags: DIFlagPrototyped, isOptimized: true, declaration: !391, variables: !586)
!586 = !{!587}
!587 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !585, type: !408, flags: DIFlagArtificial | DIFlagObjectPointer)
!588 = !DISubprogram(name: "Printer", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi2ELy1024EEC2EPv", scope: !488, file: !11, line: 135, type: !495, isLocal: true, isDefinition: true, scopeLine: 135, flags: DIFlagPrototyped, isOptimized: true, declaration: !494, variables: !589)
!589 = !{!590, !592}
!590 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !588, type: !591, flags: DIFlagArtificial | DIFlagObjectPointer)
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 32, align: 32)
!592 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 2, scope: !588, file: !11, line: 135, type: !18)
!593 = !DISubprogram(name: "~Printer", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi2ELy1024EED2Ev", scope: !488, file: !11, line: 192, type: !534, isLocal: true, isDefinition: true, scopeLine: 192, flags: DIFlagPrototyped, isOptimized: true, declaration: !533, variables: !594)
!594 = !{!595}
!595 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !593, type: !591, flags: DIFlagArtificial | DIFlagObjectPointer)
!596 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi2ELy1024EElsEPKc", scope: !488, file: !11, line: 142, type: !499, isLocal: true, isDefinition: true, scopeLine: 142, flags: DIFlagPrototyped, isOptimized: true, declaration: !498, variables: !597)
!597 = !{!598, !599}
!598 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !596, type: !591, flags: DIFlagArtificial | DIFlagObjectPointer)
!599 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !596, file: !11, line: 142, type: !46)
!600 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi2ELy1024EElsEi", scope: !488, file: !11, line: 152, type: !506, isLocal: true, isDefinition: true, scopeLine: 152, flags: DIFlagPrototyped, isOptimized: true, declaration: !505, variables: !601)
!601 = !{!602, !603}
!602 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !600, type: !591, flags: DIFlagArtificial | DIFlagObjectPointer)
!603 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !600, file: !11, line: 152, type: !292)
!604 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi2ELy1024EElsEx", scope: !488, file: !11, line: 147, type: !503, isLocal: true, isDefinition: true, scopeLine: 147, flags: DIFlagPrototyped, isOptimized: true, declaration: !502, variables: !605)
!605 = !{!606, !607}
!606 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !604, type: !591, flags: DIFlagArtificial | DIFlagObjectPointer)
!607 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !604, file: !11, line: 147, type: !10)
!608 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi2ELy1024EElsEj", scope: !488, file: !11, line: 162, type: !512, isLocal: true, isDefinition: true, scopeLine: 162, flags: DIFlagPrototyped, isOptimized: true, declaration: !511, variables: !609)
!609 = !{!610, !611}
!610 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !608, type: !591, flags: DIFlagArtificial | DIFlagObjectPointer)
!611 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !608, file: !11, line: 162, type: !269)
!612 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi2ELy1024EElsEy", scope: !488, file: !11, line: 157, type: !509, isLocal: true, isDefinition: true, scopeLine: 157, flags: DIFlagPrototyped, isOptimized: true, declaration: !508, variables: !613)
!613 = !{!614, !615}
!614 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !612, type: !591, flags: DIFlagArtificial | DIFlagObjectPointer)
!615 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !612, file: !11, line: 157, type: !91)
!616 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi2ELy1024EElsEf", scope: !488, file: !11, line: 172, type: !518, isLocal: true, isDefinition: true, scopeLine: 172, flags: DIFlagPrototyped, isOptimized: true, declaration: !517, variables: !617)
!617 = !{!618, !619}
!618 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !616, type: !591, flags: DIFlagArtificial | DIFlagObjectPointer)
!619 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !616, file: !11, line: 172, type: !268)
!620 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi2ELy1024EElsEd", scope: !488, file: !11, line: 167, type: !515, isLocal: true, isDefinition: true, scopeLine: 167, flags: DIFlagPrototyped, isOptimized: true, declaration: !514, variables: !621)
!621 = !{!622, !623}
!622 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !620, type: !591, flags: DIFlagArtificial | DIFlagObjectPointer)
!623 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !620, file: !11, line: 167, type: !281)
!624 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi2ELy1024EElsEPKv", scope: !488, file: !11, line: 177, type: !521, isLocal: true, isDefinition: true, scopeLine: 177, flags: DIFlagPrototyped, isOptimized: true, declaration: !520, variables: !625)
!625 = !{!626, !627}
!626 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !624, type: !591, flags: DIFlagArtificial | DIFlagObjectPointer)
!627 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !624, file: !11, line: 177, type: !523)
!628 = !DISubprogram(name: "str", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi2ELy1024EE3strEv", scope: !488, file: !11, line: 183, type: !526, isLocal: true, isDefinition: true, scopeLine: 183, flags: DIFlagPrototyped, isOptimized: true, declaration: !525, variables: !629)
!629 = !{!630}
!630 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !628, type: !591, flags: DIFlagArtificial | DIFlagObjectPointer)
!631 = !{!632, !633, !634, !635, !636, !637}
!632 = !DIGlobalVariable(name: "halide_trace_file", linkageName: "_ZN6Halide7Runtime8Internal17halide_trace_fileE", scope: !35, file: !420, line: 13, type: !17, isLocal: false, isDefinition: true, variable: i32* @_ZN6Halide7Runtime8Internal17halide_trace_fileE)
!633 = !DIGlobalVariable(name: "halide_trace_file_lock", linkageName: "_ZN6Halide7Runtime8Internal22halide_trace_file_lockE", scope: !35, file: !420, line: 14, type: !17, isLocal: false, isDefinition: true, variable: i32* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE)
!634 = !DIGlobalVariable(name: "halide_trace_file_initialized", linkageName: "_ZN6Halide7Runtime8Internal29halide_trace_file_initializedE", scope: !35, file: !420, line: 15, type: !31, isLocal: false, isDefinition: true, variable: i8* @_ZN6Halide7Runtime8Internal29halide_trace_file_initializedE)
!635 = !DIGlobalVariable(name: "halide_trace_file_internally_opened", linkageName: "_ZN6Halide7Runtime8Internal35halide_trace_file_internally_openedE", scope: !35, file: !420, line: 16, type: !31, isLocal: false, isDefinition: true, variable: i8* @_ZN6Halide7Runtime8Internal35halide_trace_file_internally_openedE)
!636 = !DIGlobalVariable(name: "ids", scope: !455, file: !420, line: 19, type: !292, isLocal: true, isDefinition: true, variable: i32* @_ZZN6Halide7Runtime8Internal13default_traceEPvPK18halide_trace_eventE3ids)
!637 = !DIGlobalVariable(name: "halide_custom_trace", linkageName: "_ZN6Halide7Runtime8Internal19halide_custom_traceE", scope: !35, file: !420, line: 171, type: !552, isLocal: false, isDefinition: true, variable: i32 (i8*, %struct.halide_trace_event*)** @_ZN6Halide7Runtime8Internal19halide_custom_traceE)
!638 = !{!34, !639}
!639 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !419, entity: !35, line: 243)
!640 = !DICompileUnit(language: DW_LANG_C_plus_plus, file: !641, producer: "clang version 3.7.0 (trunk 240337) (llvm/trunk 240338)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !642, subprograms: !677, globals: !742, imports: !747)
!641 = !DIFile(filename: "src/runtime/write_debug_image.cpp", directory: "/Users/aam/halide/halide-aam1")
!642 = !{!643, !656, !672, !46, !331, !18}
!643 = !DICompositeType(tag: DW_TAG_structure_type, name: "halide_tiff_header", scope: !35, file: !641, line: 66, size: 1680, align: 16, elements: !644, identifier: "_ZTSN6Halide7Runtime8Internal18halide_tiff_headerE")
!644 = !{!645, !646, !647, !648, !649, !653, !654, !655}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "byte_order_marker", scope: !"_ZTSN6Halide7Runtime8Internal18halide_tiff_headerE", file: !641, line: 67, baseType: !331, size: 16, align: 16)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !"_ZTSN6Halide7Runtime8Internal18halide_tiff_headerE", file: !641, line: 68, baseType: !331, size: 16, align: 16, offset: 16)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "ifd0_offset", scope: !"_ZTSN6Halide7Runtime8Internal18halide_tiff_headerE", file: !641, line: 69, baseType: !292, size: 32, align: 32, offset: 32)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "entry_count", scope: !"_ZTSN6Halide7Runtime8Internal18halide_tiff_headerE", file: !641, line: 70, baseType: !331, size: 16, align: 16, offset: 64)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !"_ZTSN6Halide7Runtime8Internal18halide_tiff_headerE", file: !641, line: 71, baseType: !650, size: 1440, align: 16, offset: 80)
!650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !"_ZTSN6Halide7Runtime8Internal8tiff_tagE", size: 1440, align: 16, elements: !651)
!651 = !{!652}
!652 = !DISubrange(count: 15)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "ifd0_end", scope: !"_ZTSN6Halide7Runtime8Internal18halide_tiff_headerE", file: !641, line: 72, baseType: !292, size: 32, align: 32, offset: 1520)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "width_resolution", scope: !"_ZTSN6Halide7Runtime8Internal18halide_tiff_headerE", file: !641, line: 73, baseType: !299, size: 64, align: 32, offset: 1552)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "height_resolution", scope: !"_ZTSN6Halide7Runtime8Internal18halide_tiff_headerE", file: !641, line: 74, baseType: !299, size: 64, align: 32, offset: 1616)
!656 = !DICompositeType(tag: DW_TAG_structure_type, name: "tiff_tag", scope: !35, file: !641, line: 34, size: 96, align: 16, elements: !657, identifier: "_ZTSN6Halide7Runtime8Internal8tiff_tagE")
!657 = !{!658, !659, !660, !661, !662, !666, !669}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "tag_code", scope: !"_ZTSN6Halide7Runtime8Internal8tiff_tagE", file: !641, line: 35, baseType: !331, size: 16, align: 16)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "type_code", scope: !"_ZTSN6Halide7Runtime8Internal8tiff_tagE", file: !641, line: 36, baseType: !331, size: 16, align: 16, offset: 16)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !"_ZTSN6Halide7Runtime8Internal8tiff_tagE", file: !641, line: 37, baseType: !292, size: 32, align: 32, offset: 32)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !"_ZTSN6Halide7Runtime8Internal8tiff_tagE", file: !641, line: 42, baseType: !"_ZTSN6Halide7Runtime8Internal8tiff_tagUt_E", size: 32, align: 16, offset: 64)
!662 = !DISubprogram(name: "assign16", linkageName: "_ZN6Halide7Runtime8Internal8tiff_tag8assign16Esis", scope: !"_ZTSN6Halide7Runtime8Internal8tiff_tagE", file: !641, line: 44, type: !663, isLocal: false, isDefinition: false, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: true)
!663 = !DISubroutineType(types: !664)
!664 = !{null, !665, !331, !292, !331}
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTSN6Halide7Runtime8Internal8tiff_tagE", size: 32, align: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!666 = !DISubprogram(name: "assign32", linkageName: "_ZN6Halide7Runtime8Internal8tiff_tag8assign32Esii", scope: !"_ZTSN6Halide7Runtime8Internal8tiff_tagE", file: !641, line: 51, type: !667, isLocal: false, isDefinition: false, scopeLine: 51, flags: DIFlagPrototyped, isOptimized: true)
!667 = !DISubroutineType(types: !668)
!668 = !{null, !665, !331, !292, !292}
!669 = !DISubprogram(name: "assign32", linkageName: "_ZN6Halide7Runtime8Internal8tiff_tag8assign32Essii", scope: !"_ZTSN6Halide7Runtime8Internal8tiff_tagE", file: !641, line: 58, type: !670, isLocal: false, isDefinition: false, scopeLine: 58, flags: DIFlagPrototyped, isOptimized: true)
!670 = !DISubroutineType(types: !671)
!671 = !{null, !665, !331, !331, !292, !292}
!672 = !DICompositeType(tag: DW_TAG_union_type, scope: !"_ZTSN6Halide7Runtime8Internal8tiff_tagE", file: !641, line: 38, size: 32, align: 16, elements: !673, identifier: "_ZTSN6Halide7Runtime8Internal8tiff_tagUt_E")
!673 = !{!674, !675, !676}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "i8", scope: !"_ZTSN6Halide7Runtime8Internal8tiff_tagUt_E", file: !641, line: 39, baseType: !325, size: 8, align: 8)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "i16", scope: !"_ZTSN6Halide7Runtime8Internal8tiff_tagUt_E", file: !641, line: 40, baseType: !331, size: 16, align: 16)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "i32", scope: !"_ZTSN6Halide7Runtime8Internal8tiff_tagUt_E", file: !641, line: 41, baseType: !292, size: 32, align: 32)
!677 = !{!678, !684, !723, !729, !735}
!678 = !DISubprogram(name: "has_tiff_extension", linkageName: "_ZN6Halide7Runtime8Internal18has_tiff_extensionEPKc", scope: !35, file: !641, line: 79, type: !679, isLocal: false, isDefinition: true, scopeLine: 79, flags: DIFlagPrototyped, isOptimized: true, function: i1 (i8*)* @_ZN6Halide7Runtime8Internal18has_tiff_extensionEPKc, variables: !681)
!679 = !DISubroutineType(types: !680)
!680 = !{!31, !46}
!681 = !{!682, !683}
!682 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "filename", arg: 1, scope: !678, file: !641, line: 79, type: !46)
!683 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "f", scope: !678, file: !641, line: 80, type: !46)
!684 = !DISubprogram(name: "halide_debug_to_file", scope: !641, file: !641, line: 107, type: !685, isLocal: false, isDefinition: true, scopeLine: 109, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, i8*, i32, i32, i32, i32, i32, i32)* @halide_debug_to_file, variables: !687)
!685 = !DISubroutineType(types: !686)
!686 = !{!292, !18, !46, !102, !292, !292, !292, !292, !292, !292}
!687 = !{!688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !702, !703, !704, !705, !706, !707, !708, !710, !713, !715, !716, !718}
!688 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !684, file: !641, line: 107, type: !18)
!689 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "filename", arg: 2, scope: !684, file: !641, line: 107, type: !46)
!690 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data", arg: 3, scope: !684, file: !641, line: 107, type: !102)
!691 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s0", arg: 4, scope: !684, file: !641, line: 108, type: !292)
!692 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s1", arg: 5, scope: !684, file: !641, line: 108, type: !292)
!693 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s2", arg: 6, scope: !684, file: !641, line: 108, type: !292)
!694 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s3", arg: 7, scope: !684, file: !641, line: 108, type: !292)
!695 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type_code", arg: 8, scope: !684, file: !641, line: 109, type: !292)
!696 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "bytes_per_element", arg: 9, scope: !684, file: !641, line: 109, type: !292)
!697 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "f", scope: !684, file: !641, line: 110, type: !18)
!698 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "elts", scope: !684, file: !641, line: 113, type: !471)
!699 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "channels", scope: !700, file: !641, line: 117, type: !292)
!700 = distinct !DILexicalBlock(scope: !701, file: !641, line: 116, column: 39)
!701 = distinct !DILexicalBlock(scope: !684, file: !641, line: 116, column: 9)
!702 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !700, file: !641, line: 118, type: !292)
!703 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "height", scope: !700, file: !641, line: 119, type: !292)
!704 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "depth", scope: !700, file: !641, line: 120, type: !292)
!705 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "header", scope: !700, file: !641, line: 130, type: !"_ZTSN6Halide7Runtime8Internal18halide_tiff_headerE")
!706 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "MMII", scope: !700, file: !641, line: 132, type: !292)
!707 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !700, file: !641, line: 134, type: !46)
!708 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tag", scope: !700, file: !641, line: 141, type: !709)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTSN6Halide7Runtime8Internal8tiff_tagE", size: 32, align: 32)
!710 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !711, file: !641, line: 177, type: !292)
!711 = distinct !DILexicalBlock(scope: !712, file: !641, line: 176, column: 27)
!712 = distinct !DILexicalBlock(scope: !700, file: !641, line: 176, column: 13)
!713 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !714, file: !641, line: 179, type: !292)
!714 = distinct !DILexicalBlock(scope: !711, file: !641, line: 179, column: 11)
!715 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "count", scope: !711, file: !641, line: 186, type: !292)
!716 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !717, file: !641, line: 187, type: !292)
!717 = distinct !DILexicalBlock(scope: !711, file: !641, line: 187, column: 11)
!718 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "header", scope: !719, file: !641, line: 195, type: !720)
!719 = distinct !DILexicalBlock(scope: !701, file: !641, line: 194, column: 12)
!720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !292, size: 160, align: 32, elements: !721)
!721 = !{!722}
!722 = !DISubrange(count: 5)
!723 = !DISubprogram(name: "assign32", linkageName: "_ZN6Halide7Runtime8Internal8tiff_tag8assign32Esii", scope: !"_ZTSN6Halide7Runtime8Internal8tiff_tagE", file: !641, line: 51, type: !667, isLocal: false, isDefinition: true, scopeLine: 51, flags: DIFlagPrototyped, isOptimized: true, declaration: !666, variables: !724)
!724 = !{!725, !726, !727, !728}
!725 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !723, type: !709, flags: DIFlagArtificial | DIFlagObjectPointer)
!726 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tag_code", arg: 2, scope: !723, file: !641, line: 51, type: !331)
!727 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "count", arg: 3, scope: !723, file: !641, line: 51, type: !292)
!728 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 4, scope: !723, file: !641, line: 51, type: !292)
!729 = !DISubprogram(name: "assign16", linkageName: "_ZN6Halide7Runtime8Internal8tiff_tag8assign16Esis", scope: !"_ZTSN6Halide7Runtime8Internal8tiff_tagE", file: !641, line: 44, type: !663, isLocal: false, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: true, declaration: !662, variables: !730)
!730 = !{!731, !732, !733, !734}
!731 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !729, type: !709, flags: DIFlagArtificial | DIFlagObjectPointer)
!732 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tag_code", arg: 2, scope: !729, file: !641, line: 44, type: !331)
!733 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "count", arg: 3, scope: !729, file: !641, line: 44, type: !292)
!734 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 4, scope: !729, file: !641, line: 44, type: !331)
!735 = !DISubprogram(name: "assign32", linkageName: "_ZN6Halide7Runtime8Internal8tiff_tag8assign32Essii", scope: !"_ZTSN6Halide7Runtime8Internal8tiff_tagE", file: !641, line: 58, type: !670, isLocal: false, isDefinition: true, scopeLine: 58, flags: DIFlagPrototyped, isOptimized: true, declaration: !669, variables: !736)
!736 = !{!737, !738, !739, !740, !741}
!737 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !735, type: !709, flags: DIFlagArtificial | DIFlagObjectPointer)
!738 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tag_code", arg: 2, scope: !735, file: !641, line: 58, type: !331)
!739 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type_code", arg: 3, scope: !735, file: !641, line: 58, type: !331)
!740 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "count", arg: 4, scope: !735, file: !641, line: 58, type: !292)
!741 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 5, scope: !735, file: !641, line: 58, type: !292)
!742 = !{!743}
!743 = !DIGlobalVariable(name: "pixel_type_to_tiff_sample_type", linkageName: "_ZN6Halide7Runtime8Internal30pixel_type_to_tiff_sample_typeE", scope: !35, file: !641, line: 27, type: !744, isLocal: false, isDefinition: true, variable: [10 x i16]* @_ZN6Halide7Runtime8Internal30pixel_type_to_tiff_sample_typeE)
!744 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 160, align: 16, elements: !745)
!745 = !{!746}
!746 = !DISubrange(count: 10)
!747 = !{!34, !748}
!748 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !640, entity: !35, line: 243)
!749 = !DICompileUnit(language: DW_LANG_C_plus_plus, file: !750, producer: "clang version 3.7.0 (trunk 240337) (llvm/trunk 240338)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !751, subprograms: !752, globals: !786, imports: !789)
!750 = !DIFile(filename: "src/runtime/posix_allocator.cpp", directory: "/Users/aam/halide/halide-aam1")
!751 = !{!18, !471, !370}
!752 = !{!753, !761, !765, !772, !778, !782}
!753 = !DISubprogram(name: "default_malloc", linkageName: "_ZN6Halide7Runtime8Internal14default_mallocEPvj", scope: !35, file: !750, line: 12, type: !754, isLocal: false, isDefinition: true, scopeLine: 12, flags: DIFlagPrototyped, isOptimized: true, function: i8* (i8*, i32)* @_ZN6Halide7Runtime8Internal14default_mallocEPvj, variables: !756)
!754 = !DISubroutineType(types: !755)
!755 = !{!18, !18, !471}
!756 = !{!757, !758, !759, !760}
!757 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !753, file: !750, line: 12, type: !18)
!758 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 2, scope: !753, file: !750, line: 12, type: !471)
!759 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "orig", scope: !753, file: !750, line: 13, type: !18)
!760 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !753, file: !750, line: 19, type: !18)
!761 = !DISubprogram(name: "default_free", linkageName: "_ZN6Halide7Runtime8Internal12default_freeEPvS2_", scope: !35, file: !750, line: 24, type: !368, isLocal: false, isDefinition: true, scopeLine: 24, flags: DIFlagPrototyped, isOptimized: true, function: void (i8*, i8*)* @_ZN6Halide7Runtime8Internal12default_freeEPvS2_, variables: !762)
!762 = !{!763, !764}
!763 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !761, file: !750, line: 24, type: !18)
!764 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 2, scope: !761, file: !750, line: 24, type: !18)
!765 = !DISubprogram(name: "halide_set_custom_malloc", scope: !750, file: !750, line: 35, type: !766, isLocal: false, isDefinition: true, scopeLine: 35, flags: DIFlagPrototyped, isOptimized: true, function: i8* (i8*, i32)* (i8* (i8*, i32)*)* @halide_set_custom_malloc, variables: !769)
!766 = !DISubroutineType(types: !767)
!767 = !{!768, !768}
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 32, align: 32)
!769 = !{!770, !771}
!770 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_malloc", arg: 1, scope: !765, file: !750, line: 35, type: !768)
!771 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !765, file: !750, line: 36, type: !768)
!772 = !DISubprogram(name: "halide_set_custom_free", scope: !750, file: !750, line: 41, type: !773, isLocal: false, isDefinition: true, scopeLine: 41, flags: DIFlagPrototyped, isOptimized: true, function: void (i8*, i8*)* (void (i8*, i8*)*)* @halide_set_custom_free, variables: !775)
!773 = !DISubroutineType(types: !774)
!774 = !{!367, !367}
!775 = !{!776, !777}
!776 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_free", arg: 1, scope: !772, file: !750, line: 41, type: !367)
!777 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !772, file: !750, line: 42, type: !367)
!778 = !DISubprogram(name: "halide_malloc", scope: !750, file: !750, line: 47, type: !754, isLocal: false, isDefinition: true, scopeLine: 47, flags: DIFlagPrototyped, isOptimized: true, function: i8* (i8*, i32)* @halide_malloc, variables: !779)
!779 = !{!780, !781}
!780 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !778, file: !750, line: 47, type: !18)
!781 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 2, scope: !778, file: !750, line: 47, type: !471)
!782 = !DISubprogram(name: "halide_free", scope: !750, file: !750, line: 51, type: !368, isLocal: false, isDefinition: true, scopeLine: 51, flags: DIFlagPrototyped, isOptimized: true, function: void (i8*, i8*)* @halide_free, variables: !783)
!783 = !{!784, !785}
!784 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !782, file: !750, line: 51, type: !18)
!785 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 2, scope: !782, file: !750, line: 51, type: !18)
!786 = !{!787, !788}
!787 = !DIGlobalVariable(name: "custom_malloc", linkageName: "_ZN6Halide7Runtime8Internal13custom_mallocE", scope: !35, file: !750, line: 28, type: !768, isLocal: false, isDefinition: true, variable: i8* (i8*, i32)** @_ZN6Halide7Runtime8Internal13custom_mallocE)
!788 = !DIGlobalVariable(name: "custom_free", linkageName: "_ZN6Halide7Runtime8Internal11custom_freeE", scope: !35, file: !750, line: 29, type: !367, isLocal: false, isDefinition: true, variable: void (i8*, i8*)** @_ZN6Halide7Runtime8Internal11custom_freeE)
!789 = !{!34, !790}
!790 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !749, entity: !35, line: 243)
!791 = !DICompileUnit(language: DW_LANG_C_plus_plus, file: !792, producer: "clang version 3.7.0 (trunk 240337) (llvm/trunk 240338)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !793, retainedTypes: !819, subprograms: !820, globals: !1049, imports: !1051)
!792 = !DIFile(filename: "src/runtime/posix_error_handler.cpp", directory: "/Users/aam/halide/halide-aam1")
!793 = !{!794}
!794 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "halide_error_code_t", file: !122, line: 293, size: 32, align: 32, elements: !795, identifier: "_ZTS19halide_error_code_t")
!795 = !{!796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818}
!796 = !DIEnumerator(name: "halide_error_code_success", value: 0)
!797 = !DIEnumerator(name: "halide_error_code_generic_error", value: -1)
!798 = !DIEnumerator(name: "halide_error_code_explicit_bounds_too_small", value: -2)
!799 = !DIEnumerator(name: "halide_error_code_bad_elem_size", value: -3)
!800 = !DIEnumerator(name: "halide_error_code_access_out_of_bounds", value: -4)
!801 = !DIEnumerator(name: "halide_error_code_buffer_allocation_too_large", value: -5)
!802 = !DIEnumerator(name: "halide_error_code_buffer_extents_too_large", value: -6)
!803 = !DIEnumerator(name: "halide_error_code_constraints_make_required_region_smaller", value: -7)
!804 = !DIEnumerator(name: "halide_error_code_constraint_violated", value: -8)
!805 = !DIEnumerator(name: "halide_error_code_param_too_small", value: -9)
!806 = !DIEnumerator(name: "halide_error_code_param_too_large", value: -10)
!807 = !DIEnumerator(name: "halide_error_code_out_of_memory", value: -11)
!808 = !DIEnumerator(name: "halide_error_code_buffer_argument_is_null", value: -12)
!809 = !DIEnumerator(name: "halide_error_code_debug_to_file_failed", value: -13)
!810 = !DIEnumerator(name: "halide_error_code_copy_to_host_failed", value: -14)
!811 = !DIEnumerator(name: "halide_error_code_copy_to_device_failed", value: -15)
!812 = !DIEnumerator(name: "halide_error_code_device_malloc_failed", value: -16)
!813 = !DIEnumerator(name: "halide_error_code_device_sync_failed", value: -17)
!814 = !DIEnumerator(name: "halide_error_code_device_free_failed", value: -18)
!815 = !DIEnumerator(name: "halide_error_code_no_device_interface", value: -19)
!816 = !DIEnumerator(name: "halide_error_code_matlab_init_failed", value: -20)
!817 = !DIEnumerator(name: "halide_error_code_matlab_bad_param_type", value: -21)
!818 = !DIEnumerator(name: "halide_error_code_internal_error", value: -22)
!819 = !{!794, !162}
!820 = !{!821, !828, !832, !839, !846, !851, !862, !871, !882, !890, !896, !907, !916, !922, !930, !938, !944, !950, !956, !959, !965, !973, !1026, !1029, !1033, !1037, !1041, !1045}
!821 = !DISubprogram(name: "default_error_handler", linkageName: "_ZN6Halide7Runtime8Internal21default_error_handlerEPvPKc", scope: !35, file: !792, line: 6, type: !44, isLocal: false, isDefinition: true, scopeLine: 6, flags: DIFlagPrototyped, isOptimized: true, function: void (i8*, i8*)* @_ZN6Halide7Runtime8Internal21default_error_handlerEPvPKc, variables: !822)
!822 = !{!823, !824, !825, !827}
!823 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !821, file: !792, line: 6, type: !18)
!824 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "msg", arg: 2, scope: !821, file: !792, line: 6, type: !46)
!825 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !821, file: !792, line: 7, type: !826)
!826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 32768, align: 8, elements: !477)
!827 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dst", scope: !821, file: !792, line: 8, type: !162)
!828 = !DISubprogram(name: "halide_error", scope: !792, file: !792, line: 26, type: !44, isLocal: false, isDefinition: true, scopeLine: 26, flags: DIFlagPrototyped, isOptimized: true, function: void (i8*, i8*)* @halide_error, variables: !829)
!829 = !{!830, !831}
!830 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !828, file: !792, line: 26, type: !18)
!831 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "msg", arg: 2, scope: !828, file: !792, line: 26, type: !46)
!832 = !DISubprogram(name: "halide_set_error_handler", scope: !792, file: !792, line: 30, type: !833, isLocal: false, isDefinition: true, scopeLine: 30, flags: DIFlagPrototyped, isOptimized: true, function: void (i8*, i8*)* (void (i8*, i8*)*)* @halide_set_error_handler, variables: !836)
!833 = !DISubroutineType(types: !834)
!834 = !{!835, !835}
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 32, align: 32)
!836 = !{!837, !838}
!837 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "handler", arg: 1, scope: !832, file: !792, line: 30, type: !835)
!838 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !832, file: !792, line: 31, type: !835)
!839 = !DISubprogram(name: "halide_error_bounds_inference_call_failed", scope: !792, file: !792, line: 36, type: !840, isLocal: false, isDefinition: true, scopeLine: 36, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, i32)* @halide_error_bounds_inference_call_failed, variables: !842)
!840 = !DISubroutineType(types: !841)
!841 = !{!17, !18, !46, !17}
!842 = !{!843, !844, !845}
!843 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !839, file: !792, line: 36, type: !18)
!844 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "extern_stage_name", arg: 2, scope: !839, file: !792, line: 36, type: !46)
!845 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 3, scope: !839, file: !792, line: 36, type: !17)
!846 = !DISubprogram(name: "halide_error_extern_stage_failed", scope: !792, file: !792, line: 43, type: !840, isLocal: false, isDefinition: true, scopeLine: 43, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, i32)* @halide_error_extern_stage_failed, variables: !847)
!847 = !{!848, !849, !850}
!848 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !846, file: !792, line: 43, type: !18)
!849 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "extern_stage_name", arg: 2, scope: !846, file: !792, line: 43, type: !46)
!850 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 3, scope: !846, file: !792, line: 43, type: !17)
!851 = !DISubprogram(name: "halide_error_explicit_bounds_too_small", scope: !792, file: !792, line: 50, type: !852, isLocal: false, isDefinition: true, scopeLine: 51, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, i8*, i32, i32, i32, i32)* @halide_error_explicit_bounds_too_small, variables: !854)
!852 = !DISubroutineType(types: !853)
!853 = !{!17, !18, !46, !46, !17, !17, !17, !17}
!854 = !{!855, !856, !857, !858, !859, !860, !861}
!855 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !851, file: !792, line: 50, type: !18)
!856 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "func_name", arg: 2, scope: !851, file: !792, line: 50, type: !46)
!857 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "var_name", arg: 3, scope: !851, file: !792, line: 50, type: !46)
!858 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "min_bound", arg: 4, scope: !851, file: !792, line: 51, type: !17)
!859 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "max_bound", arg: 5, scope: !851, file: !792, line: 51, type: !17)
!860 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "min_required", arg: 6, scope: !851, file: !792, line: 51, type: !17)
!861 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "max_required", arg: 7, scope: !851, file: !792, line: 51, type: !17)
!862 = !DISubprogram(name: "halide_error_bad_elem_size", scope: !792, file: !792, line: 60, type: !863, isLocal: false, isDefinition: true, scopeLine: 61, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, i8*, i32, i32)* @halide_error_bad_elem_size, variables: !865)
!863 = !DISubroutineType(types: !864)
!864 = !{!17, !18, !46, !46, !17, !17}
!865 = !{!866, !867, !868, !869, !870}
!866 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !862, file: !792, line: 60, type: !18)
!867 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "func_name", arg: 2, scope: !862, file: !792, line: 60, type: !46)
!868 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type_name", arg: 3, scope: !862, file: !792, line: 61, type: !46)
!869 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "elem_size_given", arg: 4, scope: !862, file: !792, line: 61, type: !17)
!870 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "correct_elem_size", arg: 5, scope: !862, file: !792, line: 61, type: !17)
!871 = !DISubprogram(name: "halide_error_access_out_of_bounds", scope: !792, file: !792, line: 69, type: !872, isLocal: false, isDefinition: true, scopeLine: 71, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, i32, i32, i32, i32, i32)* @halide_error_access_out_of_bounds, variables: !874)
!872 = !DISubroutineType(types: !873)
!873 = !{!17, !18, !46, !17, !17, !17, !17, !17}
!874 = !{!875, !876, !877, !878, !879, !880, !881}
!875 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !871, file: !792, line: 69, type: !18)
!876 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "func_name", arg: 2, scope: !871, file: !792, line: 69, type: !46)
!877 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dimension", arg: 3, scope: !871, file: !792, line: 70, type: !17)
!878 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "min_touched", arg: 4, scope: !871, file: !792, line: 70, type: !17)
!879 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "max_touched", arg: 5, scope: !871, file: !792, line: 70, type: !17)
!880 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "min_valid", arg: 6, scope: !871, file: !792, line: 71, type: !17)
!881 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "max_valid", arg: 7, scope: !871, file: !792, line: 71, type: !17)
!882 = !DISubprogram(name: "halide_error_buffer_allocation_too_large", scope: !792, file: !792, line: 86, type: !883, isLocal: false, isDefinition: true, scopeLine: 86, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, i64, i64)* @halide_error_buffer_allocation_too_large, variables: !885)
!883 = !DISubroutineType(types: !884)
!884 = !{!17, !18, !46, !10, !10}
!885 = !{!886, !887, !888, !889}
!886 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !882, file: !792, line: 86, type: !18)
!887 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buffer_name", arg: 2, scope: !882, file: !792, line: 86, type: !46)
!888 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "allocation_size", arg: 3, scope: !882, file: !792, line: 86, type: !10)
!889 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "max_size", arg: 4, scope: !882, file: !792, line: 86, type: !10)
!890 = !DISubprogram(name: "halide_error_buffer_extents_too_large", scope: !792, file: !792, line: 94, type: !883, isLocal: false, isDefinition: true, scopeLine: 94, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, i64, i64)* @halide_error_buffer_extents_too_large, variables: !891)
!891 = !{!892, !893, !894, !895}
!892 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !890, file: !792, line: 94, type: !18)
!893 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buffer_name", arg: 2, scope: !890, file: !792, line: 94, type: !46)
!894 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "actual_size", arg: 3, scope: !890, file: !792, line: 94, type: !10)
!895 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "max_size", arg: 4, scope: !890, file: !792, line: 94, type: !10)
!896 = !DISubprogram(name: "halide_error_constraints_make_required_region_smaller", scope: !792, file: !792, line: 102, type: !872, isLocal: false, isDefinition: true, scopeLine: 105, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, i32, i32, i32, i32, i32)* @halide_error_constraints_make_required_region_smaller, variables: !897)
!897 = !{!898, !899, !900, !901, !902, !903, !904, !905, !906}
!898 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !896, file: !792, line: 102, type: !18)
!899 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buffer_name", arg: 2, scope: !896, file: !792, line: 102, type: !46)
!900 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dimension", arg: 3, scope: !896, file: !792, line: 103, type: !17)
!901 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "constrained_min", arg: 4, scope: !896, file: !792, line: 104, type: !17)
!902 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "constrained_extent", arg: 5, scope: !896, file: !792, line: 104, type: !17)
!903 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "required_min", arg: 6, scope: !896, file: !792, line: 105, type: !17)
!904 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "required_extent", arg: 7, scope: !896, file: !792, line: 105, type: !17)
!905 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "required_max", scope: !896, file: !792, line: 106, type: !17)
!906 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "constrained_max", scope: !896, file: !792, line: 107, type: !17)
!907 = !DISubprogram(name: "halide_error_constraint_violated", scope: !792, file: !792, line: 116, type: !908, isLocal: false, isDefinition: true, scopeLine: 117, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, i32, i8*, i32)* @halide_error_constraint_violated, variables: !910)
!908 = !DISubroutineType(types: !909)
!909 = !{!17, !18, !46, !17, !46, !17}
!910 = !{!911, !912, !913, !914, !915}
!911 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !907, file: !792, line: 116, type: !18)
!912 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "var", arg: 2, scope: !907, file: !792, line: 116, type: !46)
!913 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val", arg: 3, scope: !907, file: !792, line: 116, type: !17)
!914 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "constrained_var", arg: 4, scope: !907, file: !792, line: 117, type: !46)
!915 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "constrained_val", arg: 5, scope: !907, file: !792, line: 117, type: !17)
!916 = !DISubprogram(name: "halide_error_param_too_small_i64", scope: !792, file: !792, line: 124, type: !883, isLocal: false, isDefinition: true, scopeLine: 125, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, i64, i64)* @halide_error_param_too_small_i64, variables: !917)
!917 = !{!918, !919, !920, !921}
!918 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !916, file: !792, line: 124, type: !18)
!919 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "param_name", arg: 2, scope: !916, file: !792, line: 124, type: !46)
!920 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val", arg: 3, scope: !916, file: !792, line: 125, type: !10)
!921 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "min_val", arg: 4, scope: !916, file: !792, line: 125, type: !10)
!922 = !DISubprogram(name: "halide_error_param_too_small_u64", scope: !792, file: !792, line: 133, type: !923, isLocal: false, isDefinition: true, scopeLine: 134, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, i64, i64)* @halide_error_param_too_small_u64, variables: !925)
!923 = !DISubroutineType(types: !924)
!924 = !{!17, !18, !46, !91, !91}
!925 = !{!926, !927, !928, !929}
!926 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !922, file: !792, line: 133, type: !18)
!927 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "param_name", arg: 2, scope: !922, file: !792, line: 133, type: !46)
!928 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val", arg: 3, scope: !922, file: !792, line: 134, type: !91)
!929 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "min_val", arg: 4, scope: !922, file: !792, line: 134, type: !91)
!930 = !DISubprogram(name: "halide_error_param_too_small_f64", scope: !792, file: !792, line: 142, type: !931, isLocal: false, isDefinition: true, scopeLine: 143, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, double, double)* @halide_error_param_too_small_f64, variables: !933)
!931 = !DISubroutineType(types: !932)
!932 = !{!17, !18, !46, !281, !281}
!933 = !{!934, !935, !936, !937}
!934 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !930, file: !792, line: 142, type: !18)
!935 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "param_name", arg: 2, scope: !930, file: !792, line: 142, type: !46)
!936 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val", arg: 3, scope: !930, file: !792, line: 143, type: !281)
!937 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "min_val", arg: 4, scope: !930, file: !792, line: 143, type: !281)
!938 = !DISubprogram(name: "halide_error_param_too_large_i64", scope: !792, file: !792, line: 151, type: !883, isLocal: false, isDefinition: true, scopeLine: 152, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, i64, i64)* @halide_error_param_too_large_i64, variables: !939)
!939 = !{!940, !941, !942, !943}
!940 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !938, file: !792, line: 151, type: !18)
!941 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "param_name", arg: 2, scope: !938, file: !792, line: 151, type: !46)
!942 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val", arg: 3, scope: !938, file: !792, line: 152, type: !10)
!943 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "max_val", arg: 4, scope: !938, file: !792, line: 152, type: !10)
!944 = !DISubprogram(name: "halide_error_param_too_large_u64", scope: !792, file: !792, line: 160, type: !923, isLocal: false, isDefinition: true, scopeLine: 161, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, i64, i64)* @halide_error_param_too_large_u64, variables: !945)
!945 = !{!946, !947, !948, !949}
!946 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !944, file: !792, line: 160, type: !18)
!947 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "param_name", arg: 2, scope: !944, file: !792, line: 160, type: !46)
!948 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val", arg: 3, scope: !944, file: !792, line: 161, type: !91)
!949 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "max_val", arg: 4, scope: !944, file: !792, line: 161, type: !91)
!950 = !DISubprogram(name: "halide_error_param_too_large_f64", scope: !792, file: !792, line: 169, type: !931, isLocal: false, isDefinition: true, scopeLine: 170, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, double, double)* @halide_error_param_too_large_f64, variables: !951)
!951 = !{!952, !953, !954, !955}
!952 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !950, file: !792, line: 169, type: !18)
!953 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "param_name", arg: 2, scope: !950, file: !792, line: 169, type: !46)
!954 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val", arg: 3, scope: !950, file: !792, line: 170, type: !281)
!955 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "max_val", arg: 4, scope: !950, file: !792, line: 170, type: !281)
!956 = !DISubprogram(name: "halide_error_out_of_memory", scope: !792, file: !792, line: 178, type: !15, isLocal: false, isDefinition: true, scopeLine: 178, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*)* @halide_error_out_of_memory, variables: !957)
!957 = !{!958}
!958 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !956, file: !792, line: 178, type: !18)
!959 = !DISubprogram(name: "halide_error_buffer_argument_is_null", scope: !792, file: !792, line: 184, type: !960, isLocal: false, isDefinition: true, scopeLine: 184, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*)* @halide_error_buffer_argument_is_null, variables: !962)
!960 = !DISubroutineType(types: !961)
!961 = !{!17, !18, !46}
!962 = !{!963, !964}
!963 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !959, file: !792, line: 184, type: !18)
!964 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buffer_name", arg: 2, scope: !959, file: !792, line: 184, type: !46)
!965 = !DISubprogram(name: "halide_error_debug_to_file_failed", scope: !792, file: !792, line: 190, type: !966, isLocal: false, isDefinition: true, scopeLine: 191, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, i8*, i32)* @halide_error_debug_to_file_failed, variables: !968)
!966 = !DISubroutineType(types: !967)
!967 = !{!17, !18, !46, !46, !17}
!968 = !{!969, !970, !971, !972}
!969 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !965, file: !792, line: 190, type: !18)
!970 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "func", arg: 2, scope: !965, file: !792, line: 190, type: !46)
!971 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "filename", arg: 3, scope: !965, file: !792, line: 191, type: !46)
!972 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "error_code", arg: 4, scope: !965, file: !792, line: 191, type: !17)
!973 = !DISubprogram(name: "Printer", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EEC2EPv", scope: !974, file: !11, line: 135, type: !981, isLocal: true, isDefinition: true, scopeLine: 135, flags: DIFlagPrototyped, isOptimized: true, declaration: !980, variables: !1022)
!974 = !DICompositeType(tag: DW_TAG_class_type, name: "Printer<1, 1024>", scope: !38, file: !11, line: 130, size: 128, align: 32, elements: !975, templateParams: !1020)
!975 = !{!976, !977, !978, !979, !980, !984, !988, !991, !994, !997, !1000, !1003, !1006, !1009, !1012, !1017}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !974, file: !11, line: 132, baseType: !162, size: 32, align: 32, flags: DIFlagPublic)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !974, file: !11, line: 132, baseType: !162, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !974, file: !11, line: 132, baseType: !162, size: 32, align: 32, offset: 64, flags: DIFlagPublic)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "user_context", scope: !974, file: !11, line: 133, baseType: !18, size: 32, align: 32, offset: 96, flags: DIFlagPublic)
!980 = !DISubprogram(name: "Printer", scope: !974, file: !11, line: 135, type: !981, isLocal: false, isDefinition: false, scopeLine: 135, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!981 = !DISubroutineType(types: !982)
!982 = !{null, !983, !18}
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 32, align: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!984 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EElsEPKc", scope: !974, file: !11, line: 142, type: !985, isLocal: false, isDefinition: false, scopeLine: 142, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!985 = !DISubroutineType(types: !986)
!986 = !{!987, !983, !46}
!987 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !974)
!988 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EElsEx", scope: !974, file: !11, line: 147, type: !989, isLocal: false, isDefinition: false, scopeLine: 147, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!989 = !DISubroutineType(types: !990)
!990 = !{!987, !983, !10}
!991 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EElsEi", scope: !974, file: !11, line: 152, type: !992, isLocal: false, isDefinition: false, scopeLine: 152, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!992 = !DISubroutineType(types: !993)
!993 = !{!987, !983, !292}
!994 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EElsEy", scope: !974, file: !11, line: 157, type: !995, isLocal: false, isDefinition: false, scopeLine: 157, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!995 = !DISubroutineType(types: !996)
!996 = !{!987, !983, !91}
!997 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EElsEj", scope: !974, file: !11, line: 162, type: !998, isLocal: false, isDefinition: false, scopeLine: 162, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!998 = !DISubroutineType(types: !999)
!999 = !{!987, !983, !269}
!1000 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EElsEd", scope: !974, file: !11, line: 167, type: !1001, isLocal: false, isDefinition: false, scopeLine: 167, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!1001 = !DISubroutineType(types: !1002)
!1002 = !{!987, !983, !281}
!1003 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EElsEf", scope: !974, file: !11, line: 172, type: !1004, isLocal: false, isDefinition: false, scopeLine: 172, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!987, !983, !268}
!1006 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EElsEPKv", scope: !974, file: !11, line: 177, type: !1007, isLocal: false, isDefinition: false, scopeLine: 177, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!987, !983, !523}
!1009 = !DISubprogram(name: "str", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EE3strEv", scope: !974, file: !11, line: 183, type: !1010, isLocal: false, isDefinition: false, scopeLine: 183, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{!46, !983}
!1012 = !DISubprogram(name: "size", linkageName: "_ZNK6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EE4sizeEv", scope: !974, file: !11, line: 188, type: !1013, isLocal: false, isDefinition: false, scopeLine: 188, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!91, !1015}
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 32, align: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !974)
!1017 = !DISubprogram(name: "~Printer", scope: !974, file: !11, line: 192, type: !1018, isLocal: false, isDefinition: false, scopeLine: 192, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{null, !983}
!1020 = !{!1021, !538}
!1021 = !DITemplateValueParameter(name: "type", type: !17, value: i32 1)
!1022 = !{!1023, !1025}
!1023 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !973, type: !1024, flags: DIFlagArtificial | DIFlagObjectPointer)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 32, align: 32)
!1025 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 2, scope: !973, file: !11, line: 135, type: !18)
!1026 = !DISubprogram(name: "~Printer", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EED2Ev", scope: !974, file: !11, line: 192, type: !1018, isLocal: true, isDefinition: true, scopeLine: 192, flags: DIFlagPrototyped, isOptimized: true, declaration: !1017, variables: !1027)
!1027 = !{!1028}
!1028 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !1026, type: !1024, flags: DIFlagArtificial | DIFlagObjectPointer)
!1029 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EElsEPKc", scope: !974, file: !11, line: 142, type: !985, isLocal: true, isDefinition: true, scopeLine: 142, flags: DIFlagPrototyped, isOptimized: true, declaration: !984, variables: !1030)
!1030 = !{!1031, !1032}
!1031 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !1029, type: !1024, flags: DIFlagArtificial | DIFlagObjectPointer)
!1032 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !1029, file: !11, line: 142, type: !46)
!1033 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EElsEi", scope: !974, file: !11, line: 152, type: !992, isLocal: true, isDefinition: true, scopeLine: 152, flags: DIFlagPrototyped, isOptimized: true, declaration: !991, variables: !1034)
!1034 = !{!1035, !1036}
!1035 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !1033, type: !1024, flags: DIFlagArtificial | DIFlagObjectPointer)
!1036 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !1033, file: !11, line: 152, type: !292)
!1037 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EElsEx", scope: !974, file: !11, line: 147, type: !989, isLocal: true, isDefinition: true, scopeLine: 147, flags: DIFlagPrototyped, isOptimized: true, declaration: !988, variables: !1038)
!1038 = !{!1039, !1040}
!1039 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !1037, type: !1024, flags: DIFlagArtificial | DIFlagObjectPointer)
!1040 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !1037, file: !11, line: 147, type: !10)
!1041 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EElsEy", scope: !974, file: !11, line: 157, type: !995, isLocal: true, isDefinition: true, scopeLine: 157, flags: DIFlagPrototyped, isOptimized: true, declaration: !994, variables: !1042)
!1042 = !{!1043, !1044}
!1043 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !1041, type: !1024, flags: DIFlagArtificial | DIFlagObjectPointer)
!1044 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !1041, file: !11, line: 157, type: !91)
!1045 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EElsEd", scope: !974, file: !11, line: 167, type: !1001, isLocal: true, isDefinition: true, scopeLine: 167, flags: DIFlagPrototyped, isOptimized: true, declaration: !1000, variables: !1046)
!1046 = !{!1047, !1048}
!1047 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !1045, type: !1024, flags: DIFlagArtificial | DIFlagObjectPointer)
!1048 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !1045, file: !11, line: 167, type: !281)
!1049 = !{!1050}
!1050 = !DIGlobalVariable(name: "halide_error_handler", linkageName: "_ZN6Halide7Runtime8Internal20halide_error_handlerE", scope: !35, file: !792, line: 20, type: !835, isLocal: false, isDefinition: true, variable: void (i8*, i8*)** @_ZN6Halide7Runtime8Internal20halide_error_handlerE)
!1051 = !{!34, !1052}
!1052 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !791, entity: !35, line: 243)
!1053 = !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1054, producer: "clang version 3.7.0 (trunk 240337) (llvm/trunk 240338)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !2, subprograms: !1055, globals: !1064, imports: !1066)
!1054 = !DIFile(filename: "src/runtime/posix_print.cpp", directory: "/Users/aam/halide/halide-aam1")
!1055 = !{!1056, !1060}
!1056 = !DISubprogram(name: "halide_print", scope: !1054, file: !1054, line: 13, type: !44, isLocal: false, isDefinition: true, scopeLine: 13, flags: DIFlagPrototyped, isOptimized: true, function: void (i8*, i8*)* @halide_print, variables: !1057)
!1057 = !{!1058, !1059}
!1058 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !1056, file: !1054, line: 13, type: !18)
!1059 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "msg", arg: 2, scope: !1056, file: !1054, line: 13, type: !46)
!1060 = !DISubprogram(name: "halide_set_custom_print", scope: !1054, file: !1054, line: 17, type: !833, isLocal: false, isDefinition: true, scopeLine: 18, flags: DIFlagPrototyped, isOptimized: true, function: void (i8*, i8*)* (void (i8*, i8*)*)* @halide_set_custom_print, variables: !1061)
!1061 = !{!1062, !1063}
!1062 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "print", arg: 1, scope: !1060, file: !1054, line: 17, type: !835)
!1063 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1060, file: !1054, line: 19, type: !835)
!1064 = !{!1065}
!1065 = !DIGlobalVariable(name: "halide_custom_print", linkageName: "_ZN6Halide7Runtime8Internal19halide_custom_printE", scope: !35, file: !1054, line: 7, type: !835, isLocal: false, isDefinition: true, variable: void (i8*, i8*)** @_ZN6Halide7Runtime8Internal19halide_custom_printE)
!1066 = !{!34, !1067}
!1067 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1053, entity: !35, line: 243)
!1068 = !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1069, producer: "clang version 3.7.0 (trunk 240337) (llvm/trunk 240338)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !1070, subprograms: !1130, globals: !1308, imports: !1322)
!1069 = !DIFile(filename: "src/runtime/cache.cpp", directory: "/Users/aam/halide/halide-aam1")
!1070 = !{!1071, !102, !1086, !121, !1119, !1089}
!1071 = !DICompositeType(tag: DW_TAG_structure_type, name: "buffer_t", file: !122, line: 469, size: 576, align: 64, elements: !1072, identifier: "_ZTS8buffer_t")
!1072 = !{!1073, !1074, !1075, !1079, !1080, !1081, !1082, !1083, !1084}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !"_ZTS8buffer_t", file: !122, line: 471, baseType: !91, size: 64, align: 64)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !"_ZTS8buffer_t", file: !122, line: 476, baseType: !102, size: 32, align: 32, offset: 64)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !"_ZTS8buffer_t", file: !122, line: 479, baseType: !1076, size: 128, align: 32, offset: 96)
!1076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !292, size: 128, align: 32, elements: !1077)
!1077 = !{!1078}
!1078 = !DISubrange(count: 4)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !"_ZTS8buffer_t", file: !122, line: 491, baseType: !1076, size: 128, align: 32, offset: 224)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !"_ZTS8buffer_t", file: !122, line: 496, baseType: !1076, size: 128, align: 32, offset: 352)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "elem_size", scope: !"_ZTS8buffer_t", file: !122, line: 500, baseType: !292, size: 32, align: 32, offset: 480)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "host_dirty", scope: !"_ZTS8buffer_t", file: !122, line: 505, baseType: !31, size: 8, align: 8, offset: 512)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "dev_dirty", scope: !"_ZTS8buffer_t", file: !122, line: 510, baseType: !31, size: 8, align: 8, offset: 520)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "_padding", scope: !"_ZTS8buffer_t", file: !122, line: 515, baseType: !1085, size: 48, align: 8, offset: 528)
!1085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 48, align: 8, elements: !119)
!1086 = !DICompositeType(tag: DW_TAG_structure_type, name: "CacheEntry", scope: !35, file: !1069, line: 108, size: 1408, align: 64, elements: !1087, identifier: "_ZTSN6Halide7Runtime8Internal10CacheEntryE")
!1087 = !{!1088, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1098, !1102, !1112, !1115}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !"_ZTSN6Halide7Runtime8Internal10CacheEntryE", file: !1069, line: 109, baseType: !1089, size: 32, align: 32)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTSN6Halide7Runtime8Internal10CacheEntryE", size: 32, align: 32)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "more_recent", scope: !"_ZTSN6Halide7Runtime8Internal10CacheEntryE", file: !1069, line: 110, baseType: !1089, size: 32, align: 32, offset: 32)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "less_recent", scope: !"_ZTSN6Halide7Runtime8Internal10CacheEntryE", file: !1069, line: 111, baseType: !1089, size: 32, align: 32, offset: 64)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !"_ZTSN6Halide7Runtime8Internal10CacheEntryE", file: !1069, line: 112, baseType: !471, size: 32, align: 32, offset: 96)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !"_ZTSN6Halide7Runtime8Internal10CacheEntryE", file: !1069, line: 113, baseType: !102, size: 32, align: 32, offset: 128)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !"_ZTSN6Halide7Runtime8Internal10CacheEntryE", file: !1069, line: 114, baseType: !269, size: 32, align: 32, offset: 160)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_count", scope: !"_ZTSN6Halide7Runtime8Internal10CacheEntryE", file: !1069, line: 115, baseType: !269, size: 32, align: 32, offset: 192)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "computed_bounds", scope: !"_ZTSN6Halide7Runtime8Internal10CacheEntryE", file: !1069, line: 116, baseType: !1097, size: 576, align: 64, offset: 256)
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "buffer_t", file: !122, line: 516, baseType: !"_ZTS8buffer_t")
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !"_ZTSN6Halide7Runtime8Internal10CacheEntryE", file: !1069, line: 117, baseType: !1099, size: 576, align: 64, offset: 832)
!1099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1097, size: 576, align: 64, elements: !1100)
!1100 = !{!1101}
!1101 = !DISubrange(count: 1)
!1102 = !DISubprogram(name: "init", linkageName: "_ZN6Halide7Runtime8Internal10CacheEntry4initEPKhjjRK8buffer_tiPPS5_", scope: !"_ZTSN6Halide7Runtime8Internal10CacheEntryE", file: !1069, line: 120, type: !1103, isLocal: false, isDefinition: false, scopeLine: 120, flags: DIFlagPrototyped, isOptimized: true)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{null, !1105, !1106, !471, !269, !1108, !292, !1110}
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTSN6Halide7Runtime8Internal10CacheEntryE", size: 32, align: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 32, align: 32)
!1107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1108 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1109)
!1109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1097)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 32, align: 32)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 32, align: 32)
!1112 = !DISubprogram(name: "destroy", linkageName: "_ZN6Halide7Runtime8Internal10CacheEntry7destroyEv", scope: !"_ZTSN6Halide7Runtime8Internal10CacheEntryE", file: !1069, line: 123, type: !1113, isLocal: false, isDefinition: false, scopeLine: 123, flags: DIFlagPrototyped, isOptimized: true)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{null, !1105}
!1115 = !DISubprogram(name: "buffer", linkageName: "_ZN6Halide7Runtime8Internal10CacheEntry6bufferEi", scope: !"_ZTSN6Halide7Runtime8Internal10CacheEntryE", file: !1069, line: 124, type: !1116, isLocal: false, isDefinition: false, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: true)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{!1118, !1105, !292}
!1118 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1097)
!1119 = !DICompositeType(tag: DW_TAG_structure_type, name: "ScopedMutexLock", scope: !35, file: !1120, line: 9, size: 32, align: 32, elements: !1121, identifier: "_ZTSN6Halide7Runtime8Internal15ScopedMutexLockE")
!1120 = !DIFile(filename: "src/runtime/scoped_mutex_lock.h", directory: "/Users/aam/halide/halide-aam1")
!1121 = !{!1122, !1123, !1127}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !"_ZTSN6Halide7Runtime8Internal15ScopedMutexLockE", file: !1120, line: 10, baseType: !170, size: 32, align: 32)
!1123 = !DISubprogram(name: "ScopedMutexLock", scope: !"_ZTSN6Halide7Runtime8Internal15ScopedMutexLockE", file: !1120, line: 12, type: !1124, isLocal: false, isDefinition: false, scopeLine: 12, flags: DIFlagPrototyped, isOptimized: true)
!1124 = !DISubroutineType(types: !1125)
!1125 = !{null, !1126, !170}
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTSN6Halide7Runtime8Internal15ScopedMutexLockE", size: 32, align: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1127 = !DISubprogram(name: "~ScopedMutexLock", scope: !"_ZTSN6Halide7Runtime8Internal15ScopedMutexLockE", file: !1120, line: 16, type: !1128, isLocal: false, isDefinition: false, scopeLine: 16, flags: DIFlagPrototyped, isOptimized: true)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{null, !1126}
!1130 = !{!1131, !1142, !1152, !1160, !1167, !1175, !1191, !1196, !1201, !1210, !1219, !1225, !1256, !1289, !1298, !1300, !1305}
!1131 = !DISubprogram(name: "full_extent", linkageName: "_ZN6Halide7Runtime8Internal11full_extentERK8buffer_t", scope: !35, file: !1069, line: 60, type: !1132, isLocal: false, isDefinition: true, scopeLine: 60, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.buffer_t*)* @_ZN6Halide7Runtime8Internal11full_extentERK8buffer_t, variables: !1134)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!471, !1108}
!1134 = !{!1135, !1136, !1137, !1139}
!1135 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 1, scope: !1131, file: !1069, line: 60, type: !1108)
!1136 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1131, file: !1069, line: 61, type: !471)
!1137 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1138, file: !1069, line: 62, type: !17)
!1138 = distinct !DILexicalBlock(scope: !1131, file: !1069, line: 62, column: 5)
!1139 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stride", scope: !1140, file: !1069, line: 63, type: !292)
!1140 = distinct !DILexicalBlock(scope: !1141, file: !1069, line: 62, column: 33)
!1141 = distinct !DILexicalBlock(scope: !1138, file: !1069, line: 62, column: 5)
!1142 = !DISubprogram(name: "copy_from_to", linkageName: "_ZN6Halide7Runtime8Internal12copy_from_toEPvRK8buffer_tRS3_", scope: !35, file: !1069, line: 72, type: !1143, isLocal: false, isDefinition: true, scopeLine: 72, flags: DIFlagPrototyped, isOptimized: true, function: void (i8*, %struct.buffer_t*, %struct.buffer_t*)* @_ZN6Halide7Runtime8Internal12copy_from_toEPvRK8buffer_tRS3_, variables: !1145)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{null, !18, !1108, !1118}
!1145 = !{!1146, !1147, !1148, !1149, !1150}
!1146 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !1142, file: !1069, line: 72, type: !18)
!1147 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "from", arg: 2, scope: !1142, file: !1069, line: 72, type: !1108)
!1148 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "to", arg: 3, scope: !1142, file: !1069, line: 72, type: !1118)
!1149 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer_size", scope: !1142, file: !1069, line: 73, type: !471)
!1150 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1151, file: !1069, line: 75, type: !17)
!1151 = distinct !DILexicalBlock(scope: !1142, file: !1069, line: 75, column: 5)
!1152 = !DISubprogram(name: "copy_of_buffer", linkageName: "_ZN6Halide7Runtime8Internal14copy_of_bufferEPvRK8buffer_t", scope: !35, file: !1069, line: 82, type: !1153, isLocal: false, isDefinition: true, scopeLine: 82, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.buffer_t*, i8*, %struct.buffer_t*)* @_ZN6Halide7Runtime8Internal14copy_of_bufferEPvRK8buffer_t, variables: !1155)
!1153 = !DISubroutineType(types: !1154)
!1154 = !{!1097, !18, !1108}
!1155 = !{!1156, !1157, !1158, !1159}
!1156 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !1152, file: !1069, line: 82, type: !18)
!1157 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 2, scope: !1152, file: !1069, line: 82, type: !1108)
!1158 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1152, file: !1069, line: 83, type: !1097)
!1159 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer_size", scope: !1152, file: !1069, line: 84, type: !471)
!1160 = !DISubprogram(name: "keys_equal", linkageName: "_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_j", scope: !35, file: !1069, line: 91, type: !1161, isLocal: false, isDefinition: true, scopeLine: 91, flags: DIFlagPrototyped, isOptimized: true, function: i1 (i8*, i8*, i32)* @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_j, variables: !1163)
!1161 = !DISubroutineType(types: !1162)
!1162 = !{!31, !1106, !1106, !471}
!1163 = !{!1164, !1165, !1166}
!1164 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key1", arg: 1, scope: !1160, file: !1069, line: 91, type: !1106)
!1165 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key2", arg: 2, scope: !1160, file: !1069, line: 91, type: !1106)
!1166 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key_size", arg: 3, scope: !1160, file: !1069, line: 91, type: !471)
!1167 = !DISubprogram(name: "bounds_equal", linkageName: "_ZN6Halide7Runtime8Internal12bounds_equalERK8buffer_tS4_", scope: !35, file: !1069, line: 95, type: !1168, isLocal: false, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: true, function: i1 (%struct.buffer_t*, %struct.buffer_t*)* @_ZN6Halide7Runtime8Internal12bounds_equalERK8buffer_tS4_, variables: !1170)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{!31, !1108, !1108}
!1170 = !{!1171, !1172, !1173}
!1171 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf1", arg: 1, scope: !1167, file: !1069, line: 95, type: !1108)
!1172 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf2", arg: 2, scope: !1167, file: !1069, line: 95, type: !1108)
!1173 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1174, file: !1069, line: 98, type: !471)
!1174 = distinct !DILexicalBlock(scope: !1167, file: !1069, line: 98, column: 5)
!1175 = !DISubprogram(name: "init", linkageName: "_ZN6Halide7Runtime8Internal10CacheEntry4initEPKhjjRK8buffer_tiPPS5_", scope: !"_ZTSN6Halide7Runtime8Internal10CacheEntryE", file: !1069, line: 128, type: !1103, isLocal: false, isDefinition: true, scopeLine: 130, flags: DIFlagPrototyped, isOptimized: true, function: void (%"struct.Halide::Runtime::Internal::CacheEntry"*, i8*, i32, i32, %struct.buffer_t*, i32, %struct.buffer_t**)* @_ZN6Halide7Runtime8Internal10CacheEntry4initEPKhjjRK8buffer_tiPPS5_, declaration: !1102, variables: !1176)
!1176 = !{!1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1186, !1188}
!1177 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !1175, type: !1089, flags: DIFlagArtificial | DIFlagObjectPointer)
!1178 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cache_key", arg: 2, scope: !1175, file: !1069, line: 128, type: !1106)
!1179 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cache_key_size", arg: 3, scope: !1175, file: !1069, line: 128, type: !471)
!1180 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key_hash", arg: 4, scope: !1175, file: !1069, line: 129, type: !269)
!1181 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "computed_buf", arg: 5, scope: !1175, file: !1069, line: 129, type: !1108)
!1182 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tuples", arg: 6, scope: !1175, file: !1069, line: 130, type: !292)
!1183 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tuple_buffers", arg: 7, scope: !1175, file: !1069, line: 130, type: !1110)
!1184 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1185, file: !1069, line: 143, type: !471)
!1185 = distinct !DILexicalBlock(scope: !1175, file: !1069, line: 143, column: 5)
!1186 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1187, file: !1069, line: 146, type: !292)
!1187 = distinct !DILexicalBlock(scope: !1175, file: !1069, line: 146, column: 5)
!1188 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !1189, file: !1069, line: 147, type: !1111)
!1189 = distinct !DILexicalBlock(scope: !1190, file: !1069, line: 146, column: 47)
!1190 = distinct !DILexicalBlock(scope: !1187, file: !1069, line: 146, column: 5)
!1191 = !DISubprogram(name: "destroy", linkageName: "_ZN6Halide7Runtime8Internal10CacheEntry7destroyEv", scope: !"_ZTSN6Halide7Runtime8Internal10CacheEntryE", file: !1069, line: 152, type: !1113, isLocal: false, isDefinition: true, scopeLine: 152, flags: DIFlagPrototyped, isOptimized: true, function: void (%"struct.Halide::Runtime::Internal::CacheEntry"*)* @_ZN6Halide7Runtime8Internal10CacheEntry7destroyEv, declaration: !1112, variables: !1192)
!1192 = !{!1193, !1194}
!1193 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !1191, type: !1089, flags: DIFlagArtificial | DIFlagObjectPointer)
!1194 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1195, file: !1069, line: 154, type: !292)
!1195 = distinct !DILexicalBlock(scope: !1191, file: !1069, line: 154, column: 5)
!1196 = !DISubprogram(name: "buffer", linkageName: "_ZN6Halide7Runtime8Internal10CacheEntry6bufferEi", scope: !"_ZTSN6Halide7Runtime8Internal10CacheEntryE", file: !1069, line: 160, type: !1116, isLocal: false, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: true, function: %struct.buffer_t* (%"struct.Halide::Runtime::Internal::CacheEntry"*, i32)* @_ZN6Halide7Runtime8Internal10CacheEntry6bufferEi, declaration: !1115, variables: !1197)
!1197 = !{!1198, !1199, !1200}
!1198 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !1196, type: !1089, flags: DIFlagArtificial | DIFlagObjectPointer)
!1199 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "i", arg: 2, scope: !1196, file: !1069, line: 160, type: !292)
!1200 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf_ptr", scope: !1196, file: !1069, line: 161, type: !1111)
!1201 = !DISubprogram(name: "djb_hash", linkageName: "_ZN6Halide7Runtime8Internal8djb_hashEPKhj", scope: !35, file: !1069, line: 165, type: !1202, isLocal: false, isDefinition: true, scopeLine: 165, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i32)* @_ZN6Halide7Runtime8Internal8djb_hashEPKhj, variables: !1204)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!269, !1106, !471}
!1204 = !{!1205, !1206, !1207, !1208}
!1205 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key", arg: 1, scope: !1201, file: !1069, line: 165, type: !1106)
!1206 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key_size", arg: 2, scope: !1201, file: !1069, line: 165, type: !471)
!1207 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h", scope: !1201, file: !1069, line: 166, type: !269)
!1208 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1209, file: !1069, line: 167, type: !471)
!1209 = distinct !DILexicalBlock(scope: !1201, file: !1069, line: 167, column: 5)
!1210 = !DISubprogram(name: "prune_cache", linkageName: "_ZN6Halide7Runtime8Internal11prune_cacheEv", scope: !35, file: !1069, line: 233, type: !183, isLocal: false, isDefinition: true, scopeLine: 233, flags: DIFlagPrototyped, isOptimized: true, function: void ()* @_ZN6Halide7Runtime8Internal11prune_cacheEv, variables: !1211)
!1211 = !{!1212, !1214, !1215, !1216, !1217}
!1212 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lru_entry", scope: !1213, file: !1069, line: 239, type: !1089)
!1213 = distinct !DILexicalBlock(scope: !1210, file: !1069, line: 238, column: 41)
!1214 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h", scope: !1213, file: !1069, line: 240, type: !269)
!1215 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !1213, file: !1069, line: 241, type: !269)
!1216 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "entry", scope: !1213, file: !1069, line: 243, type: !1089)
!1217 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1218, file: !1069, line: 260, type: !292)
!1218 = distinct !DILexicalBlock(scope: !1213, file: !1069, line: 260, column: 9)
!1219 = !DISubprogram(name: "halide_memoization_cache_set_size", scope: !1069, file: !1069, line: 276, type: !1220, isLocal: false, isDefinition: true, scopeLine: 276, flags: DIFlagPrototyped, isOptimized: true, function: void (i64)* @halide_memoization_cache_set_size, variables: !1222)
!1220 = !DISubroutineType(types: !1221)
!1221 = !{null, !10}
!1222 = !{!1223, !1224}
!1223 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 1, scope: !1219, file: !1069, line: 276, type: !10)
!1224 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lock", scope: !1219, file: !1069, line: 281, type: !"_ZTSN6Halide7Runtime8Internal15ScopedMutexLockE")
!1225 = !DISubprogram(name: "halide_memoization_cache_lookup", scope: !1069, file: !1069, line: 287, type: !1226, isLocal: false, isDefinition: true, scopeLine: 288, flags: DIFlagPrototyped, isOptimized: true, function: i1 (i8*, i8*, i32, %struct.buffer_t*, i32, %struct.buffer_t**)* @halide_memoization_cache_lookup, variables: !1228)
!1226 = !DISubroutineType(types: !1227)
!1227 = !{!31, !18, !1106, !292, !1111, !292, !1110}
!1228 = !{!1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1243, !1246, !1249, !1253}
!1229 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !1225, file: !1069, line: 287, type: !18)
!1230 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cache_key", arg: 2, scope: !1225, file: !1069, line: 287, type: !1106)
!1231 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 3, scope: !1225, file: !1069, line: 287, type: !292)
!1232 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "computed_bounds", arg: 4, scope: !1225, file: !1069, line: 288, type: !1111)
!1233 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tuple_count", arg: 5, scope: !1225, file: !1069, line: 288, type: !292)
!1234 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tuple_buffers", arg: 6, scope: !1225, file: !1069, line: 288, type: !1110)
!1235 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h", scope: !1225, file: !1069, line: 289, type: !269)
!1236 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !1225, file: !1069, line: 290, type: !269)
!1237 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lock", scope: !1225, file: !1069, line: 292, type: !"_ZTSN6Halide7Runtime8Internal15ScopedMutexLockE")
!1238 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "entry", scope: !1225, file: !1069, line: 308, type: !1089)
!1239 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "all_bounds_equal", scope: !1240, file: !1069, line: 315, type: !31)
!1240 = distinct !DILexicalBlock(scope: !1241, file: !1069, line: 313, column: 48)
!1241 = distinct !DILexicalBlock(scope: !1242, file: !1069, line: 310, column: 13)
!1242 = distinct !DILexicalBlock(scope: !1225, file: !1069, line: 309, column: 27)
!1243 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1244, file: !1069, line: 318, type: !292)
!1244 = distinct !DILexicalBlock(scope: !1245, file: !1069, line: 318, column: 17)
!1245 = distinct !DILexicalBlock(scope: !1240, file: !1069, line: 317, column: 13)
!1246 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !1247, file: !1069, line: 319, type: !1111)
!1247 = distinct !DILexicalBlock(scope: !1248, file: !1069, line: 318, column: 79)
!1248 = distinct !DILexicalBlock(scope: !1244, file: !1069, line: 318, column: 17)
!1249 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1250, file: !1069, line: 344, type: !292)
!1250 = distinct !DILexicalBlock(scope: !1251, file: !1069, line: 344, column: 17)
!1251 = distinct !DILexicalBlock(scope: !1252, file: !1069, line: 324, column: 35)
!1252 = distinct !DILexicalBlock(scope: !1240, file: !1069, line: 324, column: 17)
!1253 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !1254, file: !1069, line: 345, type: !1111)
!1254 = distinct !DILexicalBlock(scope: !1255, file: !1069, line: 344, column: 59)
!1255 = distinct !DILexicalBlock(scope: !1250, file: !1069, line: 344, column: 17)
!1256 = !DISubprogram(name: "halide_memoization_cache_store", scope: !1069, file: !1069, line: 362, type: !1257, isLocal: false, isDefinition: true, scopeLine: 363, flags: DIFlagPrototyped, isOptimized: true, function: void (i8*, i8*, i32, %struct.buffer_t*, i32, %struct.buffer_t**)* @halide_memoization_cache_store, variables: !1259)
!1257 = !DISubroutineType(types: !1258)
!1258 = !{null, !18, !1106, !292, !1111, !292, !1110}
!1259 = !{!1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1274, !1277, !1280, !1281, !1284, !1287, !1288}
!1260 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !1256, file: !1069, line: 362, type: !18)
!1261 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cache_key", arg: 2, scope: !1256, file: !1069, line: 362, type: !1106)
!1262 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 3, scope: !1256, file: !1069, line: 362, type: !292)
!1263 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "computed_bounds", arg: 4, scope: !1256, file: !1069, line: 363, type: !1111)
!1264 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tuple_count", arg: 5, scope: !1256, file: !1069, line: 363, type: !292)
!1265 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tuple_buffers", arg: 6, scope: !1256, file: !1069, line: 363, type: !1110)
!1266 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h", scope: !1256, file: !1069, line: 364, type: !269)
!1267 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !1256, file: !1069, line: 365, type: !269)
!1268 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lock", scope: !1256, file: !1069, line: 367, type: !"_ZTSN6Halide7Runtime8Internal15ScopedMutexLockE")
!1269 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "entry", scope: !1256, file: !1069, line: 383, type: !1089)
!1270 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "all_bounds_equal", scope: !1271, file: !1069, line: 390, type: !31)
!1271 = distinct !DILexicalBlock(scope: !1272, file: !1069, line: 388, column: 48)
!1272 = distinct !DILexicalBlock(scope: !1273, file: !1069, line: 385, column: 13)
!1273 = distinct !DILexicalBlock(scope: !1256, file: !1069, line: 384, column: 27)
!1274 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1275, file: !1069, line: 393, type: !292)
!1275 = distinct !DILexicalBlock(scope: !1276, file: !1069, line: 393, column: 17)
!1276 = distinct !DILexicalBlock(scope: !1271, file: !1069, line: 392, column: 13)
!1277 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !1278, file: !1069, line: 394, type: !1111)
!1278 = distinct !DILexicalBlock(scope: !1279, file: !1069, line: 393, column: 79)
!1279 = distinct !DILexicalBlock(scope: !1275, file: !1069, line: 393, column: 17)
!1280 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "added_size", scope: !1256, file: !1069, line: 405, type: !91)
!1281 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1282, file: !1069, line: 407, type: !292)
!1282 = distinct !DILexicalBlock(scope: !1283, file: !1069, line: 407, column: 9)
!1283 = distinct !DILexicalBlock(scope: !1256, file: !1069, line: 406, column: 5)
!1284 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !1285, file: !1069, line: 408, type: !1111)
!1285 = distinct !DILexicalBlock(scope: !1286, file: !1069, line: 407, column: 51)
!1286 = distinct !DILexicalBlock(scope: !1282, file: !1069, line: 407, column: 9)
!1287 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "entry_storage", scope: !1256, file: !1069, line: 415, type: !18)
!1288 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "new_entry", scope: !1256, file: !1069, line: 417, type: !1089)
!1289 = !DISubprogram(name: "halide_memoization_cache_cleanup", scope: !1069, file: !1069, line: 442, type: !183, isLocal: false, isDefinition: true, scopeLine: 442, flags: DIFlagPrototyped, isOptimized: true, function: void ()* @halide_memoization_cache_cleanup, variables: !1290)
!1290 = !{!1291, !1293, !1296}
!1291 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1292, file: !1069, line: 443, type: !17)
!1292 = distinct !DILexicalBlock(scope: !1289, file: !1069, line: 443, column: 5)
!1293 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "entry", scope: !1294, file: !1069, line: 444, type: !1089)
!1294 = distinct !DILexicalBlock(scope: !1295, file: !1069, line: 443, column: 46)
!1295 = distinct !DILexicalBlock(scope: !1292, file: !1069, line: 443, column: 5)
!1296 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !1297, file: !1069, line: 447, type: !1089)
!1297 = distinct !DILexicalBlock(scope: !1294, file: !1069, line: 446, column: 31)
!1298 = !DISubprogram(name: "halide_cache_cleanup", scope: !1299, file: !1069, line: 460, type: !183, isLocal: false, isDefinition: true, scopeLine: 460, flags: DIFlagPrototyped, isOptimized: true, function: void ()* @halide_cache_cleanup, variables: !2)
!1299 = !DINamespace(scope: null, file: !1069, line: 457)
!1300 = !DISubprogram(name: "ScopedMutexLock", linkageName: "_ZN6Halide7Runtime8Internal15ScopedMutexLockC2EP12halide_mutex", scope: !"_ZTSN6Halide7Runtime8Internal15ScopedMutexLockE", file: !1120, line: 12, type: !1124, isLocal: false, isDefinition: true, scopeLine: 12, flags: DIFlagPrototyped, isOptimized: true, declaration: !1123, variables: !1301)
!1301 = !{!1302, !1304}
!1302 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !1300, type: !1303, flags: DIFlagArtificial | DIFlagObjectPointer)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTSN6Halide7Runtime8Internal15ScopedMutexLockE", size: 32, align: 32)
!1304 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mutex", arg: 2, scope: !1300, file: !1120, line: 12, type: !170)
!1305 = !DISubprogram(name: "~ScopedMutexLock", linkageName: "_ZN6Halide7Runtime8Internal15ScopedMutexLockD2Ev", scope: !"_ZTSN6Halide7Runtime8Internal15ScopedMutexLockE", file: !1120, line: 16, type: !1128, isLocal: false, isDefinition: true, scopeLine: 16, flags: DIFlagPrototyped, isOptimized: true, declaration: !1127, variables: !1306)
!1306 = !{!1307}
!1307 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !1305, type: !1303, flags: DIFlagArtificial | DIFlagObjectPointer)
!1308 = !{!1309, !1310, !1314, !1315, !1316, !1317, !1318, !1320}
!1309 = !DIGlobalVariable(name: "memoization_lock", linkageName: "_ZN6Halide7Runtime8Internal16memoization_lockE", scope: !35, file: !1069, line: 173, type: !"_ZTS12halide_mutex", isLocal: false, isDefinition: true, variable: %struct.pthread_mutex_t* @_ZN6Halide7Runtime8Internal16memoization_lockE)
!1310 = !DIGlobalVariable(name: "cache_entries", linkageName: "_ZN6Halide7Runtime8Internal13cache_entriesE", scope: !35, file: !1069, line: 177, type: !1311, isLocal: false, isDefinition: true, variable: [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE)
!1311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1089, size: 8192, align: 32, elements: !1312)
!1312 = !{!1313}
!1313 = !DISubrange(count: 256)
!1314 = !DIGlobalVariable(name: "most_recently_used", linkageName: "_ZN6Halide7Runtime8Internal18most_recently_usedE", scope: !35, file: !1069, line: 179, type: !1089, isLocal: false, isDefinition: true, variable: %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE)
!1315 = !DIGlobalVariable(name: "least_recently_used", linkageName: "_ZN6Halide7Runtime8Internal19least_recently_usedE", scope: !35, file: !1069, line: 180, type: !1089, isLocal: false, isDefinition: true, variable: %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE)
!1316 = !DIGlobalVariable(name: "max_cache_size", linkageName: "_ZN6Halide7Runtime8Internal14max_cache_sizeE", scope: !35, file: !1069, line: 183, type: !10, isLocal: false, isDefinition: true, variable: i64* @_ZN6Halide7Runtime8Internal14max_cache_sizeE)
!1317 = !DIGlobalVariable(name: "current_cache_size", linkageName: "_ZN6Halide7Runtime8Internal18current_cache_sizeE", scope: !35, file: !1069, line: 184, type: !10, isLocal: false, isDefinition: true, variable: i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE)
!1318 = !DIGlobalVariable(name: "kHashTableSize", scope: !35, file: !1069, line: 175, type: !1319, isLocal: true, isDefinition: true, variable: i32 256)
!1319 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !471)
!1320 = !DIGlobalVariable(name: "kDefaultCacheSize", scope: !35, file: !1069, line: 182, type: !1321, isLocal: true, isDefinition: true, variable: i64 1048576)
!1321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !91)
!1322 = !{!34, !1323}
!1323 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1068, entity: !35, line: 243)
!1324 = !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1325, producer: "clang version 3.7.0 (trunk 240337) (llvm/trunk 240338)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !320, subprograms: !1326, globals: !2, imports: !1431)
!1325 = !DIFile(filename: "src/runtime/to_string.cpp", directory: "/Users/aam/halide/halide-aam1")
!1326 = !{!1327, !1334, !1353, !1361, !1415}
!1327 = !DISubprogram(name: "halide_string_to_string", scope: !1325, file: !1325, line: 5, type: !1328, isLocal: false, isDefinition: true, scopeLine: 5, flags: DIFlagPrototyped, isOptimized: true, function: i8* (i8*, i8*, i8*)* @halide_string_to_string, variables: !1330)
!1328 = !DISubroutineType(types: !1329)
!1329 = !{!162, !162, !162, !46}
!1330 = !{!1331, !1332, !1333}
!1331 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dst", arg: 1, scope: !1327, file: !1325, line: 5, type: !162)
!1332 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 2, scope: !1327, file: !1325, line: 5, type: !162)
!1333 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1327, file: !1325, line: 5, type: !46)
!1334 = !DISubprogram(name: "halide_uint64_to_string", scope: !1325, file: !1325, line: 21, type: !1335, isLocal: false, isDefinition: true, scopeLine: 21, flags: DIFlagPrototyped, isOptimized: true, function: i8* (i8*, i8*, i64, i32)* @halide_uint64_to_string, variables: !1337)
!1335 = !DISubroutineType(types: !1336)
!1336 = !{!162, !162, !162, !91, !17}
!1337 = !{!1338, !1339, !1340, !1341, !1342, !1346, !1347, !1349, !1352}
!1338 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dst", arg: 1, scope: !1334, file: !1325, line: 21, type: !162)
!1339 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 2, scope: !1334, file: !1325, line: 21, type: !162)
!1340 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1334, file: !1325, line: 21, type: !91)
!1341 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "min_digits", arg: 4, scope: !1334, file: !1325, line: 21, type: !17)
!1342 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !1334, file: !1325, line: 23, type: !1343)
!1343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 256, align: 8, elements: !1344)
!1344 = !{!1345}
!1345 = !DISubrange(count: 32)
!1346 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "digits", scope: !1334, file: !1325, line: 25, type: !162)
!1347 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1348, file: !1325, line: 27, type: !17)
!1348 = distinct !DILexicalBlock(scope: !1334, file: !1325, line: 27, column: 5)
!1349 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "top", scope: !1350, file: !1325, line: 28, type: !91)
!1350 = distinct !DILexicalBlock(scope: !1351, file: !1325, line: 27, column: 49)
!1351 = distinct !DILexicalBlock(scope: !1348, file: !1325, line: 27, column: 5)
!1352 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bottom", scope: !1350, file: !1325, line: 29, type: !91)
!1353 = !DISubprogram(name: "halide_int64_to_string", scope: !1325, file: !1325, line: 39, type: !1354, isLocal: false, isDefinition: true, scopeLine: 39, flags: DIFlagPrototyped, isOptimized: true, function: i8* (i8*, i8*, i64, i32)* @halide_int64_to_string, variables: !1356)
!1354 = !DISubroutineType(types: !1355)
!1355 = !{!162, !162, !162, !10, !17}
!1356 = !{!1357, !1358, !1359, !1360}
!1357 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dst", arg: 1, scope: !1353, file: !1325, line: 39, type: !162)
!1358 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 2, scope: !1353, file: !1325, line: 39, type: !162)
!1359 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1353, file: !1325, line: 39, type: !10)
!1360 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "min_digits", arg: 4, scope: !1353, file: !1325, line: 39, type: !17)
!1361 = !DISubprogram(name: "halide_double_to_string", scope: !1325, file: !1325, line: 47, type: !1362, isLocal: false, isDefinition: true, scopeLine: 47, flags: DIFlagPrototyped, isOptimized: true, function: i8* (i8*, i8*, double, i32)* @halide_double_to_string, variables: !1364)
!1362 = !DISubroutineType(types: !1363)
!1363 = !{!162, !162, !162, !281, !17}
!1364 = !{!1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1376, !1377, !1378, !1381, !1382, !1383, !1384, !1386, !1387, !1388, !1389, !1390, !1393, !1398, !1402, !1403, !1404, !1406, !1409, !1411, !1414}
!1365 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dst", arg: 1, scope: !1361, file: !1325, line: 47, type: !162)
!1366 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 2, scope: !1361, file: !1325, line: 47, type: !162)
!1367 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1361, file: !1325, line: 47, type: !281)
!1368 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "scientific", arg: 4, scope: !1361, file: !1325, line: 47, type: !17)
!1369 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bits", scope: !1361, file: !1325, line: 48, type: !91)
!1370 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "one", scope: !1361, file: !1325, line: 51, type: !91)
!1371 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mantissa", scope: !1361, file: !1325, line: 52, type: !91)
!1372 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "biased_exponent", scope: !1361, file: !1325, line: 53, type: !17)
!1373 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "negative", scope: !1361, file: !1325, line: 54, type: !17)
!1374 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "decimal_places", scope: !1361, file: !1325, line: 94, type: !1375)
!1375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17)
!1376 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "scale", scope: !1361, file: !1325, line: 97, type: !1321)
!1377 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mantissa_bits", scope: !1361, file: !1325, line: 100, type: !1375)
!1378 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "exponent_base_10", scope: !1379, file: !1325, line: 105, type: !17)
!1379 = distinct !DILexicalBlock(scope: !1380, file: !1325, line: 102, column: 21)
!1380 = distinct !DILexicalBlock(scope: !1361, file: !1325, line: 102, column: 9)
!1381 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fixed", scope: !1379, file: !1325, line: 117, type: !91)
!1382 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "top_digit", scope: !1379, file: !1325, line: 118, type: !91)
!1383 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "other_digits", scope: !1379, file: !1325, line: 119, type: !91)
!1384 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1385, file: !1325, line: 141, type: !91)
!1385 = distinct !DILexicalBlock(scope: !1380, file: !1325, line: 133, column: 12)
!1386 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "exponent", scope: !1385, file: !1325, line: 142, type: !17)
!1387 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "integer_part", scope: !1385, file: !1325, line: 145, type: !91)
!1388 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "integer_exponent", scope: !1385, file: !1325, line: 146, type: !17)
!1389 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fractional_part", scope: !1385, file: !1325, line: 148, type: !91)
!1390 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "f", scope: !1391, file: !1325, line: 152, type: !281)
!1391 = distinct !DILexicalBlock(scope: !1392, file: !1325, line: 149, column: 27)
!1392 = distinct !DILexicalBlock(scope: !1385, file: !1325, line: 149, column: 13)
!1393 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "multiplier", scope: !1391, file: !1325, line: 168, type: !1394)
!1394 = !DICompositeType(tag: DW_TAG_union_type, scope: !1361, file: !1325, line: 165, size: 64, align: 64, elements: !1395)
!1395 = !{!1396, !1397}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1394, file: !1325, line: 166, baseType: !91, size: 64, align: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "as_double", scope: !1394, file: !1325, line: 167, baseType: !281, size: 64, align: 64)
!1398 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !1385, file: !1325, line: 197, type: !1399)
!1399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 4096, align: 8, elements: !1400)
!1400 = !{!1401}
!1401 = !DISubrange(count: 512)
!1402 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "int_part_ptr", scope: !1385, file: !1325, line: 200, type: !162)
!1403 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf_end", scope: !1385, file: !1325, line: 201, type: !162)
!1404 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1405, file: !1325, line: 202, type: !17)
!1405 = distinct !DILexicalBlock(scope: !1385, file: !1325, line: 202, column: 9)
!1406 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "carry", scope: !1407, file: !1325, line: 204, type: !17)
!1407 = distinct !DILexicalBlock(scope: !1408, file: !1325, line: 202, column: 52)
!1408 = distinct !DILexicalBlock(scope: !1405, file: !1325, line: 202, column: 9)
!1409 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !1410, file: !1325, line: 205, type: !162)
!1410 = distinct !DILexicalBlock(scope: !1407, file: !1325, line: 205, column: 13)
!1411 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "old_digit", scope: !1412, file: !1325, line: 206, type: !48)
!1412 = distinct !DILexicalBlock(scope: !1413, file: !1325, line: 205, column: 69)
!1413 = distinct !DILexicalBlock(scope: !1410, file: !1325, line: 205, column: 13)
!1414 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "new_digit", scope: !1412, file: !1325, line: 207, type: !48)
!1415 = !DISubprogram(name: "halide_pointer_to_string", scope: !1325, file: !1325, line: 231, type: !1416, isLocal: false, isDefinition: true, scopeLine: 231, flags: DIFlagPrototyped, isOptimized: true, function: i8* (i8*, i8*, i8*)* @halide_pointer_to_string, variables: !1418)
!1416 = !DISubroutineType(types: !1417)
!1417 = !{!162, !162, !162, !523}
!1418 = !{!1419, !1420, !1421, !1422, !1423, !1427, !1428, !1429}
!1419 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dst", arg: 1, scope: !1415, file: !1325, line: 231, type: !162)
!1420 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 2, scope: !1415, file: !1325, line: 231, type: !162)
!1421 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1415, file: !1325, line: 231, type: !523)
!1422 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hex_digits", scope: !1415, file: !1325, line: 232, type: !46)
!1423 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !1415, file: !1325, line: 233, type: !1424)
!1424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 160, align: 8, elements: !1425)
!1425 = !{!1426}
!1426 = !DISubrange(count: 20)
!1427 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf_ptr", scope: !1415, file: !1325, line: 234, type: !162)
!1428 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bits", scope: !1415, file: !1325, line: 235, type: !91)
!1429 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1430, file: !1325, line: 236, type: !17)
!1430 = distinct !DILexicalBlock(scope: !1415, file: !1325, line: 236, column: 5)
!1431 = !{!34, !1432}
!1432 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1324, entity: !35, line: 243)
!1433 = !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1434, producer: "clang version 3.7.0 (trunk 240337) (llvm/trunk 240338)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !793, retainedTypes: !1435, subprograms: !1462, globals: !1625, imports: !1627)
!1434 = !DIFile(filename: "src/runtime/device_interface.cpp", directory: "/Users/aam/halide/halide-aam1")
!1435 = !{!121, !1071, !1436, !794, !1453, !1459, !18, !91, !1460, !1119, !1446, !162}
!1436 = !DICompositeType(tag: DW_TAG_structure_type, name: "halide_device_interface", file: !1437, line: 6, size: 256, align: 32, elements: !1438, identifier: "_ZTS23halide_device_interface")
!1437 = !DIFile(filename: "src/runtime/device_interface.h", directory: "/Users/aam/halide/halide-aam1")
!1438 = !{!1439, !1441, !1442, !1447, !1448, !1449, !1451, !1452}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "use_module", scope: !"_ZTS23halide_device_interface", file: !1437, line: 12, baseType: !1440, size: 32, align: 32)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32, align: 32)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "release_module", scope: !"_ZTS23halide_device_interface", file: !1437, line: 13, baseType: !1440, size: 32, align: 32, offset: 32)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "device_malloc", scope: !"_ZTS23halide_device_interface", file: !1437, line: 14, baseType: !1443, size: 32, align: 32, offset: 64)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 32, align: 32)
!1444 = !DISubroutineType(types: !1445)
!1445 = !{!17, !18, !1446}
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS8buffer_t", size: 32, align: 32)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "device_free", scope: !"_ZTS23halide_device_interface", file: !1437, line: 15, baseType: !1443, size: 32, align: 32, offset: 96)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "device_sync", scope: !"_ZTS23halide_device_interface", file: !1437, line: 16, baseType: !1443, size: 32, align: 32, offset: 128)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "device_release", scope: !"_ZTS23halide_device_interface", file: !1437, line: 17, baseType: !1450, size: 32, align: 32, offset: 160)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 32, align: 32)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "copy_to_host", scope: !"_ZTS23halide_device_interface", file: !1437, line: 18, baseType: !1443, size: 32, align: 32, offset: 192)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "copy_to_device", scope: !"_ZTS23halide_device_interface", file: !1437, line: 19, baseType: !1443, size: 32, align: 32, offset: 224)
!1453 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_handle_wrapper", scope: !35, file: !1434, line: 15, size: 128, align: 64, elements: !1454, identifier: "_ZTSN6Halide7Runtime8Internal21device_handle_wrapperE")
!1454 = !{!1455, !1456}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "device_handle", scope: !"_ZTSN6Halide7Runtime8Internal21device_handle_wrapperE", file: !1434, line: 16, baseType: !91, size: 64, align: 64)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "interface", scope: !"_ZTSN6Halide7Runtime8Internal21device_handle_wrapperE", file: !1434, line: 17, baseType: !1457, size: 32, align: 32, offset: 64)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 32, align: 32)
!1458 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !"_ZTS23halide_device_interface")
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTSN6Halide7Runtime8Internal21device_handle_wrapperE", size: 32, align: 32)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 32, align: 32)
!1461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !"_ZTSN6Halide7Runtime8Internal21device_handle_wrapperE")
!1462 = !{!1463, !1471, !1478, !1484, !1490, !1495, !1501, !1507, !1517, !1523, !1530, !1541, !1546, !1550, !1553, !1606, !1609, !1613, !1617, !1621}
!1463 = !DISubprogram(name: "copy_to_host_already_locked", linkageName: "_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP8buffer_t", scope: !35, file: !1434, line: 28, type: !1444, isLocal: false, isDefinition: true, scopeLine: 28, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, %struct.buffer_t*)* @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP8buffer_t, variables: !1464)
!1464 = !{!1465, !1466, !1467, !1468}
!1465 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !1463, file: !1434, line: 28, type: !18)
!1466 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 2, scope: !1463, file: !1434, line: 28, type: !1446)
!1467 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1463, file: !1434, line: 29, type: !17)
!1468 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "interface", scope: !1469, file: !1434, line: 33, type: !1457)
!1469 = distinct !DILexicalBlock(scope: !1470, file: !1434, line: 31, column: 25)
!1470 = distinct !DILexicalBlock(scope: !1463, file: !1434, line: 31, column: 9)
!1471 = !DISubprogram(name: "halide_new_device_wrapper", scope: !1434, file: !1434, line: 59, type: !1472, isLocal: false, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i64, %struct.halide_device_interface*)* @halide_new_device_wrapper, variables: !1474)
!1472 = !DISubroutineType(types: !1473)
!1473 = !{!91, !91, !1457}
!1474 = !{!1475, !1476, !1477}
!1475 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "handle", arg: 1, scope: !1471, file: !1434, line: 59, type: !91)
!1476 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "interface", arg: 2, scope: !1471, file: !1434, line: 59, type: !1457)
!1477 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "wrapper", scope: !1471, file: !1434, line: 61, type: !1459)
!1478 = !DISubprogram(name: "halide_delete_device_wrapper", scope: !1434, file: !1434, line: 74, type: !1479, isLocal: false, isDefinition: true, scopeLine: 74, flags: DIFlagPrototyped, isOptimized: true, function: void (i64)* @halide_delete_device_wrapper, variables: !1481)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{null, !91}
!1481 = !{!1482, !1483}
!1482 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "wrapper", arg: 1, scope: !1478, file: !1434, line: 74, type: !91)
!1483 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "wrapper_ptr", scope: !1478, file: !1434, line: 75, type: !1459)
!1484 = !DISubprogram(name: "halide_get_device_handle", scope: !1434, file: !1434, line: 81, type: !1485, isLocal: false, isDefinition: true, scopeLine: 81, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i64)* @halide_get_device_handle, variables: !1487)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!91, !91}
!1487 = !{!1488, !1489}
!1488 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dev_field", arg: 1, scope: !1484, file: !1434, line: 81, type: !91)
!1489 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "wrapper", scope: !1484, file: !1434, line: 82, type: !1460)
!1490 = !DISubprogram(name: "halide_get_device_interface", scope: !1434, file: !1434, line: 93, type: !1491, isLocal: false, isDefinition: true, scopeLine: 93, flags: DIFlagPrototyped, isOptimized: true, function: %struct.halide_device_interface* (i64)* @halide_get_device_interface, variables: !1493)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{!1457, !91}
!1493 = !{!1494}
!1494 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dev_field", arg: 1, scope: !1490, file: !1434, line: 93, type: !91)
!1495 = !DISubprogram(name: "halide_device_release", scope: !1434, file: !1434, line: 103, type: !1496, isLocal: false, isDefinition: true, scopeLine: 103, flags: DIFlagPrototyped, isOptimized: true, function: void (i8*, %struct.halide_device_interface*)* @halide_device_release, variables: !1498)
!1496 = !DISubroutineType(types: !1497)
!1497 = !{null, !18, !1457}
!1498 = !{!1499, !1500}
!1499 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !1495, file: !1434, line: 103, type: !18)
!1500 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "interface", arg: 2, scope: !1495, file: !1434, line: 103, type: !1457)
!1501 = !DISubprogram(name: "halide_copy_to_host", scope: !1434, file: !1434, line: 109, type: !1444, isLocal: false, isDefinition: true, scopeLine: 109, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, %struct.buffer_t*)* @halide_copy_to_host, variables: !1502)
!1502 = !{!1503, !1504, !1505, !1506}
!1503 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !1501, file: !1434, line: 109, type: !18)
!1504 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 2, scope: !1501, file: !1434, line: 109, type: !1446)
!1505 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lock", scope: !1501, file: !1434, line: 110, type: !"_ZTSN6Halide7Runtime8Internal15ScopedMutexLockE")
!1506 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1501, file: !1434, line: 114, type: !17)
!1507 = !DISubprogram(name: "halide_copy_to_device", scope: !1434, file: !1434, line: 123, type: !1508, isLocal: false, isDefinition: true, scopeLine: 123, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, %struct.buffer_t*, %struct.halide_device_interface*)* @halide_copy_to_device, variables: !1510)
!1508 = !DISubroutineType(types: !1509)
!1509 = !{!17, !18, !1446, !1457}
!1510 = !{!1511, !1512, !1513, !1514, !1515, !1516}
!1511 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !1507, file: !1434, line: 123, type: !18)
!1512 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 2, scope: !1507, file: !1434, line: 123, type: !1446)
!1513 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "interface", arg: 3, scope: !1507, file: !1434, line: 123, type: !1457)
!1514 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1507, file: !1434, line: 124, type: !17)
!1515 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lock", scope: !1507, file: !1434, line: 126, type: !"_ZTSN6Halide7Runtime8Internal15ScopedMutexLockE")
!1516 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf_dev_interface", scope: !1507, file: !1434, line: 129, type: !1457)
!1517 = !DISubprogram(name: "halide_device_sync", scope: !1434, file: !1434, line: 188, type: !1444, isLocal: false, isDefinition: true, scopeLine: 188, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, %struct.buffer_t*)* @halide_device_sync, variables: !1518)
!1518 = !{!1519, !1520, !1521, !1522}
!1519 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !1517, file: !1434, line: 188, type: !18)
!1520 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 2, scope: !1517, file: !1434, line: 188, type: !1446)
!1521 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "interface", scope: !1517, file: !1434, line: 189, type: !1457)
!1522 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1517, file: !1434, line: 197, type: !17)
!1523 = !DISubprogram(name: "halide_device_malloc", scope: !1434, file: !1434, line: 206, type: !1508, isLocal: false, isDefinition: true, scopeLine: 206, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, %struct.buffer_t*, %struct.halide_device_interface*)* @halide_device_malloc, variables: !1524)
!1524 = !{!1525, !1526, !1527, !1528, !1529}
!1525 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !1523, file: !1434, line: 206, type: !18)
!1526 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 2, scope: !1523, file: !1434, line: 206, type: !1446)
!1527 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "interface", arg: 3, scope: !1523, file: !1434, line: 206, type: !1457)
!1528 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "current_interface", scope: !1523, file: !1434, line: 207, type: !1457)
!1529 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1523, file: !1434, line: 225, type: !17)
!1530 = !DISubprogram(name: "halide_device_free", scope: !1434, file: !1434, line: 238, type: !1444, isLocal: false, isDefinition: true, scopeLine: 238, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, %struct.buffer_t*)* @halide_device_free, variables: !1531)
!1531 = !{!1532, !1533, !1534, !1535, !1538}
!1532 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !1530, file: !1434, line: 238, type: !18)
!1533 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 2, scope: !1530, file: !1434, line: 238, type: !1446)
!1534 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dev_field", scope: !1530, file: !1434, line: 239, type: !91)
!1535 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "interface", scope: !1536, file: !1434, line: 247, type: !1457)
!1536 = distinct !DILexicalBlock(scope: !1537, file: !1434, line: 246, column: 22)
!1537 = distinct !DILexicalBlock(scope: !1530, file: !1434, line: 246, column: 9)
!1538 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1539, file: !1434, line: 252, type: !17)
!1539 = distinct !DILexicalBlock(scope: !1540, file: !1434, line: 248, column: 32)
!1540 = distinct !DILexicalBlock(scope: !1536, file: !1434, line: 248, column: 13)
!1541 = !DISubprogram(name: "halide_device_free_as_destructor", scope: !1434, file: !1434, line: 270, type: !368, isLocal: false, isDefinition: true, scopeLine: 270, flags: DIFlagPrototyped, isOptimized: true, function: void (i8*, i8*)* @halide_device_free_as_destructor, variables: !1542)
!1542 = !{!1543, !1544, !1545}
!1543 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !1541, file: !1434, line: 270, type: !18)
!1544 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "obj", arg: 2, scope: !1541, file: !1434, line: 270, type: !18)
!1545 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !1541, file: !1434, line: 271, type: !1446)
!1546 = !DISubprogram(name: "ScopedMutexLock", linkageName: "_ZN6Halide7Runtime8Internal15ScopedMutexLockC2EP12halide_mutex", scope: !"_ZTSN6Halide7Runtime8Internal15ScopedMutexLockE", file: !1120, line: 12, type: !1124, isLocal: false, isDefinition: true, scopeLine: 12, flags: DIFlagPrototyped, isOptimized: true, declaration: !1123, variables: !1547)
!1547 = !{!1548, !1549}
!1548 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !1546, type: !1303, flags: DIFlagArtificial | DIFlagObjectPointer)
!1549 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mutex", arg: 2, scope: !1546, file: !1120, line: 12, type: !170)
!1550 = !DISubprogram(name: "~ScopedMutexLock", linkageName: "_ZN6Halide7Runtime8Internal15ScopedMutexLockD2Ev", scope: !"_ZTSN6Halide7Runtime8Internal15ScopedMutexLockE", file: !1120, line: 16, type: !1128, isLocal: false, isDefinition: true, scopeLine: 16, flags: DIFlagPrototyped, isOptimized: true, declaration: !1127, variables: !1551)
!1551 = !{!1552}
!1552 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !1550, type: !1303, flags: DIFlagArtificial | DIFlagObjectPointer)
!1553 = !DISubprogram(name: "Printer", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EEC2EPv", scope: !1554, file: !11, line: 135, type: !1561, isLocal: true, isDefinition: true, scopeLine: 135, flags: DIFlagPrototyped, isOptimized: true, declaration: !1560, variables: !1602)
!1554 = !DICompositeType(tag: DW_TAG_class_type, name: "Printer<0, 1024>", scope: !38, file: !11, line: 130, size: 128, align: 32, elements: !1555, templateParams: !1600)
!1555 = !{!1556, !1557, !1558, !1559, !1560, !1564, !1568, !1571, !1574, !1577, !1580, !1583, !1586, !1589, !1592, !1597}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1554, file: !11, line: 132, baseType: !162, size: 32, align: 32, flags: DIFlagPublic)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !1554, file: !11, line: 132, baseType: !162, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1554, file: !11, line: 132, baseType: !162, size: 32, align: 32, offset: 64, flags: DIFlagPublic)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "user_context", scope: !1554, file: !11, line: 133, baseType: !18, size: 32, align: 32, offset: 96, flags: DIFlagPublic)
!1560 = !DISubprogram(name: "Printer", scope: !1554, file: !11, line: 135, type: !1561, isLocal: false, isDefinition: false, scopeLine: 135, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{null, !1563, !18}
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 32, align: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1564 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEPKc", scope: !1554, file: !11, line: 142, type: !1565, isLocal: false, isDefinition: false, scopeLine: 142, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{!1567, !1563, !46}
!1567 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1554)
!1568 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEx", scope: !1554, file: !11, line: 147, type: !1569, isLocal: false, isDefinition: false, scopeLine: 147, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!1569 = !DISubroutineType(types: !1570)
!1570 = !{!1567, !1563, !10}
!1571 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEi", scope: !1554, file: !11, line: 152, type: !1572, isLocal: false, isDefinition: false, scopeLine: 152, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!1567, !1563, !292}
!1574 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEy", scope: !1554, file: !11, line: 157, type: !1575, isLocal: false, isDefinition: false, scopeLine: 157, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!1575 = !DISubroutineType(types: !1576)
!1576 = !{!1567, !1563, !91}
!1577 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEj", scope: !1554, file: !11, line: 162, type: !1578, isLocal: false, isDefinition: false, scopeLine: 162, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!1567, !1563, !269}
!1580 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEd", scope: !1554, file: !11, line: 167, type: !1581, isLocal: false, isDefinition: false, scopeLine: 167, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!1581 = !DISubroutineType(types: !1582)
!1582 = !{!1567, !1563, !281}
!1583 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEf", scope: !1554, file: !11, line: 172, type: !1584, isLocal: false, isDefinition: false, scopeLine: 172, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{!1567, !1563, !268}
!1586 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEPKv", scope: !1554, file: !11, line: 177, type: !1587, isLocal: false, isDefinition: false, scopeLine: 177, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!1587 = !DISubroutineType(types: !1588)
!1588 = !{!1567, !1563, !523}
!1589 = !DISubprogram(name: "str", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EE3strEv", scope: !1554, file: !11, line: 183, type: !1590, isLocal: false, isDefinition: false, scopeLine: 183, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!1590 = !DISubroutineType(types: !1591)
!1591 = !{!46, !1563}
!1592 = !DISubprogram(name: "size", linkageName: "_ZNK6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EE4sizeEv", scope: !1554, file: !11, line: 188, type: !1593, isLocal: false, isDefinition: false, scopeLine: 188, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!1593 = !DISubroutineType(types: !1594)
!1594 = !{!91, !1595}
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 32, align: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1554)
!1597 = !DISubprogram(name: "~Printer", scope: !1554, file: !11, line: 192, type: !1598, isLocal: false, isDefinition: false, scopeLine: 192, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!1598 = !DISubroutineType(types: !1599)
!1599 = !{null, !1563}
!1600 = !{!1601, !538}
!1601 = !DITemplateValueParameter(name: "type", type: !17, value: i32 0)
!1602 = !{!1603, !1605}
!1603 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !1553, type: !1604, flags: DIFlagArtificial | DIFlagObjectPointer)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 32, align: 32)
!1605 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 2, scope: !1553, file: !11, line: 135, type: !18)
!1606 = !DISubprogram(name: "~Printer", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EED2Ev", scope: !1554, file: !11, line: 192, type: !1598, isLocal: true, isDefinition: true, scopeLine: 192, flags: DIFlagPrototyped, isOptimized: true, declaration: !1597, variables: !1607)
!1607 = !{!1608}
!1608 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !1606, type: !1604, flags: DIFlagArtificial | DIFlagObjectPointer)
!1609 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEPKc", scope: !1554, file: !11, line: 142, type: !1565, isLocal: true, isDefinition: true, scopeLine: 142, flags: DIFlagPrototyped, isOptimized: true, declaration: !1564, variables: !1610)
!1610 = !{!1611, !1612}
!1611 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !1609, type: !1604, flags: DIFlagArtificial | DIFlagObjectPointer)
!1612 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !1609, file: !11, line: 142, type: !46)
!1613 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEPKv", scope: !1554, file: !11, line: 177, type: !1587, isLocal: true, isDefinition: true, scopeLine: 177, flags: DIFlagPrototyped, isOptimized: true, declaration: !1586, variables: !1614)
!1614 = !{!1615, !1616}
!1615 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !1613, type: !1604, flags: DIFlagArtificial | DIFlagObjectPointer)
!1616 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !1613, file: !11, line: 177, type: !523)
!1617 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEi", scope: !1554, file: !11, line: 152, type: !1572, isLocal: true, isDefinition: true, scopeLine: 152, flags: DIFlagPrototyped, isOptimized: true, declaration: !1571, variables: !1618)
!1618 = !{!1619, !1620}
!1619 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !1617, type: !1604, flags: DIFlagArtificial | DIFlagObjectPointer)
!1620 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !1617, file: !11, line: 152, type: !292)
!1621 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEy", scope: !1554, file: !11, line: 157, type: !1575, isLocal: true, isDefinition: true, scopeLine: 157, flags: DIFlagPrototyped, isOptimized: true, declaration: !1574, variables: !1622)
!1622 = !{!1623, !1624}
!1623 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !1621, type: !1604, flags: DIFlagArtificial | DIFlagObjectPointer)
!1624 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !1621, file: !11, line: 157, type: !91)
!1625 = !{!1626}
!1626 = !DIGlobalVariable(name: "device_copy_mutex", linkageName: "_ZN6Halide7Runtime8Internal17device_copy_mutexE", scope: !35, file: !1434, line: 26, type: !"_ZTS12halide_mutex", isLocal: false, isDefinition: true, variable: %struct.pthread_mutex_t* @_ZN6Halide7Runtime8Internal17device_copy_mutexE)
!1627 = !{!34, !1628}
!1628 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1433, entity: !35, line: 243)
!1629 = !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1630, producer: "clang version 3.7.0 (trunk 240337) (llvm/trunk 240338)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !1631, subprograms: !1648, globals: !1679, imports: !1681)
!1630 = !DIFile(filename: "src/runtime/metadata.cpp", directory: "/Users/aam/halide/halide-aam1")
!1631 = !{!1632, !121, !1637, !1647, !1119, !1636}
!1632 = !DICompositeType(tag: DW_TAG_structure_type, name: "list_head_t", scope: !35, file: !1630, line: 19, size: 576, align: 64, elements: !1633, identifier: "_ZTSN6Halide7Runtime8Internal11list_head_tE")
!1633 = !{!1634, !1635}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !"_ZTSN6Halide7Runtime8Internal11list_head_tE", file: !1630, line: 20, baseType: !"_ZTS12halide_mutex", size: 512, align: 64)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !"_ZTSN6Halide7Runtime8Internal11list_head_tE", file: !1630, line: 21, baseType: !1636, size: 32, align: 32, offset: 512)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS44_halide_runtime_internal_registered_filter_t", size: 32, align: 32)
!1637 = !DICompositeType(tag: DW_TAG_structure_type, name: "_halide_runtime_internal_registered_filter_t", file: !1630, line: 6, size: 96, align: 32, elements: !1638, identifier: "_ZTS44_halide_runtime_internal_registered_filter_t")
!1638 = !{!1639, !1640, !1643}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !"_ZTS44_halide_runtime_internal_registered_filter_t", file: !1630, line: 10, baseType: !18, size: 32, align: 32)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !"_ZTS44_halide_runtime_internal_registered_filter_t", file: !1630, line: 11, baseType: !1641, size: 32, align: 32, offset: 32)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 32, align: 32)
!1642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !"_ZTS24halide_filter_metadata_t")
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "argv_func", scope: !"_ZTS44_halide_runtime_internal_registered_filter_t", file: !1630, line: 12, baseType: !1644, size: 32, align: 32, offset: 64)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 32, align: 32)
!1645 = !DISubroutineType(types: !1646)
!1646 = !{!17, !370}
!1647 = !DICompositeType(tag: DW_TAG_structure_type, name: "halide_filter_metadata_t", file: !122, line: 580, size: 160, align: 32, flags: DIFlagFwdDecl, identifier: "_ZTS24halide_filter_metadata_t")
!1648 = !{!1649, !1655, !1672, !1676}
!1649 = !DISubprogram(name: "halide_runtime_internal_register_metadata", scope: !1630, file: !1630, line: 32, type: !1650, isLocal: false, isDefinition: true, scopeLine: 32, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct._halide_runtime_internal_registered_filter_t*)* @halide_runtime_internal_register_metadata, variables: !1652)
!1650 = !DISubroutineType(types: !1651)
!1651 = !{null, !1636}
!1652 = !{!1653, !1654}
!1653 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "info", arg: 1, scope: !1649, file: !1630, line: 32, type: !1636)
!1654 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lock", scope: !1649, file: !1630, line: 37, type: !"_ZTSN6Halide7Runtime8Internal15ScopedMutexLockE")
!1655 = !DISubprogram(name: "halide_enumerate_registered_filters", scope: !1630, file: !1630, line: 42, type: !1656, isLocal: false, isDefinition: true, scopeLine: 42, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, i32 (i8*, %struct.halide_filter_metadata_t*, i32 (i8**)*)*)* @halide_enumerate_registered_filters, variables: !1662)
!1656 = !DISubroutineType(types: !1657)
!1657 = !{!17, !18, !18, !1658}
!1658 = !DIDerivedType(tag: DW_TAG_typedef, name: "enumerate_func_t", file: !122, line: 605, baseType: !1659)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 32, align: 32)
!1660 = !DISubroutineType(types: !1661)
!1661 = !{!17, !18, !1641, !1644}
!1662 = !{!1663, !1664, !1665, !1666, !1667, !1669}
!1663 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !1655, file: !1630, line: 42, type: !18)
!1664 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "enumerate_context", arg: 2, scope: !1655, file: !1630, line: 42, type: !18)
!1665 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "func", arg: 3, scope: !1655, file: !1630, line: 42, type: !1658)
!1666 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lock", scope: !1655, file: !1630, line: 43, type: !"_ZTSN6Halide7Runtime8Internal15ScopedMutexLockE")
!1667 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "f", scope: !1668, file: !1630, line: 44, type: !1636)
!1668 = distinct !DILexicalBlock(scope: !1655, file: !1630, line: 44, column: 5)
!1669 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1670, file: !1630, line: 46, type: !17)
!1670 = distinct !DILexicalBlock(scope: !1671, file: !1630, line: 45, column: 73)
!1671 = distinct !DILexicalBlock(scope: !1668, file: !1630, line: 44, column: 5)
!1672 = !DISubprogram(name: "ScopedMutexLock", linkageName: "_ZN6Halide7Runtime8Internal15ScopedMutexLockC2EP12halide_mutex", scope: !"_ZTSN6Halide7Runtime8Internal15ScopedMutexLockE", file: !1120, line: 12, type: !1124, isLocal: false, isDefinition: true, scopeLine: 12, flags: DIFlagPrototyped, isOptimized: true, declaration: !1123, variables: !1673)
!1673 = !{!1674, !1675}
!1674 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !1672, type: !1303, flags: DIFlagArtificial | DIFlagObjectPointer)
!1675 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mutex", arg: 2, scope: !1672, file: !1120, line: 12, type: !170)
!1676 = !DISubprogram(name: "~ScopedMutexLock", linkageName: "_ZN6Halide7Runtime8Internal15ScopedMutexLockD2Ev", scope: !"_ZTSN6Halide7Runtime8Internal15ScopedMutexLockE", file: !1120, line: 16, type: !1128, isLocal: false, isDefinition: true, scopeLine: 16, flags: DIFlagPrototyped, isOptimized: true, declaration: !1127, variables: !1677)
!1677 = !{!1678}
!1678 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !1676, type: !1303, flags: DIFlagArtificial | DIFlagObjectPointer)
!1679 = !{!1680}
!1680 = !DIGlobalVariable(name: "list_head", linkageName: "_ZN6Halide7Runtime8Internal9list_headE", scope: !35, file: !1630, line: 24, type: !"_ZTSN6Halide7Runtime8Internal11list_head_tE", isLocal: false, isDefinition: true, variable: %"struct.Halide::Runtime::Internal::list_head_t"* @_ZN6Halide7Runtime8Internal9list_headE)
!1681 = !{!34, !1682}
!1682 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1629, entity: !35, line: 243)
!1683 = !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1684, producer: "clang version 3.7.0 (trunk 240337) (llvm/trunk 240338)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !2, subprograms: !1685, globals: !2, imports: !1692)
!1684 = !DIFile(filename: "src/runtime/module_aot_ref_count.cpp", directory: "/Users/aam/halide/halide-aam1")
!1685 = !{!1686, !1691}
!1686 = !DISubprogram(name: "halide_use_jit_module", linkageName: "_ZN6Halide7Runtime8Internal21halide_use_jit_moduleEv", scope: !1687, file: !1684, line: 17, type: !183, isLocal: false, isDefinition: true, scopeLine: 17, flags: DIFlagPrototyped, isOptimized: true, function: void ()* @_ZN6Halide7Runtime8Internal21halide_use_jit_moduleEv, variables: !2)
!1687 = !DINamespace(name: "Internal", scope: !1689, file: !1688, line: 105)
!1688 = !DIFile(filename: "src/runtime/./runtime_internal.h", directory: "/Users/aam/halide/halide-aam1")
!1689 = !DINamespace(name: "Runtime", scope: !1690, file: !1688, line: 105)
!1690 = !DINamespace(name: "Halide", scope: null, file: !1688, line: 105)
!1691 = !DISubprogram(name: "halide_release_jit_module", linkageName: "_ZN6Halide7Runtime8Internal25halide_release_jit_moduleEv", scope: !1687, file: !1684, line: 20, type: !183, isLocal: false, isDefinition: true, scopeLine: 20, flags: DIFlagPrototyped, isOptimized: true, function: void ()* @_ZN6Halide7Runtime8Internal25halide_release_jit_moduleEv, variables: !2)
!1692 = !{!1693, !1695}
!1693 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1687, entity: !1694)
!1694 = !DINamespace(scope: !1687, file: !1688, line: 128)
!1695 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1683, entity: !1687, line: 243)
!1696 = !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1697, producer: "clang version 3.7.0 (trunk 240337) (llvm/trunk 240338)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !1698, retainedTypes: !1818, subprograms: !2234, globals: !2596, imports: !2604)
!1697 = !DIFile(filename: "src/runtime/renderscript.cpp", directory: "/Users/aam/halide/halide-aam1")
!1698 = !{!1699, !1707, !1711, !1716, !1724, !1729, !1762, !1773, !1781, !1792, !1802, !1813}
!1699 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RSError", file: !1700, line: 30, size: 32, align: 32, elements: !1701, identifier: "_ZTS7RSError")
!1700 = !DIFile(filename: "src/runtime/mini_renderscript.h", directory: "/Users/aam/halide/halide-aam1")
!1701 = !{!1702, !1703, !1704, !1705, !1706}
!1702 = !DIEnumerator(name: "RS_SUCCESS", value: 0)
!1703 = !DIEnumerator(name: "RS_ERROR_INVALID_PARAMETER", value: 1)
!1704 = !DIEnumerator(name: "RS_ERROR_RUNTIME_ERROR", value: 2)
!1705 = !DIEnumerator(name: "RS_ERROR_INVALID_ELEMENT", value: 3)
!1706 = !DIEnumerator(name: "RS_ERROR_MAX", value: 9999)
!1707 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RsDeviceParam", file: !1700, line: 278, size: 32, align: 32, elements: !1708, identifier: "_ZTS13RsDeviceParam")
!1708 = !{!1709, !1710}
!1709 = !DIEnumerator(name: "RS_DEVICE_PARAM_FORCE_SOFTWARE_GL", value: 0)
!1710 = !DIEnumerator(name: "RS_DEVICE_PARAM_COUNT", value: 1)
!1711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RsContextType", file: !1700, line: 280, size: 32, align: 32, elements: !1712, identifier: "_ZTS13RsContextType")
!1712 = !{!1713, !1714, !1715}
!1713 = !DIEnumerator(name: "RS_CONTEXT_TYPE_NORMAL", value: 0)
!1714 = !DIEnumerator(name: "RS_CONTEXT_TYPE_DEBUG", value: 1)
!1715 = !DIEnumerator(name: "RS_CONTEXT_TYPE_PROFILE", value: 2)
!1716 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RsMessageToClientType", file: !1700, line: 62, size: 32, align: 32, elements: !1717, identifier: "_ZTS21RsMessageToClientType")
!1717 = !{!1718, !1719, !1720, !1721, !1722, !1723}
!1718 = !DIEnumerator(name: "RS_MESSAGE_TO_CLIENT_NONE", value: 0)
!1719 = !DIEnumerator(name: "RS_MESSAGE_TO_CLIENT_EXCEPTION", value: 1)
!1720 = !DIEnumerator(name: "RS_MESSAGE_TO_CLIENT_RESIZE", value: 2)
!1721 = !DIEnumerator(name: "RS_MESSAGE_TO_CLIENT_ERROR", value: 3)
!1722 = !DIEnumerator(name: "RS_MESSAGE_TO_CLIENT_USER", value: 4)
!1723 = !DIEnumerator(name: "RS_MESSAGE_TO_CLIENT_NEW_BUFFER", value: 5)
!1724 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RsAllocationMipmapControl", file: !1700, line: 299, size: 32, align: 32, elements: !1725, identifier: "_ZTS25RsAllocationMipmapControl")
!1725 = !{!1726, !1727, !1728}
!1726 = !DIEnumerator(name: "RS_ALLOCATION_MIPMAP_NONE", value: 0)
!1727 = !DIEnumerator(name: "RS_ALLOCATION_MIPMAP_FULL", value: 1)
!1728 = !DIEnumerator(name: "RS_ALLOCATION_MIPMAP_ON_SYNC_TO_TEXTURE", value: 2)
!1729 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RsDataType", file: !1700, line: 314, size: 32, align: 32, elements: !1730, identifier: "_ZTS10RsDataType")
!1730 = !{!1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761}
!1731 = !DIEnumerator(name: "RS_TYPE_NONE", value: 0)
!1732 = !DIEnumerator(name: "RS_TYPE_FLOAT_16", value: 1)
!1733 = !DIEnumerator(name: "RS_TYPE_FLOAT_32", value: 2)
!1734 = !DIEnumerator(name: "RS_TYPE_FLOAT_64", value: 3)
!1735 = !DIEnumerator(name: "RS_TYPE_SIGNED_8", value: 4)
!1736 = !DIEnumerator(name: "RS_TYPE_SIGNED_16", value: 5)
!1737 = !DIEnumerator(name: "RS_TYPE_SIGNED_32", value: 6)
!1738 = !DIEnumerator(name: "RS_TYPE_SIGNED_64", value: 7)
!1739 = !DIEnumerator(name: "RS_TYPE_UNSIGNED_8", value: 8)
!1740 = !DIEnumerator(name: "RS_TYPE_UNSIGNED_16", value: 9)
!1741 = !DIEnumerator(name: "RS_TYPE_UNSIGNED_32", value: 10)
!1742 = !DIEnumerator(name: "RS_TYPE_UNSIGNED_64", value: 11)
!1743 = !DIEnumerator(name: "RS_TYPE_BOOLEAN", value: 12)
!1744 = !DIEnumerator(name: "RS_TYPE_UNSIGNED_5_6_5", value: 13)
!1745 = !DIEnumerator(name: "RS_TYPE_UNSIGNED_5_5_5_1", value: 14)
!1746 = !DIEnumerator(name: "RS_TYPE_UNSIGNED_4_4_4_4", value: 15)
!1747 = !DIEnumerator(name: "RS_TYPE_MATRIX_4X4", value: 16)
!1748 = !DIEnumerator(name: "RS_TYPE_MATRIX_3X3", value: 17)
!1749 = !DIEnumerator(name: "RS_TYPE_MATRIX_2X2", value: 18)
!1750 = !DIEnumerator(name: "RS_TYPE_ELEMENT", value: 1000)
!1751 = !DIEnumerator(name: "RS_TYPE_TYPE", value: 1001)
!1752 = !DIEnumerator(name: "RS_TYPE_ALLOCATION", value: 1002)
!1753 = !DIEnumerator(name: "RS_TYPE_SAMPLER", value: 1003)
!1754 = !DIEnumerator(name: "RS_TYPE_SCRIPT", value: 1004)
!1755 = !DIEnumerator(name: "RS_TYPE_MESH", value: 1005)
!1756 = !DIEnumerator(name: "RS_TYPE_PROGRAM_FRAGMENT", value: 1006)
!1757 = !DIEnumerator(name: "RS_TYPE_PROGRAM_VERTEX", value: 1007)
!1758 = !DIEnumerator(name: "RS_TYPE_PROGRAM_RASTER", value: 1008)
!1759 = !DIEnumerator(name: "RS_TYPE_PROGRAM_STORE", value: 1009)
!1760 = !DIEnumerator(name: "RS_TYPE_FONT", value: 1010)
!1761 = !DIEnumerator(name: "RS_TYPE_INVALID", value: 10000)
!1762 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RsDataKind", file: !1700, line: 353, size: 32, align: 32, elements: !1763, identifier: "_ZTS10RsDataKind")
!1763 = !{!1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772}
!1764 = !DIEnumerator(name: "RS_KIND_USER", value: 0)
!1765 = !DIEnumerator(name: "RS_KIND_PIXEL_L", value: 7)
!1766 = !DIEnumerator(name: "RS_KIND_PIXEL_A", value: 8)
!1767 = !DIEnumerator(name: "RS_KIND_PIXEL_LA", value: 9)
!1768 = !DIEnumerator(name: "RS_KIND_PIXEL_RGB", value: 10)
!1769 = !DIEnumerator(name: "RS_KIND_PIXEL_RGBA", value: 11)
!1770 = !DIEnumerator(name: "RS_KIND_PIXEL_DEPTH", value: 12)
!1771 = !DIEnumerator(name: "RS_KIND_PIXEL_YUV", value: 13)
!1772 = !DIEnumerator(name: "RS_KIND_INVALID", value: 100)
!1773 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RsAllocationCubemapFace", file: !1700, line: 305, size: 32, align: 32, elements: !1774, identifier: "_ZTS23RsAllocationCubemapFace")
!1774 = !{!1775, !1776, !1777, !1778, !1779, !1780}
!1775 = !DIEnumerator(name: "RS_ALLOCATION_CUBEMAP_FACE_POSITIVE_X", value: 0)
!1776 = !DIEnumerator(name: "RS_ALLOCATION_CUBEMAP_FACE_NEGATIVE_X", value: 1)
!1777 = !DIEnumerator(name: "RS_ALLOCATION_CUBEMAP_FACE_POSITIVE_Y", value: 2)
!1778 = !DIEnumerator(name: "RS_ALLOCATION_CUBEMAP_FACE_NEGATIVE_Y", value: 3)
!1779 = !DIEnumerator(name: "RS_ALLOCATION_CUBEMAP_FACE_POSITIVE_Z", value: 4)
!1780 = !DIEnumerator(name: "RS_ALLOCATION_CUBEMAP_FACE_NEGATIVE_Z", value: 5)
!1781 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RsAllocationUsageType", file: !1700, line: 286, size: 32, align: 32, elements: !1782, identifier: "_ZTS21RsAllocationUsageType")
!1782 = !{!1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791}
!1783 = !DIEnumerator(name: "RS_ALLOCATION_USAGE_SCRIPT", value: 1)
!1784 = !DIEnumerator(name: "RS_ALLOCATION_USAGE_GRAPHICS_TEXTURE", value: 2)
!1785 = !DIEnumerator(name: "RS_ALLOCATION_USAGE_GRAPHICS_VERTEX", value: 4)
!1786 = !DIEnumerator(name: "RS_ALLOCATION_USAGE_GRAPHICS_CONSTANTS", value: 8)
!1787 = !DIEnumerator(name: "RS_ALLOCATION_USAGE_GRAPHICS_RENDER_TARGET", value: 16)
!1788 = !DIEnumerator(name: "RS_ALLOCATION_USAGE_IO_INPUT", value: 32)
!1789 = !DIEnumerator(name: "RS_ALLOCATION_USAGE_IO_OUTPUT", value: 64)
!1790 = !DIEnumerator(name: "RS_ALLOCATION_USAGE_SHARED", value: 128)
!1791 = !DIEnumerator(name: "RS_ALLOCATION_USAGE_ALL", value: 255)
!1792 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RsSamplerValue", file: !1700, line: 376, size: 32, align: 32, elements: !1793, identifier: "_ZTS14RsSamplerValue")
!1793 = !{!1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801}
!1794 = !DIEnumerator(name: "RS_SAMPLER_NEAREST", value: 0)
!1795 = !DIEnumerator(name: "RS_SAMPLER_LINEAR", value: 1)
!1796 = !DIEnumerator(name: "RS_SAMPLER_LINEAR_MIP_LINEAR", value: 2)
!1797 = !DIEnumerator(name: "RS_SAMPLER_WRAP", value: 3)
!1798 = !DIEnumerator(name: "RS_SAMPLER_CLAMP", value: 4)
!1799 = !DIEnumerator(name: "RS_SAMPLER_LINEAR_MIP_NEAREST", value: 5)
!1800 = !DIEnumerator(name: "RS_SAMPLER_MIRRORED_REPEAT", value: 6)
!1801 = !DIEnumerator(name: "RS_SAMPLER_INVALID", value: 100)
!1802 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1700, line: 11, size: 32, align: 32, elements: !1803)
!1803 = !{!1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812}
!1804 = !DIEnumerator(name: "ANDROID_LOG_UNKNOWN", value: 0)
!1805 = !DIEnumerator(name: "ANDROID_LOG_DEFAULT", value: 1)
!1806 = !DIEnumerator(name: "ANDROID_LOG_VERBOSE", value: 2)
!1807 = !DIEnumerator(name: "ANDROID_LOG_DEBUG", value: 3)
!1808 = !DIEnumerator(name: "ANDROID_LOG_INFO", value: 4)
!1809 = !DIEnumerator(name: "ANDROID_LOG_WARN", value: 5)
!1810 = !DIEnumerator(name: "ANDROID_LOG_ERROR", value: 6)
!1811 = !DIEnumerator(name: "ANDROID_LOG_FATAL", value: 7)
!1812 = !DIEnumerator(name: "ANDROID_LOG_SILENT", value: 8)
!1813 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RsContextFlags", file: !1700, line: 447, size: 32, align: 32, elements: !1814, identifier: "_ZTS14RsContextFlags")
!1814 = !{!1815, !1816, !1817}
!1815 = !DIEnumerator(name: "RS_CONTEXT_SYNCHRONOUS", value: 1)
!1816 = !DIEnumerator(name: "RS_CONTEXT_LOW_LATENCY", value: 2)
!1817 = !DIEnumerator(name: "RS_CONTEXT_LOW_POWER", value: 4)
!1818 = !{!1699, !1819, !1707, !1711, !1716, !1724, !1729, !1762, !1773, !1781, !1792, !2210, !2211, !2228, !1813, !1828, !1834, !1842, !1848, !1854, !1860, !1865, !1870, !1875, !1880, !1885, !1891, !1896, !1901, !1903, !1905, !1910, !1915, !1920, !1922, !1928, !1965, !1967, !1972, !1974, !1980, !1986, !1991, !2001, !2006, !2011, !2021, !2026, !2031, !2036, !2038, !2048, !2058, !2063, !2068, !2073, !2078, !2084, !2090, !2095, !2100, !2105, !2113, !2118, !2123, !2128, !2133, !2138, !2140, !2145, !2150, !2155, !2160, !2170, !2175, !2190, !2195, !2197, !2202, !2204, !2206, !2165, !1933, !1944, !1955, !1960, !2184, !2016, !2043, !2053, !18, !2233, !2232, !46, !1071, !10, !91, !452, !449, !270, !370, !445, !451, !1436, !162}
!1819 = !DICompositeType(tag: DW_TAG_structure_type, name: "dispatchTable", file: !1700, line: 726, size: 2432, align: 32, elements: !1820, identifier: "_ZTS13dispatchTable")
!1820 = !{!1821, !1827, !1833, !1841, !1847, !1853, !1859, !1864, !1869, !1874, !1879, !1884, !1890, !1895, !1900, !1902, !1904, !1909, !1914, !1919, !1921, !1927, !1932, !1943, !1954, !1959, !1964, !1966, !1971, !1973, !1979, !1985, !1990, !2000, !2005, !2010, !2015, !2020, !2025, !2030, !2035, !2037, !2042, !2047, !2052, !2057, !2062, !2067, !2072, !2077, !2083, !2089, !2094, !2099, !2104, !2112, !2117, !2122, !2127, !2132, !2137, !2139, !2144, !2149, !2154, !2159, !2164, !2169, !2174, !2183, !2189, !2194, !2196, !2201, !2203, !2205}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "SetNativeLibDir", scope: !"_ZTS13dispatchTable", file: !1700, line: 727, baseType: !1822, size: 32, align: 32)
!1822 = !DIDerivedType(tag: DW_TAG_typedef, name: "SetNativeLibDirFnPtr", file: !1700, line: 650, baseType: !1823)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32, align: 32)
!1824 = !DISubroutineType(types: !1825)
!1825 = !{null, !1826, !46, !471}
!1826 = !DIDerivedType(tag: DW_TAG_typedef, name: "RsContext", file: !1700, line: 244, baseType: !18)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "AllocationGetType", scope: !"_ZTS13dispatchTable", file: !1700, line: 729, baseType: !1828, size: 32, align: 32, offset: 32)
!1828 = !DIDerivedType(tag: DW_TAG_typedef, name: "AllocationGetTypeFnPtr", file: !1700, line: 651, baseType: !1829)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 32, align: 32)
!1830 = !DISubroutineType(types: !1831)
!1831 = !{!523, !1826, !1832}
!1832 = !DIDerivedType(tag: DW_TAG_typedef, name: "RsAllocation", file: !1700, line: 241, baseType: !18)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "TypeGetNativeData", scope: !"_ZTS13dispatchTable", file: !1700, line: 730, baseType: !1834, size: 32, align: 32, offset: 64)
!1834 = !DIDerivedType(tag: DW_TAG_typedef, name: "TypeGetNativeDataFnPtr", file: !1700, line: 652, baseType: !1835)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 32, align: 32)
!1836 = !DISubroutineType(types: !1837)
!1837 = !{null, !1826, !1838, !1839, !269}
!1838 = !DIDerivedType(tag: DW_TAG_typedef, name: "RsType", file: !1700, line: 259, baseType: !18)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 32, align: 32)
!1840 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !11, line: 45, baseType: !269)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "ElementGetNativeData", scope: !"_ZTS13dispatchTable", file: !1700, line: 731, baseType: !1842, size: 32, align: 32, offset: 96)
!1842 = !DIDerivedType(tag: DW_TAG_typedef, name: "ElementGetNativeDataFnPtr", file: !1700, line: 653, baseType: !1843)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 32, align: 32)
!1844 = !DISubroutineType(types: !1845)
!1845 = !{null, !1826, !1846, !1839, !269}
!1846 = !DIDerivedType(tag: DW_TAG_typedef, name: "RsElement", file: !1700, line: 246, baseType: !18)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "ElementGetSubElements", scope: !"_ZTS13dispatchTable", file: !1700, line: 732, baseType: !1848, size: 32, align: 32, offset: 128)
!1848 = !DIDerivedType(tag: DW_TAG_typedef, name: "ElementGetSubElementsFnPtr", file: !1700, line: 654, baseType: !1849)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 32, align: 32)
!1850 = !DISubroutineType(types: !1851)
!1851 = !{null, !1826, !1846, !1839, !1852, !450, !269}
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 32, align: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceCreate", scope: !"_ZTS13dispatchTable", file: !1700, line: 733, baseType: !1854, size: 32, align: 32, offset: 160)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "DeviceCreateFnPtr", file: !1700, line: 655, baseType: !1855)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 32, align: 32)
!1856 = !DISubroutineType(types: !1857)
!1857 = !{!1858}
!1858 = !DIDerivedType(tag: DW_TAG_typedef, name: "RsDevice", file: !1700, line: 245, baseType: !18)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceDestroy", scope: !"_ZTS13dispatchTable", file: !1700, line: 734, baseType: !1860, size: 32, align: 32, offset: 192)
!1860 = !DIDerivedType(tag: DW_TAG_typedef, name: "DeviceDestroyFnPtr", file: !1700, line: 656, baseType: !1861)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 32, align: 32)
!1862 = !DISubroutineType(types: !1863)
!1863 = !{null, !1858}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceSetConfig", scope: !"_ZTS13dispatchTable", file: !1700, line: 735, baseType: !1865, size: 32, align: 32, offset: 224)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "DeviceSetConfigFnPtr", file: !1700, line: 657, baseType: !1866)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 32, align: 32)
!1867 = !DISubroutineType(types: !1868)
!1868 = !{null, !1858, !"_ZTS13RsDeviceParam", !292}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "ContextCreate", scope: !"_ZTS13dispatchTable", file: !1700, line: 736, baseType: !1870, size: 32, align: 32, offset: 256)
!1870 = !DIDerivedType(tag: DW_TAG_typedef, name: "ContextCreateFnPtr", file: !1700, line: 658, baseType: !1871)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 32, align: 32)
!1872 = !DISubroutineType(types: !1873)
!1873 = !{!1826, !1858, !269, !269, !"_ZTS13RsContextType", !269}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "GetName", scope: !"_ZTS13dispatchTable", file: !1700, line: 737, baseType: !1875, size: 32, align: 32, offset: 288)
!1875 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetNameFnPtr", file: !1700, line: 659, baseType: !1876)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 32, align: 32)
!1877 = !DISubroutineType(types: !1878)
!1878 = !{null, !1826, !18, !1852}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "ContextDestroy", scope: !"_ZTS13dispatchTable", file: !1700, line: 739, baseType: !1880, size: 32, align: 32, offset: 320)
!1880 = !DIDerivedType(tag: DW_TAG_typedef, name: "ContextDestroyFnPtr", file: !1700, line: 664, baseType: !1881)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 32, align: 32)
!1882 = !DISubroutineType(types: !1883)
!1883 = !{null, !1826}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "ContextGetMessage", scope: !"_ZTS13dispatchTable", file: !1700, line: 740, baseType: !1885, size: 32, align: 32, offset: 352)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "ContextGetMessageFnPtr", file: !1700, line: 665, baseType: !1886)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 32, align: 32)
!1887 = !DISubroutineType(types: !1888)
!1888 = !{!"_ZTS21RsMessageToClientType", !1826, !18, !471, !1889, !471, !450, !471}
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 32, align: 32)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "ContextPeekMessage", scope: !"_ZTS13dispatchTable", file: !1700, line: 741, baseType: !1891, size: 32, align: 32, offset: 384)
!1891 = !DIDerivedType(tag: DW_TAG_typedef, name: "ContextPeekMessageFnPtr", file: !1700, line: 666, baseType: !1892)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 32, align: 32)
!1893 = !DISubroutineType(types: !1894)
!1894 = !{!"_ZTS21RsMessageToClientType", !1826, !1889, !471, !450, !471}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "ContextSendMessage", scope: !"_ZTS13dispatchTable", file: !1700, line: 742, baseType: !1896, size: 32, align: 32, offset: 416)
!1896 = !DIDerivedType(tag: DW_TAG_typedef, name: "ContextSendMessageFnPtr", file: !1700, line: 667, baseType: !1897)
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1898, size: 32, align: 32)
!1898 = !DISubroutineType(types: !1899)
!1899 = !{null, !1826, !269, !1106, !471}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "ContextInitToClient", scope: !"_ZTS13dispatchTable", file: !1700, line: 743, baseType: !1901, size: 32, align: 32, offset: 448)
!1901 = !DIDerivedType(tag: DW_TAG_typedef, name: "ContextInitToClientFnPtr", file: !1700, line: 668, baseType: !1881)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "ContextDeinitToClient", scope: !"_ZTS13dispatchTable", file: !1700, line: 744, baseType: !1903, size: 32, align: 32, offset: 480)
!1903 = !DIDerivedType(tag: DW_TAG_typedef, name: "ContextDeinitToClientFnPtr", file: !1700, line: 669, baseType: !1881)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "TypeCreate", scope: !"_ZTS13dispatchTable", file: !1700, line: 745, baseType: !1905, size: 32, align: 32, offset: 512)
!1905 = !DIDerivedType(tag: DW_TAG_typedef, name: "TypeCreateFnPtr", file: !1700, line: 670, baseType: !1906)
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 32, align: 32)
!1907 = !DISubroutineType(types: !1908)
!1908 = !{!1838, !1826, !1846, !269, !269, !269, !31, !31, !269}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "AllocationCreateTyped", scope: !"_ZTS13dispatchTable", file: !1700, line: 746, baseType: !1910, size: 32, align: 32, offset: 544)
!1910 = !DIDerivedType(tag: DW_TAG_typedef, name: "AllocationCreateTypedFnPtr", file: !1700, line: 671, baseType: !1911)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 32, align: 32)
!1912 = !DISubroutineType(types: !1913)
!1913 = !{!1832, !1826, !1838, !"_ZTS25RsAllocationMipmapControl", !269, !1840}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "AllocationCreateFromBitmap", scope: !"_ZTS13dispatchTable", file: !1700, line: 747, baseType: !1915, size: 32, align: 32, offset: 576)
!1915 = !DIDerivedType(tag: DW_TAG_typedef, name: "AllocationCreateFromBitmapFnPtr", file: !1700, line: 672, baseType: !1916)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 32, align: 32)
!1917 = !DISubroutineType(types: !1918)
!1918 = !{!1832, !1826, !1838, !"_ZTS25RsAllocationMipmapControl", !523, !471, !269}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "AllocationCubeCreateFromBitmap", scope: !"_ZTS13dispatchTable", file: !1700, line: 748, baseType: !1920, size: 32, align: 32, offset: 608)
!1920 = !DIDerivedType(tag: DW_TAG_typedef, name: "AllocationCubeCreateFromBitmapFnPtr", file: !1700, line: 673, baseType: !1916)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "AllocationGetSurface", scope: !"_ZTS13dispatchTable", file: !1700, line: 749, baseType: !1922, size: 32, align: 32, offset: 640)
!1922 = !DIDerivedType(tag: DW_TAG_typedef, name: "AllocationGetSurfaceFnPtr", file: !1700, line: 674, baseType: !1923)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 32, align: 32)
!1924 = !DISubroutineType(types: !1925)
!1925 = !{!1926, !1826, !1832}
!1926 = !DIDerivedType(tag: DW_TAG_typedef, name: "RsNativeWindow", file: !1700, line: 268, baseType: !18)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "AllocationSetSurface", scope: !"_ZTS13dispatchTable", file: !1700, line: 750, baseType: !1928, size: 32, align: 32, offset: 672)
!1928 = !DIDerivedType(tag: DW_TAG_typedef, name: "AllocationSetSurfaceFnPtr", file: !1700, line: 675, baseType: !1929)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 32, align: 32)
!1930 = !DISubroutineType(types: !1931)
!1931 = !{null, !1826, !1832, !1926}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "ClosureCreate", scope: !"_ZTS13dispatchTable", file: !1700, line: 751, baseType: !1933, size: 32, align: 32, offset: 704)
!1933 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClosureCreateFnPtr", file: !1700, line: 660, baseType: !1934)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 32, align: 32)
!1935 = !DISubroutineType(types: !1936)
!1936 = !{!1937, !1826, !1938, !1832, !1939, !471, !1839, !471, !1941, !471, !1942, !471, !1939, !471}
!1937 = !DIDerivedType(tag: DW_TAG_typedef, name: "RsClosure", file: !1700, line: 243, baseType: !18)
!1938 = !DIDerivedType(tag: DW_TAG_typedef, name: "RsScriptKernelID", file: !1700, line: 251, baseType: !18)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 32, align: 32)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "RsScriptFieldID", file: !1700, line: 253, baseType: !18)
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32, align: 32)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 32, align: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "InvokeClosureCreate", scope: !"_ZTS13dispatchTable", file: !1700, line: 752, baseType: !1944, size: 32, align: 32, offset: 736)
!1944 = !DIDerivedType(tag: DW_TAG_typedef, name: "InvokeClosureCreateFnPtr", file: !1700, line: 661, baseType: !1945)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 32, align: 32)
!1946 = !DISubroutineType(types: !1947)
!1947 = !{!1937, !1826, !1948, !523, !1319, !1949, !1319, !1951, !1319, !1953, !1319}
!1948 = !DIDerivedType(tag: DW_TAG_typedef, name: "RsScriptInvokeID", file: !1700, line: 252, baseType: !18)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 32, align: 32)
!1950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1940)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 32, align: 32)
!1952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1840)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 32, align: 32)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "ClosureSetArg", scope: !"_ZTS13dispatchTable", file: !1700, line: 753, baseType: !1955, size: 32, align: 32, offset: 768)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClosureSetArgFnPtr", file: !1700, line: 662, baseType: !1956)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 32, align: 32)
!1957 = !DISubroutineType(types: !1958)
!1958 = !{null, !1826, !1937, !269, !1840, !471}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "ClosureSetGlobal", scope: !"_ZTS13dispatchTable", file: !1700, line: 754, baseType: !1960, size: 32, align: 32, offset: 800)
!1960 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClosureSetGlobalFnPtr", file: !1700, line: 663, baseType: !1961)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 32, align: 32)
!1962 = !DISubroutineType(types: !1963)
!1963 = !{null, !1826, !1937, !1940, !1840, !471}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "ContextFinish", scope: !"_ZTS13dispatchTable", file: !1700, line: 755, baseType: !1965, size: 32, align: 32, offset: 832)
!1965 = !DIDerivedType(tag: DW_TAG_typedef, name: "ContextFinishFnPtr", file: !1700, line: 676, baseType: !1881)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "ContextDump", scope: !"_ZTS13dispatchTable", file: !1700, line: 756, baseType: !1967, size: 32, align: 32, offset: 864)
!1967 = !DIDerivedType(tag: DW_TAG_typedef, name: "ContextDumpFnPtr", file: !1700, line: 677, baseType: !1968)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 32, align: 32)
!1969 = !DISubroutineType(types: !1970)
!1970 = !{null, !1826, !292}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "ContextSetPriority", scope: !"_ZTS13dispatchTable", file: !1700, line: 757, baseType: !1972, size: 32, align: 32, offset: 896)
!1972 = !DIDerivedType(tag: DW_TAG_typedef, name: "ContextSetPriorityFnPtr", file: !1700, line: 678, baseType: !1968)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "AssignName", scope: !"_ZTS13dispatchTable", file: !1700, line: 758, baseType: !1974, size: 32, align: 32, offset: 928)
!1974 = !DIDerivedType(tag: DW_TAG_typedef, name: "AssignNameFnPtr", file: !1700, line: 679, baseType: !1975)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 32, align: 32)
!1976 = !DISubroutineType(types: !1977)
!1977 = !{null, !1826, !1978, !46, !471}
!1978 = !DIDerivedType(tag: DW_TAG_typedef, name: "RsObjectBase", file: !1700, line: 260, baseType: !18)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "ObjDestroy", scope: !"_ZTS13dispatchTable", file: !1700, line: 759, baseType: !1980, size: 32, align: 32, offset: 960)
!1980 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjDestroyFnPtr", file: !1700, line: 680, baseType: !1981)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 32, align: 32)
!1982 = !DISubroutineType(types: !1983)
!1983 = !{null, !1826, !1984}
!1984 = !DIDerivedType(tag: DW_TAG_typedef, name: "RsAsyncVoidPtr", file: !1700, line: 237, baseType: !18)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "ElementCreate", scope: !"_ZTS13dispatchTable", file: !1700, line: 760, baseType: !1986, size: 32, align: 32, offset: 992)
!1986 = !DIDerivedType(tag: DW_TAG_typedef, name: "ElementCreateFnPtr", file: !1700, line: 681, baseType: !1987)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 32, align: 32)
!1988 = !DISubroutineType(types: !1989)
!1989 = !{!1846, !1826, !"_ZTS10RsDataType", !"_ZTS10RsDataKind", !31, !269}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "ElementCreate2", scope: !"_ZTS13dispatchTable", file: !1700, line: 761, baseType: !1991, size: 32, align: 32, offset: 1024)
!1991 = !DIDerivedType(tag: DW_TAG_typedef, name: "ElementCreate2FnPtr", file: !1700, line: 682, baseType: !1992)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 32, align: 32)
!1993 = !DISubroutineType(types: !1994)
!1994 = !{!1846, !1826, !1995, !471, !1852, !471, !1997, !1998, !471}
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 32, align: 32)
!1996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1846)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 32, align: 32)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 32, align: 32)
!1999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !269)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "AllocationCopyToBitmap", scope: !"_ZTS13dispatchTable", file: !1700, line: 762, baseType: !2001, size: 32, align: 32, offset: 1056)
!2001 = !DIDerivedType(tag: DW_TAG_typedef, name: "AllocationCopyToBitmapFnPtr", file: !1700, line: 683, baseType: !2002)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 32, align: 32)
!2003 = !DISubroutineType(types: !2004)
!2004 = !{null, !1826, !1832, !18, !471}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "Allocation1DData", scope: !"_ZTS13dispatchTable", file: !1700, line: 763, baseType: !2006, size: 32, align: 32, offset: 1088)
!2006 = !DIDerivedType(tag: DW_TAG_typedef, name: "Allocation1DDataFnPtr", file: !1700, line: 684, baseType: !2007)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 32, align: 32)
!2008 = !DISubroutineType(types: !2009)
!2009 = !{null, !1826, !1832, !269, !269, !269, !523, !471}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "Allocation1DElementData", scope: !"_ZTS13dispatchTable", file: !1700, line: 764, baseType: !2011, size: 32, align: 32, offset: 1120)
!2011 = !DIDerivedType(tag: DW_TAG_typedef, name: "Allocation1DElementDataFnPtr", file: !1700, line: 685, baseType: !2012)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 32, align: 32)
!2013 = !DISubroutineType(types: !2014)
!2014 = !{null, !1826, !1832, !269, !269, !523, !471, !471}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "AllocationElementData", scope: !"_ZTS13dispatchTable", file: !1700, line: 765, baseType: !2016, size: 32, align: 32, offset: 1152)
!2016 = !DIDerivedType(tag: DW_TAG_typedef, name: "AllocationElementDataFnPtr", file: !1700, line: 686, baseType: !2017)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 32, align: 32)
!2018 = !DISubroutineType(types: !2019)
!2019 = !{null, !1826, !1832, !269, !269, !269, !269, !523, !471, !471}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "Allocation2DData", scope: !"_ZTS13dispatchTable", file: !1700, line: 766, baseType: !2021, size: 32, align: 32, offset: 1184)
!2021 = !DIDerivedType(tag: DW_TAG_typedef, name: "Allocation2DDataFnPtr", file: !1700, line: 687, baseType: !2022)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 32, align: 32)
!2023 = !DISubroutineType(types: !2024)
!2024 = !{null, !1826, !1832, !269, !269, !269, !"_ZTS23RsAllocationCubemapFace", !269, !269, !523, !471, !471}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "Allocation3DData", scope: !"_ZTS13dispatchTable", file: !1700, line: 767, baseType: !2026, size: 32, align: 32, offset: 1216)
!2026 = !DIDerivedType(tag: DW_TAG_typedef, name: "Allocation3DDataFnPtr", file: !1700, line: 688, baseType: !2027)
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 32, align: 32)
!2028 = !DISubroutineType(types: !2029)
!2029 = !{null, !1826, !1832, !269, !269, !269, !269, !269, !269, !269, !523, !471, !471}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "AllocationGenerateMipmaps", scope: !"_ZTS13dispatchTable", file: !1700, line: 768, baseType: !2031, size: 32, align: 32, offset: 1248)
!2031 = !DIDerivedType(tag: DW_TAG_typedef, name: "AllocationGenerateMipmapsFnPtr", file: !1700, line: 689, baseType: !2032)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 32, align: 32)
!2033 = !DISubroutineType(types: !2034)
!2034 = !{null, !1826, !1832}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "AllocationRead", scope: !"_ZTS13dispatchTable", file: !1700, line: 769, baseType: !2036, size: 32, align: 32, offset: 1280)
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "AllocationReadFnPtr", file: !1700, line: 690, baseType: !2002)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "Allocation1DRead", scope: !"_ZTS13dispatchTable", file: !1700, line: 770, baseType: !2038, size: 32, align: 32, offset: 1312)
!2038 = !DIDerivedType(tag: DW_TAG_typedef, name: "Allocation1DReadFnPtr", file: !1700, line: 691, baseType: !2039)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 32, align: 32)
!2040 = !DISubroutineType(types: !2041)
!2041 = !{null, !1826, !1832, !269, !269, !269, !18, !471}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "AllocationElementRead", scope: !"_ZTS13dispatchTable", file: !1700, line: 771, baseType: !2043, size: 32, align: 32, offset: 1344)
!2043 = !DIDerivedType(tag: DW_TAG_typedef, name: "AllocationElementReadFnPtr", file: !1700, line: 692, baseType: !2044)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 32, align: 32)
!2045 = !DISubroutineType(types: !2046)
!2046 = !{null, !1826, !1832, !269, !269, !269, !269, !18, !471, !471}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "Allocation2DRead", scope: !"_ZTS13dispatchTable", file: !1700, line: 772, baseType: !2048, size: 32, align: 32, offset: 1376)
!2048 = !DIDerivedType(tag: DW_TAG_typedef, name: "Allocation2DReadFnPtr", file: !1700, line: 693, baseType: !2049)
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 32, align: 32)
!2050 = !DISubroutineType(types: !2051)
!2051 = !{null, !1826, !1832, !269, !269, !269, !"_ZTS23RsAllocationCubemapFace", !269, !269, !18, !471, !471}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "Allocation3DRead", scope: !"_ZTS13dispatchTable", file: !1700, line: 773, baseType: !2053, size: 32, align: 32, offset: 1408)
!2053 = !DIDerivedType(tag: DW_TAG_typedef, name: "Allocation3DReadFnPtr", file: !1700, line: 694, baseType: !2054)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 32, align: 32)
!2055 = !DISubroutineType(types: !2056)
!2056 = !{null, !1826, !1832, !269, !269, !269, !269, !269, !269, !269, !18, !471, !471}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "AllocationSyncAll", scope: !"_ZTS13dispatchTable", file: !1700, line: 774, baseType: !2058, size: 32, align: 32, offset: 1440)
!2058 = !DIDerivedType(tag: DW_TAG_typedef, name: "AllocationSyncAllFnPtr", file: !1700, line: 695, baseType: !2059)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 32, align: 32)
!2060 = !DISubroutineType(types: !2061)
!2061 = !{null, !1826, !1832, !"_ZTS21RsAllocationUsageType"}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "AllocationResize1D", scope: !"_ZTS13dispatchTable", file: !1700, line: 775, baseType: !2063, size: 32, align: 32, offset: 1472)
!2063 = !DIDerivedType(tag: DW_TAG_typedef, name: "AllocationResize1DFnPtr", file: !1700, line: 696, baseType: !2064)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 32, align: 32)
!2065 = !DISubroutineType(types: !2066)
!2066 = !{null, !1826, !1832, !269}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "AllocationCopy2DRange", scope: !"_ZTS13dispatchTable", file: !1700, line: 776, baseType: !2068, size: 32, align: 32, offset: 1504)
!2068 = !DIDerivedType(tag: DW_TAG_typedef, name: "AllocationCopy2DRangeFnPtr", file: !1700, line: 697, baseType: !2069)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 32, align: 32)
!2070 = !DISubroutineType(types: !2071)
!2071 = !{null, !1826, !1832, !269, !269, !269, !269, !269, !269, !1832, !269, !269, !269, !269}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "AllocationCopy3DRange", scope: !"_ZTS13dispatchTable", file: !1700, line: 777, baseType: !2073, size: 32, align: 32, offset: 1536)
!2073 = !DIDerivedType(tag: DW_TAG_typedef, name: "AllocationCopy3DRangeFnPtr", file: !1700, line: 698, baseType: !2074)
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2075, size: 32, align: 32)
!2075 = !DISubroutineType(types: !2076)
!2076 = !{null, !1826, !1832, !269, !269, !269, !269, !269, !269, !269, !1832, !269, !269, !269, !269}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "SamplerCreate", scope: !"_ZTS13dispatchTable", file: !1700, line: 778, baseType: !2078, size: 32, align: 32, offset: 1568)
!2078 = !DIDerivedType(tag: DW_TAG_typedef, name: "SamplerCreateFnPtr", file: !1700, line: 699, baseType: !2079)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 32, align: 32)
!2080 = !DISubroutineType(types: !2081)
!2081 = !{!2082, !1826, !"_ZTS14RsSamplerValue", !"_ZTS14RsSamplerValue", !"_ZTS14RsSamplerValue", !"_ZTS14RsSamplerValue", !"_ZTS14RsSamplerValue", !268}
!2082 = !DIDerivedType(tag: DW_TAG_typedef, name: "RsSampler", file: !1700, line: 249, baseType: !18)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "ScriptBindAllocation", scope: !"_ZTS13dispatchTable", file: !1700, line: 779, baseType: !2084, size: 32, align: 32, offset: 1600)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScriptBindAllocationFnPtr", file: !1700, line: 700, baseType: !2085)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 32, align: 32)
!2086 = !DISubroutineType(types: !2087)
!2087 = !{null, !1826, !2088, !1832, !269}
!2088 = !DIDerivedType(tag: DW_TAG_typedef, name: "RsScript", file: !1700, line: 250, baseType: !18)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "ScriptSetTimeZone", scope: !"_ZTS13dispatchTable", file: !1700, line: 780, baseType: !2090, size: 32, align: 32, offset: 1632)
!2090 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScriptSetTimeZoneFnPtr", file: !1700, line: 701, baseType: !2091)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 32, align: 32)
!2092 = !DISubroutineType(types: !2093)
!2093 = !{null, !1826, !2088, !46, !471}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "ScriptInvoke", scope: !"_ZTS13dispatchTable", file: !1700, line: 781, baseType: !2095, size: 32, align: 32, offset: 1664)
!2095 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScriptInvokeFnPtr", file: !1700, line: 702, baseType: !2096)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 32, align: 32)
!2097 = !DISubroutineType(types: !2098)
!2098 = !{null, !1826, !2088, !269}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "ScriptInvokeV", scope: !"_ZTS13dispatchTable", file: !1700, line: 782, baseType: !2100, size: 32, align: 32, offset: 1696)
!2100 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScriptInvokeVFnPtr", file: !1700, line: 703, baseType: !2101)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 32, align: 32)
!2102 = !DISubroutineType(types: !2103)
!2103 = !{null, !1826, !2088, !269, !523, !471}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "ScriptForEach", scope: !"_ZTS13dispatchTable", file: !1700, line: 783, baseType: !2105, size: 32, align: 32, offset: 1728)
!2105 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScriptForEachFnPtr", file: !1700, line: 704, baseType: !2106)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 32, align: 32)
!2107 = !DISubroutineType(types: !2108)
!2108 = !{null, !1826, !2088, !269, !1832, !1832, !523, !471, !2109, !471}
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 32, align: 32)
!2110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2111)
!2111 = !DIDerivedType(tag: DW_TAG_typedef, name: "RsScriptCall", file: !1700, line: 445, baseType: !"_ZTS12RsScriptCall")
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "ScriptSetVarI", scope: !"_ZTS13dispatchTable", file: !1700, line: 784, baseType: !2113, size: 32, align: 32, offset: 1760)
!2113 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScriptSetVarIFnPtr", file: !1700, line: 705, baseType: !2114)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 32, align: 32)
!2115 = !DISubroutineType(types: !2116)
!2116 = !{null, !1826, !2088, !269, !17}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "ScriptSetVarObj", scope: !"_ZTS13dispatchTable", file: !1700, line: 785, baseType: !2118, size: 32, align: 32, offset: 1792)
!2118 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScriptSetVarObjFnPtr", file: !1700, line: 706, baseType: !2119)
!2119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 32, align: 32)
!2120 = !DISubroutineType(types: !2121)
!2121 = !{null, !1826, !2088, !269, !1978}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "ScriptSetVarJ", scope: !"_ZTS13dispatchTable", file: !1700, line: 786, baseType: !2123, size: 32, align: 32, offset: 1824)
!2123 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScriptSetVarJFnPtr", file: !1700, line: 707, baseType: !2124)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 32, align: 32)
!2125 = !DISubroutineType(types: !2126)
!2126 = !{null, !1826, !2088, !269, !10}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "ScriptSetVarF", scope: !"_ZTS13dispatchTable", file: !1700, line: 787, baseType: !2128, size: 32, align: 32, offset: 1856)
!2128 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScriptSetVarFFnPtr", file: !1700, line: 708, baseType: !2129)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 32, align: 32)
!2130 = !DISubroutineType(types: !2131)
!2131 = !{null, !1826, !2088, !269, !268}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "ScriptSetVarD", scope: !"_ZTS13dispatchTable", file: !1700, line: 788, baseType: !2133, size: 32, align: 32, offset: 1888)
!2133 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScriptSetVarDFnPtr", file: !1700, line: 709, baseType: !2134)
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 32, align: 32)
!2135 = !DISubroutineType(types: !2136)
!2136 = !{null, !1826, !2088, !269, !281}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "ScriptSetVarV", scope: !"_ZTS13dispatchTable", file: !1700, line: 789, baseType: !2138, size: 32, align: 32, offset: 1920)
!2138 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScriptSetVarVFnPtr", file: !1700, line: 710, baseType: !2101)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "ScriptGetVarV", scope: !"_ZTS13dispatchTable", file: !1700, line: 790, baseType: !2140, size: 32, align: 32, offset: 1952)
!2140 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScriptGetVarVFnPtr", file: !1700, line: 711, baseType: !2141)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 32, align: 32)
!2142 = !DISubroutineType(types: !2143)
!2143 = !{null, !1826, !2088, !269, !18, !471}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "ScriptSetVarVE", scope: !"_ZTS13dispatchTable", file: !1700, line: 791, baseType: !2145, size: 32, align: 32, offset: 1984)
!2145 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScriptSetVarVEFnPtr", file: !1700, line: 712, baseType: !2146)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 32, align: 32)
!2147 = !DISubroutineType(types: !2148)
!2148 = !{null, !1826, !2088, !269, !523, !471, !1846, !1998, !471}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "ScriptCCreate", scope: !"_ZTS13dispatchTable", file: !1700, line: 792, baseType: !2150, size: 32, align: 32, offset: 2016)
!2150 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScriptCCreateFnPtr", file: !1700, line: 713, baseType: !2151)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 32, align: 32)
!2152 = !DISubroutineType(types: !2153)
!2153 = !{!2088, !1826, !46, !471, !46, !471, !46, !471}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "ScriptIntrinsicCreate", scope: !"_ZTS13dispatchTable", file: !1700, line: 793, baseType: !2155, size: 32, align: 32, offset: 2048)
!2155 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScriptIntrinsicCreateFnPtr", file: !1700, line: 714, baseType: !2156)
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 32, align: 32)
!2157 = !DISubroutineType(types: !2158)
!2158 = !{!2088, !1826, !269, !1846}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "ScriptKernelIDCreate", scope: !"_ZTS13dispatchTable", file: !1700, line: 794, baseType: !2160, size: 32, align: 32, offset: 2080)
!2160 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScriptKernelIDCreateFnPtr", file: !1700, line: 715, baseType: !2161)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 32, align: 32)
!2162 = !DISubroutineType(types: !2163)
!2163 = !{!1938, !1826, !2088, !17, !17}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "ScriptInvokeIDCreate", scope: !"_ZTS13dispatchTable", file: !1700, line: 795, baseType: !2165, size: 32, align: 32, offset: 2112)
!2165 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScriptInvokeIDCreateFnPtr", file: !1700, line: 716, baseType: !2166)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 32, align: 32)
!2167 = !DISubroutineType(types: !2168)
!2168 = !{!1948, !1826, !2088, !17}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "ScriptFieldIDCreate", scope: !"_ZTS13dispatchTable", file: !1700, line: 796, baseType: !2170, size: 32, align: 32, offset: 2144)
!2170 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScriptFieldIDCreateFnPtr", file: !1700, line: 717, baseType: !2171)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 32, align: 32)
!2172 = !DISubroutineType(types: !2173)
!2173 = !{!1940, !1826, !2088, !17}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "ScriptGroupCreate", scope: !"_ZTS13dispatchTable", file: !1700, line: 797, baseType: !2175, size: 32, align: 32, offset: 2176)
!2175 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScriptGroupCreateFnPtr", file: !1700, line: 718, baseType: !2176)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 32, align: 32)
!2177 = !DISubroutineType(types: !2178)
!2178 = !{!2179, !1826, !2180, !471, !2180, !471, !2180, !471, !1939, !471, !2181, !471}
!2179 = !DIDerivedType(tag: DW_TAG_typedef, name: "RsScriptGroup", file: !1700, line: 255, baseType: !18)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 32, align: 32)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 32, align: 32)
!2182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1838)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "ScriptGroup2Create", scope: !"_ZTS13dispatchTable", file: !1700, line: 798, baseType: !2184, size: 32, align: 32, offset: 2208)
!2184 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScriptGroup2CreateFnPtr", file: !1700, line: 719, baseType: !2185)
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 32, align: 32)
!2186 = !DISubroutineType(types: !2187)
!2187 = !{!2188, !1826, !46, !471, !46, !471, !1942, !471}
!2188 = !DIDerivedType(tag: DW_TAG_typedef, name: "RsScriptGroup2", file: !1700, line: 256, baseType: !18)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "ScriptGroupSetOutput", scope: !"_ZTS13dispatchTable", file: !1700, line: 799, baseType: !2190, size: 32, align: 32, offset: 2240)
!2190 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScriptGroupSetOutputFnPtr", file: !1700, line: 720, baseType: !2191)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 32, align: 32)
!2192 = !DISubroutineType(types: !2193)
!2193 = !{null, !1826, !2179, !1938, !1832}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "ScriptGroupSetInput", scope: !"_ZTS13dispatchTable", file: !1700, line: 800, baseType: !2195, size: 32, align: 32, offset: 2272)
!2195 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScriptGroupSetInputFnPtr", file: !1700, line: 721, baseType: !2191)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "ScriptGroupExecute", scope: !"_ZTS13dispatchTable", file: !1700, line: 801, baseType: !2197, size: 32, align: 32, offset: 2304)
!2197 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScriptGroupExecuteFnPtr", file: !1700, line: 722, baseType: !2198)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 32, align: 32)
!2199 = !DISubroutineType(types: !2200)
!2200 = !{null, !1826, !2179}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "AllocationIoSend", scope: !"_ZTS13dispatchTable", file: !1700, line: 802, baseType: !2202, size: 32, align: 32, offset: 2336)
!2202 = !DIDerivedType(tag: DW_TAG_typedef, name: "AllocationIoSendFnPtr", file: !1700, line: 723, baseType: !2032)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "AllocationIoReceive", scope: !"_ZTS13dispatchTable", file: !1700, line: 803, baseType: !2204, size: 32, align: 32, offset: 2368)
!2204 = !DIDerivedType(tag: DW_TAG_typedef, name: "AllocationIoReceiveFnPtr", file: !1700, line: 724, baseType: !2032)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "AllocationGetPointer", scope: !"_ZTS13dispatchTable", file: !1700, line: 804, baseType: !2206, size: 32, align: 32, offset: 2400)
!2206 = !DIDerivedType(tag: DW_TAG_typedef, name: "AllocationGetPointerFnPtr", file: !1700, line: 725, baseType: !2207)
!2207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2208, size: 32, align: 32)
!2208 = !DISubroutineType(types: !2209)
!2209 = !{!18, !1826, !1832, !269, !"_ZTS23RsAllocationCubemapFace", !269, !269, !1889, !471}
!2210 = !DICompositeType(tag: DW_TAG_structure_type, file: !1700, line: 428, size: 480, align: 32, flags: DIFlagFwdDecl, identifier: "_ZTS12RsScriptCall")
!2211 = !DICompositeType(tag: DW_TAG_class_type, name: "Context", scope: !2212, file: !1697, line: 139, size: 128, align: 32, elements: !2213, identifier: "_ZTSN6Halide7Runtime8Internal12Renderscript7ContextE")
!2212 = !DINamespace(name: "Renderscript", scope: !35, file: !1697, line: 21)
!2213 = !{!2214, !2215, !2216, !2217, !2218, !2220, !2221, !2225}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "user_context", scope: !"_ZTSN6Halide7Runtime8Internal12Renderscript7ContextE", file: !1697, line: 140, baseType: !18, size: 32, align: 32)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "mDev", scope: !"_ZTSN6Halide7Runtime8Internal12Renderscript7ContextE", file: !1697, line: 143, baseType: !1858, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "mContext", scope: !"_ZTSN6Halide7Runtime8Internal12Renderscript7ContextE", file: !1697, line: 144, baseType: !1826, size: 32, align: 32, offset: 64, flags: DIFlagPublic)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !"_ZTSN6Halide7Runtime8Internal12Renderscript7ContextE", file: !1697, line: 145, baseType: !17, size: 32, align: 32, offset: 96, flags: DIFlagPublic)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch", scope: !"_ZTSN6Halide7Runtime8Internal12Renderscript7ContextE", file: !1697, line: 147, baseType: !2219, flags: DIFlagPublic | DIFlagStaticMember)
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS13dispatchTable", size: 32, align: 32)
!2220 = !DISubprogram(name: "loadSO", linkageName: "_ZN6Halide7Runtime8Internal12Renderscript7Context6loadSOEPKc", scope: !"_ZTSN6Halide7Runtime8Internal12Renderscript7ContextE", file: !1697, line: 149, type: !679, isLocal: false, isDefinition: false, scopeLine: 149, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2221 = !DISubprogram(name: "Context", scope: !"_ZTSN6Halide7Runtime8Internal12Renderscript7ContextE", file: !1697, line: 165, type: !2222, isLocal: false, isDefinition: false, scopeLine: 165, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2222 = !DISubroutineType(types: !2223)
!2223 = !{null, !2224, !18}
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTSN6Halide7Runtime8Internal12Renderscript7ContextE", size: 32, align: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!2225 = !DISubprogram(name: "~Context", scope: !"_ZTSN6Halide7Runtime8Internal12Renderscript7ContextE", file: !1697, line: 176, type: !2226, isLocal: false, isDefinition: false, scopeLine: 176, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2226 = !DISubroutineType(types: !2227)
!2227 = !{null, !2224}
!2228 = !DICompositeType(tag: DW_TAG_structure_type, name: "module_state", scope: !2212, file: !1697, line: 185, size: 64, align: 32, elements: !2229, identifier: "_ZTSN6Halide7Runtime8Internal12Renderscript12module_stateE")
!2229 = !{!2230, !2231}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !"_ZTSN6Halide7Runtime8Internal12Renderscript12module_stateE", file: !1697, line: 186, baseType: !18, size: 32, align: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !"_ZTSN6Halide7Runtime8Internal12Renderscript12module_stateE", file: !1697, line: 187, baseType: !2232, size: 32, align: 32, offset: 32)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTSN6Halide7Runtime8Internal12Renderscript12module_stateE", size: 32, align: 32)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2232, size: 32, align: 32)
!2234 = !{!2235, !2248, !2251, !2256, !2264, !2272, !2282, !2290, !2306, !2316, !2321, !2333, !2339, !2355, !2362, !2373, !2380, !2415, !2418, !2419, !2424, !2431, !2435, !2440, !2443, !2494, !2497, !2501, !2505, !2509, !2513, !2517, !2568, !2571, !2575, !2579, !2588, !2592}
!2235 = !DISubprogram(name: "halide_renderscript_acquire_context", scope: !1697, file: !1697, line: 56, type: !2236, isLocal: false, isDefinition: true, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8**, i8**, i1)* @halide_renderscript_acquire_context, variables: !2240)
!2236 = !DISubroutineType(types: !2237)
!2237 = !{!17, !18, !2238, !2239, !31}
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 32, align: 32)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 32, align: 32)
!2240 = !{!2241, !2242, !2243, !2244, !2245}
!2241 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !2235, file: !1697, line: 56, type: !18)
!2242 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dev", arg: 2, scope: !2235, file: !1697, line: 56, type: !2238)
!2243 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !2235, file: !1697, line: 57, type: !2239)
!2244 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "create", arg: 4, scope: !2235, file: !1697, line: 57, type: !31)
!2245 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "error", scope: !2246, file: !1697, line: 67, type: !17)
!2246 = distinct !DILexicalBlock(scope: !2247, file: !1697, line: 66, column: 36)
!2247 = distinct !DILexicalBlock(scope: !2235, file: !1697, line: 66, column: 9)
!2248 = !DISubprogram(name: "halide_renderscript_release_context", scope: !1697, file: !1697, line: 79, type: !15, isLocal: false, isDefinition: true, scopeLine: 79, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*)* @halide_renderscript_release_context, variables: !2249)
!2249 = !{!2250}
!2250 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !2248, file: !1697, line: 79, type: !18)
!2251 = !DISubprogram(name: "halide_set_renderscript_cache_dir", scope: !1697, file: !1697, line: 90, type: !2252, isLocal: false, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: true, function: void (i8*)* @halide_set_renderscript_cache_dir, variables: !2254)
!2252 = !DISubroutineType(types: !2253)
!2253 = !{null, !46}
!2254 = !{!2255}
!2255 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 1, scope: !2251, file: !1697, line: 90, type: !46)
!2256 = !DISubprogram(name: "halide_get_renderscript_cache_dir", scope: !1697, file: !1697, line: 95, type: !2257, isLocal: false, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: true, function: i8* (i8*)* @halide_get_renderscript_cache_dir, variables: !2259)
!2257 = !DISubroutineType(types: !2258)
!2258 = !{!46, !18}
!2259 = !{!2260, !2261}
!2260 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !2256, file: !1697, line: 95, type: !18)
!2261 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !2262, file: !1697, line: 101, type: !46)
!2262 = distinct !DILexicalBlock(scope: !2263, file: !1697, line: 100, column: 12)
!2263 = distinct !DILexicalBlock(scope: !2256, file: !1697, line: 98, column: 9)
!2264 = !DISubprogram(name: "property_get", linkageName: "_ZN6Halide7Runtime8Internal12Renderscript12property_getEPKcPcS4_", scope: !2212, file: !1697, line: 117, type: !2265, isLocal: false, isDefinition: true, scopeLine: 117, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, i8*)* @_ZN6Halide7Runtime8Internal12Renderscript12property_getEPKcPcS4_, variables: !2267)
!2265 = !DISubroutineType(types: !2266)
!2266 = !{!17, !46, !162, !46}
!2267 = !{!2268, !2269, !2270, !2271}
!2268 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key", arg: 1, scope: !2264, file: !1697, line: 117, type: !46)
!2269 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 2, scope: !2264, file: !1697, line: 117, type: !162)
!2270 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "default_value", arg: 3, scope: !2264, file: !1697, line: 117, type: !46)
!2271 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !2264, file: !1697, line: 118, type: !17)
!2272 = !DISubprogram(name: "create_renderscript_context", linkageName: "_ZN6Halide7Runtime8Internal12Renderscript27create_renderscript_contextEPvPS3_S4_", scope: !2212, file: !1697, line: 191, type: !2273, isLocal: false, isDefinition: true, scopeLine: 191, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8**, i8**)* @_ZN6Halide7Runtime8Internal12Renderscript27create_renderscript_contextEPvPS3_S4_, variables: !2275)
!2273 = !DISubroutineType(types: !2274)
!2274 = !{!17, !18, !2238, !2239}
!2275 = !{!2276, !2277, !2278, !2279, !2280, !2281}
!2276 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !2272, file: !1697, line: 191, type: !18)
!2277 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dev", arg: 2, scope: !2272, file: !1697, line: 191, type: !2238)
!2278 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !2272, file: !1697, line: 191, type: !2239)
!2279 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "flags", scope: !2272, file: !1697, line: 192, type: !269)
!2280 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "targetApi", scope: !2272, file: !1697, line: 194, type: !17)
!2281 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "usingNative", scope: !2272, file: !1697, line: 198, type: !31)
!2282 = !DISubprogram(name: "loadSymbols", linkageName: "_Z11loadSymbolsPvR13dispatchTablei", scope: !1697, file: !1697, line: 245, type: !2283, isLocal: false, isDefinition: true, scopeLine: 245, flags: DIFlagPrototyped, isOptimized: true, function: i1 (i8*, %struct.dispatchTable*, i32)* @_Z11loadSymbolsPvR13dispatchTablei, variables: !2286)
!2283 = !DISubroutineType(types: !2284)
!2284 = !{!31, !18, !2285, !17}
!2285 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !"_ZTS13dispatchTable")
!2286 = !{!2287, !2288, !2289}
!2287 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "handle", arg: 1, scope: !2282, file: !1697, line: 245, type: !18)
!2288 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dispatchTab", arg: 2, scope: !2282, file: !1697, line: 245, type: !2285)
!2289 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "device_api", arg: 3, scope: !2282, file: !1697, line: 245, type: !17)
!2290 = !DISubprogram(name: "halide_renderscript_initialize_kernels", scope: !1697, file: !1697, line: 645, type: !2291, isLocal: false, isDefinition: true, scopeLine: 646, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8**, i8*, i32)* @halide_renderscript_initialize_kernels, variables: !2293)
!2291 = !DISubroutineType(types: !2292)
!2292 = !{!17, !18, !370, !46, !17}
!2293 = !{!2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2304, !2305}
!2294 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !2290, file: !1697, line: 645, type: !18)
!2295 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state_ptr", arg: 2, scope: !2290, file: !1697, line: 645, type: !370)
!2296 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src", arg: 3, scope: !2290, file: !1697, line: 646, type: !46)
!2297 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 4, scope: !2290, file: !1697, line: 646, type: !17)
!2298 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ctx", scope: !2290, file: !1697, line: 652, type: !"_ZTSN6Halide7Runtime8Internal12Renderscript7ContextE")
!2299 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_before", scope: !2290, file: !1697, line: 661, type: !91)
!2300 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "state", scope: !2290, file: !1697, line: 668, type: !2233)
!2301 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cacheDir", scope: !2302, file: !1697, line: 678, type: !46)
!2302 = distinct !DILexicalBlock(scope: !2303, file: !1697, line: 677, column: 28)
!2303 = distinct !DILexicalBlock(scope: !2290, file: !1697, line: 677, column: 9)
!2304 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cachedName", scope: !2302, file: !1697, line: 682, type: !46)
!2305 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_after", scope: !2290, file: !1697, line: 698, type: !91)
!2306 = !DISubprogram(name: "halide_renderscript_device_free", scope: !1697, file: !1697, line: 706, type: !2307, isLocal: false, isDefinition: true, scopeLine: 706, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, %struct.buffer_t*)* @halide_renderscript_device_free, variables: !2309)
!2307 = !DISubroutineType(types: !2308)
!2308 = !{!17, !18, !1111}
!2309 = !{!2310, !2311, !2312, !2313, !2314, !2315}
!2310 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !2306, file: !1697, line: 706, type: !18)
!2311 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 2, scope: !2306, file: !1697, line: 706, type: !1111)
!2312 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dev_ptr", scope: !2306, file: !1697, line: 711, type: !18)
!2313 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ctx", scope: !2306, file: !1697, line: 716, type: !"_ZTSN6Halide7Runtime8Internal12Renderscript7ContextE")
!2314 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_before", scope: !2306, file: !1697, line: 722, type: !91)
!2315 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_after", scope: !2306, file: !1697, line: 731, type: !91)
!2316 = !DISubprogram(name: "halide_renderscript_device_release", scope: !1697, file: !1697, line: 739, type: !15, isLocal: false, isDefinition: true, scopeLine: 739, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*)* @halide_renderscript_device_release, variables: !2317)
!2317 = !{!2318, !2319, !2320}
!2318 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !2316, file: !1697, line: 739, type: !18)
!2319 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ctx", scope: !2316, file: !1697, line: 743, type: !"_ZTSN6Halide7Runtime8Internal12Renderscript7ContextE")
!2320 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "state", scope: !2316, file: !1697, line: 755, type: !2232)
!2321 = !DISubprogram(name: "buf_size", scope: !1697, file: !1697, line: 785, type: !2322, isLocal: false, isDefinition: true, scopeLine: 785, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, %struct.buffer_t*)* @buf_size, variables: !2324)
!2322 = !DISubroutineType(types: !2323)
!2323 = !{!471, !18, !1111}
!2324 = !{!2325, !2326, !2327, !2328, !2330}
!2325 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !2321, file: !1697, line: 785, type: !18)
!2326 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 2, scope: !2321, file: !1697, line: 785, type: !1111)
!2327 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !2321, file: !1697, line: 786, type: !471)
!2328 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2329, file: !1697, line: 787, type: !471)
!2329 = distinct !DILexicalBlock(scope: !2321, file: !1697, line: 787, column: 5)
!2330 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "total_dim_size", scope: !2331, file: !1697, line: 788, type: !471)
!2331 = distinct !DILexicalBlock(scope: !2332, file: !1697, line: 787, column: 79)
!2332 = distinct !DILexicalBlock(scope: !2329, file: !1697, line: 787, column: 5)
!2333 = !DISubprogram(name: "is_interleaved_rgba_buffer_t", scope: !2334, file: !1697, line: 799, type: !2335, isLocal: false, isDefinition: true, scopeLine: 799, flags: DIFlagPrototyped, isOptimized: true, function: i1 (%struct.buffer_t*)* @is_interleaved_rgba_buffer_t, variables: !2337)
!2334 = !DINamespace(scope: null, file: !1697, line: 798)
!2335 = !DISubroutineType(types: !2336)
!2336 = !{!31, !1111}
!2337 = !{!2338}
!2338 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 1, scope: !2333, file: !1697, line: 799, type: !1111)
!2339 = !DISubprogram(name: "halide_renderscript_device_malloc", scope: !1697, file: !1697, line: 804, type: !2307, isLocal: false, isDefinition: true, scopeLine: 804, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, %struct.buffer_t*)* @halide_renderscript_device_malloc, variables: !2340)
!2340 = !{!2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2351, !2353, !2354}
!2341 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !2339, file: !1697, line: 804, type: !18)
!2342 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 2, scope: !2339, file: !1697, line: 804, type: !1111)
!2343 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ctx", scope: !2339, file: !1697, line: 808, type: !"_ZTSN6Halide7Runtime8Internal12Renderscript7ContextE")
!2344 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !2339, file: !1697, line: 813, type: !471)
!2345 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_before", scope: !2339, file: !1697, line: 837, type: !91)
!2346 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "typeID", scope: !2339, file: !1697, line: 840, type: !18)
!2347 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "datatype", scope: !2339, file: !1697, line: 853, type: !"_ZTS10RsDataType")
!2348 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "elementID_RGBA_8888", scope: !2349, file: !1697, line: 872, type: !18)
!2349 = distinct !DILexicalBlock(scope: !2350, file: !1697, line: 868, column: 44)
!2350 = distinct !DILexicalBlock(scope: !2339, file: !1697, line: 868, column: 9)
!2351 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "elementID_A", scope: !2352, file: !1697, line: 882, type: !18)
!2352 = distinct !DILexicalBlock(scope: !2350, file: !1697, line: 881, column: 12)
!2353 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !2339, file: !1697, line: 893, type: !18)
!2354 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_after", scope: !2339, file: !1697, line: 910, type: !91)
!2355 = !DISubprogram(name: "halide_renderscript_copy_to_device", scope: !1697, file: !1697, line: 922, type: !2307, isLocal: false, isDefinition: true, scopeLine: 922, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, %struct.buffer_t*)* @halide_renderscript_copy_to_device, variables: !2356)
!2356 = !{!2357, !2358, !2359, !2360, !2361}
!2357 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !2355, file: !1697, line: 922, type: !18)
!2358 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 2, scope: !2355, file: !1697, line: 922, type: !1111)
!2359 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ctx", scope: !2355, file: !1697, line: 928, type: !"_ZTSN6Halide7Runtime8Internal12Renderscript7ContextE")
!2360 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_before", scope: !2355, file: !1697, line: 934, type: !91)
!2361 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_after", scope: !2355, file: !1697, line: 963, type: !91)
!2362 = !DISubprogram(name: "halide_renderscript_copy_to_host", scope: !1697, file: !1697, line: 971, type: !2307, isLocal: false, isDefinition: true, scopeLine: 971, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, %struct.buffer_t*)* @halide_renderscript_copy_to_host, variables: !2363)
!2363 = !{!2364, !2365, !2366, !2367, !2368, !2371, !2372}
!2364 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !2362, file: !1697, line: 971, type: !18)
!2365 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 2, scope: !2362, file: !1697, line: 971, type: !1111)
!2366 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ctx", scope: !2362, file: !1697, line: 979, type: !"_ZTSN6Halide7Runtime8Internal12Renderscript7ContextE")
!2367 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_before", scope: !2362, file: !1697, line: 985, type: !91)
!2368 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "byteSize", scope: !2369, file: !1697, line: 1007, type: !471)
!2369 = distinct !DILexicalBlock(scope: !2370, file: !1697, line: 1002, column: 69)
!2370 = distinct !DILexicalBlock(scope: !2362, file: !1697, line: 1002, column: 9)
!2371 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hostsStride", scope: !2369, file: !1697, line: 1009, type: !471)
!2372 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_after", scope: !2362, file: !1697, line: 1049, type: !91)
!2373 = !DISubprogram(name: "halide_renderscript_device_sync", scope: !1697, file: !1697, line: 1057, type: !1444, isLocal: false, isDefinition: true, scopeLine: 1057, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, %struct.buffer_t*)* @halide_renderscript_device_sync, variables: !2374)
!2374 = !{!2375, !2376, !2377, !2378, !2379}
!2375 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !2373, file: !1697, line: 1057, type: !18)
!2376 = !DILocalVariable(tag: DW_TAG_arg_variable, arg: 2, scope: !2373, file: !1697, line: 1057, type: !1446)
!2377 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ctx", scope: !2373, file: !1697, line: 1061, type: !"_ZTSN6Halide7Runtime8Internal12Renderscript7ContextE")
!2378 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_before", scope: !2373, file: !1697, line: 1067, type: !91)
!2379 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_after", scope: !2373, file: !1697, line: 1073, type: !91)
!2380 = !DISubprogram(name: "halide_renderscript_run", scope: !1697, file: !1697, line: 1082, type: !2381, isLocal: false, isDefinition: true, scopeLine: 1088, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32*, i8**, i8*, i32, float*, i32, i32)* @halide_renderscript_run, variables: !2383)
!2381 = !DISubroutineType(types: !2382)
!2382 = !{!17, !18, !18, !46, !17, !17, !17, !17, !17, !17, !17, !1889, !370, !446, !17, !452, !17, !17}
!2383 = !{!2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2411, !2413, !2414}
!2384 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 1, scope: !2380, file: !1697, line: 1082, type: !18)
!2385 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state_ptr", arg: 2, scope: !2380, file: !1697, line: 1082, type: !18)
!2386 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "entry_name", arg: 3, scope: !2380, file: !1697, line: 1083, type: !46)
!2387 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "blocksX", arg: 4, scope: !2380, file: !1697, line: 1083, type: !17)
!2388 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "blocksY", arg: 5, scope: !2380, file: !1697, line: 1083, type: !17)
!2389 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "blocksZ", arg: 6, scope: !2380, file: !1697, line: 1084, type: !17)
!2390 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "threadsX", arg: 7, scope: !2380, file: !1697, line: 1084, type: !17)
!2391 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "threadsY", arg: 8, scope: !2380, file: !1697, line: 1084, type: !17)
!2392 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "threadsZ", arg: 9, scope: !2380, file: !1697, line: 1084, type: !17)
!2393 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "shared_mem_bytes", arg: 10, scope: !2380, file: !1697, line: 1085, type: !17)
!2394 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg_sizes", arg: 11, scope: !2380, file: !1697, line: 1085, type: !1889)
!2395 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 12, scope: !2380, file: !1697, line: 1085, type: !370)
!2396 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg_is_buffer", arg: 13, scope: !2380, file: !1697, line: 1086, type: !446)
!2397 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "num_attributes", arg: 14, scope: !2380, file: !1697, line: 1086, type: !17)
!2398 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "vertex_buffer", arg: 15, scope: !2380, file: !1697, line: 1087, type: !452)
!2399 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "num_coords_dim0", arg: 16, scope: !2380, file: !1697, line: 1087, type: !17)
!2400 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "num_coords_dim1", arg: 17, scope: !2380, file: !1697, line: 1088, type: !17)
!2401 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ctx", scope: !2380, file: !1697, line: 1098, type: !"_ZTSN6Halide7Runtime8Internal12Renderscript7ContextE")
!2402 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_before", scope: !2380, file: !1697, line: 1106, type: !91)
!2403 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "module", scope: !2380, file: !1697, line: 1110, type: !18)
!2404 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "num_args", scope: !2380, file: !1697, line: 1114, type: !471)
!2405 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "input_arg", scope: !2380, file: !1697, line: 1116, type: !91)
!2406 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "output_arg", scope: !2380, file: !1697, line: 1117, type: !91)
!2407 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "arg_value", scope: !2408, file: !1697, line: 1124, type: !292)
!2408 = distinct !DILexicalBlock(scope: !2409, file: !1697, line: 1123, column: 43)
!2409 = distinct !DILexicalBlock(scope: !2410, file: !1697, line: 1123, column: 13)
!2410 = distinct !DILexicalBlock(scope: !2380, file: !1697, line: 1118, column: 38)
!2411 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "arg_value", scope: !2412, file: !1697, line: 1128, type: !91)
!2412 = distinct !DILexicalBlock(scope: !2409, file: !1697, line: 1127, column: 16)
!2413 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "slot", scope: !2380, file: !1697, line: 1142, type: !17)
!2414 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_after", scope: !2380, file: !1697, line: 1174, type: !91)
!2415 = !DISubprogram(name: "halide_renderscript_device_interface", scope: !1697, file: !1697, line: 1181, type: !2416, isLocal: false, isDefinition: true, scopeLine: 1181, flags: DIFlagPrototyped, isOptimized: true, function: %struct.halide_device_interface* ()* @halide_renderscript_device_interface, variables: !2)
!2416 = !DISubroutineType(types: !2417)
!2417 = !{!1457}
!2418 = !DISubprogram(name: "halide_renderscript_cleanup", scope: !2334, file: !1697, line: 1186, type: !183, isLocal: false, isDefinition: true, scopeLine: 1186, flags: DIFlagPrototyped, isOptimized: true, function: void ()* @halide_renderscript_cleanup, variables: !2)
!2419 = !DISubprogram(name: "get_error_name", linkageName: "_ZN6Halide7Runtime8Internal12Renderscript14get_error_nameE7RSError", scope: !2212, file: !1697, line: 1198, type: !2420, isLocal: false, isDefinition: true, scopeLine: 1198, flags: DIFlagPrototyped, isOptimized: true, variables: !2422)
!2420 = !DISubroutineType(types: !2421)
!2421 = !{!46, !"_ZTS7RSError"}
!2422 = !{!2423}
!2423 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "error", arg: 1, scope: !2419, file: !1697, line: 1198, type: !"_ZTS7RSError")
!2424 = !DISubprogram(name: "getProp", linkageName: "_ZN6Halide7Runtime8Internal12RenderscriptL7getPropEPKc", scope: !2212, file: !1697, line: 132, type: !2425, isLocal: true, isDefinition: true, scopeLine: 132, flags: DIFlagPrototyped, isOptimized: true, variables: !2427)
!2425 = !DISubroutineType(types: !2426)
!2426 = !{!269, !46}
!2427 = !{!2428, !2429}
!2428 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "str", arg: 1, scope: !2424, file: !1697, line: 132, type: !46)
!2429 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !2424, file: !1697, line: 133, type: !2430)
!2430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 2048, align: 8, elements: !1312)
!2431 = !DISubprogram(name: "loadSO", linkageName: "_ZN6Halide7Runtime8Internal12Renderscript7Context6loadSOEPKc", scope: !"_ZTSN6Halide7Runtime8Internal12Renderscript7ContextE", file: !1697, line: 149, type: !679, isLocal: false, isDefinition: true, scopeLine: 149, flags: DIFlagPrototyped, isOptimized: true, function: i1 (i8*)* @_ZN6Halide7Runtime8Internal12Renderscript7Context6loadSOEPKc, declaration: !2220, variables: !2432)
!2432 = !{!2433, !2434}
!2433 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "filename", arg: 1, scope: !2431, file: !1697, line: 149, type: !46)
!2434 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "handle", scope: !2431, file: !1697, line: 150, type: !18)
!2435 = !DISubprogram(name: "Context", linkageName: "_ZN6Halide7Runtime8Internal12Renderscript7ContextC2EPv", scope: !"_ZTSN6Halide7Runtime8Internal12Renderscript7ContextE", file: !1697, line: 165, type: !2222, isLocal: false, isDefinition: true, scopeLine: 167, flags: DIFlagPrototyped, isOptimized: true, declaration: !2221, variables: !2436)
!2436 = !{!2437, !2439}
!2437 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !2435, type: !2438, flags: DIFlagArtificial | DIFlagObjectPointer)
!2438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTSN6Halide7Runtime8Internal12Renderscript7ContextE", size: 32, align: 32)
!2439 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user_context", arg: 2, scope: !2435, file: !1697, line: 165, type: !18)
!2440 = !DISubprogram(name: "~Context", linkageName: "_ZN6Halide7Runtime8Internal12Renderscript7ContextD2Ev", scope: !"_ZTSN6Halide7Runtime8Internal12Renderscript7ContextE", file: !1697, line: 176, type: !2226, isLocal: false, isDefinition: true, scopeLine: 176, flags: DIFlagPrototyped, isOptimized: true, declaration: !2225, variables: !2441)
!2441 = !{!2442}
!2442 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !2440, type: !2438, flags: DIFlagArtificial | DIFlagObjectPointer)
!2443 = !DISubprogram(name: "Printer", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EEC2EPv", scope: !2444, file: !11, line: 135, type: !2451, isLocal: true, isDefinition: true, scopeLine: 135, flags: DIFlagPrototyped, isOptimized: true, declaration: !2450, variables: !2490)
!2444 = !DICompositeType(tag: DW_TAG_class_type, name: "Printer<0, 1024>", scope: !38, file: !11, line: 130, size: 128, align: 32, elements: !2445, templateParams: !1600)
!2445 = !{!2446, !2447, !2448, !2449, !2450, !2454, !2458, !2461, !2464, !2467, !2470, !2473, !2476, !2479, !2482, !2487}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2444, file: !11, line: 132, baseType: !162, size: 32, align: 32, flags: DIFlagPublic)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !2444, file: !11, line: 132, baseType: !162, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2444, file: !11, line: 132, baseType: !162, size: 32, align: 32, offset: 64, flags: DIFlagPublic)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "user_context", scope: !2444, file: !11, line: 133, baseType: !18, size: 32, align: 32, offset: 96, flags: DIFlagPublic)
!2450 = !DISubprogram(name: "Printer", scope: !2444, file: !11, line: 135, type: !2451, isLocal: false, isDefinition: false, scopeLine: 135, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2451 = !DISubroutineType(types: !2452)
!2452 = !{null, !2453, !18}
!2453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 32, align: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!2454 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEPKc", scope: !2444, file: !11, line: 142, type: !2455, isLocal: false, isDefinition: false, scopeLine: 142, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2455 = !DISubroutineType(types: !2456)
!2456 = !{!2457, !2453, !46}
!2457 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2444)
!2458 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEx", scope: !2444, file: !11, line: 147, type: !2459, isLocal: false, isDefinition: false, scopeLine: 147, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2459 = !DISubroutineType(types: !2460)
!2460 = !{!2457, !2453, !10}
!2461 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEi", scope: !2444, file: !11, line: 152, type: !2462, isLocal: false, isDefinition: false, scopeLine: 152, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2462 = !DISubroutineType(types: !2463)
!2463 = !{!2457, !2453, !292}
!2464 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEy", scope: !2444, file: !11, line: 157, type: !2465, isLocal: false, isDefinition: false, scopeLine: 157, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2465 = !DISubroutineType(types: !2466)
!2466 = !{!2457, !2453, !91}
!2467 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEj", scope: !2444, file: !11, line: 162, type: !2468, isLocal: false, isDefinition: false, scopeLine: 162, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2468 = !DISubroutineType(types: !2469)
!2469 = !{!2457, !2453, !269}
!2470 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEd", scope: !2444, file: !11, line: 167, type: !2471, isLocal: false, isDefinition: false, scopeLine: 167, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2471 = !DISubroutineType(types: !2472)
!2472 = !{!2457, !2453, !281}
!2473 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEf", scope: !2444, file: !11, line: 172, type: !2474, isLocal: false, isDefinition: false, scopeLine: 172, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2474 = !DISubroutineType(types: !2475)
!2475 = !{!2457, !2453, !268}
!2476 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEPKv", scope: !2444, file: !11, line: 177, type: !2477, isLocal: false, isDefinition: false, scopeLine: 177, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2477 = !DISubroutineType(types: !2478)
!2478 = !{!2457, !2453, !523}
!2479 = !DISubprogram(name: "str", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EE3strEv", scope: !2444, file: !11, line: 183, type: !2480, isLocal: false, isDefinition: false, scopeLine: 183, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2480 = !DISubroutineType(types: !2481)
!2481 = !{!46, !2453}
!2482 = !DISubprogram(name: "size", linkageName: "_ZNK6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EE4sizeEv", scope: !2444, file: !11, line: 188, type: !2483, isLocal: false, isDefinition: false, scopeLine: 188, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2483 = !DISubroutineType(types: !2484)
!2484 = !{!91, !2485}
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 32, align: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!2486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2444)
!2487 = !DISubprogram(name: "~Printer", scope: !2444, file: !11, line: 192, type: !2488, isLocal: false, isDefinition: false, scopeLine: 192, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2488 = !DISubroutineType(types: !2489)
!2489 = !{null, !2453}
!2490 = !{!2491, !2493}
!2491 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !2443, type: !2492, flags: DIFlagArtificial | DIFlagObjectPointer)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 32, align: 32)
!2493 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 2, scope: !2443, file: !11, line: 135, type: !18)
!2494 = !DISubprogram(name: "~Printer", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EED2Ev", scope: !2444, file: !11, line: 192, type: !2488, isLocal: true, isDefinition: true, scopeLine: 192, flags: DIFlagPrototyped, isOptimized: true, declaration: !2487, variables: !2495)
!2495 = !{!2496}
!2496 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !2494, type: !2492, flags: DIFlagArtificial | DIFlagObjectPointer)
!2497 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEPKc", scope: !2444, file: !11, line: 142, type: !2455, isLocal: true, isDefinition: true, scopeLine: 142, flags: DIFlagPrototyped, isOptimized: true, declaration: !2454, variables: !2498)
!2498 = !{!2499, !2500}
!2499 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !2497, type: !2492, flags: DIFlagArtificial | DIFlagObjectPointer)
!2500 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !2497, file: !11, line: 142, type: !46)
!2501 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEPKv", scope: !2444, file: !11, line: 177, type: !2477, isLocal: true, isDefinition: true, scopeLine: 177, flags: DIFlagPrototyped, isOptimized: true, declaration: !2476, variables: !2502)
!2502 = !{!2503, !2504}
!2503 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !2501, type: !2492, flags: DIFlagArtificial | DIFlagObjectPointer)
!2504 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !2501, file: !11, line: 177, type: !523)
!2505 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEi", scope: !2444, file: !11, line: 152, type: !2462, isLocal: true, isDefinition: true, scopeLine: 152, flags: DIFlagPrototyped, isOptimized: true, declaration: !2461, variables: !2506)
!2506 = !{!2507, !2508}
!2507 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !2505, type: !2492, flags: DIFlagArtificial | DIFlagObjectPointer)
!2508 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !2505, file: !11, line: 152, type: !292)
!2509 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEd", scope: !2444, file: !11, line: 167, type: !2471, isLocal: true, isDefinition: true, scopeLine: 167, flags: DIFlagPrototyped, isOptimized: true, declaration: !2470, variables: !2510)
!2510 = !{!2511, !2512}
!2511 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !2509, type: !2492, flags: DIFlagArtificial | DIFlagObjectPointer)
!2512 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !2509, file: !11, line: 167, type: !281)
!2513 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEx", scope: !2444, file: !11, line: 147, type: !2459, isLocal: true, isDefinition: true, scopeLine: 147, flags: DIFlagPrototyped, isOptimized: true, declaration: !2458, variables: !2514)
!2514 = !{!2515, !2516}
!2515 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !2513, type: !2492, flags: DIFlagArtificial | DIFlagObjectPointer)
!2516 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !2513, file: !11, line: 147, type: !10)
!2517 = !DISubprogram(name: "Printer", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EEC2EPv", scope: !2518, file: !11, line: 135, type: !2525, isLocal: true, isDefinition: true, scopeLine: 135, flags: DIFlagPrototyped, isOptimized: true, declaration: !2524, variables: !2564)
!2518 = !DICompositeType(tag: DW_TAG_class_type, name: "Printer<1, 1024>", scope: !38, file: !11, line: 130, size: 128, align: 32, elements: !2519, templateParams: !1020)
!2519 = !{!2520, !2521, !2522, !2523, !2524, !2528, !2532, !2535, !2538, !2541, !2544, !2547, !2550, !2553, !2556, !2561}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2518, file: !11, line: 132, baseType: !162, size: 32, align: 32, flags: DIFlagPublic)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !2518, file: !11, line: 132, baseType: !162, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2518, file: !11, line: 132, baseType: !162, size: 32, align: 32, offset: 64, flags: DIFlagPublic)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "user_context", scope: !2518, file: !11, line: 133, baseType: !18, size: 32, align: 32, offset: 96, flags: DIFlagPublic)
!2524 = !DISubprogram(name: "Printer", scope: !2518, file: !11, line: 135, type: !2525, isLocal: false, isDefinition: false, scopeLine: 135, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2525 = !DISubroutineType(types: !2526)
!2526 = !{null, !2527, !18}
!2527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 32, align: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!2528 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EElsEPKc", scope: !2518, file: !11, line: 142, type: !2529, isLocal: false, isDefinition: false, scopeLine: 142, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2529 = !DISubroutineType(types: !2530)
!2530 = !{!2531, !2527, !46}
!2531 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2518)
!2532 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EElsEx", scope: !2518, file: !11, line: 147, type: !2533, isLocal: false, isDefinition: false, scopeLine: 147, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2533 = !DISubroutineType(types: !2534)
!2534 = !{!2531, !2527, !10}
!2535 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EElsEi", scope: !2518, file: !11, line: 152, type: !2536, isLocal: false, isDefinition: false, scopeLine: 152, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2536 = !DISubroutineType(types: !2537)
!2537 = !{!2531, !2527, !292}
!2538 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EElsEy", scope: !2518, file: !11, line: 157, type: !2539, isLocal: false, isDefinition: false, scopeLine: 157, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2539 = !DISubroutineType(types: !2540)
!2540 = !{!2531, !2527, !91}
!2541 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EElsEj", scope: !2518, file: !11, line: 162, type: !2542, isLocal: false, isDefinition: false, scopeLine: 162, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2542 = !DISubroutineType(types: !2543)
!2543 = !{!2531, !2527, !269}
!2544 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EElsEd", scope: !2518, file: !11, line: 167, type: !2545, isLocal: false, isDefinition: false, scopeLine: 167, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2545 = !DISubroutineType(types: !2546)
!2546 = !{!2531, !2527, !281}
!2547 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EElsEf", scope: !2518, file: !11, line: 172, type: !2548, isLocal: false, isDefinition: false, scopeLine: 172, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2548 = !DISubroutineType(types: !2549)
!2549 = !{!2531, !2527, !268}
!2550 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EElsEPKv", scope: !2518, file: !11, line: 177, type: !2551, isLocal: false, isDefinition: false, scopeLine: 177, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2551 = !DISubroutineType(types: !2552)
!2552 = !{!2531, !2527, !523}
!2553 = !DISubprogram(name: "str", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EE3strEv", scope: !2518, file: !11, line: 183, type: !2554, isLocal: false, isDefinition: false, scopeLine: 183, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2554 = !DISubroutineType(types: !2555)
!2555 = !{!46, !2527}
!2556 = !DISubprogram(name: "size", linkageName: "_ZNK6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EE4sizeEv", scope: !2518, file: !11, line: 188, type: !2557, isLocal: false, isDefinition: false, scopeLine: 188, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2557 = !DISubroutineType(types: !2558)
!2558 = !{!91, !2559}
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2560, size: 32, align: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!2560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2518)
!2561 = !DISubprogram(name: "~Printer", scope: !2518, file: !11, line: 192, type: !2562, isLocal: false, isDefinition: false, scopeLine: 192, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!2562 = !DISubroutineType(types: !2563)
!2563 = !{null, !2527}
!2564 = !{!2565, !2567}
!2565 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !2517, type: !2566, flags: DIFlagArtificial | DIFlagObjectPointer)
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 32, align: 32)
!2567 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 2, scope: !2517, file: !11, line: 135, type: !18)
!2568 = !DISubprogram(name: "~Printer", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EED2Ev", scope: !2518, file: !11, line: 192, type: !2562, isLocal: true, isDefinition: true, scopeLine: 192, flags: DIFlagPrototyped, isOptimized: true, declaration: !2561, variables: !2569)
!2569 = !{!2570}
!2570 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !2568, type: !2566, flags: DIFlagArtificial | DIFlagObjectPointer)
!2571 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EElsEPKc", scope: !2518, file: !11, line: 142, type: !2529, isLocal: true, isDefinition: true, scopeLine: 142, flags: DIFlagPrototyped, isOptimized: true, declaration: !2528, variables: !2572)
!2572 = !{!2573, !2574}
!2573 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !2571, type: !2566, flags: DIFlagArtificial | DIFlagObjectPointer)
!2574 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !2571, file: !11, line: 142, type: !46)
!2575 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi1ELy1024EElsEi", scope: !2518, file: !11, line: 152, type: !2536, isLocal: true, isDefinition: true, scopeLine: 152, flags: DIFlagPrototyped, isOptimized: true, declaration: !2535, variables: !2576)
!2576 = !{!2577, !2578}
!2577 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !2575, type: !2566, flags: DIFlagArtificial | DIFlagObjectPointer)
!2578 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !2575, file: !11, line: 152, type: !292)
!2579 = !DISubprogram(name: "max<int>", linkageName: "_ZN6Halide7Runtime8Internal3maxIiEET_RKS3_S5_", scope: !35, file: !11, line: 237, type: !2580, isLocal: false, isDefinition: true, scopeLine: 237, flags: DIFlagPrototyped, isOptimized: true, templateParams: !2583, variables: !2585)
!2580 = !DISubroutineType(types: !2581)
!2581 = !{!17, !2582, !2582}
!2582 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1375)
!2583 = !{!2584}
!2584 = !DITemplateTypeParameter(name: "T", type: !17)
!2585 = !{!2586, !2587}
!2586 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !2579, file: !11, line: 237, type: !2582)
!2587 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 2, scope: !2579, file: !11, line: 237, type: !2582)
!2588 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEf", scope: !2444, file: !11, line: 172, type: !2474, isLocal: true, isDefinition: true, scopeLine: 172, flags: DIFlagPrototyped, isOptimized: true, declaration: !2473, variables: !2589)
!2589 = !{!2590, !2591}
!2590 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !2588, type: !2492, flags: DIFlagArtificial | DIFlagObjectPointer)
!2591 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !2588, file: !11, line: 172, type: !268)
!2592 = !DISubprogram(name: "operator<<", linkageName: "_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILi0ELy1024EElsEj", scope: !2444, file: !11, line: 162, type: !2468, isLocal: true, isDefinition: true, scopeLine: 162, flags: DIFlagPrototyped, isOptimized: true, declaration: !2467, variables: !2593)
!2593 = !{!2594, !2595}
!2594 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !2592, type: !2492, flags: DIFlagArtificial | DIFlagObjectPointer)
!2595 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !2592, file: !11, line: 162, type: !269)
!2596 = !{!2597, !2598, !2599, !2600, !2601, !2602, !2603}
!2597 = !DIGlobalVariable(name: "context", linkageName: "_ZN6Halide7Runtime8Internal12Renderscript7contextE", scope: !2212, file: !1697, line: 30, type: !1826, isLocal: false, isDefinition: true, variable: i8** @_ZN6Halide7Runtime8Internal12Renderscript7contextE)
!2598 = !DIGlobalVariable(name: "device", linkageName: "_ZN6Halide7Runtime8Internal12Renderscript6deviceE", scope: !2212, file: !1697, line: 31, type: !1858, isLocal: false, isDefinition: true, variable: i8** @_ZN6Halide7Runtime8Internal12Renderscript6deviceE)
!2599 = !DIGlobalVariable(name: "thread_lock", linkageName: "_ZN6Halide7Runtime8Internal12Renderscript11thread_lockE", scope: !2212, file: !1697, line: 32, type: !386, isLocal: false, isDefinition: true, variable: i32* @_ZN6Halide7Runtime8Internal12Renderscript11thread_lockE)
!2600 = !DIGlobalVariable(name: "halide_renderscript_cache_dir", scope: !1696, file: !1697, line: 87, type: !46, isLocal: false, isDefinition: true, variable: i8** @halide_renderscript_cache_dir)
!2601 = !DIGlobalVariable(name: "dispatch", linkageName: "_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE", scope: !2212, file: !1697, line: 179, type: !2219, isLocal: false, isDefinition: true, variable: %struct.dispatchTable** @_ZN6Halide7Runtime8Internal12Renderscript7Context8dispatchE, declaration: !2218)
!2602 = !DIGlobalVariable(name: "state_list", linkageName: "_ZN6Halide7Runtime8Internal12Renderscript10state_listE", scope: !2212, file: !1697, line: 189, type: !2232, isLocal: false, isDefinition: true, variable: %"struct.Halide::Runtime::Internal::Renderscript::module_state"** @_ZN6Halide7Runtime8Internal12Renderscript10state_listE)
!2603 = !DIGlobalVariable(name: "renderscript_device_interface", linkageName: "_ZN6Halide7Runtime8Internal12Renderscript29renderscript_device_interfaceE", scope: !2212, file: !1697, line: 1213, type: !"_ZTS23halide_device_interface", isLocal: false, isDefinition: true, variable: %struct.halide_device_interface* @_ZN6Halide7Runtime8Internal12Renderscript29renderscript_device_interfaceE)
!2604 = !{!34, !2605, !2606}
!2605 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1696, entity: !35, line: 243)
!2606 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1696, entity: !2212, line: 38)
!2607 = !{i32 2, !"Dwarf Version", i32 4}
!2608 = !{i32 2, !"Debug Info Version", i32 3}
!2609 = !{i32 2, !"halide_use_soft_float_abi", i32 1}
!2610 = !{i32 2, !"halide_mcpu", !"swift"}
!2611 = !{i32 2, !"halide_mattrs", !"+neon"}
!2612 = !{!"clang version 3.7.0 (trunk 240337) (llvm/trunk 240338)"}
!2613 = !DIExpression()
!2614 = !DILocation(line: 55, column: 35, scope: !14)
!2615 = !DILocation(line: 57, column: 10, scope: !2616)
!2616 = distinct !DILexicalBlock(scope: !14, file: !5, line: 57, column: 9)
!2617 = !{!2618, !2618, i64 0}
!2618 = !{!"bool", !2619, i64 0}
!2619 = !{!"omnipotent char", !2620, i64 0}
!2620 = !{!"Simple C/C++ TBAA"}
!2621 = !{i8 0, i8 2}
!2622 = !DILocation(line: 57, column: 9, scope: !14)
!2623 = !DILocation(line: 58, column: 9, scope: !2624)
!2624 = distinct !DILexicalBlock(scope: !2616, file: !5, line: 57, column: 41)
!2625 = !DILocation(line: 59, column: 39, scope: !2624)
!2626 = !DILocation(line: 60, column: 5, scope: !2624)
!2627 = !DILocation(line: 61, column: 5, scope: !14)
!2628 = !DILocation(line: 64, column: 43, scope: !21)
!2629 = !DILocation(line: 65, column: 5, scope: !21)
!2630 = !DILocation(line: 65, column: 14, scope: !21)
!2631 = !DILocation(line: 68, column: 5, scope: !21)
!2632 = !DILocation(line: 69, column: 29, scope: !21)
!2633 = !{!2634, !2635, i64 0}
!2634 = !{!"_ZTS8timespec", !2635, i64 0, !2635, i64 4}
!2635 = !{!"long", !2619, i64 0}
!2636 = !DILocation(line: 69, column: 61, scope: !21)
!2637 = !DILocation(line: 69, column: 36, scope: !21)
!2638 = !DILocation(line: 69, column: 25, scope: !21)
!2639 = !DILocation(line: 69, column: 68, scope: !21)
!2640 = !DILocation(line: 69, column: 13, scope: !21)
!2641 = !DILocation(line: 70, column: 23, scope: !21)
!2642 = !{!2634, !2635, i64 4}
!2643 = !DILocation(line: 70, column: 56, scope: !21)
!2644 = !DILocation(line: 70, column: 31, scope: !21)
!2645 = !DILocation(line: 70, column: 18, scope: !21)
!2646 = !DILocation(line: 70, column: 13, scope: !21)
!2647 = !DILocation(line: 71, column: 14, scope: !21)
!2648 = !DILocation(line: 72, column: 1, scope: !21)
!2649 = !DILocation(line: 71, column: 5, scope: !21)
!2650 = !DILocation(line: 13, column: 35, scope: !43)
!2651 = !DILocation(line: 13, column: 62, scope: !43)
!2652 = !DILocation(line: 14, column: 5, scope: !43)
!2653 = !DILocation(line: 15, column: 1, scope: !43)
!2654 = !DILocation(line: 9, column: 12, scope: !57)
!2655 = !DILocation(line: 9, column: 5, scope: !57)
!2656 = !DILocation(line: 117, column: 32, scope: !127)
!2657 = !DILocation(line: 117, column: 58, scope: !127)
!2658 = !DILocation(line: 117, column: 65, scope: !127)
!2659 = !DILocation(line: 118, column: 34, scope: !127)
!2660 = !DILocation(line: 119, column: 12, scope: !127)
!2661 = !DILocation(line: 119, column: 5, scope: !127)
!2662 = !DILocation(line: 122, column: 39, scope: !136)
!2663 = !DILocation(line: 123, column: 23, scope: !136)
!2664 = !DILocation(line: 123, column: 11, scope: !136)
!2665 = !DILocation(line: 126, column: 5, scope: !136)
!2666 = !DILocation(line: 74, column: 43, scope: !2667, inlinedAt: !2668)
!2667 = !DILexicalBlockFile(scope: !227, file: !63, discriminator: 2)
!2668 = distinct !DILocation(line: 132, column: 32, scope: !2669)
!2669 = !DILexicalBlockFile(scope: !136, file: !63, discriminator: 2)
!2670 = !DILocation(line: 132, column: 22, scope: !136)
!2671 = !DILocation(line: 74, column: 29, scope: !227, inlinedAt: !2668)
!2672 = !DILocation(line: 74, column: 36, scope: !227, inlinedAt: !2668)
!2673 = !DILocation(line: 0, scope: !230, inlinedAt: !2674)
!2674 = distinct !DILocation(line: 133, column: 14, scope: !136)
!2675 = !DILocation(line: 111, column: 17, scope: !230, inlinedAt: !2674)
!2676 = !{!2677, !2618, i64 480}
!2677 = !{!"_ZTSN6Halide7Runtime8Internal19halide_work_queue_tE", !2678, i64 0, !2679, i64 64, !2680, i64 68, !2680, i64 72, !2681, i64 80, !2681, i64 128, !2681, i64 176, !2619, i64 224, !2618, i64 480}
!2678 = !{!"_ZTS15pthread_mutex_t", !2619, i64 0}
!2679 = !{!"any pointer", !2619, i64 0}
!2680 = !{!"int", !2619, i64 0}
!2681 = !{!"_ZTS14pthread_cond_t", !2619, i64 0}
!2682 = !DILocation(line: 111, column: 16, scope: !230, inlinedAt: !2674)
!2683 = !DILocation(line: 132, column: 5, scope: !2684)
!2684 = !DILexicalBlockFile(scope: !2685, file: !63, discriminator: 4)
!2685 = !DILexicalBlockFile(scope: !136, file: !63, discriminator: 3)
!2686 = !DILocation(line: 0, scope: !227, inlinedAt: !2668)
!2687 = !{!2688, !2680, i64 12}
!2688 = !{!"_ZTSN6Halide7Runtime8Internal4workE", !2679, i64 0, !2679, i64 4, !2679, i64 8, !2680, i64 12, !2680, i64 16, !2679, i64 20, !2680, i64 24, !2680, i64 28}
!2689 = !{!2688, !2680, i64 16}
!2690 = !DILocation(line: 74, column: 34, scope: !227, inlinedAt: !2668)
!2691 = !DILocation(line: 74, column: 40, scope: !227, inlinedAt: !2668)
!2692 = !{!2688, !2680, i64 24}
!2693 = !DILocation(line: 74, column: 58, scope: !227, inlinedAt: !2668)
!2694 = !DILocation(line: 135, column: 31, scope: !144)
!2695 = !{!2677, !2679, i64 64}
!2696 = !DILocation(line: 135, column: 36, scope: !144)
!2697 = !DILocation(line: 135, column: 13, scope: !145)
!2698 = !DILocation(line: 153, column: 19, scope: !143)
!2699 = !DILocation(line: 156, column: 18, scope: !143)
!2700 = !DILocation(line: 156, column: 26, scope: !143)
!2701 = !DIExpression(DW_OP_bit_piece, 32, 32)
!2702 = !DIExpression(DW_OP_bit_piece, 64, 32)
!2703 = !DIExpression(DW_OP_bit_piece, 96, 32)
!2704 = !DIExpression(DW_OP_bit_piece, 160, 32)
!2705 = !DILocation(line: 157, column: 22, scope: !143)
!2706 = !DILocation(line: 161, column: 35, scope: !2707)
!2707 = distinct !DILexicalBlock(scope: !143, file: !63, line: 161, column: 17)
!2708 = !DILocation(line: 161, column: 27, scope: !2707)
!2709 = !DILocation(line: 161, column: 17, scope: !143)
!2710 = !DILocation(line: 162, column: 47, scope: !2711)
!2711 = distinct !DILexicalBlock(scope: !2707, file: !63, line: 161, column: 40)
!2712 = !{!2688, !2679, i64 0}
!2713 = !DILocation(line: 162, column: 40, scope: !2711)
!2714 = !DILocation(line: 163, column: 13, scope: !2711)
!2715 = !DILocation(line: 168, column: 32, scope: !143)
!2716 = !DILocation(line: 171, column: 13, scope: !143)
!2717 = !DILocation(line: 172, column: 26, scope: !143)
!2718 = !DILocation(line: 172, column: 17, scope: !143)
!2719 = !DILocation(line: 174, column: 13, scope: !143)
!2720 = !DILocation(line: 177, column: 17, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !143, file: !63, line: 177, column: 17)
!2722 = !DILocation(line: 177, column: 17, scope: !143)
!2723 = !DILocation(line: 178, column: 22, scope: !2724)
!2724 = distinct !DILexicalBlock(scope: !2721, file: !63, line: 177, column: 25)
!2725 = !DILocation(line: 178, column: 34, scope: !2724)
!2726 = !{!2688, !2680, i64 28}
!2727 = !DILocation(line: 179, column: 13, scope: !2724)
!2728 = !DILocation(line: 182, column: 32, scope: !143)
!2729 = !DILocation(line: 0, scope: !227, inlinedAt: !2730)
!2730 = distinct !DILocation(line: 186, column: 18, scope: !2731)
!2731 = distinct !DILexicalBlock(scope: !143, file: !63, line: 186, column: 17)
!2732 = !DILocation(line: 74, column: 29, scope: !227, inlinedAt: !2730)
!2733 = !DILocation(line: 74, column: 36, scope: !227, inlinedAt: !2730)
!2734 = !DILocation(line: 74, column: 34, scope: !227, inlinedAt: !2730)
!2735 = !DILocation(line: 74, column: 40, scope: !227, inlinedAt: !2730)
!2736 = !DILocation(line: 74, column: 58, scope: !227, inlinedAt: !2730)
!2737 = !DILocation(line: 186, column: 40, scope: !2731)
!2738 = !DILocation(line: 186, column: 33, scope: !2731)
!2739 = !DILocation(line: 187, column: 17, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2731, file: !63, line: 186, column: 54)
!2741 = !DILocation(line: 188, column: 13, scope: !2740)
!2742 = !DILocation(line: 139, column: 17, scope: !2743)
!2743 = distinct !DILexicalBlock(scope: !2744, file: !63, line: 136, column: 28)
!2744 = distinct !DILexicalBlock(scope: !2745, file: !63, line: 136, column: 17)
!2745 = distinct !DILexicalBlock(scope: !144, file: !63, line: 135, column: 45)
!2746 = !DILocation(line: 140, column: 13, scope: !2743)
!2747 = !DILocation(line: 140, column: 42, scope: !2748)
!2748 = distinct !DILexicalBlock(scope: !2744, file: !63, line: 140, column: 24)
!2749 = !{!2677, !2680, i64 68}
!2750 = !DILocation(line: 140, column: 75, scope: !2748)
!2751 = !{!2677, !2680, i64 72}
!2752 = !DILocation(line: 140, column: 54, scope: !2748)
!2753 = !DILocation(line: 140, column: 24, scope: !2744)
!2754 = !DILocation(line: 142, column: 17, scope: !2755)
!2755 = distinct !DILexicalBlock(scope: !2748, file: !63, line: 140, column: 95)
!2756 = !DILocation(line: 143, column: 13, scope: !2755)
!2757 = !DILocation(line: 147, column: 46, scope: !2758)
!2758 = distinct !DILexicalBlock(scope: !2748, file: !63, line: 143, column: 20)
!2759 = !DILocation(line: 148, column: 17, scope: !2758)
!2760 = !DILocation(line: 149, column: 46, scope: !2758)
!2761 = !DILocation(line: 191, column: 5, scope: !136)
!2762 = !DILocation(line: 192, column: 5, scope: !136)
!2763 = !DILocation(line: 372, column: 31, scope: !212)
!2764 = !DILocation(line: 372, column: 57, scope: !212)
!2765 = !DILocation(line: 372, column: 64, scope: !212)
!2766 = !DILocation(line: 373, column: 34, scope: !212)
!2767 = !DILocation(line: 374, column: 14, scope: !212)
!2768 = !{!2679, !2679, i64 0}
!2769 = !DILocation(line: 374, column: 12, scope: !212)
!2770 = !DILocation(line: 374, column: 5, scope: !212)
!2771 = !DILocation(line: 195, column: 35, scope: !148)
!2772 = !DILocation(line: 195, column: 61, scope: !148)
!2773 = !DILocation(line: 196, column: 33, scope: !148)
!2774 = !DILocation(line: 196, column: 42, scope: !148)
!2775 = !DILocation(line: 196, column: 57, scope: !148)
!2776 = !DILocation(line: 201, column: 5, scope: !148)
!2777 = !DILocation(line: 203, column: 10, scope: !161)
!2778 = !DILocation(line: 203, column: 9, scope: !148)
!2779 = !DILocation(line: 260, column: 49, scope: !148)
!2780 = !DILocation(line: 204, column: 36, scope: !160)
!2781 = !DILocation(line: 205, column: 9, scope: !160)
!2782 = !DILocation(line: 206, column: 9, scope: !160)
!2783 = !DILocation(line: 207, column: 9, scope: !160)
!2784 = !DILocation(line: 208, column: 32, scope: !160)
!2785 = !DILocation(line: 210, column: 14, scope: !159)
!2786 = !{!2680, !2680, i64 0}
!2787 = !DILocation(line: 210, column: 13, scope: !160)
!2788 = !DILocation(line: 211, column: 33, scope: !158)
!2789 = !DILocation(line: 211, column: 19, scope: !158)
!2790 = !DILocation(line: 212, column: 18, scope: !2791)
!2791 = distinct !DILexicalBlock(scope: !158, file: !63, line: 212, column: 17)
!2792 = !DILocation(line: 212, column: 17, scope: !158)
!2793 = !DILocation(line: 214, column: 31, scope: !2794)
!2794 = distinct !DILexicalBlock(scope: !2791, file: !63, line: 212, column: 31)
!2795 = !DILocation(line: 216, column: 17, scope: !2796)
!2796 = distinct !DILexicalBlock(scope: !158, file: !63, line: 216, column: 17)
!2797 = !DILocation(line: 216, column: 17, scope: !158)
!2798 = !DILocation(line: 217, column: 38, scope: !2799)
!2799 = distinct !DILexicalBlock(scope: !2796, file: !63, line: 216, column: 30)
!2800 = !DILocation(line: 218, column: 13, scope: !2799)
!2801 = !DILocation(line: 219, column: 38, scope: !2802)
!2802 = distinct !DILexicalBlock(scope: !2796, file: !63, line: 218, column: 20)
!2803 = !DILocation(line: 217, column: 36, scope: !2799)
!2804 = !DILocation(line: 222, column: 9, scope: !158)
!2805 = !DILocation(line: 223, column: 13, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !160, file: !63, line: 223, column: 13)
!2807 = !DILocation(line: 223, column: 32, scope: !2806)
!2808 = !DILocation(line: 223, column: 13, scope: !160)
!2809 = !DILocation(line: 224, column: 32, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !2806, file: !63, line: 223, column: 47)
!2811 = !DILocation(line: 228, column: 9, scope: !164)
!2812 = !DILocation(line: 225, column: 39, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !2806, file: !63, line: 225, column: 20)
!2814 = !DILocation(line: 225, column: 20, scope: !2806)
!2815 = !DILocation(line: 226, column: 32, scope: !2816)
!2816 = distinct !DILexicalBlock(scope: !2813, file: !63, line: 225, column: 44)
!2817 = !DILocation(line: 228, column: 27, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !164, file: !63, line: 228, column: 9)
!2819 = !DILocation(line: 233, column: 39, scope: !160)
!2820 = !DILocation(line: 235, column: 40, scope: !160)
!2821 = !DILocation(line: 236, column: 5, scope: !160)
!2822 = !DILocation(line: 230, column: 54, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2818, file: !63, line: 228, column: 56)
!2824 = !DILocation(line: 230, column: 13, scope: !2823)
!2825 = !DILocation(line: 228, column: 52, scope: !2818)
!2826 = !DILocation(line: 228, column: 18, scope: !164)
!2827 = !DILocation(line: 228, column: 29, scope: !2818)
!2828 = !DILocation(line: 228, column: 47, scope: !2818)
!2829 = !DILocation(line: 239, column: 5, scope: !148)
!2830 = !DILocation(line: 240, column: 9, scope: !148)
!2831 = !DILocation(line: 240, column: 11, scope: !148)
!2832 = !{!2688, !2679, i64 4}
!2833 = !DILocation(line: 241, column: 9, scope: !148)
!2834 = !DILocation(line: 241, column: 22, scope: !148)
!2835 = !{!2688, !2679, i64 8}
!2836 = !DILocation(line: 242, column: 9, scope: !148)
!2837 = !DILocation(line: 242, column: 14, scope: !148)
!2838 = !DILocation(line: 243, column: 20, scope: !148)
!2839 = !DILocation(line: 243, column: 9, scope: !148)
!2840 = !DILocation(line: 243, column: 14, scope: !148)
!2841 = !DILocation(line: 244, column: 9, scope: !148)
!2842 = !DILocation(line: 244, column: 17, scope: !148)
!2843 = !{!2688, !2679, i64 20}
!2844 = !DILocation(line: 245, column: 9, scope: !148)
!2845 = !DILocation(line: 245, column: 21, scope: !148)
!2846 = !DILocation(line: 246, column: 9, scope: !148)
!2847 = !DILocation(line: 246, column: 24, scope: !148)
!2848 = !DILocation(line: 248, column: 28, scope: !2849)
!2849 = distinct !DILexicalBlock(scope: !148, file: !63, line: 248, column: 9)
!2850 = !DILocation(line: 248, column: 10, scope: !2849)
!2851 = !DILocation(line: 248, column: 41, scope: !2849)
!2852 = !DILocation(line: 248, column: 33, scope: !2849)
!2853 = !DILocation(line: 255, column: 46, scope: !2854)
!2854 = distinct !DILexicalBlock(scope: !2849, file: !63, line: 254, column: 12)
!2855 = !DILocation(line: 260, column: 29, scope: !148)
!2856 = !DILocation(line: 263, column: 9, scope: !148)
!2857 = !DILocation(line: 263, column: 18, scope: !148)
!2858 = !DILocation(line: 239, column: 10, scope: !148)
!2859 = !DILocation(line: 264, column: 28, scope: !148)
!2860 = !DILocation(line: 266, column: 5, scope: !148)
!2861 = !DILocation(line: 269, column: 5, scope: !148)
!2862 = !DILocation(line: 271, column: 9, scope: !148)
!2863 = !DILocation(line: 273, column: 9, scope: !2864)
!2864 = distinct !DILexicalBlock(scope: !2865, file: !63, line: 271, column: 22)
!2865 = distinct !DILexicalBlock(scope: !148, file: !63, line: 271, column: 9)
!2866 = !DILocation(line: 274, column: 5, scope: !2864)
!2867 = !DILocation(line: 277, column: 5, scope: !148)
!2868 = !DILocation(line: 281, column: 16, scope: !148)
!2869 = !DILocation(line: 282, column: 1, scope: !148)
!2870 = !DILocation(line: 281, column: 5, scope: !148)
!2871 = !DILocation(line: 291, column: 46, scope: !167)
!2872 = !DILocation(line: 292, column: 22, scope: !167)
!2873 = !DILocation(line: 293, column: 5, scope: !167)
!2874 = !DILocation(line: 294, column: 12, scope: !167)
!2875 = !DILocation(line: 294, column: 5, scope: !167)
!2876 = !DILocation(line: 295, column: 1, scope: !167)
!2877 = !DILocation(line: 297, column: 43, scope: !174)
!2878 = !DILocation(line: 298, column: 22, scope: !174)
!2879 = !DILocation(line: 299, column: 5, scope: !174)
!2880 = !DILocation(line: 300, column: 1, scope: !174)
!2881 = !DILocation(line: 302, column: 45, scope: !178)
!2882 = !DILocation(line: 303, column: 22, scope: !178)
!2883 = !DILocation(line: 304, column: 5, scope: !178)
!2884 = !DILocation(line: 305, column: 1, scope: !178)
!2885 = !DILocation(line: 309, column: 10, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !182, file: !63, line: 309, column: 9)
!2887 = !DILocation(line: 309, column: 9, scope: !182)
!2888 = !DILocation(line: 313, column: 5, scope: !182)
!2889 = !DILocation(line: 314, column: 32, scope: !182)
!2890 = !DILocation(line: 315, column: 5, scope: !182)
!2891 = !DILocation(line: 316, column: 5, scope: !182)
!2892 = !DILocation(line: 317, column: 5, scope: !182)
!2893 = !DILocation(line: 318, column: 5, scope: !182)
!2894 = !DILocation(line: 321, column: 14, scope: !187)
!2895 = !DILocation(line: 321, column: 25, scope: !190)
!2896 = !DILocation(line: 321, column: 23, scope: !190)
!2897 = !DILocation(line: 321, column: 5, scope: !187)
!2898 = !DILocation(line: 323, column: 9, scope: !189)
!2899 = !DILocation(line: 329, column: 5, scope: !182)
!2900 = !DILocation(line: 331, column: 5, scope: !182)
!2901 = !DILocation(line: 332, column: 5, scope: !182)
!2902 = !DILocation(line: 333, column: 5, scope: !182)
!2903 = !DILocation(line: 334, column: 5, scope: !182)
!2904 = !DILocation(line: 335, column: 36, scope: !182)
!2905 = !DILocation(line: 336, column: 1, scope: !182)
!2906 = !DILocation(line: 324, column: 22, scope: !189)
!2907 = !{!2635, !2635, i64 0}
!2908 = !DILocation(line: 323, column: 15, scope: !189)
!2909 = !DILocation(line: 324, column: 9, scope: !189)
!2910 = !DILocation(line: 325, column: 5, scope: !190)
!2911 = !DILocation(line: 321, column: 48, scope: !190)
!2912 = !DILocation(line: 321, column: 43, scope: !190)
!2913 = !DILocation(line: 336, column: 1, scope: !2914)
!2914 = !DILexicalBlockFile(scope: !182, file: !63, discriminator: 1)
!2915 = !DILocation(line: 341, column: 5, scope: !191)
!2916 = !DILocation(line: 342, column: 1, scope: !191)
!2917 = !DILocation(line: 345, column: 38, scope: !193)
!2918 = !DILocation(line: 346, column: 9, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !193, file: !63, line: 346, column: 9)
!2920 = !DILocation(line: 346, column: 28, scope: !2919)
!2921 = !DILocation(line: 346, column: 9, scope: !193)
!2922 = !DILocation(line: 350, column: 9, scope: !2923)
!2923 = distinct !DILexicalBlock(scope: !193, file: !63, line: 350, column: 9)
!2924 = !DILocation(line: 350, column: 9, scope: !193)
!2925 = !DILocation(line: 351, column: 9, scope: !2926)
!2926 = distinct !DILexicalBlock(scope: !2923, file: !63, line: 350, column: 41)
!2927 = !DILocation(line: 352, column: 5, scope: !2926)
!2928 = !DILocation(line: 354, column: 24, scope: !193)
!2929 = !DILocation(line: 355, column: 1, scope: !193)
!2930 = !DILocation(line: 355, column: 1, scope: !2931)
!2931 = !DILexicalBlockFile(scope: !193, file: !63, discriminator: 1)
!2932 = !DILocation(line: 357, column: 44, scope: !198)
!2933 = !DILocation(line: 359, column: 58, scope: !198)
!2934 = !DILocation(line: 359, column: 11, scope: !198)
!2935 = !DILocation(line: 360, column: 27, scope: !198)
!2936 = !DILocation(line: 361, column: 5, scope: !198)
!2937 = !DILocation(line: 365, column: 47, scope: !205)
!2938 = !DILocation(line: 367, column: 63, scope: !205)
!2939 = !DILocation(line: 367, column: 11, scope: !205)
!2940 = !DILocation(line: 368, column: 30, scope: !205)
!2941 = !DILocation(line: 369, column: 5, scope: !205)
!2942 = !DILocation(line: 377, column: 34, scope: !218)
!2943 = !DILocation(line: 377, column: 54, scope: !218)
!2944 = !DILocation(line: 378, column: 32, scope: !218)
!2945 = !DILocation(line: 378, column: 41, scope: !218)
!2946 = !DILocation(line: 378, column: 56, scope: !218)
!2947 = !DILocation(line: 379, column: 12, scope: !218)
!2948 = !DILocation(line: 379, column: 10, scope: !218)
!2949 = !DILocation(line: 379, column: 3, scope: !218)
!2950 = !DILocation(line: 10, column: 42, scope: !245)
!2951 = !DILocation(line: 11, column: 12, scope: !245)
!2952 = !DILocation(line: 11, column: 5, scope: !245)
!2953 = !DILocation(line: 14, column: 44, scope: !250)
!2954 = !DILocation(line: 15, column: 12, scope: !250)
!2955 = !DILocation(line: 15, column: 5, scope: !250)
!2956 = !DILocation(line: 18, column: 44, scope: !253)
!2957 = !DILocation(line: 18, column: 61, scope: !253)
!2958 = !DILocation(line: 19, column: 12, scope: !253)
!2959 = !DILocation(line: 19, column: 5, scope: !253)
!2960 = !DILocation(line: 19, column: 37, scope: !395)
!2961 = !DILocation(line: 20, column: 23, scope: !395)
!2962 = !DILocation(line: 21, column: 35, scope: !395)
!2963 = !DILocation(line: 22, column: 1, scope: !395)
!2964 = !DILocation(line: 23, column: 38, scope: !398)
!2965 = !DILocation(line: 24, column: 20, scope: !398)
!2966 = !DILocation(line: 0, scope: !405, inlinedAt: !2967)
!2967 = distinct !DILocation(line: 24, column: 20, scope: !398)
!2968 = !DILocation(line: 10, column: 34, scope: !405, inlinedAt: !2967)
!2969 = !DILocation(line: 11, column: 9, scope: !2970, inlinedAt: !2967)
!2970 = distinct !DILexicalBlock(scope: !405, file: !382, line: 10, column: 78)
!2971 = !DILocation(line: 11, column: 16, scope: !2970, inlinedAt: !2967)
!2972 = !DILocation(line: 25, column: 10, scope: !404)
!2973 = !DILocation(line: 25, column: 9, scope: !398)
!2974 = !DILocation(line: 34, column: 12, scope: !398)
!2975 = !DILocation(line: 26, column: 27, scope: !403)
!2976 = !DILocation(line: 26, column: 21, scope: !403)
!2977 = !DILocation(line: 27, column: 13, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !403, file: !379, line: 27, column: 13)
!2979 = !DILocation(line: 27, column: 13, scope: !403)
!2980 = !DILocation(line: 28, column: 33, scope: !2981)
!2981 = distinct !DILexicalBlock(scope: !2978, file: !379, line: 27, column: 18)
!2982 = !DILocation(line: 29, column: 9, scope: !2981)
!2983 = !DILocation(line: 28, column: 31, scope: !2981)
!2984 = !DILocation(line: 32, column: 39, scope: !403)
!2985 = !DILocation(line: 33, column: 5, scope: !403)
!2986 = !DILocation(line: 0, scope: !410, inlinedAt: !2987)
!2987 = distinct !DILocation(line: 35, column: 1, scope: !398)
!2988 = !DILocation(line: 15, column: 9, scope: !2989, inlinedAt: !2987)
!2989 = distinct !DILexicalBlock(scope: !410, file: !382, line: 14, column: 54)
!2990 = !DILocation(line: 35, column: 1, scope: !398)
!2991 = !DILocation(line: 18, column: 34, scope: !455)
!2992 = !DILocation(line: 18, column: 74, scope: !455)
!2993 = !DILocation(line: 21, column: 21, scope: !455)
!2994 = !DILocation(line: 21, column: 13, scope: !455)
!2995 = !DILocation(line: 24, column: 14, scope: !455)
!2996 = !DILocation(line: 24, column: 9, scope: !455)
!2997 = !DILocation(line: 25, column: 12, scope: !467)
!2998 = !DILocation(line: 25, column: 9, scope: !455)
!2999 = !DILocation(line: 27, column: 36, scope: !466)
!3000 = !{!3001, !2680, i64 20}
!3001 = !{!"_ZTS18halide_trace_event", !2679, i64 0, !3002, i64 4, !2680, i64 8, !2680, i64 12, !2680, i64 16, !2680, i64 20, !2680, i64 24, !2679, i64 28, !2680, i64 32, !2679, i64 36}
!3002 = !{!"_ZTS23halide_trace_event_code", !2619, i64 0}
!3003 = !DILocation(line: 27, column: 17, scope: !466)
!3004 = !DILocation(line: 28, column: 41, scope: !466)
!3005 = !{!3001, !2680, i64 32}
!3006 = !DILocation(line: 33, column: 29, scope: !466)
!3007 = !{!3001, !2680, i64 16}
!3008 = !DILocation(line: 28, column: 38, scope: !466)
!3009 = !DILocation(line: 33, column: 21, scope: !466)
!3010 = !DILocation(line: 33, column: 24, scope: !466)
!3011 = !DILocation(line: 33, column: 41, scope: !3012)
!3012 = !DILexicalBlockFile(scope: !466, file: !420, discriminator: 2)
!3013 = !DILocation(line: 32, column: 13, scope: !466)
!3014 = !DILocation(line: 33, column: 9, scope: !466)
!3015 = !DILocation(line: 27, column: 33, scope: !466)
!3016 = !DILocation(line: 27, column: 49, scope: !466)
!3017 = !DILocation(line: 28, column: 52, scope: !466)
!3018 = !DILocation(line: 36, column: 16, scope: !466)
!3019 = !DILocation(line: 37, column: 30, scope: !466)
!3020 = !DILocation(line: 37, column: 44, scope: !466)
!3021 = !DILocation(line: 37, column: 16, scope: !466)
!3022 = !DILocation(line: 38, column: 32, scope: !466)
!3023 = !DILocation(line: 38, column: 51, scope: !466)
!3024 = !DILocation(line: 38, column: 16, scope: !466)
!3025 = !DILocation(line: 39, column: 43, scope: !466)
!3026 = !DILocation(line: 39, column: 57, scope: !466)
!3027 = !DILocation(line: 39, column: 16, scope: !466)
!3028 = !DILocation(line: 40, column: 9, scope: !466)
!3029 = !DILocation(line: 40, column: 17, scope: !466)
!3030 = !DILocation(line: 41, column: 9, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !466, file: !420, line: 41, column: 9)
!3032 = !DILocation(line: 41, column: 9, scope: !466)
!3033 = !DILocation(line: 41, column: 9, scope: !3034)
!3034 = !DILexicalBlockFile(scope: !3031, file: !420, discriminator: 1)
!3035 = !DILocation(line: 47, column: 25, scope: !466)
!3036 = !DILocation(line: 43, column: 10, scope: !466)
!3037 = !DILocation(line: 43, column: 32, scope: !466)
!3038 = !DILocation(line: 44, column: 37, scope: !466)
!3039 = !{!3001, !2680, i64 8}
!3040 = !DILocation(line: 44, column: 9, scope: !466)
!3041 = !DILocation(line: 44, column: 32, scope: !466)
!3042 = !DILocation(line: 45, column: 24, scope: !466)
!3043 = !{!3001, !3002, i64 4}
!3044 = !DILocation(line: 45, column: 21, scope: !466)
!3045 = !DILocation(line: 45, column: 9, scope: !466)
!3046 = !DILocation(line: 45, column: 19, scope: !466)
!3047 = !{!2619, !2619, i64 0}
!3048 = !DILocation(line: 46, column: 24, scope: !466)
!3049 = !{!3001, !2680, i64 12}
!3050 = !DILocation(line: 46, column: 21, scope: !466)
!3051 = !DILocation(line: 46, column: 9, scope: !466)
!3052 = !DILocation(line: 46, column: 19, scope: !466)
!3053 = !DILocation(line: 47, column: 9, scope: !466)
!3054 = !DILocation(line: 47, column: 20, scope: !466)
!3055 = !DILocation(line: 48, column: 9, scope: !466)
!3056 = !DILocation(line: 48, column: 20, scope: !466)
!3057 = !DILocation(line: 49, column: 25, scope: !466)
!3058 = !{!3001, !2680, i64 24}
!3059 = !DILocation(line: 49, column: 22, scope: !466)
!3060 = !DILocation(line: 49, column: 9, scope: !466)
!3061 = !DILocation(line: 49, column: 20, scope: !466)
!3062 = !DILocation(line: 50, column: 9, scope: !466)
!3063 = !DILocation(line: 50, column: 20, scope: !466)
!3064 = !DILocation(line: 53, column: 13, scope: !466)
!3065 = !DILocation(line: 55, column: 28, scope: !3066)
!3066 = distinct !DILexicalBlock(scope: !3067, file: !420, line: 54, column: 41)
!3067 = distinct !DILexicalBlock(scope: !3068, file: !420, line: 54, column: 9)
!3068 = distinct !DILexicalBlock(scope: !466, file: !420, line: 54, column: 9)
!3069 = !{!3001, !2679, i64 0}
!3070 = !DILocation(line: 55, column: 25, scope: !3066)
!3071 = !DILocation(line: 55, column: 13, scope: !3066)
!3072 = !DILocation(line: 55, column: 23, scope: !3066)
!3073 = !DILocation(line: 56, column: 27, scope: !3074)
!3074 = distinct !DILexicalBlock(scope: !3066, file: !420, line: 56, column: 17)
!3075 = !DILocation(line: 56, column: 17, scope: !3066)
!3076 = !DILocation(line: 60, column: 13, scope: !3077)
!3077 = distinct !DILexicalBlock(scope: !3078, file: !420, line: 59, column: 39)
!3078 = distinct !DILexicalBlock(scope: !3079, file: !420, line: 59, column: 9)
!3079 = distinct !DILexicalBlock(scope: !466, file: !420, line: 59, column: 9)
!3080 = !DILocation(line: 60, column: 23, scope: !3077)
!3081 = !DILocation(line: 64, column: 30, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !481, file: !420, line: 64, column: 9)
!3083 = !DILocation(line: 59, column: 35, scope: !3078)
!3084 = !DILocation(line: 64, column: 9, scope: !481)
!3085 = !DILocation(line: 65, column: 56, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3082, file: !420, line: 64, column: 50)
!3087 = !{!3001, !2679, i64 28}
!3088 = !DILocation(line: 64, column: 46, scope: !3082)
!3089 = !DILocation(line: 65, column: 40, scope: !3086)
!3090 = !DILocation(line: 65, column: 13, scope: !3086)
!3091 = !DILocation(line: 65, column: 38, scope: !3086)
!3092 = distinct !{!3092, !3093, !3094}
!3093 = !{!"llvm.loop.vectorize.width", i32 1}
!3094 = !{!"llvm.loop.interleave.count", i32 1}
!3095 = !DILocation(line: 69, column: 30, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !483, file: !420, line: 69, column: 9)
!3097 = !DILocation(line: 69, column: 9, scope: !483)
!3098 = !DILocation(line: 70, column: 70, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !3096, file: !420, line: 69, column: 52)
!3100 = !{!3001, !2679, i64 36}
!3101 = !DILocation(line: 69, column: 48, scope: !3096)
!3102 = !DILocation(line: 70, column: 54, scope: !3099)
!3103 = !DILocation(line: 70, column: 13, scope: !3099)
!3104 = !DILocation(line: 70, column: 52, scope: !3099)
!3105 = distinct !{!3105, !3093, !3094}
!3106 = !DILocation(line: 65, column: 33, scope: !3086)
!3107 = !DILocation(line: 64, column: 21, scope: !481)
!3108 = distinct !{!3108, !3093, !3094}
!3109 = !DILocation(line: 74, column: 26, scope: !466)
!3110 = !DILocation(line: 74, column: 16, scope: !466)
!3111 = !DILocation(line: 75, column: 9, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !466, file: !420, line: 75, column: 9)
!3113 = !DILocation(line: 75, column: 9, scope: !466)
!3114 = !DILocation(line: 70, column: 47, scope: !3099)
!3115 = !DILocation(line: 69, column: 21, scope: !483)
!3116 = distinct !{!3116, !3093, !3094}
!3117 = !DILocation(line: 75, column: 9, scope: !3118)
!3118 = !DILexicalBlockFile(scope: !3112, file: !420, discriminator: 1)
!3119 = !DILocation(line: 77, column: 5, scope: !467)
!3120 = !DILocation(line: 77, column: 5, scope: !466)
!3121 = !DILocation(line: 78, column: 22, scope: !486)
!3122 = !DILocation(line: 0, scope: !588, inlinedAt: !3123)
!3123 = distinct !DILocation(line: 78, column: 22, scope: !486)
!3124 = !DILocation(line: 135, column: 19, scope: !588, inlinedAt: !3123)
!3125 = !DILocation(line: 136, column: 23, scope: !3126, inlinedAt: !3123)
!3126 = distinct !DILexicalBlock(scope: !588, file: !11, line: 135, column: 44)
!3127 = !DILocation(line: 138, column: 19, scope: !3126, inlinedAt: !3123)
!3128 = !DILocation(line: 139, column: 14, scope: !3126, inlinedAt: !3123)
!3129 = !DILocation(line: 81, column: 13, scope: !486)
!3130 = !DILocation(line: 82, column: 32, scope: !486)
!3131 = !DILocation(line: 82, column: 9, scope: !486)
!3132 = !DILocation(line: 82, column: 27, scope: !486)
!3133 = !DILocation(line: 82, column: 49, scope: !3134)
!3134 = !DILexicalBlockFile(scope: !486, file: !420, discriminator: 2)
!3135 = !DILocation(line: 83, column: 9, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !486, file: !420, line: 83, column: 9)
!3137 = !DILocation(line: 83, column: 9, scope: !486)
!3138 = !DILocation(line: 83, column: 9, scope: !3139)
!3139 = !DILexicalBlockFile(scope: !3136, file: !420, discriminator: 1)
!3140 = !DILocation(line: 86, column: 21, scope: !486)
!3141 = !DILocation(line: 96, column: 32, scope: !486)
!3142 = !DILocation(line: 96, column: 38, scope: !486)
!3143 = !DILocation(line: 98, column: 15, scope: !486)
!3144 = !DILocation(line: 0, scope: !596, inlinedAt: !3145)
!3145 = distinct !DILocation(line: 98, column: 12, scope: !486)
!3146 = !DILocation(line: 142, column: 37, scope: !596, inlinedAt: !3145)
!3147 = !DILocation(line: 143, column: 15, scope: !596, inlinedAt: !3145)
!3148 = !DILocation(line: 0, scope: !596, inlinedAt: !3149)
!3149 = distinct !DILocation(line: 98, column: 37, scope: !486)
!3150 = !DILocation(line: 142, column: 37, scope: !596, inlinedAt: !3149)
!3151 = !DILocation(line: 143, column: 15, scope: !596, inlinedAt: !3149)
!3152 = !DILocation(line: 98, column: 50, scope: !486)
!3153 = !DILocation(line: 0, scope: !596, inlinedAt: !3154)
!3154 = distinct !DILocation(line: 98, column: 44, scope: !486)
!3155 = !DILocation(line: 142, column: 37, scope: !596, inlinedAt: !3154)
!3156 = !DILocation(line: 143, column: 15, scope: !596, inlinedAt: !3154)
!3157 = !DILocation(line: 0, scope: !596, inlinedAt: !3158)
!3158 = distinct !DILocation(line: 98, column: 55, scope: !486)
!3159 = !DILocation(line: 142, column: 37, scope: !596, inlinedAt: !3158)
!3160 = !DILocation(line: 143, column: 15, scope: !596, inlinedAt: !3158)
!3161 = !DILocation(line: 98, column: 68, scope: !486)
!3162 = !DILocation(line: 0, scope: !600, inlinedAt: !3163)
!3163 = distinct !DILocation(line: 98, column: 62, scope: !486)
!3164 = !DILocation(line: 152, column: 33, scope: !600, inlinedAt: !3163)
!3165 = !DILocation(line: 153, column: 48, scope: !600, inlinedAt: !3163)
!3166 = !DILocation(line: 153, column: 15, scope: !600, inlinedAt: !3163)
!3167 = !DILocation(line: 0, scope: !596, inlinedAt: !3168)
!3168 = distinct !DILocation(line: 98, column: 80, scope: !486)
!3169 = !DILocation(line: 142, column: 37, scope: !596, inlinedAt: !3168)
!3170 = !DILocation(line: 143, column: 15, scope: !596, inlinedAt: !3168)
!3171 = !DILocation(line: 99, column: 16, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !486, file: !420, line: 99, column: 13)
!3173 = !DILocation(line: 99, column: 29, scope: !3172)
!3174 = !DILocation(line: 99, column: 13, scope: !486)
!3175 = !DILocation(line: 0, scope: !596, inlinedAt: !3176)
!3176 = distinct !DILocation(line: 100, column: 16, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !3172, file: !420, line: 99, column: 34)
!3178 = !DILocation(line: 142, column: 37, scope: !596, inlinedAt: !3176)
!3179 = !DILocation(line: 143, column: 15, scope: !596, inlinedAt: !3176)
!3180 = !DILocation(line: 101, column: 9, scope: !3177)
!3181 = !DILocation(line: 102, column: 32, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !544, file: !420, line: 102, column: 9)
!3183 = !DILocation(line: 102, column: 27, scope: !3182)
!3184 = !DILocation(line: 102, column: 9, scope: !544)
!3185 = !DILocation(line: 110, column: 22, scope: !3186)
!3186 = distinct !DILexicalBlock(scope: !3182, file: !420, line: 102, column: 49)
!3187 = !DILocation(line: 112, column: 16, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !486, file: !420, line: 112, column: 13)
!3189 = !DILocation(line: 112, column: 29, scope: !3188)
!3190 = !DILocation(line: 0, scope: !596, inlinedAt: !3191)
!3191 = distinct !DILocation(line: 113, column: 16, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3188, file: !420, line: 112, column: 34)
!3193 = !DILocation(line: 112, column: 13, scope: !486)
!3194 = !DILocation(line: 103, column: 19, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3186, file: !420, line: 103, column: 17)
!3196 = !DILocation(line: 103, column: 17, scope: !3186)
!3197 = !DILocation(line: 104, column: 25, scope: !3198)
!3198 = distinct !DILexicalBlock(scope: !3199, file: !420, line: 104, column: 21)
!3199 = distinct !DILexicalBlock(scope: !3195, file: !420, line: 103, column: 24)
!3200 = !DILocation(line: 104, column: 38, scope: !3198)
!3201 = !DILocation(line: 104, column: 43, scope: !3198)
!3202 = !DILocation(line: 104, column: 49, scope: !3198)
!3203 = !DILocation(line: 104, column: 68, scope: !3198)
!3204 = !DILocation(line: 104, column: 21, scope: !3199)
!3205 = !DILocation(line: 0, scope: !596, inlinedAt: !3206)
!3206 = distinct !DILocation(line: 105, column: 24, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !3198, file: !420, line: 104, column: 74)
!3208 = !DILocation(line: 142, column: 37, scope: !596, inlinedAt: !3206)
!3209 = !DILocation(line: 143, column: 15, scope: !596, inlinedAt: !3206)
!3210 = !DILocation(line: 106, column: 17, scope: !3207)
!3211 = !DILocation(line: 0, scope: !596, inlinedAt: !3212)
!3212 = distinct !DILocation(line: 107, column: 24, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3198, file: !420, line: 106, column: 24)
!3214 = !DILocation(line: 142, column: 37, scope: !596, inlinedAt: !3212)
!3215 = !DILocation(line: 143, column: 15, scope: !596, inlinedAt: !3212)
!3216 = !DILocation(line: 110, column: 19, scope: !3186)
!3217 = !DILocation(line: 0, scope: !600, inlinedAt: !3218)
!3218 = distinct !DILocation(line: 110, column: 16, scope: !3186)
!3219 = !DILocation(line: 152, column: 33, scope: !600, inlinedAt: !3218)
!3220 = !DILocation(line: 153, column: 48, scope: !600, inlinedAt: !3218)
!3221 = !DILocation(line: 153, column: 15, scope: !600, inlinedAt: !3218)
!3222 = !DILocation(line: 102, column: 45, scope: !3182)
!3223 = !DILocation(line: 102, column: 18, scope: !544)
!3224 = !DILocation(line: 142, column: 37, scope: !596, inlinedAt: !3191)
!3225 = !DILocation(line: 143, column: 15, scope: !596, inlinedAt: !3191)
!3226 = !DILocation(line: 114, column: 9, scope: !3192)
!3227 = !DILocation(line: 142, column: 37, scope: !596, inlinedAt: !3228)
!3228 = distinct !DILocation(line: 115, column: 16, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3188, file: !420, line: 114, column: 16)
!3230 = !DILocation(line: 143, column: 15, scope: !596, inlinedAt: !3228)
!3231 = !DILocation(line: 118, column: 13, scope: !486)
!3232 = !DILocation(line: 119, column: 20, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !547, file: !420, line: 119, column: 17)
!3234 = !DILocation(line: 119, column: 33, scope: !3233)
!3235 = !DILocation(line: 0, scope: !596, inlinedAt: !3236)
!3236 = distinct !DILocation(line: 120, column: 20, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3233, file: !420, line: 119, column: 38)
!3238 = !DILocation(line: 119, column: 17, scope: !547)
!3239 = !DILocation(line: 142, column: 37, scope: !596, inlinedAt: !3236)
!3240 = !DILocation(line: 143, column: 15, scope: !596, inlinedAt: !3236)
!3241 = !DILocation(line: 121, column: 13, scope: !3237)
!3242 = !DILocation(line: 142, column: 37, scope: !596, inlinedAt: !3243)
!3243 = distinct !DILocation(line: 122, column: 20, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !3233, file: !420, line: 121, column: 20)
!3245 = !DILocation(line: 143, column: 15, scope: !596, inlinedAt: !3243)
!3246 = !DILocation(line: 124, column: 36, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !546, file: !420, line: 124, column: 13)
!3248 = !DILocation(line: 124, column: 31, scope: !3247)
!3249 = !DILocation(line: 124, column: 13, scope: !546)
!3250 = !DILocation(line: 128, column: 24, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3252, file: !420, line: 128, column: 21)
!3252 = distinct !DILexicalBlock(scope: !3247, file: !420, line: 124, column: 55)
!3253 = !DILocation(line: 133, column: 43, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3255, file: !420, line: 133, column: 32)
!3255 = distinct !DILexicalBlock(scope: !3256, file: !420, line: 131, column: 32)
!3256 = distinct !DILexicalBlock(scope: !3257, file: !420, line: 129, column: 25)
!3257 = distinct !DILexicalBlock(scope: !3251, file: !420, line: 128, column: 40)
!3258 = !DILocation(line: 134, column: 47, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3254, file: !420, line: 133, column: 50)
!3260 = !DILocation(line: 132, column: 47, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3255, file: !420, line: 131, column: 50)
!3262 = !DILocation(line: 149, column: 21, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3264, file: !420, line: 149, column: 21)
!3264 = distinct !DILexicalBlock(scope: !3265, file: !420, line: 148, column: 47)
!3265 = distinct !DILexicalBlock(scope: !3266, file: !420, line: 148, column: 28)
!3266 = distinct !DILexicalBlock(scope: !3251, file: !420, line: 138, column: 28)
!3267 = !DILocation(line: 156, column: 41, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3269, file: !420, line: 155, column: 47)
!3269 = distinct !DILexicalBlock(scope: !3265, file: !420, line: 155, column: 28)
!3270 = !DILocation(line: 159, column: 33, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !547, file: !420, line: 159, column: 17)
!3272 = !DILocation(line: 159, column: 17, scope: !547)
!3273 = !DILocation(line: 125, column: 23, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3252, file: !420, line: 125, column: 21)
!3275 = !DILocation(line: 125, column: 21, scope: !3252)
!3276 = !DILocation(line: 0, scope: !596, inlinedAt: !3277)
!3277 = distinct !DILocation(line: 126, column: 24, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3274, file: !420, line: 125, column: 28)
!3279 = !DILocation(line: 142, column: 37, scope: !596, inlinedAt: !3277)
!3280 = !DILocation(line: 143, column: 15, scope: !596, inlinedAt: !3277)
!3281 = !DILocation(line: 127, column: 17, scope: !3278)
!3282 = !DILocation(line: 128, column: 21, scope: !3252)
!3283 = !DILocation(line: 129, column: 25, scope: !3257)
!3284 = !DILocation(line: 130, column: 46, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3256, file: !420, line: 129, column: 42)
!3286 = !DILocation(line: 130, column: 31, scope: !3285)
!3287 = !DILocation(line: 0, scope: !600, inlinedAt: !3288)
!3288 = distinct !DILocation(line: 130, column: 28, scope: !3285)
!3289 = !DILocation(line: 153, column: 48, scope: !600, inlinedAt: !3288)
!3290 = !DILocation(line: 153, column: 15, scope: !600, inlinedAt: !3288)
!3291 = !DILocation(line: 131, column: 21, scope: !3285)
!3292 = !DILocation(line: 132, column: 31, scope: !3261)
!3293 = !{!3294, !3294, i64 0}
!3294 = !{!"short", !2619, i64 0}
!3295 = !DILocation(line: 0, scope: !600, inlinedAt: !3296)
!3296 = distinct !DILocation(line: 132, column: 28, scope: !3261)
!3297 = !DILocation(line: 153, column: 48, scope: !600, inlinedAt: !3296)
!3298 = !DILocation(line: 153, column: 15, scope: !600, inlinedAt: !3296)
!3299 = !DILocation(line: 133, column: 21, scope: !3261)
!3300 = !DILocation(line: 133, column: 32, scope: !3255)
!3301 = !DILocation(line: 134, column: 32, scope: !3259)
!3302 = !DILocation(line: 134, column: 31, scope: !3259)
!3303 = !DILocation(line: 0, scope: !600, inlinedAt: !3304)
!3304 = distinct !DILocation(line: 134, column: 28, scope: !3259)
!3305 = !DILocation(line: 152, column: 33, scope: !600, inlinedAt: !3304)
!3306 = !DILocation(line: 153, column: 48, scope: !600, inlinedAt: !3304)
!3307 = !DILocation(line: 153, column: 15, scope: !600, inlinedAt: !3304)
!3308 = !DILocation(line: 135, column: 21, scope: !3259)
!3309 = !DILocation(line: 136, column: 32, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !3254, file: !420, line: 135, column: 28)
!3311 = !DILocation(line: 136, column: 31, scope: !3310)
!3312 = !{!3313, !3313, i64 0}
!3313 = !{!"long long", !2619, i64 0}
!3314 = !DILocation(line: 148, column: 15, scope: !604, inlinedAt: !3315)
!3315 = distinct !DILocation(line: 136, column: 28, scope: !3310)
!3316 = !DILocation(line: 139, column: 25, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3266, file: !420, line: 138, column: 47)
!3318 = !DILocation(line: 140, column: 47, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3320, file: !420, line: 139, column: 42)
!3320 = distinct !DILexicalBlock(scope: !3317, file: !420, line: 139, column: 25)
!3321 = !DILocation(line: 140, column: 31, scope: !3319)
!3322 = !DILocation(line: 0, scope: !600, inlinedAt: !3323)
!3323 = distinct !DILocation(line: 140, column: 28, scope: !3319)
!3324 = !DILocation(line: 153, column: 48, scope: !600, inlinedAt: !3323)
!3325 = !DILocation(line: 153, column: 15, scope: !600, inlinedAt: !3323)
!3326 = !DILocation(line: 141, column: 21, scope: !3319)
!3327 = !DILocation(line: 142, column: 48, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3329, file: !420, line: 141, column: 50)
!3329 = distinct !DILexicalBlock(scope: !3320, file: !420, line: 141, column: 32)
!3330 = !DILocation(line: 142, column: 31, scope: !3328)
!3331 = !DILocation(line: 0, scope: !600, inlinedAt: !3332)
!3332 = distinct !DILocation(line: 142, column: 28, scope: !3328)
!3333 = !DILocation(line: 153, column: 48, scope: !600, inlinedAt: !3332)
!3334 = !DILocation(line: 153, column: 15, scope: !600, inlinedAt: !3332)
!3335 = !DILocation(line: 143, column: 21, scope: !3328)
!3336 = !DILocation(line: 144, column: 48, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3338, file: !420, line: 143, column: 50)
!3338 = distinct !DILexicalBlock(scope: !3329, file: !420, line: 143, column: 32)
!3339 = !DILocation(line: 143, column: 32, scope: !3329)
!3340 = !DILocation(line: 144, column: 32, scope: !3337)
!3341 = !DILocation(line: 144, column: 31, scope: !3337)
!3342 = !DILocation(line: 163, column: 49, scope: !608, inlinedAt: !3343)
!3343 = distinct !DILocation(line: 144, column: 28, scope: !3337)
!3344 = !DILocation(line: 163, column: 15, scope: !608, inlinedAt: !3343)
!3345 = !DILocation(line: 145, column: 21, scope: !3337)
!3346 = !DILocation(line: 146, column: 32, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3338, file: !420, line: 145, column: 28)
!3348 = !DILocation(line: 146, column: 31, scope: !3347)
!3349 = !DILocation(line: 158, column: 15, scope: !612, inlinedAt: !3350)
!3350 = distinct !DILocation(line: 146, column: 28, scope: !3347)
!3351 = !DILocation(line: 149, column: 21, scope: !3264)
!3352 = !DILocation(line: 149, column: 21, scope: !3353)
!3353 = !DILexicalBlockFile(scope: !3263, file: !420, discriminator: 1)
!3354 = !DILocation(line: 151, column: 45, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3356, file: !420, line: 150, column: 43)
!3356 = distinct !DILexicalBlock(scope: !3264, file: !420, line: 150, column: 25)
!3357 = !DILocation(line: 150, column: 25, scope: !3264)
!3358 = !DILocation(line: 151, column: 32, scope: !3355)
!3359 = !DILocation(line: 151, column: 31, scope: !3355)
!3360 = !{!3361, !3361, i64 0}
!3361 = !{!"float", !2619, i64 0}
!3362 = !DILocation(line: 173, column: 49, scope: !616, inlinedAt: !3363)
!3363 = distinct !DILocation(line: 151, column: 28, scope: !3355)
!3364 = !DILocation(line: 173, column: 15, scope: !616, inlinedAt: !3363)
!3365 = !DILocation(line: 152, column: 21, scope: !3355)
!3366 = !DILocation(line: 153, column: 32, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3356, file: !420, line: 152, column: 28)
!3368 = !DILocation(line: 153, column: 31, scope: !3367)
!3369 = !{!3370, !3370, i64 0}
!3370 = !{!"double", !2619, i64 0}
!3371 = !DILocation(line: 168, column: 15, scope: !620, inlinedAt: !3372)
!3372 = distinct !DILocation(line: 153, column: 28, scope: !3367)
!3373 = !DILocation(line: 156, column: 27, scope: !3268)
!3374 = !DILocation(line: 178, column: 15, scope: !624, inlinedAt: !3375)
!3375 = distinct !DILocation(line: 156, column: 24, scope: !3268)
!3376 = !DILocation(line: 157, column: 17, scope: !3268)
!3377 = !DILocation(line: 124, column: 51, scope: !3247)
!3378 = !DILocation(line: 124, column: 22, scope: !546)
!3379 = !DILocation(line: 0, scope: !596, inlinedAt: !3380)
!3380 = distinct !DILocation(line: 160, column: 20, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3271, file: !420, line: 159, column: 38)
!3382 = !DILocation(line: 142, column: 37, scope: !596, inlinedAt: !3380)
!3383 = !DILocation(line: 143, column: 15, scope: !596, inlinedAt: !3380)
!3384 = !DILocation(line: 161, column: 13, scope: !3381)
!3385 = !DILocation(line: 0, scope: !596, inlinedAt: !3386)
!3386 = distinct !DILocation(line: 163, column: 12, scope: !486)
!3387 = !DILocation(line: 142, column: 37, scope: !596, inlinedAt: !3386)
!3388 = !DILocation(line: 143, column: 15, scope: !596, inlinedAt: !3386)
!3389 = !DILocation(line: 165, column: 9, scope: !486)
!3390 = !DILocation(line: 200, column: 9, scope: !3391, inlinedAt: !3392)
!3391 = distinct !DILexicalBlock(scope: !593, file: !11, line: 192, column: 16)
!3392 = distinct !DILocation(line: 166, column: 5, scope: !467)
!3393 = !DILocation(line: 168, column: 5, scope: !455)
!3394 = !DILocation(line: 193, column: 38, scope: !560)
!3395 = !DILocation(line: 196, column: 20, scope: !560)
!3396 = !DILocation(line: 0, scope: !581, inlinedAt: !3397)
!3397 = distinct !DILocation(line: 196, column: 20, scope: !560)
!3398 = !DILocation(line: 10, column: 34, scope: !581, inlinedAt: !3397)
!3399 = !DILocation(line: 11, column: 9, scope: !3400, inlinedAt: !3397)
!3400 = distinct !DILexicalBlock(scope: !581, file: !382, line: 10, column: 78)
!3401 = !DILocation(line: 11, column: 16, scope: !3400, inlinedAt: !3397)
!3402 = !DILocation(line: 197, column: 10, scope: !566)
!3403 = !DILocation(line: 197, column: 9, scope: !560)
!3404 = !DILocation(line: 198, column: 39, scope: !565)
!3405 = !DILocation(line: 198, column: 21, scope: !565)
!3406 = !DILocation(line: 199, column: 13, scope: !569)
!3407 = !DILocation(line: 199, column: 13, scope: !565)
!3408 = !DILocation(line: 200, column: 22, scope: !568)
!3409 = !DILocation(line: 200, column: 17, scope: !568)
!3410 = !DILocation(line: 201, column: 13, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !568, file: !420, line: 201, column: 13)
!3412 = !DILocation(line: 201, column: 13, scope: !568)
!3413 = !DILocation(line: 201, column: 13, scope: !3414)
!3414 = !DILexicalBlockFile(scope: !3411, file: !420, discriminator: 1)
!3415 = !DILocation(line: 202, column: 13, scope: !568)
!3416 = !DILocation(line: 203, column: 49, scope: !568)
!3417 = !DILocation(line: 204, column: 9, scope: !568)
!3418 = !DILocation(line: 205, column: 13, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !569, file: !420, line: 204, column: 16)
!3420 = !DILocation(line: 208, column: 12, scope: !560)
!3421 = !DILocation(line: 0, scope: !585, inlinedAt: !3422)
!3422 = distinct !DILocation(line: 209, column: 1, scope: !560)
!3423 = !DILocation(line: 15, column: 9, scope: !3424, inlinedAt: !3422)
!3424 = distinct !DILexicalBlock(scope: !585, file: !382, line: 14, column: 54)
!3425 = !DILocation(line: 209, column: 1, scope: !560)
!3426 = !DILocation(line: 177, column: 48, scope: !549)
!3427 = !DILocation(line: 178, column: 23, scope: !549)
!3428 = !DILocation(line: 178, column: 14, scope: !549)
!3429 = !DILocation(line: 179, column: 25, scope: !549)
!3430 = !DILocation(line: 180, column: 5, scope: !549)
!3431 = !DILocation(line: 183, column: 37, scope: !557)
!3432 = !DILocation(line: 184, column: 23, scope: !557)
!3433 = !DILocation(line: 185, column: 35, scope: !557)
!3434 = !DILocation(line: 186, column: 1, scope: !557)
!3435 = !DILocation(line: 211, column: 33, scope: !570)
!3436 = !DILocation(line: 211, column: 73, scope: !570)
!3437 = !DILocation(line: 212, column: 14, scope: !570)
!3438 = !DILocation(line: 212, column: 12, scope: !570)
!3439 = !DILocation(line: 212, column: 5, scope: !570)
!3440 = !DILocation(line: 216, column: 9, scope: !578)
!3441 = !DILocation(line: 216, column: 9, scope: !574)
!3442 = !DILocation(line: 217, column: 25, scope: !577)
!3443 = !DILocation(line: 217, column: 19, scope: !577)
!3444 = !DILocation(line: 217, column: 13, scope: !577)
!3445 = !DILocation(line: 218, column: 27, scope: !577)
!3446 = !DILocation(line: 219, column: 39, scope: !577)
!3447 = !DILocation(line: 220, column: 45, scope: !577)
!3448 = !DILocation(line: 225, column: 1, scope: !574)
!3449 = !DILocation(line: 230, column: 5, scope: !579)
!3450 = !DILocation(line: 231, column: 1, scope: !579)
!3451 = !DILocation(line: 79, column: 42, scope: !678)
!3452 = !DILocation(line: 80, column: 17, scope: !678)
!3453 = !DILocation(line: 82, column: 5, scope: !678)
!3454 = !DILocation(line: 85, column: 9, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !678, file: !641, line: 85, column: 9)
!3456 = !DILocation(line: 82, column: 15, scope: !678)
!3457 = !DILocation(line: 82, column: 25, scope: !3458)
!3458 = !DILexicalBlockFile(scope: !678, file: !641, discriminator: 2)
!3459 = !DILocation(line: 83, column: 14, scope: !678)
!3460 = !DILocation(line: 83, column: 26, scope: !678)
!3461 = !DILocation(line: 83, column: 5, scope: !3462)
!3462 = !DILexicalBlockFile(scope: !678, file: !641, discriminator: 3)
!3463 = !DILocation(line: 83, column: 41, scope: !3464)
!3464 = !DILexicalBlockFile(scope: !678, file: !641, discriminator: 4)
!3465 = !DILocation(line: 85, column: 12, scope: !3455)
!3466 = !DILocation(line: 85, column: 9, scope: !678)
!3467 = !DILocation(line: 86, column: 6, scope: !678)
!3468 = !DILocation(line: 88, column: 9, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !678, file: !641, line: 88, column: 9)
!3470 = !DILocation(line: 88, column: 19, scope: !3469)
!3471 = !DILocation(line: 89, column: 6, scope: !678)
!3472 = !DILocation(line: 91, column: 9, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !678, file: !641, line: 91, column: 9)
!3474 = !DILocation(line: 91, column: 19, scope: !3473)
!3475 = !DILocation(line: 92, column: 6, scope: !678)
!3476 = !DILocation(line: 94, column: 9, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !678, file: !641, line: 94, column: 9)
!3478 = !DILocation(line: 94, column: 19, scope: !3477)
!3479 = !DILocation(line: 95, column: 6, scope: !678)
!3480 = !DILocation(line: 97, column: 9, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !678, file: !641, line: 97, column: 9)
!3482 = !DILocation(line: 97, column: 9, scope: !678)
!3483 = !DILocation(line: 99, column: 33, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !678, file: !641, line: 99, column: 9)
!3485 = !DILocation(line: 100, column: 6, scope: !678)
!3486 = !DILocation(line: 102, column: 12, scope: !678)
!3487 = !DILocation(line: 102, column: 15, scope: !678)
!3488 = !DILocation(line: 102, column: 5, scope: !678)
!3489 = !DILocation(line: 103, column: 1, scope: !678)
!3490 = !DIExpression(DW_OP_bit_piece, 16, 16)
!3491 = !DILocation(line: 132, column: 17, scope: !700)
!3492 = !DILocation(line: 107, column: 52, scope: !684)
!3493 = !DILocation(line: 107, column: 78, scope: !684)
!3494 = !DILocation(line: 107, column: 97, scope: !684)
!3495 = !DILocation(line: 108, column: 54, scope: !684)
!3496 = !DILocation(line: 108, column: 66, scope: !684)
!3497 = !DILocation(line: 108, column: 78, scope: !684)
!3498 = !DILocation(line: 108, column: 90, scope: !684)
!3499 = !DILocation(line: 109, column: 54, scope: !684)
!3500 = !DILocation(line: 109, column: 73, scope: !684)
!3501 = !DILocation(line: 110, column: 15, scope: !684)
!3502 = !DILocation(line: 110, column: 11, scope: !684)
!3503 = !DILocation(line: 111, column: 10, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !684, file: !641, line: 111, column: 9)
!3505 = !DILocation(line: 111, column: 9, scope: !684)
!3506 = !DILocation(line: 113, column: 12, scope: !684)
!3507 = !DILocation(line: 114, column: 15, scope: !684)
!3508 = !DILocation(line: 114, column: 18, scope: !684)
!3509 = !DILocation(line: 114, column: 10, scope: !684)
!3510 = !DILocation(line: 116, column: 9, scope: !701)
!3511 = !DILocation(line: 116, column: 9, scope: !684)
!3512 = !DILocation(line: 118, column: 17, scope: !700)
!3513 = !DILocation(line: 119, column: 17, scope: !700)
!3514 = !DILocation(line: 122, column: 22, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !700, file: !641, line: 122, column: 13)
!3516 = !DILocation(line: 122, column: 41, scope: !3515)
!3517 = !DILocation(line: 125, column: 9, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3515, file: !641, line: 122, column: 47)
!3519 = !DILocation(line: 130, column: 9, scope: !700)
!3520 = !DIExpression(DW_OP_bit_piece, 0, 8)
!3521 = !DILocation(line: 134, column: 21, scope: !700)
!3522 = !DILocation(line: 135, column: 16, scope: !700)
!3523 = !DILocation(line: 135, column: 34, scope: !700)
!3524 = !{!3525, !3294, i64 0}
!3525 = !{!"_ZTSN6Halide7Runtime8Internal18halide_tiff_headerE", !3294, i64 0, !3294, i64 2, !2680, i64 4, !3294, i64 8, !2619, i64 10, !2680, i64 190, !2619, i64 194, !2619, i64 202}
!3526 = !DILocation(line: 137, column: 16, scope: !700)
!3527 = !DILocation(line: 137, column: 24, scope: !700)
!3528 = !{!3525, !3294, i64 2}
!3529 = !DILocation(line: 138, column: 16, scope: !700)
!3530 = !DILocation(line: 138, column: 28, scope: !700)
!3531 = !{!3525, !2680, i64 4}
!3532 = !DILocation(line: 139, column: 16, scope: !700)
!3533 = !DILocation(line: 139, column: 28, scope: !700)
!3534 = !{!3525, !3294, i64 8}
!3535 = !DILocation(line: 51, column: 27, scope: !723, inlinedAt: !3536)
!3536 = distinct !DILocation(line: 142, column: 9, scope: !700)
!3537 = !DILocation(line: 51, column: 45, scope: !723, inlinedAt: !3536)
!3538 = !DILocation(line: 51, column: 60, scope: !723, inlinedAt: !3536)
!3539 = !DILocation(line: 52, column: 15, scope: !723, inlinedAt: !3536)
!3540 = !DILocation(line: 52, column: 24, scope: !723, inlinedAt: !3536)
!3541 = !{!3542, !3294, i64 0}
!3542 = !{!"_ZTSN6Halide7Runtime8Internal8tiff_tagE", !3294, i64 0, !3294, i64 2, !2680, i64 4, !2619, i64 8}
!3543 = !DILocation(line: 53, column: 15, scope: !723, inlinedAt: !3536)
!3544 = !DILocation(line: 53, column: 25, scope: !723, inlinedAt: !3536)
!3545 = !{!3542, !3294, i64 2}
!3546 = !DILocation(line: 54, column: 15, scope: !723, inlinedAt: !3536)
!3547 = !DILocation(line: 54, column: 21, scope: !723, inlinedAt: !3536)
!3548 = !{!3542, !2680, i64 4}
!3549 = !DILocation(line: 55, column: 21, scope: !723, inlinedAt: !3536)
!3550 = !DILocation(line: 55, column: 25, scope: !723, inlinedAt: !3536)
!3551 = !DILocation(line: 51, column: 27, scope: !723, inlinedAt: !3552)
!3552 = distinct !DILocation(line: 143, column: 9, scope: !700)
!3553 = !DILocation(line: 51, column: 45, scope: !723, inlinedAt: !3552)
!3554 = !DILocation(line: 51, column: 60, scope: !723, inlinedAt: !3552)
!3555 = !DILocation(line: 52, column: 15, scope: !723, inlinedAt: !3552)
!3556 = !DILocation(line: 52, column: 24, scope: !723, inlinedAt: !3552)
!3557 = !DILocation(line: 53, column: 15, scope: !723, inlinedAt: !3552)
!3558 = !DILocation(line: 53, column: 25, scope: !723, inlinedAt: !3552)
!3559 = !DILocation(line: 54, column: 15, scope: !723, inlinedAt: !3552)
!3560 = !DILocation(line: 54, column: 21, scope: !723, inlinedAt: !3552)
!3561 = !DILocation(line: 55, column: 21, scope: !723, inlinedAt: !3552)
!3562 = !DILocation(line: 55, column: 25, scope: !723, inlinedAt: !3552)
!3563 = !DILocation(line: 144, column: 59, scope: !700)
!3564 = !DILocation(line: 144, column: 41, scope: !700)
!3565 = !DILocation(line: 44, column: 27, scope: !729, inlinedAt: !3566)
!3566 = distinct !DILocation(line: 144, column: 9, scope: !700)
!3567 = !DILocation(line: 44, column: 45, scope: !729, inlinedAt: !3566)
!3568 = !DILocation(line: 44, column: 60, scope: !729, inlinedAt: !3566)
!3569 = !DILocation(line: 45, column: 15, scope: !729, inlinedAt: !3566)
!3570 = !DILocation(line: 45, column: 24, scope: !729, inlinedAt: !3566)
!3571 = !DILocation(line: 46, column: 15, scope: !729, inlinedAt: !3566)
!3572 = !DILocation(line: 46, column: 25, scope: !729, inlinedAt: !3566)
!3573 = !DILocation(line: 47, column: 15, scope: !729, inlinedAt: !3566)
!3574 = !DILocation(line: 47, column: 21, scope: !729, inlinedAt: !3566)
!3575 = !DILocation(line: 48, column: 15, scope: !729, inlinedAt: !3566)
!3576 = !DILocation(line: 48, column: 21, scope: !729, inlinedAt: !3566)
!3577 = !DILocation(line: 48, column: 25, scope: !729, inlinedAt: !3566)
!3578 = !DILocation(line: 44, column: 27, scope: !729, inlinedAt: !3579)
!3579 = distinct !DILocation(line: 145, column: 9, scope: !700)
!3580 = !DILocation(line: 44, column: 45, scope: !729, inlinedAt: !3579)
!3581 = !DILocation(line: 44, column: 60, scope: !729, inlinedAt: !3579)
!3582 = !DILocation(line: 45, column: 15, scope: !729, inlinedAt: !3579)
!3583 = !DILocation(line: 45, column: 24, scope: !729, inlinedAt: !3579)
!3584 = !DILocation(line: 46, column: 15, scope: !729, inlinedAt: !3579)
!3585 = !DILocation(line: 46, column: 25, scope: !729, inlinedAt: !3579)
!3586 = !DILocation(line: 47, column: 15, scope: !729, inlinedAt: !3579)
!3587 = !DILocation(line: 47, column: 21, scope: !729, inlinedAt: !3579)
!3588 = !DILocation(line: 48, column: 15, scope: !729, inlinedAt: !3579)
!3589 = !DILocation(line: 48, column: 21, scope: !729, inlinedAt: !3579)
!3590 = !DILocation(line: 48, column: 25, scope: !729, inlinedAt: !3579)
!3591 = !DILocation(line: 146, column: 42, scope: !700)
!3592 = !DILocation(line: 146, column: 33, scope: !700)
!3593 = !DILocation(line: 44, column: 27, scope: !729, inlinedAt: !3594)
!3594 = distinct !DILocation(line: 146, column: 9, scope: !700)
!3595 = !DILocation(line: 44, column: 45, scope: !729, inlinedAt: !3594)
!3596 = !DILocation(line: 44, column: 60, scope: !729, inlinedAt: !3594)
!3597 = !DILocation(line: 45, column: 15, scope: !729, inlinedAt: !3594)
!3598 = !DILocation(line: 45, column: 24, scope: !729, inlinedAt: !3594)
!3599 = !DILocation(line: 46, column: 15, scope: !729, inlinedAt: !3594)
!3600 = !DILocation(line: 46, column: 25, scope: !729, inlinedAt: !3594)
!3601 = !DILocation(line: 47, column: 15, scope: !729, inlinedAt: !3594)
!3602 = !DILocation(line: 47, column: 21, scope: !729, inlinedAt: !3594)
!3603 = !DILocation(line: 48, column: 15, scope: !729, inlinedAt: !3594)
!3604 = !DILocation(line: 48, column: 21, scope: !729, inlinedAt: !3594)
!3605 = !DILocation(line: 48, column: 25, scope: !729, inlinedAt: !3594)
!3606 = !DILocation(line: 51, column: 27, scope: !723, inlinedAt: !3607)
!3607 = distinct !DILocation(line: 147, column: 9, scope: !700)
!3608 = !DILocation(line: 51, column: 45, scope: !723, inlinedAt: !3607)
!3609 = !DILocation(line: 51, column: 60, scope: !723, inlinedAt: !3607)
!3610 = !DILocation(line: 52, column: 15, scope: !723, inlinedAt: !3607)
!3611 = !DILocation(line: 52, column: 24, scope: !723, inlinedAt: !3607)
!3612 = !DILocation(line: 53, column: 15, scope: !723, inlinedAt: !3607)
!3613 = !DILocation(line: 53, column: 25, scope: !723, inlinedAt: !3607)
!3614 = !DILocation(line: 54, column: 15, scope: !723, inlinedAt: !3607)
!3615 = !DILocation(line: 54, column: 21, scope: !723, inlinedAt: !3607)
!3616 = !DILocation(line: 55, column: 21, scope: !723, inlinedAt: !3607)
!3617 = !DILocation(line: 55, column: 25, scope: !723, inlinedAt: !3607)
!3618 = !DILocation(line: 148, column: 41, scope: !700)
!3619 = !DILocation(line: 44, column: 27, scope: !729, inlinedAt: !3620)
!3620 = distinct !DILocation(line: 148, column: 9, scope: !700)
!3621 = !DILocation(line: 44, column: 45, scope: !729, inlinedAt: !3620)
!3622 = !DILocation(line: 44, column: 60, scope: !729, inlinedAt: !3620)
!3623 = !DILocation(line: 45, column: 15, scope: !729, inlinedAt: !3620)
!3624 = !DILocation(line: 45, column: 24, scope: !729, inlinedAt: !3620)
!3625 = !DILocation(line: 46, column: 15, scope: !729, inlinedAt: !3620)
!3626 = !DILocation(line: 46, column: 25, scope: !729, inlinedAt: !3620)
!3627 = !DILocation(line: 47, column: 15, scope: !729, inlinedAt: !3620)
!3628 = !DILocation(line: 47, column: 21, scope: !729, inlinedAt: !3620)
!3629 = !DILocation(line: 48, column: 15, scope: !729, inlinedAt: !3620)
!3630 = !DILocation(line: 48, column: 21, scope: !729, inlinedAt: !3620)
!3631 = !DILocation(line: 48, column: 25, scope: !729, inlinedAt: !3620)
!3632 = !DILocation(line: 51, column: 27, scope: !723, inlinedAt: !3633)
!3633 = distinct !DILocation(line: 149, column: 9, scope: !700)
!3634 = !DILocation(line: 51, column: 45, scope: !723, inlinedAt: !3633)
!3635 = !DILocation(line: 51, column: 60, scope: !723, inlinedAt: !3633)
!3636 = !DILocation(line: 52, column: 15, scope: !723, inlinedAt: !3633)
!3637 = !DILocation(line: 52, column: 24, scope: !723, inlinedAt: !3633)
!3638 = !DILocation(line: 53, column: 15, scope: !723, inlinedAt: !3633)
!3639 = !DILocation(line: 53, column: 25, scope: !723, inlinedAt: !3633)
!3640 = !DILocation(line: 54, column: 15, scope: !723, inlinedAt: !3633)
!3641 = !DILocation(line: 54, column: 21, scope: !723, inlinedAt: !3633)
!3642 = !DILocation(line: 55, column: 21, scope: !723, inlinedAt: !3633)
!3643 = !DILocation(line: 55, column: 25, scope: !723, inlinedAt: !3633)
!3644 = !DILocation(line: 151, column: 35, scope: !700)
!3645 = !DILocation(line: 152, column: 34, scope: !700)
!3646 = !DILocation(line: 154, column: 42, scope: !700)
!3647 = !DILocation(line: 153, column: 44, scope: !700)
!3648 = !DILocation(line: 151, column: 25, scope: !700)
!3649 = !DILocation(line: 51, column: 27, scope: !723, inlinedAt: !3650)
!3650 = distinct !DILocation(line: 150, column: 9, scope: !700)
!3651 = !DILocation(line: 51, column: 45, scope: !723, inlinedAt: !3650)
!3652 = !DILocation(line: 51, column: 60, scope: !723, inlinedAt: !3650)
!3653 = !DILocation(line: 52, column: 15, scope: !723, inlinedAt: !3650)
!3654 = !DILocation(line: 52, column: 24, scope: !723, inlinedAt: !3650)
!3655 = !DILocation(line: 53, column: 15, scope: !723, inlinedAt: !3650)
!3656 = !DILocation(line: 53, column: 25, scope: !723, inlinedAt: !3650)
!3657 = !DILocation(line: 54, column: 15, scope: !723, inlinedAt: !3650)
!3658 = !DILocation(line: 54, column: 21, scope: !723, inlinedAt: !3650)
!3659 = !DILocation(line: 55, column: 21, scope: !723, inlinedAt: !3650)
!3660 = !DILocation(line: 55, column: 25, scope: !723, inlinedAt: !3650)
!3661 = !DILocation(line: 58, column: 27, scope: !735, inlinedAt: !3662)
!3662 = distinct !DILocation(line: 155, column: 9, scope: !700)
!3663 = !DILocation(line: 58, column: 45, scope: !735, inlinedAt: !3662)
!3664 = !DILocation(line: 58, column: 64, scope: !735, inlinedAt: !3662)
!3665 = !DILocation(line: 58, column: 79, scope: !735, inlinedAt: !3662)
!3666 = !DILocation(line: 59, column: 15, scope: !735, inlinedAt: !3662)
!3667 = !DILocation(line: 59, column: 24, scope: !735, inlinedAt: !3662)
!3668 = !DILocation(line: 60, column: 15, scope: !735, inlinedAt: !3662)
!3669 = !DILocation(line: 60, column: 25, scope: !735, inlinedAt: !3662)
!3670 = !DILocation(line: 61, column: 15, scope: !735, inlinedAt: !3662)
!3671 = !DILocation(line: 61, column: 21, scope: !735, inlinedAt: !3662)
!3672 = !DILocation(line: 62, column: 21, scope: !735, inlinedAt: !3662)
!3673 = !DILocation(line: 62, column: 25, scope: !735, inlinedAt: !3662)
!3674 = !DILocation(line: 58, column: 27, scope: !735, inlinedAt: !3675)
!3675 = distinct !DILocation(line: 157, column: 9, scope: !700)
!3676 = !DILocation(line: 58, column: 45, scope: !735, inlinedAt: !3675)
!3677 = !DILocation(line: 58, column: 64, scope: !735, inlinedAt: !3675)
!3678 = !DILocation(line: 58, column: 79, scope: !735, inlinedAt: !3675)
!3679 = !DILocation(line: 59, column: 15, scope: !735, inlinedAt: !3675)
!3680 = !DILocation(line: 59, column: 24, scope: !735, inlinedAt: !3675)
!3681 = !DILocation(line: 60, column: 15, scope: !735, inlinedAt: !3675)
!3682 = !DILocation(line: 60, column: 25, scope: !735, inlinedAt: !3675)
!3683 = !DILocation(line: 61, column: 15, scope: !735, inlinedAt: !3675)
!3684 = !DILocation(line: 61, column: 21, scope: !735, inlinedAt: !3675)
!3685 = !DILocation(line: 62, column: 21, scope: !735, inlinedAt: !3675)
!3686 = !DILocation(line: 62, column: 25, scope: !735, inlinedAt: !3675)
!3687 = !DILocation(line: 44, column: 27, scope: !729, inlinedAt: !3688)
!3688 = distinct !DILocation(line: 159, column: 9, scope: !700)
!3689 = !DILocation(line: 44, column: 45, scope: !729, inlinedAt: !3688)
!3690 = !DILocation(line: 44, column: 60, scope: !729, inlinedAt: !3688)
!3691 = !DILocation(line: 45, column: 15, scope: !729, inlinedAt: !3688)
!3692 = !DILocation(line: 45, column: 24, scope: !729, inlinedAt: !3688)
!3693 = !DILocation(line: 46, column: 15, scope: !729, inlinedAt: !3688)
!3694 = !DILocation(line: 46, column: 25, scope: !729, inlinedAt: !3688)
!3695 = !DILocation(line: 47, column: 15, scope: !729, inlinedAt: !3688)
!3696 = !DILocation(line: 47, column: 21, scope: !729, inlinedAt: !3688)
!3697 = !DILocation(line: 48, column: 15, scope: !729, inlinedAt: !3688)
!3698 = !DILocation(line: 48, column: 21, scope: !729, inlinedAt: !3688)
!3699 = !DILocation(line: 48, column: 25, scope: !729, inlinedAt: !3688)
!3700 = !DILocation(line: 44, column: 27, scope: !729, inlinedAt: !3701)
!3701 = distinct !DILocation(line: 160, column: 9, scope: !700)
!3702 = !DILocation(line: 44, column: 45, scope: !729, inlinedAt: !3701)
!3703 = !DILocation(line: 44, column: 60, scope: !729, inlinedAt: !3701)
!3704 = !DILocation(line: 45, column: 15, scope: !729, inlinedAt: !3701)
!3705 = !DILocation(line: 45, column: 24, scope: !729, inlinedAt: !3701)
!3706 = !DILocation(line: 46, column: 15, scope: !729, inlinedAt: !3701)
!3707 = !DILocation(line: 46, column: 25, scope: !729, inlinedAt: !3701)
!3708 = !DILocation(line: 47, column: 15, scope: !729, inlinedAt: !3701)
!3709 = !DILocation(line: 47, column: 21, scope: !729, inlinedAt: !3701)
!3710 = !DILocation(line: 48, column: 15, scope: !729, inlinedAt: !3701)
!3711 = !DILocation(line: 48, column: 21, scope: !729, inlinedAt: !3701)
!3712 = !DILocation(line: 48, column: 25, scope: !729, inlinedAt: !3701)
!3713 = !DILocation(line: 162, column: 25, scope: !700)
!3714 = !DILocation(line: 44, column: 27, scope: !729, inlinedAt: !3715)
!3715 = distinct !DILocation(line: 161, column: 9, scope: !700)
!3716 = !DILocation(line: 44, column: 45, scope: !729, inlinedAt: !3715)
!3717 = !DILocation(line: 44, column: 60, scope: !729, inlinedAt: !3715)
!3718 = !DILocation(line: 45, column: 15, scope: !729, inlinedAt: !3715)
!3719 = !DILocation(line: 45, column: 24, scope: !729, inlinedAt: !3715)
!3720 = !DILocation(line: 46, column: 15, scope: !729, inlinedAt: !3715)
!3721 = !DILocation(line: 46, column: 25, scope: !729, inlinedAt: !3715)
!3722 = !DILocation(line: 47, column: 15, scope: !729, inlinedAt: !3715)
!3723 = !DILocation(line: 47, column: 21, scope: !729, inlinedAt: !3715)
!3724 = !DILocation(line: 48, column: 15, scope: !729, inlinedAt: !3715)
!3725 = !DILocation(line: 48, column: 21, scope: !729, inlinedAt: !3715)
!3726 = !DILocation(line: 48, column: 25, scope: !729, inlinedAt: !3715)
!3727 = !DILocation(line: 51, column: 27, scope: !723, inlinedAt: !3728)
!3728 = distinct !DILocation(line: 163, column: 9, scope: !700)
!3729 = !DILocation(line: 51, column: 45, scope: !723, inlinedAt: !3728)
!3730 = !DILocation(line: 51, column: 60, scope: !723, inlinedAt: !3728)
!3731 = !DILocation(line: 52, column: 15, scope: !723, inlinedAt: !3728)
!3732 = !DILocation(line: 52, column: 24, scope: !723, inlinedAt: !3728)
!3733 = !DILocation(line: 53, column: 15, scope: !723, inlinedAt: !3728)
!3734 = !DILocation(line: 53, column: 25, scope: !723, inlinedAt: !3728)
!3735 = !DILocation(line: 54, column: 15, scope: !723, inlinedAt: !3728)
!3736 = !DILocation(line: 54, column: 21, scope: !723, inlinedAt: !3728)
!3737 = !DILocation(line: 55, column: 21, scope: !723, inlinedAt: !3728)
!3738 = !DILocation(line: 55, column: 25, scope: !723, inlinedAt: !3728)
!3739 = !DILocation(line: 165, column: 16, scope: !700)
!3740 = !DILocation(line: 165, column: 25, scope: !700)
!3741 = !DILocation(line: 169, column: 9, scope: !700)
!3742 = !DILocation(line: 169, column: 37, scope: !700)
!3743 = !DILocation(line: 171, column: 14, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !700, file: !641, line: 171, column: 13)
!3745 = !DILocation(line: 171, column: 13, scope: !700)
!3746 = !DILocation(line: 172, column: 13, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3744, file: !641, line: 171, column: 63)
!3748 = !DILocation(line: 173, column: 13, scope: !3747)
!3749 = !DILocation(line: 176, column: 22, scope: !712)
!3750 = !DILocation(line: 176, column: 13, scope: !700)
!3751 = !DILocation(line: 177, column: 11, scope: !711)
!3752 = !DILocation(line: 177, column: 72, scope: !711)
!3753 = !DILocation(line: 177, column: 43, scope: !711)
!3754 = !DILocation(line: 177, column: 19, scope: !711)
!3755 = !DILocation(line: 179, column: 24, scope: !714)
!3756 = !DILocation(line: 184, column: 33, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3758, file: !641, line: 179, column: 50)
!3758 = distinct !DILexicalBlock(scope: !714, file: !641, line: 179, column: 11)
!3759 = !DILocation(line: 184, column: 41, scope: !3757)
!3760 = !DILocation(line: 179, column: 11, scope: !714)
!3761 = !DILocation(line: 180, column: 20, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3757, file: !641, line: 180, column: 19)
!3763 = !DILocation(line: 180, column: 19, scope: !3757)
!3764 = !DILocation(line: 184, column: 22, scope: !3757)
!3765 = !DILocation(line: 179, column: 46, scope: !3758)
!3766 = !DILocation(line: 179, column: 33, scope: !3758)
!3767 = !DILocation(line: 181, column: 19, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3762, file: !641, line: 180, column: 55)
!3769 = !DILocation(line: 186, column: 11, scope: !711)
!3770 = !DILocation(line: 186, column: 35, scope: !711)
!3771 = !DILocation(line: 186, column: 19, scope: !711)
!3772 = !DILocation(line: 187, column: 24, scope: !717)
!3773 = !DILocation(line: 187, column: 11, scope: !717)
!3774 = !DILocation(line: 187, column: 33, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !717, file: !641, line: 187, column: 11)
!3776 = !DILocation(line: 188, column: 20, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3778, file: !641, line: 188, column: 19)
!3778 = distinct !DILexicalBlock(scope: !3775, file: !641, line: 187, column: 50)
!3779 = !DILocation(line: 187, column: 46, scope: !3775)
!3780 = !DILocation(line: 188, column: 19, scope: !3778)
!3781 = !DILocation(line: 189, column: 19, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3777, file: !641, line: 188, column: 54)
!3783 = !DILocation(line: 193, column: 9, scope: !3784)
!3784 = !DILexicalBlockFile(scope: !712, file: !641, discriminator: 1)
!3785 = !DILocation(line: 193, column: 9, scope: !712)
!3786 = !DILocation(line: 194, column: 5, scope: !3787)
!3787 = !DILexicalBlockFile(scope: !701, file: !641, discriminator: 1)
!3788 = !DILocation(line: 195, column: 9, scope: !719)
!3789 = !DILocation(line: 195, column: 17, scope: !719)
!3790 = !DILocation(line: 195, column: 28, scope: !719)
!3791 = !DILocation(line: 196, column: 14, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !719, file: !641, line: 196, column: 13)
!3793 = !DILocation(line: 196, column: 13, scope: !719)
!3794 = !DILocation(line: 197, column: 13, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3792, file: !641, line: 196, column: 66)
!3796 = !DILocation(line: 200, column: 5, scope: !3787)
!3797 = !DILocation(line: 202, column: 48, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !684, file: !641, line: 202, column: 9)
!3799 = !DILocation(line: 202, column: 9, scope: !3798)
!3800 = !DILocation(line: 203, column: 9, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3798, file: !641, line: 202, column: 63)
!3802 = !DILocation(line: 207, column: 9, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3798, file: !641, line: 205, column: 12)
!3804 = !DILocation(line: 209, column: 1, scope: !684)
!3805 = !DILocation(line: 12, column: 33, scope: !753)
!3806 = !DILocation(line: 12, column: 54, scope: !753)
!3807 = !DILocation(line: 13, column: 26, scope: !753)
!3808 = !DILocation(line: 13, column: 18, scope: !753)
!3809 = !DILocation(line: 13, column: 11, scope: !753)
!3810 = !DILocation(line: 14, column: 14, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !753, file: !750, line: 14, column: 9)
!3812 = !DILocation(line: 14, column: 9, scope: !753)
!3813 = !DILocation(line: 19, column: 28, scope: !753)
!3814 = !DILocation(line: 19, column: 41, scope: !753)
!3815 = !DILocation(line: 19, column: 53, scope: !753)
!3816 = !DILocation(line: 19, column: 17, scope: !753)
!3817 = !DILocation(line: 19, column: 11, scope: !753)
!3818 = !DILocation(line: 20, column: 6, scope: !753)
!3819 = !DILocation(line: 20, column: 5, scope: !753)
!3820 = !DILocation(line: 20, column: 24, scope: !753)
!3821 = !DILocation(line: 22, column: 1, scope: !753)
!3822 = !DILocation(line: 24, column: 30, scope: !761)
!3823 = !DILocation(line: 24, column: 50, scope: !761)
!3824 = !DILocation(line: 25, column: 10, scope: !761)
!3825 = !DILocation(line: 25, column: 5, scope: !761)
!3826 = !DILocation(line: 26, column: 1, scope: !761)
!3827 = !DILocation(line: 35, column: 47, scope: !765)
!3828 = !DILocation(line: 36, column: 39, scope: !765)
!3829 = !DILocation(line: 36, column: 13, scope: !765)
!3830 = !DILocation(line: 37, column: 19, scope: !765)
!3831 = !DILocation(line: 38, column: 5, scope: !765)
!3832 = !DILocation(line: 41, column: 43, scope: !772)
!3833 = !DILocation(line: 42, column: 38, scope: !772)
!3834 = !DILocation(line: 42, column: 12, scope: !772)
!3835 = !DILocation(line: 43, column: 17, scope: !772)
!3836 = !DILocation(line: 44, column: 5, scope: !772)
!3837 = !DILocation(line: 47, column: 32, scope: !778)
!3838 = !DILocation(line: 47, column: 53, scope: !778)
!3839 = !DILocation(line: 48, column: 12, scope: !778)
!3840 = !DILocation(line: 48, column: 5, scope: !778)
!3841 = !DILocation(line: 51, column: 29, scope: !782)
!3842 = !DILocation(line: 51, column: 49, scope: !782)
!3843 = !DILocation(line: 52, column: 5, scope: !782)
!3844 = !DILocation(line: 53, column: 1, scope: !782)
!3845 = !DILocation(line: 6, column: 39, scope: !821)
!3846 = !DILocation(line: 6, column: 65, scope: !821)
!3847 = !DILocation(line: 7, column: 5, scope: !821)
!3848 = !DILocation(line: 7, column: 10, scope: !821)
!3849 = !DILocation(line: 8, column: 50, scope: !821)
!3850 = !DILocation(line: 8, column: 17, scope: !821)
!3851 = !DILocation(line: 8, column: 11, scope: !821)
!3852 = !DILocation(line: 9, column: 11, scope: !821)
!3853 = !DILocation(line: 12, column: 9, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !821, file: !792, line: 12, column: 9)
!3855 = !DILocation(line: 12, column: 17, scope: !3854)
!3856 = !DILocation(line: 12, column: 9, scope: !821)
!3857 = !DILocation(line: 13, column: 16, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3854, file: !792, line: 12, column: 26)
!3859 = !DILocation(line: 14, column: 9, scope: !3858)
!3860 = !DILocation(line: 14, column: 16, scope: !3858)
!3861 = !DILocation(line: 15, column: 5, scope: !3858)
!3862 = !DILocation(line: 16, column: 5, scope: !821)
!3863 = !DILocation(line: 17, column: 5, scope: !821)
!3864 = !DILocation(line: 18, column: 1, scope: !821)
!3865 = !DILocation(line: 26, column: 30, scope: !828)
!3866 = !DILocation(line: 26, column: 56, scope: !828)
!3867 = !DILocation(line: 27, column: 7, scope: !828)
!3868 = !DILocation(line: 27, column: 5, scope: !828)
!3869 = !DILocation(line: 28, column: 1, scope: !828)
!3870 = !DILocation(line: 30, column: 45, scope: !832)
!3871 = !DILocation(line: 31, column: 44, scope: !832)
!3872 = !DILocation(line: 31, column: 12, scope: !832)
!3873 = !DILocation(line: 32, column: 26, scope: !832)
!3874 = !DILocation(line: 33, column: 5, scope: !832)
!3875 = !DILocation(line: 36, column: 58, scope: !839)
!3876 = !DILocation(line: 36, column: 84, scope: !839)
!3877 = !DILocation(line: 36, column: 107, scope: !839)
!3878 = !DILocation(line: 0, scope: !973, inlinedAt: !3879)
!3879 = distinct !DILocation(line: 37, column: 5, scope: !839)
!3880 = !DILocation(line: 135, column: 19, scope: !973, inlinedAt: !3879)
!3881 = !DILocation(line: 136, column: 23, scope: !3882, inlinedAt: !3879)
!3882 = distinct !DILexicalBlock(scope: !973, file: !11, line: 135, column: 44)
!3883 = !DILocation(line: 138, column: 19, scope: !3882, inlinedAt: !3879)
!3884 = !DILocation(line: 139, column: 14, scope: !3882, inlinedAt: !3879)
!3885 = !DILocation(line: 0, scope: !1029, inlinedAt: !3886)
!3886 = distinct !DILocation(line: 38, column: 9, scope: !839)
!3887 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !3886)
!3888 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !3886)
!3889 = !DILocation(line: 0, scope: !1029, inlinedAt: !3890)
!3890 = distinct !DILocation(line: 38, column: 55, scope: !839)
!3891 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !3890)
!3892 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !3890)
!3893 = !DILocation(line: 0, scope: !1029, inlinedAt: !3894)
!3894 = distinct !DILocation(line: 39, column: 9, scope: !839)
!3895 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !3894)
!3896 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !3894)
!3897 = !DILocation(line: 0, scope: !1033, inlinedAt: !3898)
!3898 = distinct !DILocation(line: 39, column: 41, scope: !839)
!3899 = !DILocation(line: 152, column: 33, scope: !1033, inlinedAt: !3898)
!3900 = !DILocation(line: 153, column: 48, scope: !1033, inlinedAt: !3898)
!3901 = !DILocation(line: 153, column: 15, scope: !1033, inlinedAt: !3898)
!3902 = !DILocation(line: 0, scope: !1026, inlinedAt: !3903)
!3903 = distinct !DILocation(line: 37, column: 5, scope: !839)
!3904 = !DILocation(line: 194, column: 13, scope: !3905, inlinedAt: !3903)
!3905 = distinct !DILexicalBlock(scope: !3906, file: !11, line: 193, column: 35)
!3906 = distinct !DILexicalBlock(scope: !3907, file: !11, line: 193, column: 13)
!3907 = distinct !DILexicalBlock(scope: !1026, file: !11, line: 192, column: 16)
!3908 = !DILocation(line: 200, column: 9, scope: !3907, inlinedAt: !3903)
!3909 = !DILocation(line: 40, column: 5, scope: !839)
!3910 = !DILocation(line: 43, column: 49, scope: !846)
!3911 = !DILocation(line: 43, column: 75, scope: !846)
!3912 = !DILocation(line: 43, column: 98, scope: !846)
!3913 = !DILocation(line: 0, scope: !973, inlinedAt: !3914)
!3914 = distinct !DILocation(line: 44, column: 5, scope: !846)
!3915 = !DILocation(line: 135, column: 19, scope: !973, inlinedAt: !3914)
!3916 = !DILocation(line: 136, column: 23, scope: !3882, inlinedAt: !3914)
!3917 = !DILocation(line: 138, column: 19, scope: !3882, inlinedAt: !3914)
!3918 = !DILocation(line: 139, column: 14, scope: !3882, inlinedAt: !3914)
!3919 = !DILocation(line: 0, scope: !1029, inlinedAt: !3920)
!3920 = distinct !DILocation(line: 45, column: 9, scope: !846)
!3921 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !3920)
!3922 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !3920)
!3923 = !DILocation(line: 0, scope: !1029, inlinedAt: !3924)
!3924 = distinct !DILocation(line: 45, column: 38, scope: !846)
!3925 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !3924)
!3926 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !3924)
!3927 = !DILocation(line: 0, scope: !1029, inlinedAt: !3928)
!3928 = distinct !DILocation(line: 46, column: 9, scope: !846)
!3929 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !3928)
!3930 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !3928)
!3931 = !DILocation(line: 0, scope: !1033, inlinedAt: !3932)
!3932 = distinct !DILocation(line: 46, column: 41, scope: !846)
!3933 = !DILocation(line: 152, column: 33, scope: !1033, inlinedAt: !3932)
!3934 = !DILocation(line: 153, column: 48, scope: !1033, inlinedAt: !3932)
!3935 = !DILocation(line: 153, column: 15, scope: !1033, inlinedAt: !3932)
!3936 = !DILocation(line: 0, scope: !1026, inlinedAt: !3937)
!3937 = distinct !DILocation(line: 44, column: 5, scope: !846)
!3938 = !DILocation(line: 194, column: 13, scope: !3905, inlinedAt: !3937)
!3939 = !DILocation(line: 200, column: 9, scope: !3907, inlinedAt: !3937)
!3940 = !DILocation(line: 47, column: 5, scope: !846)
!3941 = !DILocation(line: 50, column: 55, scope: !851)
!3942 = !DILocation(line: 50, column: 81, scope: !851)
!3943 = !DILocation(line: 50, column: 104, scope: !851)
!3944 = !DILocation(line: 51, column: 53, scope: !851)
!3945 = !DILocation(line: 51, column: 68, scope: !851)
!3946 = !DILocation(line: 51, column: 83, scope: !851)
!3947 = !DILocation(line: 51, column: 101, scope: !851)
!3948 = !DILocation(line: 0, scope: !973, inlinedAt: !3949)
!3949 = distinct !DILocation(line: 52, column: 5, scope: !851)
!3950 = !DILocation(line: 135, column: 19, scope: !973, inlinedAt: !3949)
!3951 = !DILocation(line: 136, column: 23, scope: !3882, inlinedAt: !3949)
!3952 = !DILocation(line: 138, column: 19, scope: !3882, inlinedAt: !3949)
!3953 = !DILocation(line: 139, column: 14, scope: !3882, inlinedAt: !3949)
!3954 = !DILocation(line: 0, scope: !1029, inlinedAt: !3955)
!3955 = distinct !DILocation(line: 53, column: 9, scope: !851)
!3956 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !3955)
!3957 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !3955)
!3958 = !DILocation(line: 0, scope: !1029, inlinedAt: !3959)
!3959 = distinct !DILocation(line: 53, column: 32, scope: !851)
!3960 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !3959)
!3961 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !3959)
!3962 = !DILocation(line: 0, scope: !1029, inlinedAt: !3963)
!3963 = distinct !DILocation(line: 53, column: 44, scope: !851)
!3964 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !3963)
!3965 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !3963)
!3966 = !DILocation(line: 0, scope: !1029, inlinedAt: !3967)
!3967 = distinct !DILocation(line: 53, column: 54, scope: !851)
!3968 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !3967)
!3969 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !3967)
!3970 = !DILocation(line: 0, scope: !1029, inlinedAt: !3971)
!3971 = distinct !DILocation(line: 54, column: 9, scope: !851)
!3972 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !3971)
!3973 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !3971)
!3974 = !DILocation(line: 0, scope: !1033, inlinedAt: !3975)
!3975 = distinct !DILocation(line: 54, column: 22, scope: !851)
!3976 = !DILocation(line: 152, column: 33, scope: !1033, inlinedAt: !3975)
!3977 = !DILocation(line: 153, column: 48, scope: !1033, inlinedAt: !3975)
!3978 = !DILocation(line: 153, column: 15, scope: !1033, inlinedAt: !3975)
!3979 = !DILocation(line: 0, scope: !1029, inlinedAt: !3980)
!3980 = distinct !DILocation(line: 54, column: 35, scope: !851)
!3981 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !3980)
!3982 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !3980)
!3983 = !DILocation(line: 0, scope: !1033, inlinedAt: !3984)
!3984 = distinct !DILocation(line: 54, column: 45, scope: !851)
!3985 = !DILocation(line: 152, column: 33, scope: !1033, inlinedAt: !3984)
!3986 = !DILocation(line: 153, column: 48, scope: !1033, inlinedAt: !3984)
!3987 = !DILocation(line: 153, column: 15, scope: !1033, inlinedAt: !3984)
!3988 = !DILocation(line: 0, scope: !1029, inlinedAt: !3989)
!3989 = distinct !DILocation(line: 55, column: 9, scope: !851)
!3990 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !3989)
!3991 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !3989)
!3992 = !DILocation(line: 0, scope: !1033, inlinedAt: !3993)
!3993 = distinct !DILocation(line: 55, column: 52, scope: !851)
!3994 = !DILocation(line: 152, column: 33, scope: !1033, inlinedAt: !3993)
!3995 = !DILocation(line: 153, column: 48, scope: !1033, inlinedAt: !3993)
!3996 = !DILocation(line: 153, column: 15, scope: !1033, inlinedAt: !3993)
!3997 = !DILocation(line: 0, scope: !1029, inlinedAt: !3998)
!3998 = distinct !DILocation(line: 56, column: 9, scope: !851)
!3999 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !3998)
!4000 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !3998)
!4001 = !DILocation(line: 0, scope: !1033, inlinedAt: !4002)
!4002 = distinct !DILocation(line: 56, column: 19, scope: !851)
!4003 = !DILocation(line: 152, column: 33, scope: !1033, inlinedAt: !4002)
!4004 = !DILocation(line: 153, column: 48, scope: !1033, inlinedAt: !4002)
!4005 = !DILocation(line: 153, column: 15, scope: !1033, inlinedAt: !4002)
!4006 = !DILocation(line: 0, scope: !1029, inlinedAt: !4007)
!4007 = distinct !DILocation(line: 56, column: 35, scope: !851)
!4008 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4007)
!4009 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4007)
!4010 = !DILocation(line: 0, scope: !1026, inlinedAt: !4011)
!4011 = distinct !DILocation(line: 52, column: 5, scope: !851)
!4012 = !DILocation(line: 194, column: 13, scope: !3905, inlinedAt: !4011)
!4013 = !DILocation(line: 200, column: 9, scope: !3907, inlinedAt: !4011)
!4014 = !DILocation(line: 57, column: 5, scope: !851)
!4015 = !DILocation(line: 60, column: 43, scope: !862)
!4016 = !DILocation(line: 60, column: 69, scope: !862)
!4017 = !DILocation(line: 61, column: 49, scope: !862)
!4018 = !DILocation(line: 61, column: 64, scope: !862)
!4019 = !DILocation(line: 61, column: 85, scope: !862)
!4020 = !DILocation(line: 0, scope: !973, inlinedAt: !4021)
!4021 = distinct !DILocation(line: 62, column: 5, scope: !862)
!4022 = !DILocation(line: 135, column: 19, scope: !973, inlinedAt: !4021)
!4023 = !DILocation(line: 136, column: 23, scope: !3882, inlinedAt: !4021)
!4024 = !DILocation(line: 138, column: 19, scope: !3882, inlinedAt: !4021)
!4025 = !DILocation(line: 139, column: 14, scope: !3882, inlinedAt: !4021)
!4026 = !DILocation(line: 0, scope: !1029, inlinedAt: !4027)
!4027 = distinct !DILocation(line: 63, column: 9, scope: !862)
!4028 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4027)
!4029 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4027)
!4030 = !DILocation(line: 0, scope: !1029, inlinedAt: !4031)
!4031 = distinct !DILocation(line: 63, column: 22, scope: !862)
!4032 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4031)
!4033 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4031)
!4034 = !DILocation(line: 0, scope: !1029, inlinedAt: !4035)
!4035 = distinct !DILocation(line: 63, column: 38, scope: !862)
!4036 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4035)
!4037 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4035)
!4038 = !DILocation(line: 0, scope: !1029, inlinedAt: !4039)
!4039 = distinct !DILocation(line: 64, column: 9, scope: !862)
!4040 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4039)
!4041 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4039)
!4042 = !DILocation(line: 0, scope: !1033, inlinedAt: !4043)
!4043 = distinct !DILocation(line: 65, column: 9, scope: !862)
!4044 = !DILocation(line: 152, column: 33, scope: !1033, inlinedAt: !4043)
!4045 = !DILocation(line: 153, column: 48, scope: !1033, inlinedAt: !4043)
!4046 = !DILocation(line: 153, column: 15, scope: !1033, inlinedAt: !4043)
!4047 = !DILocation(line: 0, scope: !1029, inlinedAt: !4048)
!4048 = distinct !DILocation(line: 65, column: 28, scope: !862)
!4049 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4048)
!4050 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4048)
!4051 = !DILocation(line: 0, scope: !1033, inlinedAt: !4052)
!4052 = distinct !DILocation(line: 65, column: 46, scope: !862)
!4053 = !DILocation(line: 152, column: 33, scope: !1033, inlinedAt: !4052)
!4054 = !DILocation(line: 153, column: 48, scope: !1033, inlinedAt: !4052)
!4055 = !DILocation(line: 153, column: 15, scope: !1033, inlinedAt: !4052)
!4056 = !DILocation(line: 0, scope: !1026, inlinedAt: !4057)
!4057 = distinct !DILocation(line: 62, column: 5, scope: !862)
!4058 = !DILocation(line: 194, column: 13, scope: !3905, inlinedAt: !4057)
!4059 = !DILocation(line: 200, column: 9, scope: !3907, inlinedAt: !4057)
!4060 = !DILocation(line: 66, column: 5, scope: !862)
!4061 = !DILocation(line: 69, column: 50, scope: !871)
!4062 = !DILocation(line: 69, column: 76, scope: !871)
!4063 = !DILocation(line: 70, column: 48, scope: !871)
!4064 = !DILocation(line: 70, column: 63, scope: !871)
!4065 = !DILocation(line: 70, column: 80, scope: !871)
!4066 = !DILocation(line: 71, column: 48, scope: !871)
!4067 = !DILocation(line: 71, column: 63, scope: !871)
!4068 = !DILocation(line: 72, column: 21, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !871, file: !792, line: 72, column: 9)
!4070 = !DILocation(line: 72, column: 9, scope: !871)
!4071 = !DILocation(line: 0, scope: !973, inlinedAt: !4072)
!4072 = distinct !DILocation(line: 73, column: 9, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4069, file: !792, line: 72, column: 34)
!4074 = !DILocation(line: 135, column: 19, scope: !973, inlinedAt: !4072)
!4075 = !DILocation(line: 136, column: 23, scope: !3882, inlinedAt: !4072)
!4076 = !DILocation(line: 138, column: 19, scope: !3882, inlinedAt: !4072)
!4077 = !DILocation(line: 139, column: 14, scope: !3882, inlinedAt: !4072)
!4078 = !DILocation(line: 0, scope: !1029, inlinedAt: !4079)
!4079 = distinct !DILocation(line: 74, column: 13, scope: !4073)
!4080 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4079)
!4081 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4079)
!4082 = !DILocation(line: 0, scope: !1029, inlinedAt: !4083)
!4083 = distinct !DILocation(line: 74, column: 26, scope: !4073)
!4084 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4083)
!4085 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4083)
!4086 = !DILocation(line: 0, scope: !1033, inlinedAt: !4087)
!4087 = distinct !DILocation(line: 74, column: 48, scope: !4073)
!4088 = !DILocation(line: 152, column: 33, scope: !1033, inlinedAt: !4087)
!4089 = !DILocation(line: 153, column: 48, scope: !1033, inlinedAt: !4087)
!4090 = !DILocation(line: 153, column: 15, scope: !1033, inlinedAt: !4087)
!4091 = !DILocation(line: 0, scope: !1029, inlinedAt: !4092)
!4092 = distinct !DILocation(line: 75, column: 13, scope: !4073)
!4093 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4092)
!4094 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4092)
!4095 = !DILocation(line: 0, scope: !1033, inlinedAt: !4096)
!4096 = distinct !DILocation(line: 75, column: 46, scope: !4073)
!4097 = !DILocation(line: 152, column: 33, scope: !1033, inlinedAt: !4096)
!4098 = !DILocation(line: 153, column: 48, scope: !1033, inlinedAt: !4096)
!4099 = !DILocation(line: 153, column: 15, scope: !1033, inlinedAt: !4096)
!4100 = !DILocation(line: 0, scope: !1029, inlinedAt: !4101)
!4101 = distinct !DILocation(line: 76, column: 13, scope: !4073)
!4102 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4101)
!4103 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4101)
!4104 = !DILocation(line: 0, scope: !1033, inlinedAt: !4105)
!4105 = distinct !DILocation(line: 76, column: 34, scope: !4073)
!4106 = !DILocation(line: 152, column: 33, scope: !1033, inlinedAt: !4105)
!4107 = !DILocation(line: 153, column: 48, scope: !1033, inlinedAt: !4105)
!4108 = !DILocation(line: 153, column: 15, scope: !1033, inlinedAt: !4105)
!4109 = !DILocation(line: 0, scope: !1026, inlinedAt: !4110)
!4110 = distinct !DILocation(line: 73, column: 9, scope: !4073)
!4111 = !DILocation(line: 194, column: 13, scope: !3905, inlinedAt: !4110)
!4112 = !DILocation(line: 200, column: 9, scope: !3907, inlinedAt: !4110)
!4113 = !DILocation(line: 77, column: 5, scope: !4073)
!4114 = !DILocation(line: 77, column: 28, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4069, file: !792, line: 77, column: 16)
!4116 = !DILocation(line: 77, column: 16, scope: !4069)
!4117 = !DILocation(line: 0, scope: !973, inlinedAt: !4118)
!4118 = distinct !DILocation(line: 78, column: 9, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4115, file: !792, line: 77, column: 41)
!4120 = !DILocation(line: 135, column: 19, scope: !973, inlinedAt: !4118)
!4121 = !DILocation(line: 136, column: 23, scope: !3882, inlinedAt: !4118)
!4122 = !DILocation(line: 138, column: 19, scope: !3882, inlinedAt: !4118)
!4123 = !DILocation(line: 139, column: 14, scope: !3882, inlinedAt: !4118)
!4124 = !DILocation(line: 0, scope: !1029, inlinedAt: !4125)
!4125 = distinct !DILocation(line: 79, column: 13, scope: !4119)
!4126 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4125)
!4127 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4125)
!4128 = !DILocation(line: 0, scope: !1029, inlinedAt: !4129)
!4129 = distinct !DILocation(line: 79, column: 26, scope: !4119)
!4130 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4129)
!4131 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4129)
!4132 = !DILocation(line: 0, scope: !1033, inlinedAt: !4133)
!4133 = distinct !DILocation(line: 79, column: 48, scope: !4119)
!4134 = !DILocation(line: 152, column: 33, scope: !1033, inlinedAt: !4133)
!4135 = !DILocation(line: 153, column: 48, scope: !1033, inlinedAt: !4133)
!4136 = !DILocation(line: 153, column: 15, scope: !1033, inlinedAt: !4133)
!4137 = !DILocation(line: 0, scope: !1029, inlinedAt: !4138)
!4138 = distinct !DILocation(line: 80, column: 13, scope: !4119)
!4139 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4138)
!4140 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4138)
!4141 = !DILocation(line: 0, scope: !1033, inlinedAt: !4142)
!4142 = distinct !DILocation(line: 80, column: 46, scope: !4119)
!4143 = !DILocation(line: 152, column: 33, scope: !1033, inlinedAt: !4142)
!4144 = !DILocation(line: 153, column: 48, scope: !1033, inlinedAt: !4142)
!4145 = !DILocation(line: 153, column: 15, scope: !1033, inlinedAt: !4142)
!4146 = !DILocation(line: 0, scope: !1029, inlinedAt: !4147)
!4147 = distinct !DILocation(line: 81, column: 13, scope: !4119)
!4148 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4147)
!4149 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4147)
!4150 = !DILocation(line: 0, scope: !1033, inlinedAt: !4151)
!4151 = distinct !DILocation(line: 81, column: 34, scope: !4119)
!4152 = !DILocation(line: 152, column: 33, scope: !1033, inlinedAt: !4151)
!4153 = !DILocation(line: 153, column: 48, scope: !1033, inlinedAt: !4151)
!4154 = !DILocation(line: 153, column: 15, scope: !1033, inlinedAt: !4151)
!4155 = !DILocation(line: 0, scope: !1026, inlinedAt: !4156)
!4156 = distinct !DILocation(line: 78, column: 9, scope: !4119)
!4157 = !DILocation(line: 194, column: 13, scope: !3905, inlinedAt: !4156)
!4158 = !DILocation(line: 200, column: 9, scope: !3907, inlinedAt: !4156)
!4159 = !DILocation(line: 82, column: 5, scope: !4119)
!4160 = !DILocation(line: 83, column: 5, scope: !871)
!4161 = !DILocation(line: 86, column: 57, scope: !882)
!4162 = !DILocation(line: 86, column: 83, scope: !882)
!4163 = !DILocation(line: 86, column: 104, scope: !882)
!4164 = !DILocation(line: 86, column: 129, scope: !882)
!4165 = !DILocation(line: 0, scope: !973, inlinedAt: !4166)
!4166 = distinct !DILocation(line: 87, column: 5, scope: !882)
!4167 = !DILocation(line: 135, column: 19, scope: !973, inlinedAt: !4166)
!4168 = !DILocation(line: 136, column: 23, scope: !3882, inlinedAt: !4166)
!4169 = !DILocation(line: 138, column: 19, scope: !3882, inlinedAt: !4166)
!4170 = !DILocation(line: 139, column: 14, scope: !3882, inlinedAt: !4166)
!4171 = !DILocation(line: 0, scope: !1029, inlinedAt: !4172)
!4172 = distinct !DILocation(line: 88, column: 9, scope: !882)
!4173 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4172)
!4174 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4172)
!4175 = !DILocation(line: 0, scope: !1029, inlinedAt: !4176)
!4176 = distinct !DILocation(line: 88, column: 43, scope: !882)
!4177 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4176)
!4178 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4176)
!4179 = !DILocation(line: 0, scope: !1029, inlinedAt: !4180)
!4180 = distinct !DILocation(line: 89, column: 9, scope: !882)
!4181 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4180)
!4182 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4180)
!4183 = !DILocation(line: 0, scope: !1037, inlinedAt: !4184)
!4184 = distinct !DILocation(line: 89, column: 19, scope: !882)
!4185 = !DILocation(line: 147, column: 33, scope: !1037, inlinedAt: !4184)
!4186 = !DILocation(line: 148, column: 15, scope: !1037, inlinedAt: !4184)
!4187 = !DILocation(line: 0, scope: !1029, inlinedAt: !4188)
!4188 = distinct !DILocation(line: 90, column: 9, scope: !882)
!4189 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4188)
!4190 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4188)
!4191 = !DILocation(line: 0, scope: !1037, inlinedAt: !4192)
!4192 = distinct !DILocation(line: 90, column: 51, scope: !882)
!4193 = !DILocation(line: 147, column: 33, scope: !1037, inlinedAt: !4192)
!4194 = !DILocation(line: 148, column: 15, scope: !1037, inlinedAt: !4192)
!4195 = !DILocation(line: 0, scope: !1026, inlinedAt: !4196)
!4196 = distinct !DILocation(line: 87, column: 5, scope: !882)
!4197 = !DILocation(line: 194, column: 13, scope: !3905, inlinedAt: !4196)
!4198 = !DILocation(line: 200, column: 9, scope: !3907, inlinedAt: !4196)
!4199 = !DILocation(line: 91, column: 5, scope: !882)
!4200 = !DILocation(line: 94, column: 54, scope: !890)
!4201 = !DILocation(line: 94, column: 80, scope: !890)
!4202 = !DILocation(line: 94, column: 101, scope: !890)
!4203 = !DILocation(line: 94, column: 122, scope: !890)
!4204 = !DILocation(line: 0, scope: !973, inlinedAt: !4205)
!4205 = distinct !DILocation(line: 95, column: 5, scope: !890)
!4206 = !DILocation(line: 135, column: 19, scope: !973, inlinedAt: !4205)
!4207 = !DILocation(line: 136, column: 23, scope: !3882, inlinedAt: !4205)
!4208 = !DILocation(line: 138, column: 19, scope: !3882, inlinedAt: !4205)
!4209 = !DILocation(line: 139, column: 14, scope: !3882, inlinedAt: !4205)
!4210 = !DILocation(line: 0, scope: !1029, inlinedAt: !4211)
!4211 = distinct !DILocation(line: 96, column: 9, scope: !890)
!4212 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4211)
!4213 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4211)
!4214 = !DILocation(line: 0, scope: !1029, inlinedAt: !4215)
!4215 = distinct !DILocation(line: 96, column: 45, scope: !890)
!4216 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4215)
!4217 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4215)
!4218 = !DILocation(line: 0, scope: !1029, inlinedAt: !4219)
!4219 = distinct !DILocation(line: 97, column: 9, scope: !890)
!4220 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4219)
!4221 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4219)
!4222 = !DILocation(line: 0, scope: !1037, inlinedAt: !4223)
!4223 = distinct !DILocation(line: 97, column: 19, scope: !890)
!4224 = !DILocation(line: 147, column: 33, scope: !1037, inlinedAt: !4223)
!4225 = !DILocation(line: 148, column: 15, scope: !1037, inlinedAt: !4223)
!4226 = !DILocation(line: 0, scope: !1029, inlinedAt: !4227)
!4227 = distinct !DILocation(line: 98, column: 9, scope: !890)
!4228 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4227)
!4229 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4227)
!4230 = !DILocation(line: 0, scope: !1037, inlinedAt: !4231)
!4231 = distinct !DILocation(line: 98, column: 51, scope: !890)
!4232 = !DILocation(line: 147, column: 33, scope: !1037, inlinedAt: !4231)
!4233 = !DILocation(line: 148, column: 15, scope: !1037, inlinedAt: !4231)
!4234 = !DILocation(line: 0, scope: !1026, inlinedAt: !4235)
!4235 = distinct !DILocation(line: 95, column: 5, scope: !890)
!4236 = !DILocation(line: 194, column: 13, scope: !3905, inlinedAt: !4235)
!4237 = !DILocation(line: 200, column: 9, scope: !3907, inlinedAt: !4235)
!4238 = !DILocation(line: 99, column: 5, scope: !890)
!4239 = !DILocation(line: 102, column: 70, scope: !896)
!4240 = !DILocation(line: 102, column: 96, scope: !896)
!4241 = !DILocation(line: 103, column: 68, scope: !896)
!4242 = !DILocation(line: 104, column: 68, scope: !896)
!4243 = !DILocation(line: 104, column: 89, scope: !896)
!4244 = !DILocation(line: 105, column: 68, scope: !896)
!4245 = !DILocation(line: 105, column: 86, scope: !896)
!4246 = !DILocation(line: 106, column: 37, scope: !896)
!4247 = !DILocation(line: 106, column: 55, scope: !896)
!4248 = !DILocation(line: 106, column: 9, scope: !896)
!4249 = !DILocation(line: 107, column: 43, scope: !896)
!4250 = !DILocation(line: 107, column: 61, scope: !896)
!4251 = !DILocation(line: 107, column: 9, scope: !896)
!4252 = !DILocation(line: 0, scope: !973, inlinedAt: !4253)
!4253 = distinct !DILocation(line: 108, column: 5, scope: !896)
!4254 = !DILocation(line: 135, column: 19, scope: !973, inlinedAt: !4253)
!4255 = !DILocation(line: 136, column: 23, scope: !3882, inlinedAt: !4253)
!4256 = !DILocation(line: 138, column: 19, scope: !3882, inlinedAt: !4253)
!4257 = !DILocation(line: 139, column: 14, scope: !3882, inlinedAt: !4253)
!4258 = !DILocation(line: 0, scope: !1029, inlinedAt: !4259)
!4259 = distinct !DILocation(line: 109, column: 9, scope: !896)
!4260 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4259)
!4261 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4259)
!4262 = !DILocation(line: 0, scope: !1029, inlinedAt: !4263)
!4263 = distinct !DILocation(line: 109, column: 43, scope: !896)
!4264 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4263)
!4265 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4263)
!4266 = !DILocation(line: 0, scope: !1029, inlinedAt: !4267)
!4267 = distinct !DILocation(line: 110, column: 9, scope: !896)
!4268 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4267)
!4269 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4267)
!4270 = !DILocation(line: 0, scope: !1029, inlinedAt: !4271)
!4271 = distinct !DILocation(line: 111, column: 9, scope: !896)
!4272 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4271)
!4273 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4271)
!4274 = !DILocation(line: 0, scope: !1033, inlinedAt: !4275)
!4275 = distinct !DILocation(line: 111, column: 30, scope: !896)
!4276 = !DILocation(line: 152, column: 33, scope: !1033, inlinedAt: !4275)
!4277 = !DILocation(line: 153, column: 48, scope: !1033, inlinedAt: !4275)
!4278 = !DILocation(line: 153, column: 15, scope: !1033, inlinedAt: !4275)
!4279 = !DILocation(line: 0, scope: !1029, inlinedAt: !4280)
!4280 = distinct !DILocation(line: 111, column: 46, scope: !896)
!4281 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4280)
!4282 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4280)
!4283 = !DILocation(line: 0, scope: !1033, inlinedAt: !4284)
!4284 = distinct !DILocation(line: 111, column: 56, scope: !896)
!4285 = !DILocation(line: 152, column: 33, scope: !1033, inlinedAt: !4284)
!4286 = !DILocation(line: 153, column: 48, scope: !1033, inlinedAt: !4284)
!4287 = !DILocation(line: 153, column: 15, scope: !1033, inlinedAt: !4284)
!4288 = !DILocation(line: 0, scope: !1029, inlinedAt: !4289)
!4289 = distinct !DILocation(line: 111, column: 72, scope: !896)
!4290 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4289)
!4291 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4289)
!4292 = !DILocation(line: 0, scope: !1029, inlinedAt: !4293)
!4293 = distinct !DILocation(line: 112, column: 9, scope: !896)
!4294 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4293)
!4295 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4293)
!4296 = !DILocation(line: 0, scope: !1033, inlinedAt: !4297)
!4297 = distinct !DILocation(line: 112, column: 33, scope: !896)
!4298 = !DILocation(line: 152, column: 33, scope: !1033, inlinedAt: !4297)
!4299 = !DILocation(line: 153, column: 48, scope: !1033, inlinedAt: !4297)
!4300 = !DILocation(line: 153, column: 15, scope: !1033, inlinedAt: !4297)
!4301 = !DILocation(line: 0, scope: !1029, inlinedAt: !4302)
!4302 = distinct !DILocation(line: 112, column: 52, scope: !896)
!4303 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4302)
!4304 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4302)
!4305 = !DILocation(line: 0, scope: !1033, inlinedAt: !4306)
!4306 = distinct !DILocation(line: 112, column: 62, scope: !896)
!4307 = !DILocation(line: 152, column: 33, scope: !1033, inlinedAt: !4306)
!4308 = !DILocation(line: 153, column: 48, scope: !1033, inlinedAt: !4306)
!4309 = !DILocation(line: 153, column: 15, scope: !1033, inlinedAt: !4306)
!4310 = !DILocation(line: 0, scope: !1029, inlinedAt: !4311)
!4311 = distinct !DILocation(line: 112, column: 81, scope: !896)
!4312 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4311)
!4313 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4311)
!4314 = !DILocation(line: 0, scope: !1026, inlinedAt: !4315)
!4315 = distinct !DILocation(line: 108, column: 5, scope: !896)
!4316 = !DILocation(line: 194, column: 13, scope: !3905, inlinedAt: !4315)
!4317 = !DILocation(line: 200, column: 9, scope: !3907, inlinedAt: !4315)
!4318 = !DILocation(line: 113, column: 5, scope: !896)
!4319 = !DILocation(line: 116, column: 49, scope: !907)
!4320 = !DILocation(line: 116, column: 75, scope: !907)
!4321 = !DILocation(line: 116, column: 84, scope: !907)
!4322 = !DILocation(line: 117, column: 55, scope: !907)
!4323 = !DILocation(line: 117, column: 76, scope: !907)
!4324 = !DILocation(line: 0, scope: !973, inlinedAt: !4325)
!4325 = distinct !DILocation(line: 118, column: 5, scope: !907)
!4326 = !DILocation(line: 135, column: 19, scope: !973, inlinedAt: !4325)
!4327 = !DILocation(line: 136, column: 23, scope: !3882, inlinedAt: !4325)
!4328 = !DILocation(line: 138, column: 19, scope: !3882, inlinedAt: !4325)
!4329 = !DILocation(line: 139, column: 14, scope: !3882, inlinedAt: !4325)
!4330 = !DILocation(line: 0, scope: !1029, inlinedAt: !4331)
!4331 = distinct !DILocation(line: 119, column: 9, scope: !907)
!4332 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4331)
!4333 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4331)
!4334 = !DILocation(line: 0, scope: !1029, inlinedAt: !4335)
!4335 = distinct !DILocation(line: 119, column: 36, scope: !907)
!4336 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4335)
!4337 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4335)
!4338 = !DILocation(line: 0, scope: !1029, inlinedAt: !4339)
!4339 = distinct !DILocation(line: 119, column: 43, scope: !907)
!4340 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4339)
!4341 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4339)
!4342 = !DILocation(line: 0, scope: !1033, inlinedAt: !4343)
!4343 = distinct !DILocation(line: 119, column: 51, scope: !907)
!4344 = !DILocation(line: 152, column: 33, scope: !1033, inlinedAt: !4343)
!4345 = !DILocation(line: 153, column: 48, scope: !1033, inlinedAt: !4343)
!4346 = !DILocation(line: 153, column: 15, scope: !1033, inlinedAt: !4343)
!4347 = !DILocation(line: 0, scope: !1029, inlinedAt: !4348)
!4348 = distinct !DILocation(line: 120, column: 9, scope: !907)
!4349 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4348)
!4350 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4348)
!4351 = !DILocation(line: 0, scope: !1029, inlinedAt: !4352)
!4352 = distinct !DILocation(line: 120, column: 20, scope: !907)
!4353 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4352)
!4354 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4352)
!4355 = !DILocation(line: 0, scope: !1029, inlinedAt: !4356)
!4356 = distinct !DILocation(line: 120, column: 39, scope: !907)
!4357 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4356)
!4358 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4356)
!4359 = !DILocation(line: 0, scope: !1029, inlinedAt: !4360)
!4360 = distinct !DILocation(line: 120, column: 47, scope: !907)
!4361 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4360)
!4362 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4360)
!4363 = !DILocation(line: 0, scope: !1029, inlinedAt: !4364)
!4364 = distinct !DILocation(line: 120, column: 66, scope: !907)
!4365 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4364)
!4366 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4364)
!4367 = !DILocation(line: 0, scope: !1026, inlinedAt: !4368)
!4368 = distinct !DILocation(line: 118, column: 5, scope: !907)
!4369 = !DILocation(line: 194, column: 13, scope: !3905, inlinedAt: !4368)
!4370 = !DILocation(line: 200, column: 9, scope: !3907, inlinedAt: !4368)
!4371 = !DILocation(line: 121, column: 5, scope: !907)
!4372 = !DILocation(line: 124, column: 49, scope: !916)
!4373 = !DILocation(line: 124, column: 75, scope: !916)
!4374 = !DILocation(line: 125, column: 51, scope: !916)
!4375 = !DILocation(line: 125, column: 64, scope: !916)
!4376 = !DILocation(line: 0, scope: !973, inlinedAt: !4377)
!4377 = distinct !DILocation(line: 126, column: 5, scope: !916)
!4378 = !DILocation(line: 135, column: 19, scope: !973, inlinedAt: !4377)
!4379 = !DILocation(line: 136, column: 23, scope: !3882, inlinedAt: !4377)
!4380 = !DILocation(line: 138, column: 19, scope: !3882, inlinedAt: !4377)
!4381 = !DILocation(line: 139, column: 14, scope: !3882, inlinedAt: !4377)
!4382 = !DILocation(line: 0, scope: !1029, inlinedAt: !4383)
!4383 = distinct !DILocation(line: 127, column: 9, scope: !916)
!4384 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4383)
!4385 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4383)
!4386 = !DILocation(line: 0, scope: !1029, inlinedAt: !4387)
!4387 = distinct !DILocation(line: 127, column: 25, scope: !916)
!4388 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4387)
!4389 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4387)
!4390 = !DILocation(line: 0, scope: !1029, inlinedAt: !4391)
!4391 = distinct !DILocation(line: 128, column: 9, scope: !916)
!4392 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4391)
!4393 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4391)
!4394 = !DILocation(line: 0, scope: !1037, inlinedAt: !4395)
!4395 = distinct !DILocation(line: 128, column: 19, scope: !916)
!4396 = !DILocation(line: 147, column: 33, scope: !1037, inlinedAt: !4395)
!4397 = !DILocation(line: 148, column: 15, scope: !1037, inlinedAt: !4395)
!4398 = !DILocation(line: 0, scope: !1029, inlinedAt: !4399)
!4399 = distinct !DILocation(line: 129, column: 9, scope: !916)
!4400 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4399)
!4401 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4399)
!4402 = !DILocation(line: 0, scope: !1037, inlinedAt: !4403)
!4403 = distinct !DILocation(line: 129, column: 37, scope: !916)
!4404 = !DILocation(line: 147, column: 33, scope: !1037, inlinedAt: !4403)
!4405 = !DILocation(line: 148, column: 15, scope: !1037, inlinedAt: !4403)
!4406 = !DILocation(line: 0, scope: !1026, inlinedAt: !4407)
!4407 = distinct !DILocation(line: 126, column: 5, scope: !916)
!4408 = !DILocation(line: 194, column: 13, scope: !3905, inlinedAt: !4407)
!4409 = !DILocation(line: 200, column: 9, scope: !3907, inlinedAt: !4407)
!4410 = !DILocation(line: 130, column: 5, scope: !916)
!4411 = !DILocation(line: 133, column: 49, scope: !922)
!4412 = !DILocation(line: 133, column: 75, scope: !922)
!4413 = !DILocation(line: 134, column: 52, scope: !922)
!4414 = !DILocation(line: 134, column: 66, scope: !922)
!4415 = !DILocation(line: 0, scope: !973, inlinedAt: !4416)
!4416 = distinct !DILocation(line: 135, column: 5, scope: !922)
!4417 = !DILocation(line: 135, column: 19, scope: !973, inlinedAt: !4416)
!4418 = !DILocation(line: 136, column: 23, scope: !3882, inlinedAt: !4416)
!4419 = !DILocation(line: 138, column: 19, scope: !3882, inlinedAt: !4416)
!4420 = !DILocation(line: 139, column: 14, scope: !3882, inlinedAt: !4416)
!4421 = !DILocation(line: 0, scope: !1029, inlinedAt: !4422)
!4422 = distinct !DILocation(line: 136, column: 9, scope: !922)
!4423 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4422)
!4424 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4422)
!4425 = !DILocation(line: 0, scope: !1029, inlinedAt: !4426)
!4426 = distinct !DILocation(line: 136, column: 25, scope: !922)
!4427 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4426)
!4428 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4426)
!4429 = !DILocation(line: 0, scope: !1029, inlinedAt: !4430)
!4430 = distinct !DILocation(line: 137, column: 9, scope: !922)
!4431 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4430)
!4432 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4430)
!4433 = !DILocation(line: 0, scope: !1041, inlinedAt: !4434)
!4434 = distinct !DILocation(line: 137, column: 19, scope: !922)
!4435 = !DILocation(line: 157, column: 34, scope: !1041, inlinedAt: !4434)
!4436 = !DILocation(line: 158, column: 15, scope: !1041, inlinedAt: !4434)
!4437 = !DILocation(line: 0, scope: !1029, inlinedAt: !4438)
!4438 = distinct !DILocation(line: 138, column: 9, scope: !922)
!4439 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4438)
!4440 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4438)
!4441 = !DILocation(line: 0, scope: !1041, inlinedAt: !4442)
!4442 = distinct !DILocation(line: 138, column: 37, scope: !922)
!4443 = !DILocation(line: 157, column: 34, scope: !1041, inlinedAt: !4442)
!4444 = !DILocation(line: 158, column: 15, scope: !1041, inlinedAt: !4442)
!4445 = !DILocation(line: 0, scope: !1026, inlinedAt: !4446)
!4446 = distinct !DILocation(line: 135, column: 5, scope: !922)
!4447 = !DILocation(line: 194, column: 13, scope: !3905, inlinedAt: !4446)
!4448 = !DILocation(line: 200, column: 9, scope: !3907, inlinedAt: !4446)
!4449 = !DILocation(line: 139, column: 5, scope: !922)
!4450 = !DILocation(line: 142, column: 49, scope: !930)
!4451 = !DILocation(line: 142, column: 75, scope: !930)
!4452 = !DILocation(line: 143, column: 50, scope: !930)
!4453 = !DILocation(line: 143, column: 62, scope: !930)
!4454 = !DILocation(line: 0, scope: !973, inlinedAt: !4455)
!4455 = distinct !DILocation(line: 144, column: 5, scope: !930)
!4456 = !DILocation(line: 135, column: 19, scope: !973, inlinedAt: !4455)
!4457 = !DILocation(line: 136, column: 23, scope: !3882, inlinedAt: !4455)
!4458 = !DILocation(line: 138, column: 19, scope: !3882, inlinedAt: !4455)
!4459 = !DILocation(line: 139, column: 14, scope: !3882, inlinedAt: !4455)
!4460 = !DILocation(line: 0, scope: !1029, inlinedAt: !4461)
!4461 = distinct !DILocation(line: 145, column: 9, scope: !930)
!4462 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4461)
!4463 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4461)
!4464 = !DILocation(line: 0, scope: !1029, inlinedAt: !4465)
!4465 = distinct !DILocation(line: 145, column: 25, scope: !930)
!4466 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4465)
!4467 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4465)
!4468 = !DILocation(line: 0, scope: !1029, inlinedAt: !4469)
!4469 = distinct !DILocation(line: 146, column: 9, scope: !930)
!4470 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4469)
!4471 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4469)
!4472 = !DILocation(line: 0, scope: !1045, inlinedAt: !4473)
!4473 = distinct !DILocation(line: 146, column: 19, scope: !930)
!4474 = !DILocation(line: 167, column: 32, scope: !1045, inlinedAt: !4473)
!4475 = !DILocation(line: 168, column: 15, scope: !1045, inlinedAt: !4473)
!4476 = !DILocation(line: 0, scope: !1029, inlinedAt: !4477)
!4477 = distinct !DILocation(line: 147, column: 9, scope: !930)
!4478 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4477)
!4479 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4477)
!4480 = !DILocation(line: 0, scope: !1045, inlinedAt: !4481)
!4481 = distinct !DILocation(line: 147, column: 37, scope: !930)
!4482 = !DILocation(line: 167, column: 32, scope: !1045, inlinedAt: !4481)
!4483 = !DILocation(line: 168, column: 15, scope: !1045, inlinedAt: !4481)
!4484 = !DILocation(line: 0, scope: !1026, inlinedAt: !4485)
!4485 = distinct !DILocation(line: 144, column: 5, scope: !930)
!4486 = !DILocation(line: 194, column: 13, scope: !3905, inlinedAt: !4485)
!4487 = !DILocation(line: 200, column: 9, scope: !3907, inlinedAt: !4485)
!4488 = !DILocation(line: 148, column: 5, scope: !930)
!4489 = !DILocation(line: 151, column: 49, scope: !938)
!4490 = !DILocation(line: 151, column: 75, scope: !938)
!4491 = !DILocation(line: 152, column: 51, scope: !938)
!4492 = !DILocation(line: 152, column: 64, scope: !938)
!4493 = !DILocation(line: 0, scope: !973, inlinedAt: !4494)
!4494 = distinct !DILocation(line: 153, column: 5, scope: !938)
!4495 = !DILocation(line: 135, column: 19, scope: !973, inlinedAt: !4494)
!4496 = !DILocation(line: 136, column: 23, scope: !3882, inlinedAt: !4494)
!4497 = !DILocation(line: 138, column: 19, scope: !3882, inlinedAt: !4494)
!4498 = !DILocation(line: 139, column: 14, scope: !3882, inlinedAt: !4494)
!4499 = !DILocation(line: 0, scope: !1029, inlinedAt: !4500)
!4500 = distinct !DILocation(line: 154, column: 9, scope: !938)
!4501 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4500)
!4502 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4500)
!4503 = !DILocation(line: 0, scope: !1029, inlinedAt: !4504)
!4504 = distinct !DILocation(line: 154, column: 25, scope: !938)
!4505 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4504)
!4506 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4504)
!4507 = !DILocation(line: 0, scope: !1029, inlinedAt: !4508)
!4508 = distinct !DILocation(line: 155, column: 9, scope: !938)
!4509 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4508)
!4510 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4508)
!4511 = !DILocation(line: 0, scope: !1037, inlinedAt: !4512)
!4512 = distinct !DILocation(line: 155, column: 19, scope: !938)
!4513 = !DILocation(line: 147, column: 33, scope: !1037, inlinedAt: !4512)
!4514 = !DILocation(line: 148, column: 15, scope: !1037, inlinedAt: !4512)
!4515 = !DILocation(line: 0, scope: !1029, inlinedAt: !4516)
!4516 = distinct !DILocation(line: 156, column: 9, scope: !938)
!4517 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4516)
!4518 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4516)
!4519 = !DILocation(line: 0, scope: !1037, inlinedAt: !4520)
!4520 = distinct !DILocation(line: 156, column: 36, scope: !938)
!4521 = !DILocation(line: 147, column: 33, scope: !1037, inlinedAt: !4520)
!4522 = !DILocation(line: 148, column: 15, scope: !1037, inlinedAt: !4520)
!4523 = !DILocation(line: 0, scope: !1026, inlinedAt: !4524)
!4524 = distinct !DILocation(line: 153, column: 5, scope: !938)
!4525 = !DILocation(line: 194, column: 13, scope: !3905, inlinedAt: !4524)
!4526 = !DILocation(line: 200, column: 9, scope: !3907, inlinedAt: !4524)
!4527 = !DILocation(line: 157, column: 5, scope: !938)
!4528 = !DILocation(line: 160, column: 49, scope: !944)
!4529 = !DILocation(line: 160, column: 75, scope: !944)
!4530 = !DILocation(line: 161, column: 52, scope: !944)
!4531 = !DILocation(line: 161, column: 66, scope: !944)
!4532 = !DILocation(line: 0, scope: !973, inlinedAt: !4533)
!4533 = distinct !DILocation(line: 162, column: 5, scope: !944)
!4534 = !DILocation(line: 135, column: 19, scope: !973, inlinedAt: !4533)
!4535 = !DILocation(line: 136, column: 23, scope: !3882, inlinedAt: !4533)
!4536 = !DILocation(line: 138, column: 19, scope: !3882, inlinedAt: !4533)
!4537 = !DILocation(line: 139, column: 14, scope: !3882, inlinedAt: !4533)
!4538 = !DILocation(line: 0, scope: !1029, inlinedAt: !4539)
!4539 = distinct !DILocation(line: 163, column: 9, scope: !944)
!4540 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4539)
!4541 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4539)
!4542 = !DILocation(line: 0, scope: !1029, inlinedAt: !4543)
!4543 = distinct !DILocation(line: 163, column: 25, scope: !944)
!4544 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4543)
!4545 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4543)
!4546 = !DILocation(line: 0, scope: !1029, inlinedAt: !4547)
!4547 = distinct !DILocation(line: 164, column: 9, scope: !944)
!4548 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4547)
!4549 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4547)
!4550 = !DILocation(line: 0, scope: !1041, inlinedAt: !4551)
!4551 = distinct !DILocation(line: 164, column: 19, scope: !944)
!4552 = !DILocation(line: 157, column: 34, scope: !1041, inlinedAt: !4551)
!4553 = !DILocation(line: 158, column: 15, scope: !1041, inlinedAt: !4551)
!4554 = !DILocation(line: 0, scope: !1029, inlinedAt: !4555)
!4555 = distinct !DILocation(line: 165, column: 9, scope: !944)
!4556 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4555)
!4557 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4555)
!4558 = !DILocation(line: 0, scope: !1041, inlinedAt: !4559)
!4559 = distinct !DILocation(line: 165, column: 36, scope: !944)
!4560 = !DILocation(line: 157, column: 34, scope: !1041, inlinedAt: !4559)
!4561 = !DILocation(line: 158, column: 15, scope: !1041, inlinedAt: !4559)
!4562 = !DILocation(line: 0, scope: !1026, inlinedAt: !4563)
!4563 = distinct !DILocation(line: 162, column: 5, scope: !944)
!4564 = !DILocation(line: 194, column: 13, scope: !3905, inlinedAt: !4563)
!4565 = !DILocation(line: 200, column: 9, scope: !3907, inlinedAt: !4563)
!4566 = !DILocation(line: 166, column: 5, scope: !944)
!4567 = !DILocation(line: 169, column: 49, scope: !950)
!4568 = !DILocation(line: 169, column: 75, scope: !950)
!4569 = !DILocation(line: 170, column: 50, scope: !950)
!4570 = !DILocation(line: 170, column: 62, scope: !950)
!4571 = !DILocation(line: 0, scope: !973, inlinedAt: !4572)
!4572 = distinct !DILocation(line: 171, column: 5, scope: !950)
!4573 = !DILocation(line: 135, column: 19, scope: !973, inlinedAt: !4572)
!4574 = !DILocation(line: 136, column: 23, scope: !3882, inlinedAt: !4572)
!4575 = !DILocation(line: 138, column: 19, scope: !3882, inlinedAt: !4572)
!4576 = !DILocation(line: 139, column: 14, scope: !3882, inlinedAt: !4572)
!4577 = !DILocation(line: 0, scope: !1029, inlinedAt: !4578)
!4578 = distinct !DILocation(line: 172, column: 9, scope: !950)
!4579 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4578)
!4580 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4578)
!4581 = !DILocation(line: 0, scope: !1029, inlinedAt: !4582)
!4582 = distinct !DILocation(line: 172, column: 25, scope: !950)
!4583 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4582)
!4584 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4582)
!4585 = !DILocation(line: 0, scope: !1029, inlinedAt: !4586)
!4586 = distinct !DILocation(line: 173, column: 9, scope: !950)
!4587 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4586)
!4588 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4586)
!4589 = !DILocation(line: 0, scope: !1045, inlinedAt: !4590)
!4590 = distinct !DILocation(line: 173, column: 19, scope: !950)
!4591 = !DILocation(line: 167, column: 32, scope: !1045, inlinedAt: !4590)
!4592 = !DILocation(line: 168, column: 15, scope: !1045, inlinedAt: !4590)
!4593 = !DILocation(line: 0, scope: !1029, inlinedAt: !4594)
!4594 = distinct !DILocation(line: 174, column: 9, scope: !950)
!4595 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4594)
!4596 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4594)
!4597 = !DILocation(line: 0, scope: !1045, inlinedAt: !4598)
!4598 = distinct !DILocation(line: 174, column: 36, scope: !950)
!4599 = !DILocation(line: 167, column: 32, scope: !1045, inlinedAt: !4598)
!4600 = !DILocation(line: 168, column: 15, scope: !1045, inlinedAt: !4598)
!4601 = !DILocation(line: 0, scope: !1026, inlinedAt: !4602)
!4602 = distinct !DILocation(line: 171, column: 5, scope: !950)
!4603 = !DILocation(line: 194, column: 13, scope: !3905, inlinedAt: !4602)
!4604 = !DILocation(line: 200, column: 9, scope: !3907, inlinedAt: !4602)
!4605 = !DILocation(line: 175, column: 5, scope: !950)
!4606 = !DILocation(line: 178, column: 43, scope: !956)
!4607 = !DILocation(line: 180, column: 5, scope: !956)
!4608 = !DILocation(line: 181, column: 5, scope: !956)
!4609 = !DILocation(line: 184, column: 53, scope: !959)
!4610 = !DILocation(line: 184, column: 79, scope: !959)
!4611 = !DILocation(line: 0, scope: !973, inlinedAt: !4612)
!4612 = distinct !DILocation(line: 185, column: 5, scope: !959)
!4613 = !DILocation(line: 135, column: 19, scope: !973, inlinedAt: !4612)
!4614 = !DILocation(line: 136, column: 23, scope: !3882, inlinedAt: !4612)
!4615 = !DILocation(line: 138, column: 19, scope: !3882, inlinedAt: !4612)
!4616 = !DILocation(line: 139, column: 14, scope: !3882, inlinedAt: !4612)
!4617 = !DILocation(line: 0, scope: !1029, inlinedAt: !4618)
!4618 = distinct !DILocation(line: 186, column: 9, scope: !959)
!4619 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4618)
!4620 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4618)
!4621 = !DILocation(line: 0, scope: !1029, inlinedAt: !4622)
!4622 = distinct !DILocation(line: 186, column: 31, scope: !959)
!4623 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4622)
!4624 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4622)
!4625 = !DILocation(line: 0, scope: !1029, inlinedAt: !4626)
!4626 = distinct !DILocation(line: 186, column: 46, scope: !959)
!4627 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4626)
!4628 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4626)
!4629 = !DILocation(line: 0, scope: !1026, inlinedAt: !4630)
!4630 = distinct !DILocation(line: 185, column: 5, scope: !959)
!4631 = !DILocation(line: 194, column: 13, scope: !3905, inlinedAt: !4630)
!4632 = !DILocation(line: 200, column: 9, scope: !3907, inlinedAt: !4630)
!4633 = !DILocation(line: 187, column: 5, scope: !959)
!4634 = !DILocation(line: 190, column: 50, scope: !965)
!4635 = !DILocation(line: 190, column: 76, scope: !965)
!4636 = !DILocation(line: 191, column: 56, scope: !965)
!4637 = !DILocation(line: 191, column: 70, scope: !965)
!4638 = !DILocation(line: 0, scope: !973, inlinedAt: !4639)
!4639 = distinct !DILocation(line: 192, column: 5, scope: !965)
!4640 = !DILocation(line: 135, column: 19, scope: !973, inlinedAt: !4639)
!4641 = !DILocation(line: 136, column: 23, scope: !3882, inlinedAt: !4639)
!4642 = !DILocation(line: 138, column: 19, scope: !3882, inlinedAt: !4639)
!4643 = !DILocation(line: 139, column: 14, scope: !3882, inlinedAt: !4639)
!4644 = !DILocation(line: 0, scope: !1029, inlinedAt: !4645)
!4645 = distinct !DILocation(line: 193, column: 9, scope: !965)
!4646 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4645)
!4647 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4645)
!4648 = !DILocation(line: 0, scope: !1029, inlinedAt: !4649)
!4649 = distinct !DILocation(line: 193, column: 39, scope: !965)
!4650 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4649)
!4651 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4649)
!4652 = !DILocation(line: 0, scope: !1029, inlinedAt: !4653)
!4653 = distinct !DILocation(line: 194, column: 9, scope: !965)
!4654 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4653)
!4655 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4653)
!4656 = !DILocation(line: 0, scope: !1029, inlinedAt: !4657)
!4657 = distinct !DILocation(line: 194, column: 24, scope: !965)
!4658 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4657)
!4659 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4657)
!4660 = !DILocation(line: 0, scope: !1029, inlinedAt: !4661)
!4661 = distinct !DILocation(line: 195, column: 9, scope: !965)
!4662 = !DILocation(line: 142, column: 37, scope: !1029, inlinedAt: !4661)
!4663 = !DILocation(line: 143, column: 15, scope: !1029, inlinedAt: !4661)
!4664 = !DILocation(line: 0, scope: !1033, inlinedAt: !4665)
!4665 = distinct !DILocation(line: 195, column: 27, scope: !965)
!4666 = !DILocation(line: 152, column: 33, scope: !1033, inlinedAt: !4665)
!4667 = !DILocation(line: 153, column: 48, scope: !1033, inlinedAt: !4665)
!4668 = !DILocation(line: 153, column: 15, scope: !1033, inlinedAt: !4665)
!4669 = !DILocation(line: 0, scope: !1026, inlinedAt: !4670)
!4670 = distinct !DILocation(line: 192, column: 5, scope: !965)
!4671 = !DILocation(line: 194, column: 13, scope: !3905, inlinedAt: !4670)
!4672 = !DILocation(line: 200, column: 9, scope: !3907, inlinedAt: !4670)
!4673 = !DILocation(line: 196, column: 5, scope: !965)
!4674 = !DILocation(line: 13, column: 30, scope: !1056)
!4675 = !DILocation(line: 13, column: 56, scope: !1056)
!4676 = !DILocation(line: 14, column: 7, scope: !1056)
!4677 = !DILocation(line: 14, column: 5, scope: !1056)
!4678 = !DILocation(line: 15, column: 1, scope: !1056)
!4679 = !DILocation(line: 17, column: 44, scope: !1060)
!4680 = !DILocation(line: 19, column: 44, scope: !1060)
!4681 = !DILocation(line: 19, column: 12, scope: !1060)
!4682 = !DILocation(line: 20, column: 25, scope: !1060)
!4683 = !DILocation(line: 21, column: 5, scope: !1060)
!4684 = !DILocation(line: 60, column: 41, scope: !1131)
!4685 = !DILocation(line: 61, column: 12, scope: !1131)
!4686 = !DILocation(line: 62, column: 14, scope: !1138)
!4687 = !DILocation(line: 63, column: 26, scope: !1140)
!4688 = !DILocation(line: 63, column: 17, scope: !1140)
!4689 = !DILocation(line: 64, column: 20, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !1140, file: !1069, line: 64, column: 13)
!4691 = !DILocation(line: 64, column: 34, scope: !4690)
!4692 = !DILocation(line: 64, column: 13, scope: !1140)
!4693 = !DILocation(line: 65, column: 14, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !1140, file: !1069, line: 65, column: 13)
!4695 = !DILocation(line: 65, column: 28, scope: !4694)
!4696 = !DILocation(line: 65, column: 38, scope: !4694)
!4697 = !DILocation(line: 65, column: 13, scope: !1140)
!4698 = !DILocation(line: 69, column: 5, scope: !1131)
!4699 = !DILocation(line: 72, column: 30, scope: !1142)
!4700 = !DILocation(line: 72, column: 60, scope: !1142)
!4701 = !DILocation(line: 72, column: 76, scope: !1142)
!4702 = !DILocation(line: 73, column: 26, scope: !1142)
!4703 = !DILocation(line: 73, column: 12, scope: !1142)
!4704 = !DILocation(line: 74, column: 5, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !1142, file: !1069, line: 74, column: 5)
!4706 = !{!4707, !2680, i64 60}
!4707 = !{!"_ZTS8buffer_t", !3313, i64 0, !2679, i64 8, !2619, i64 12, !2619, i64 28, !2619, i64 44, !2680, i64 60, !2618, i64 64, !2618, i64 65, !2619, i64 66}
!4708 = !DILocation(line: 74, column: 5, scope: !1142)
!4709 = !DILocation(line: 74, column: 5, scope: !4710)
!4710 = !DILexicalBlockFile(scope: !4705, file: !1069, discriminator: 1)
!4711 = !DILocation(line: 76, column: 9, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !1069, line: 76, column: 9)
!4713 = distinct !DILexicalBlock(scope: !4714, file: !1069, line: 75, column: 33)
!4714 = distinct !DILexicalBlock(scope: !1151, file: !1069, line: 75, column: 5)
!4715 = !DILocation(line: 76, column: 9, scope: !4713)
!4716 = !DILocation(line: 76, column: 9, scope: !4717)
!4717 = !DILexicalBlockFile(scope: !4712, file: !1069, discriminator: 1)
!4718 = !DILocation(line: 77, column: 9, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4713, file: !1069, line: 77, column: 9)
!4720 = !DILocation(line: 77, column: 9, scope: !4713)
!4721 = !DILocation(line: 77, column: 9, scope: !4722)
!4722 = !DILexicalBlockFile(scope: !4719, file: !1069, discriminator: 1)
!4723 = !DILocation(line: 75, column: 14, scope: !1151)
!4724 = !DILocation(line: 79, column: 15, scope: !1142)
!4725 = !{!4707, !2679, i64 8}
!4726 = !DILocation(line: 79, column: 26, scope: !1142)
!4727 = !DILocation(line: 79, column: 51, scope: !1142)
!4728 = !DILocation(line: 79, column: 44, scope: !1142)
!4729 = !DILocation(line: 79, column: 5, scope: !1142)
!4730 = !DILocation(line: 80, column: 1, scope: !1142)
!4731 = !DILocation(line: 82, column: 36, scope: !1152)
!4732 = !DILocation(line: 82, column: 66, scope: !1152)
!4733 = !DIExpression(DW_OP_deref)
!4734 = !DILocation(line: 83, column: 14, scope: !1152)
!4735 = !DILocation(line: 83, column: 23, scope: !1152)
!4736 = !{i64 0, i64 8, !3312, i64 8, i64 4, !2768, i64 12, i64 16, !3047, i64 28, i64 16, !3047, i64 44, i64 16, !3047, i64 60, i64 4, !2786, i64 64, i64 1, !2617, i64 65, i64 1, !2617, i64 66, i64 6, !3047}
!4737 = !DILocation(line: 84, column: 26, scope: !1152)
!4738 = !DILocation(line: 84, column: 12, scope: !1152)
!4739 = !DILocation(line: 86, column: 79, scope: !1152)
!4740 = !DILocation(line: 86, column: 70, scope: !1152)
!4741 = !DILocation(line: 86, column: 30, scope: !1152)
!4742 = !DILocation(line: 86, column: 12, scope: !1152)
!4743 = !DILocation(line: 86, column: 17, scope: !1152)
!4744 = !DILocation(line: 87, column: 5, scope: !1152)
!4745 = !DILocation(line: 89, column: 1, scope: !1152)
!4746 = !DILocation(line: 91, column: 37, scope: !1160)
!4747 = !DILocation(line: 91, column: 58, scope: !1160)
!4748 = !DILocation(line: 91, column: 71, scope: !1160)
!4749 = !DILocation(line: 92, column: 12, scope: !1160)
!4750 = !DILocation(line: 92, column: 41, scope: !1160)
!4751 = !DILocation(line: 92, column: 5, scope: !1160)
!4752 = !DILocation(line: 95, column: 40, scope: !1167)
!4753 = !DILocation(line: 95, column: 62, scope: !1167)
!4754 = !DILocation(line: 96, column: 14, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !1167, file: !1069, line: 96, column: 9)
!4756 = !DILocation(line: 96, column: 32, scope: !4755)
!4757 = !DILocation(line: 96, column: 24, scope: !4755)
!4758 = !DILocation(line: 96, column: 9, scope: !1167)
!4759 = !DILocation(line: 99, column: 13, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4761, file: !1069, line: 99, column: 13)
!4761 = distinct !DILexicalBlock(scope: !4762, file: !1069, line: 98, column: 36)
!4762 = distinct !DILexicalBlock(scope: !1174, file: !1069, line: 98, column: 5)
!4763 = !DILocation(line: 99, column: 28, scope: !4760)
!4764 = !DILocation(line: 99, column: 25, scope: !4760)
!4765 = !DILocation(line: 99, column: 40, scope: !4760)
!4766 = !DILocation(line: 100, column: 13, scope: !4760)
!4767 = !DILocation(line: 100, column: 31, scope: !4760)
!4768 = !DILocation(line: 100, column: 28, scope: !4760)
!4769 = !DILocation(line: 100, column: 46, scope: !4760)
!4770 = !DILocation(line: 101, column: 13, scope: !4760)
!4771 = !DILocation(line: 101, column: 31, scope: !4760)
!4772 = !DILocation(line: 101, column: 28, scope: !4760)
!4773 = !DILocation(line: 98, column: 17, scope: !1174)
!4774 = !DILocation(line: 99, column: 13, scope: !4761)
!4775 = !DILocation(line: 0, scope: !1175)
!4776 = !DILocation(line: 128, column: 43, scope: !1175)
!4777 = !DILocation(line: 128, column: 61, scope: !1175)
!4778 = !DILocation(line: 129, column: 37, scope: !1175)
!4779 = !DILocation(line: 129, column: 63, scope: !1175)
!4780 = !DILocation(line: 130, column: 36, scope: !1175)
!4781 = !DILocation(line: 130, column: 55, scope: !1175)
!4782 = !DILocation(line: 131, column: 5, scope: !1175)
!4783 = !DILocation(line: 131, column: 10, scope: !1175)
!4784 = !{!4785, !2679, i64 0}
!4785 = !{!"_ZTSN6Halide7Runtime8Internal10CacheEntryE", !2679, i64 0, !2679, i64 4, !2679, i64 8, !2680, i64 12, !2679, i64 16, !2680, i64 20, !2680, i64 24, !4707, i64 32, !2619, i64 104}
!4786 = !DILocation(line: 132, column: 5, scope: !1175)
!4787 = !DILocation(line: 132, column: 17, scope: !1175)
!4788 = !{!4785, !2679, i64 4}
!4789 = !DILocation(line: 133, column: 5, scope: !1175)
!4790 = !DILocation(line: 133, column: 17, scope: !1175)
!4791 = !{!4785, !2679, i64 8}
!4792 = !DILocation(line: 134, column: 5, scope: !1175)
!4793 = !DILocation(line: 134, column: 14, scope: !1175)
!4794 = !{!4785, !2680, i64 12}
!4795 = !DILocation(line: 135, column: 5, scope: !1175)
!4796 = !DILocation(line: 135, column: 10, scope: !1175)
!4797 = !{!4785, !2680, i64 20}
!4798 = !DILocation(line: 136, column: 5, scope: !1175)
!4799 = !DILocation(line: 136, column: 17, scope: !1175)
!4800 = !{!4785, !2680, i64 24}
!4801 = !DILocation(line: 139, column: 22, scope: !1175)
!4802 = !DILocation(line: 139, column: 5, scope: !1175)
!4803 = !DILocation(line: 139, column: 9, scope: !1175)
!4804 = !{!4785, !2679, i64 16}
!4805 = !DILocation(line: 140, column: 5, scope: !1175)
!4806 = !DILocation(line: 140, column: 21, scope: !1175)
!4807 = !DILocation(line: 141, column: 21, scope: !1175)
!4808 = !DILocation(line: 141, column: 26, scope: !1175)
!4809 = !{!4785, !2679, i64 40}
!4810 = !DILocation(line: 142, column: 21, scope: !1175)
!4811 = !DILocation(line: 142, column: 25, scope: !1175)
!4812 = !{!4785, !3313, i64 32}
!4813 = !DILocation(line: 143, column: 17, scope: !1185)
!4814 = !DILocation(line: 143, column: 28, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !1185, file: !1069, line: 143, column: 5)
!4816 = !DILocation(line: 143, column: 26, scope: !4815)
!4817 = !DILocation(line: 143, column: 5, scope: !1185)
!4818 = !DILocation(line: 144, column: 18, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4815, file: !1069, line: 143, column: 43)
!4820 = !DILocation(line: 144, column: 16, scope: !4819)
!4821 = !DILocation(line: 144, column: 9, scope: !4819)
!4822 = !DILocation(line: 146, column: 29, scope: !1190)
!4823 = !DILocation(line: 146, column: 27, scope: !1190)
!4824 = !DILocation(line: 146, column: 5, scope: !1187)
!4825 = !DILocation(line: 148, column: 19, scope: !1189)
!4826 = !DILocation(line: 143, column: 39, scope: !4815)
!4827 = !DILocation(line: 150, column: 1, scope: !1175)
!4828 = !DILocation(line: 147, column: 25, scope: !1189)
!4829 = !DILocation(line: 147, column: 19, scope: !1189)
!4830 = !DILocation(line: 148, column: 9, scope: !1189)
!4831 = !DILocation(line: 148, column: 21, scope: !1189)
!4832 = !DILocation(line: 146, column: 43, scope: !1190)
!4833 = !DILocation(line: 146, column: 18, scope: !1187)
!4834 = !DILocation(line: 0, scope: !1196)
!4835 = !DILocation(line: 160, column: 43, scope: !1196)
!4836 = !DILocation(line: 162, column: 12, scope: !1196)
!4837 = !DILocation(line: 162, column: 5, scope: !1196)
!4838 = !DILocation(line: 0, scope: !1191)
!4839 = !DILocation(line: 153, column: 23, scope: !1191)
!4840 = !DILocation(line: 153, column: 5, scope: !1191)
!4841 = !DILocation(line: 154, column: 18, scope: !1195)
!4842 = !DILocation(line: 154, column: 29, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !1195, file: !1069, line: 154, column: 5)
!4844 = !DILocation(line: 154, column: 27, scope: !4843)
!4845 = !DILocation(line: 154, column: 5, scope: !1195)
!4846 = !DILocation(line: 158, column: 1, scope: !1191)
!4847 = !DILocation(line: 155, column: 35, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4843, file: !1069, line: 154, column: 47)
!4849 = !DILocation(line: 155, column: 9, scope: !4848)
!4850 = !DILocation(line: 156, column: 27, scope: !4848)
!4851 = !DILocation(line: 156, column: 37, scope: !4848)
!4852 = !DILocation(line: 156, column: 9, scope: !4848)
!4853 = !DILocation(line: 154, column: 43, scope: !4843)
!4854 = !DILocation(line: 165, column: 39, scope: !1201)
!4855 = !DILocation(line: 165, column: 51, scope: !1201)
!4856 = !DILocation(line: 166, column: 14, scope: !1201)
!4857 = !DILocation(line: 167, column: 17, scope: !1209)
!4858 = !DILocation(line: 167, column: 26, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !1209, file: !1069, line: 167, column: 5)
!4860 = !DILocation(line: 167, column: 5, scope: !1209)
!4861 = !DILocation(line: 170, column: 5, scope: !1201)
!4862 = !DILocation(line: 168, column: 20, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4859, file: !1069, line: 167, column: 43)
!4864 = !DILocation(line: 168, column: 26, scope: !4863)
!4865 = !DILocation(line: 168, column: 24, scope: !4863)
!4866 = !DILocation(line: 167, column: 39, scope: !4859)
!4867 = !DILocation(line: 237, column: 12, scope: !4868)
!4868 = !DILexicalBlockFile(scope: !4869, file: !1069, discriminator: 3)
!4869 = !DILexicalBlockFile(scope: !1210, file: !1069, discriminator: 1)
!4870 = !DILocation(line: 237, column: 33, scope: !1210)
!4871 = !DILocation(line: 237, column: 31, scope: !1210)
!4872 = !DILocation(line: 238, column: 12, scope: !1210)
!4873 = !DILocation(line: 238, column: 32, scope: !1210)
!4874 = !DILocation(line: 237, column: 48, scope: !1210)
!4875 = !DILocation(line: 237, column: 5, scope: !4876)
!4876 = !DILexicalBlockFile(scope: !1210, file: !1069, discriminator: 2)
!4877 = !DILocation(line: 239, column: 21, scope: !1213)
!4878 = !DILocation(line: 240, column: 33, scope: !1213)
!4879 = !DILocation(line: 240, column: 18, scope: !1213)
!4880 = !DILocation(line: 241, column: 28, scope: !1213)
!4881 = !DILocation(line: 241, column: 18, scope: !1213)
!4882 = !DILocation(line: 243, column: 29, scope: !1213)
!4883 = !DILocation(line: 243, column: 21, scope: !1213)
!4884 = !DILocation(line: 244, column: 19, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !1213, file: !1069, line: 244, column: 13)
!4886 = !DILocation(line: 244, column: 13, scope: !1213)
!4887 = !DILocation(line: 245, column: 47, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4885, file: !1069, line: 244, column: 33)
!4889 = !DILocation(line: 245, column: 34, scope: !4888)
!4890 = !DILocation(line: 246, column: 9, scope: !4888)
!4891 = !DILocation(line: 247, column: 26, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4885, file: !1069, line: 246, column: 16)
!4893 = !DILocation(line: 247, column: 34, scope: !4892)
!4894 = !DILocation(line: 247, column: 44, scope: !4892)
!4895 = !DILocation(line: 247, column: 49, scope: !4892)
!4896 = !DILocation(line: 247, column: 13, scope: !4897)
!4897 = !DILexicalBlockFile(scope: !4892, file: !1069, discriminator: 3)
!4898 = !DILocation(line: 250, column: 13, scope: !4899)
!4899 = !DILexicalBlockFile(scope: !4900, file: !1069, discriminator: 1)
!4900 = distinct !DILexicalBlock(scope: !4892, file: !1069, line: 250, column: 13)
!4901 = !DILocation(line: 251, column: 38, scope: !4892)
!4902 = !DILocation(line: 251, column: 25, scope: !4892)
!4903 = !DILocation(line: 253, column: 42, scope: !1213)
!4904 = !DILocation(line: 253, column: 29, scope: !1213)
!4905 = !DILocation(line: 254, column: 33, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !1213, file: !1069, line: 254, column: 13)
!4907 = !DILocation(line: 254, column: 13, scope: !1213)
!4908 = !DILocation(line: 255, column: 34, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4906, file: !1069, line: 254, column: 42)
!4910 = !DILocation(line: 255, column: 46, scope: !4909)
!4911 = !DILocation(line: 256, column: 9, scope: !4909)
!4912 = !DILocation(line: 257, column: 13, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !1213, file: !1069, line: 257, column: 13)
!4914 = !DILocation(line: 257, column: 32, scope: !4913)
!4915 = !DILocation(line: 257, column: 13, scope: !1213)
!4916 = !DILocation(line: 258, column: 32, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4913, file: !1069, line: 257, column: 46)
!4918 = !DILocation(line: 259, column: 9, scope: !4917)
!4919 = !DILocation(line: 260, column: 44, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !1218, file: !1069, line: 260, column: 9)
!4921 = !DILocation(line: 260, column: 31, scope: !4920)
!4922 = !DILocation(line: 260, column: 9, scope: !1218)
!4923 = !DILocation(line: 264, column: 9, scope: !1213)
!4924 = !DILocation(line: 265, column: 27, scope: !1213)
!4925 = !DILocation(line: 265, column: 9, scope: !1213)
!4926 = !DILocation(line: 261, column: 47, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4920, file: !1069, line: 260, column: 62)
!4928 = !DILocation(line: 261, column: 35, scope: !4927)
!4929 = !DILocation(line: 261, column: 32, scope: !4927)
!4930 = !DILocation(line: 260, column: 58, scope: !4920)
!4931 = !DILocation(line: 260, column: 22, scope: !1218)
!4932 = !DILocation(line: 270, column: 1, scope: !1210)
!4933 = !DILocation(line: 276, column: 53, scope: !1219)
!4934 = !DILocation(line: 277, column: 14, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !1219, file: !1069, line: 277, column: 9)
!4936 = !DILocation(line: 277, column: 9, scope: !1219)
!4937 = !DILocation(line: 281, column: 21, scope: !1219)
!4938 = !DILocation(line: 0, scope: !1300, inlinedAt: !4939)
!4939 = distinct !DILocation(line: 281, column: 21, scope: !1219)
!4940 = !DILocation(line: 12, column: 35, scope: !1300, inlinedAt: !4939)
!4941 = !DILocation(line: 13, column: 9, scope: !4942, inlinedAt: !4939)
!4942 = distinct !DILexicalBlock(scope: !1300, file: !1120, line: 12, column: 88)
!4943 = !DILocation(line: 283, column: 20, scope: !1219)
!4944 = !DILocation(line: 284, column: 5, scope: !1219)
!4945 = !DILocation(line: 0, scope: !1305, inlinedAt: !4946)
!4946 = distinct !DILocation(line: 285, column: 1, scope: !1219)
!4947 = !DILocation(line: 17, column: 9, scope: !4948, inlinedAt: !4946)
!4948 = distinct !DILexicalBlock(scope: !1305, file: !1120, line: 16, column: 55)
!4949 = !DILocation(line: 285, column: 1, scope: !1219)
!4950 = !DILocation(line: 287, column: 49, scope: !1225)
!4951 = !DILocation(line: 287, column: 78, scope: !1225)
!4952 = !DILocation(line: 287, column: 97, scope: !1225)
!4953 = !DILocation(line: 288, column: 53, scope: !1225)
!4954 = !DILocation(line: 288, column: 78, scope: !1225)
!4955 = !DILocation(line: 288, column: 102, scope: !1225)
!4956 = !DILocation(line: 289, column: 18, scope: !1225)
!4957 = !DILocation(line: 289, column: 14, scope: !1225)
!4958 = !DILocation(line: 290, column: 24, scope: !1225)
!4959 = !DILocation(line: 290, column: 14, scope: !1225)
!4960 = !DILocation(line: 292, column: 21, scope: !1225)
!4961 = !DILocation(line: 0, scope: !1300, inlinedAt: !4962)
!4962 = distinct !DILocation(line: 292, column: 21, scope: !1225)
!4963 = !DILocation(line: 12, column: 35, scope: !1300, inlinedAt: !4962)
!4964 = !DILocation(line: 13, column: 9, scope: !4942, inlinedAt: !4962)
!4965 = !DILocation(line: 308, column: 25, scope: !1225)
!4966 = !DILocation(line: 309, column: 18, scope: !1225)
!4967 = !DILocation(line: 309, column: 5, scope: !1225)
!4968 = !DILocation(line: 318, column: 59, scope: !1248)
!4969 = !DILocation(line: 310, column: 20, scope: !1241)
!4970 = !DILocation(line: 310, column: 25, scope: !1241)
!4971 = !DILocation(line: 310, column: 30, scope: !1241)
!4972 = !DILocation(line: 310, column: 40, scope: !1241)
!4973 = !DILocation(line: 310, column: 49, scope: !1241)
!4974 = !DILocation(line: 310, column: 57, scope: !1241)
!4975 = !DILocation(line: 311, column: 31, scope: !1241)
!4976 = !DILocation(line: 311, column: 13, scope: !1241)
!4977 = !DILocation(line: 311, column: 53, scope: !1241)
!4978 = !DILocation(line: 312, column: 33, scope: !1241)
!4979 = !DILocation(line: 312, column: 13, scope: !1241)
!4980 = !DILocation(line: 312, column: 68, scope: !1241)
!4981 = !DILocation(line: 313, column: 20, scope: !1241)
!4982 = !DILocation(line: 313, column: 32, scope: !1241)
!4983 = !DILocation(line: 310, column: 13, scope: !1242)
!4984 = !DILocation(line: 324, column: 17, scope: !1240)
!4985 = !DILocation(line: 352, column: 24, scope: !1242)
!4986 = !DILocation(line: 319, column: 37, scope: !1247)
!4987 = !DILocation(line: 319, column: 31, scope: !1247)
!4988 = !DILocation(line: 320, column: 53, scope: !1247)
!4989 = !DILocation(line: 320, column: 40, scope: !1247)
!4990 = !DILocation(line: 318, column: 75, scope: !1248)
!4991 = !DILocation(line: 318, column: 30, scope: !1244)
!4992 = !DILocation(line: 318, column: 54, scope: !1248)
!4993 = !DILocation(line: 325, column: 30, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !1251, file: !1069, line: 325, column: 21)
!4995 = !DILocation(line: 325, column: 27, scope: !4994)
!4996 = !DILocation(line: 325, column: 21, scope: !1251)
!4997 = !DILocation(line: 326, column: 21, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4999, file: !1069, line: 326, column: 21)
!4999 = distinct !DILexicalBlock(scope: !4994, file: !1069, line: 325, column: 50)
!5000 = !DILocation(line: 326, column: 21, scope: !4999)
!5001 = !DILocation(line: 326, column: 21, scope: !5002)
!5002 = !DILexicalBlockFile(scope: !4998, file: !1069, discriminator: 1)
!5003 = !DILocation(line: 327, column: 32, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !4999, file: !1069, line: 327, column: 25)
!5005 = !DILocation(line: 327, column: 44, scope: !5004)
!5006 = !DILocation(line: 327, column: 25, scope: !4999)
!5007 = !DILocation(line: 328, column: 66, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !5004, file: !1069, line: 327, column: 53)
!5009 = !DILocation(line: 328, column: 45, scope: !5008)
!5010 = !DILocation(line: 328, column: 57, scope: !5008)
!5011 = !DILocation(line: 329, column: 21, scope: !5008)
!5012 = !DILocation(line: 330, column: 25, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5014, file: !1069, line: 330, column: 25)
!5014 = distinct !DILexicalBlock(scope: !5004, file: !1069, line: 329, column: 28)
!5015 = !DILocation(line: 330, column: 25, scope: !5014)
!5016 = !DILocation(line: 330, column: 25, scope: !5017)
!5017 = !DILexicalBlockFile(scope: !5013, file: !1069, discriminator: 1)
!5018 = !DILocation(line: 331, column: 54, scope: !5014)
!5019 = !DILocation(line: 331, column: 45, scope: !5014)
!5020 = !DILocation(line: 333, column: 21, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !4999, file: !1069, line: 333, column: 21)
!5022 = !DILocation(line: 333, column: 21, scope: !4999)
!5023 = !DILocation(line: 333, column: 21, scope: !5024)
!5024 = !DILexicalBlockFile(scope: !5021, file: !1069, discriminator: 1)
!5025 = !DILocation(line: 334, column: 28, scope: !4999)
!5026 = !DILocation(line: 334, column: 62, scope: !4999)
!5027 = !DILocation(line: 334, column: 41, scope: !4999)
!5028 = !DILocation(line: 334, column: 53, scope: !4999)
!5029 = !DILocation(line: 336, column: 40, scope: !4999)
!5030 = !DILocation(line: 337, column: 42, scope: !4999)
!5031 = !DILocation(line: 337, column: 40, scope: !4999)
!5032 = !DILocation(line: 338, column: 25, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !4999, file: !1069, line: 338, column: 25)
!5034 = !DILocation(line: 338, column: 44, scope: !5033)
!5035 = !DILocation(line: 338, column: 25, scope: !4999)
!5036 = !DILocation(line: 339, column: 45, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5033, file: !1069, line: 338, column: 53)
!5038 = !DILocation(line: 339, column: 57, scope: !5037)
!5039 = !DILocation(line: 340, column: 21, scope: !5037)
!5040 = !DILocation(line: 341, column: 40, scope: !4999)
!5041 = !DILocation(line: 342, column: 17, scope: !4999)
!5042 = !DILocation(line: 344, column: 17, scope: !1250)
!5043 = !DILocation(line: 345, column: 37, scope: !1254)
!5044 = !DILocation(line: 345, column: 31, scope: !1254)
!5045 = !DILocation(line: 346, column: 48, scope: !1254)
!5046 = !DILocation(line: 346, column: 21, scope: !1254)
!5047 = !DILocation(line: 344, column: 55, scope: !1255)
!5048 = !DILocation(line: 344, column: 30, scope: !1250)
!5049 = !DILocation(line: 0, scope: !1305, inlinedAt: !5050)
!5050 = distinct !DILocation(line: 360, column: 1, scope: !1225)
!5051 = !DILocation(line: 17, column: 9, scope: !4948, inlinedAt: !5050)
!5052 = !DILocation(line: 360, column: 1, scope: !1225)
!5053 = !DILocation(line: 362, column: 48, scope: !1256)
!5054 = !DILocation(line: 362, column: 77, scope: !1256)
!5055 = !DILocation(line: 362, column: 96, scope: !1256)
!5056 = !DILocation(line: 363, column: 52, scope: !1256)
!5057 = !DILocation(line: 363, column: 77, scope: !1256)
!5058 = !DILocation(line: 363, column: 101, scope: !1256)
!5059 = !DILocation(line: 364, column: 18, scope: !1256)
!5060 = !DILocation(line: 364, column: 14, scope: !1256)
!5061 = !DILocation(line: 365, column: 24, scope: !1256)
!5062 = !DILocation(line: 365, column: 14, scope: !1256)
!5063 = !DILocation(line: 367, column: 21, scope: !1256)
!5064 = !DILocation(line: 0, scope: !1300, inlinedAt: !5065)
!5065 = distinct !DILocation(line: 367, column: 21, scope: !1256)
!5066 = !DILocation(line: 12, column: 35, scope: !1300, inlinedAt: !5065)
!5067 = !DILocation(line: 13, column: 9, scope: !4942, inlinedAt: !5065)
!5068 = !DILocation(line: 383, column: 25, scope: !1256)
!5069 = !DILocation(line: 384, column: 18, scope: !1256)
!5070 = !DILocation(line: 384, column: 5, scope: !1256)
!5071 = !DILocation(line: 393, column: 59, scope: !1279)
!5072 = !DILocation(line: 385, column: 20, scope: !1272)
!5073 = !DILocation(line: 385, column: 25, scope: !1272)
!5074 = !DILocation(line: 385, column: 30, scope: !1272)
!5075 = !DILocation(line: 385, column: 40, scope: !1272)
!5076 = !DILocation(line: 385, column: 49, scope: !1272)
!5077 = !DILocation(line: 385, column: 57, scope: !1272)
!5078 = !DILocation(line: 386, column: 31, scope: !1272)
!5079 = !DILocation(line: 386, column: 13, scope: !1272)
!5080 = !DILocation(line: 386, column: 53, scope: !1272)
!5081 = !DILocation(line: 387, column: 33, scope: !1272)
!5082 = !DILocation(line: 387, column: 13, scope: !1272)
!5083 = !DILocation(line: 387, column: 68, scope: !1272)
!5084 = !DILocation(line: 388, column: 20, scope: !1272)
!5085 = !DILocation(line: 388, column: 32, scope: !1272)
!5086 = !DILocation(line: 385, column: 13, scope: !1273)
!5087 = !DILocation(line: 402, column: 24, scope: !1273)
!5088 = !DILocation(line: 394, column: 37, scope: !1278)
!5089 = !DILocation(line: 394, column: 31, scope: !1278)
!5090 = !DILocation(line: 395, column: 53, scope: !1278)
!5091 = !DILocation(line: 395, column: 40, scope: !1278)
!5092 = !DILocation(line: 393, column: 75, scope: !1279)
!5093 = !DILocation(line: 393, column: 30, scope: !1275)
!5094 = !DILocation(line: 393, column: 54, scope: !1279)
!5095 = !DILocation(line: 407, column: 31, scope: !1286)
!5096 = !DILocation(line: 407, column: 9, scope: !1282)
!5097 = !DILocation(line: 412, column: 24, scope: !1256)
!5098 = !DILocation(line: 413, column: 5, scope: !1256)
!5099 = !DILocation(line: 415, column: 85, scope: !1256)
!5100 = !DILocation(line: 415, column: 66, scope: !1256)
!5101 = !DILocation(line: 415, column: 27, scope: !1256)
!5102 = !DILocation(line: 415, column: 11, scope: !1256)
!5103 = !DILocation(line: 417, column: 29, scope: !1256)
!5104 = !DILocation(line: 417, column: 17, scope: !1256)
!5105 = !DILocation(line: 418, column: 5, scope: !1256)
!5106 = !DILocation(line: 420, column: 23, scope: !1256)
!5107 = !DILocation(line: 420, column: 21, scope: !1256)
!5108 = !DILocation(line: 421, column: 30, scope: !1256)
!5109 = !DILocation(line: 421, column: 16, scope: !1256)
!5110 = !DILocation(line: 421, column: 28, scope: !1256)
!5111 = !DILocation(line: 422, column: 28, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !1256, file: !1069, line: 422, column: 9)
!5113 = !DILocation(line: 422, column: 9, scope: !1256)
!5114 = !DILocation(line: 408, column: 29, scope: !1285)
!5115 = !DILocation(line: 408, column: 23, scope: !1285)
!5116 = !DILocation(line: 409, column: 27, scope: !1285)
!5117 = !DILocation(line: 409, column: 24, scope: !1285)
!5118 = !DILocation(line: 405, column: 14, scope: !1256)
!5119 = !DILocation(line: 407, column: 47, scope: !1286)
!5120 = !DILocation(line: 407, column: 22, scope: !1282)
!5121 = !DILocation(line: 422, column: 9, scope: !5112)
!5122 = !DILocation(line: 423, column: 29, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5112, file: !1069, line: 422, column: 37)
!5124 = !DILocation(line: 423, column: 41, scope: !5123)
!5125 = !DILocation(line: 424, column: 5, scope: !5123)
!5126 = !DILocation(line: 425, column: 24, scope: !1256)
!5127 = !DILocation(line: 426, column: 9, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !1256, file: !1069, line: 426, column: 9)
!5129 = !DILocation(line: 426, column: 29, scope: !5128)
!5130 = !DILocation(line: 426, column: 9, scope: !1256)
!5131 = !DILocation(line: 427, column: 29, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !5128, file: !1069, line: 426, column: 38)
!5133 = !DILocation(line: 428, column: 5, scope: !5132)
!5134 = !DILocation(line: 429, column: 26, scope: !1256)
!5135 = !DILocation(line: 434, column: 1, scope: !1256)
!5136 = !DILocation(line: 0, scope: !1305, inlinedAt: !5137)
!5137 = distinct !DILocation(line: 434, column: 1, scope: !5138)
!5138 = !DILexicalBlockFile(scope: !1256, file: !1069, discriminator: 1)
!5139 = !DILocation(line: 17, column: 9, scope: !4948, inlinedAt: !5137)
!5140 = !DILocation(line: 443, column: 14, scope: !1292)
!5141 = !DILocation(line: 443, column: 5, scope: !1292)
!5142 = !DILocation(line: 453, column: 24, scope: !1289)
!5143 = !DILocation(line: 454, column: 5, scope: !1289)
!5144 = !DILocation(line: 455, column: 1, scope: !1289)
!5145 = !DILocation(line: 444, column: 29, scope: !1294)
!5146 = !DILocation(line: 444, column: 21, scope: !1294)
!5147 = !DILocation(line: 445, column: 26, scope: !1294)
!5148 = !DILocation(line: 446, column: 22, scope: !1294)
!5149 = !DILocation(line: 446, column: 9, scope: !1294)
!5150 = !DILocation(line: 447, column: 39, scope: !1297)
!5151 = !DILocation(line: 447, column: 25, scope: !1297)
!5152 = !DILocation(line: 448, column: 13, scope: !1297)
!5153 = !DILocation(line: 449, column: 31, scope: !1297)
!5154 = !DILocation(line: 449, column: 13, scope: !1297)
!5155 = !DILocation(line: 443, column: 42, scope: !1295)
!5156 = !DILocation(line: 461, column: 5, scope: !1298)
!5157 = !DILocation(line: 462, column: 1, scope: !1298)
!5158 = !DILocation(line: 5, column: 42, scope: !1327)
!5159 = !DILocation(line: 5, column: 53, scope: !1327)
!5160 = !DILocation(line: 5, column: 70, scope: !1327)
!5161 = !DILocation(line: 6, column: 13, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !1327, file: !1325, line: 6, column: 9)
!5163 = !DILocation(line: 6, column: 9, scope: !1327)
!5164 = !DILocation(line: 8, column: 17, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5166, file: !1325, line: 8, column: 13)
!5166 = distinct !DILexicalBlock(scope: !1327, file: !1325, line: 7, column: 15)
!5167 = !DILocation(line: 8, column: 13, scope: !5166)
!5168 = !DILocation(line: 9, column: 13, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5165, file: !1325, line: 8, column: 25)
!5170 = !DILocation(line: 9, column: 21, scope: !5169)
!5171 = !DILocation(line: 10, column: 13, scope: !5169)
!5172 = !DILocation(line: 12, column: 16, scope: !5166)
!5173 = !DILocation(line: 12, column: 14, scope: !5166)
!5174 = !DILocation(line: 13, column: 18, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5166, file: !1325, line: 13, column: 13)
!5176 = !DILocation(line: 13, column: 13, scope: !5166)
!5177 = !DILocation(line: 16, column: 12, scope: !5166)
!5178 = !DILocation(line: 17, column: 12, scope: !5166)
!5179 = !DILocation(line: 19, column: 1, scope: !1327)
!5180 = !DILocation(line: 21, column: 42, scope: !1334)
!5181 = !DILocation(line: 21, column: 53, scope: !1334)
!5182 = !DILocation(line: 21, column: 67, scope: !1334)
!5183 = !DILocation(line: 21, column: 76, scope: !1334)
!5184 = !DILocation(line: 23, column: 5, scope: !1334)
!5185 = !DILocation(line: 23, column: 10, scope: !1334)
!5186 = !DILocation(line: 24, column: 5, scope: !1334)
!5187 = !DILocation(line: 24, column: 13, scope: !1334)
!5188 = !DILocation(line: 25, column: 23, scope: !1334)
!5189 = !DILocation(line: 25, column: 11, scope: !1334)
!5190 = !DILocation(line: 27, column: 14, scope: !1348)
!5191 = !DILocation(line: 27, column: 23, scope: !1351)
!5192 = !DILocation(line: 27, column: 39, scope: !5193)
!5193 = !DILexicalBlockFile(scope: !1351, file: !1325, discriminator: 3)
!5194 = !DILocation(line: 27, column: 36, scope: !1351)
!5195 = !DILocation(line: 27, column: 5, scope: !5196)
!5196 = !DILexicalBlockFile(scope: !5197, file: !1325, discriminator: 4)
!5197 = !DILexicalBlockFile(scope: !1348, file: !1325, discriminator: 2)
!5198 = !DILocation(line: 34, column: 11, scope: !1334)
!5199 = !DILocation(line: 36, column: 12, scope: !1334)
!5200 = !DILocation(line: 37, column: 1, scope: !1334)
!5201 = !DILocation(line: 36, column: 5, scope: !1334)
!5202 = !DILocation(line: 28, column: 28, scope: !1350)
!5203 = !DILocation(line: 28, column: 18, scope: !1350)
!5204 = !DILocation(line: 29, column: 31, scope: !1350)
!5205 = !DILocation(line: 29, column: 18, scope: !1350)
!5206 = !DILocation(line: 30, column: 26, scope: !1350)
!5207 = !DILocation(line: 30, column: 19, scope: !1350)
!5208 = !DILocation(line: 30, column: 17, scope: !1350)
!5209 = !DILocation(line: 31, column: 15, scope: !1350)
!5210 = !DILocation(line: 27, column: 45, scope: !1351)
!5211 = !DILocation(line: 39, column: 41, scope: !1353)
!5212 = !DILocation(line: 39, column: 52, scope: !1353)
!5213 = !DILocation(line: 39, column: 65, scope: !1353)
!5214 = !DILocation(line: 39, column: 74, scope: !1353)
!5215 = !DILocation(line: 40, column: 13, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !1353, file: !1325, line: 40, column: 9)
!5217 = !DILocation(line: 40, column: 24, scope: !5216)
!5218 = !DILocation(line: 40, column: 17, scope: !5216)
!5219 = !DILocation(line: 41, column: 13, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5216, file: !1325, line: 40, column: 32)
!5221 = !DILocation(line: 41, column: 16, scope: !5220)
!5222 = !DILocation(line: 42, column: 15, scope: !5220)
!5223 = !DILocation(line: 43, column: 5, scope: !5220)
!5224 = !DILocation(line: 44, column: 12, scope: !1353)
!5225 = !DILocation(line: 44, column: 5, scope: !1353)
!5226 = !DILocation(line: 47, column: 42, scope: !1361)
!5227 = !DILocation(line: 47, column: 53, scope: !1361)
!5228 = !DILocation(line: 47, column: 65, scope: !1361)
!5229 = !DILocation(line: 47, column: 74, scope: !1361)
!5230 = !DILocation(line: 48, column: 5, scope: !1361)
!5231 = !DILocation(line: 48, column: 14, scope: !1361)
!5232 = !DILocation(line: 49, column: 19, scope: !1361)
!5233 = !DILocation(line: 49, column: 5, scope: !1361)
!5234 = !DILocation(line: 51, column: 14, scope: !1361)
!5235 = !DILocation(line: 52, column: 25, scope: !1361)
!5236 = !DILocation(line: 52, column: 30, scope: !1361)
!5237 = !DILocation(line: 52, column: 14, scope: !1361)
!5238 = !DILocation(line: 53, column: 33, scope: !1361)
!5239 = !DILocation(line: 53, column: 27, scope: !1361)
!5240 = !DILocation(line: 53, column: 9, scope: !1361)
!5241 = !DILocation(line: 54, column: 26, scope: !1361)
!5242 = !DILocation(line: 54, column: 20, scope: !1361)
!5243 = !DILocation(line: 54, column: 9, scope: !1361)
!5244 = !DILocation(line: 57, column: 25, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !1361, file: !1325, line: 57, column: 9)
!5246 = !DILocation(line: 57, column: 9, scope: !1361)
!5247 = !DILocation(line: 58, column: 13, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5249, file: !1325, line: 58, column: 13)
!5249 = distinct !DILexicalBlock(scope: !5245, file: !1325, line: 57, column: 34)
!5250 = !DILocation(line: 59, column: 17, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5252, file: !1325, line: 59, column: 17)
!5252 = distinct !DILexicalBlock(scope: !5248, file: !1325, line: 58, column: 23)
!5253 = !DILocation(line: 58, column: 13, scope: !5249)
!5254 = !DILocation(line: 59, column: 17, scope: !5252)
!5255 = !DILocation(line: 60, column: 24, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5251, file: !1325, line: 59, column: 27)
!5257 = !DILocation(line: 60, column: 17, scope: !5256)
!5258 = !DILocation(line: 62, column: 24, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5251, file: !1325, line: 61, column: 20)
!5260 = !DILocation(line: 62, column: 17, scope: !5259)
!5261 = !DILocation(line: 65, column: 17, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5248, file: !1325, line: 64, column: 16)
!5263 = !DILocation(line: 66, column: 24, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5265, file: !1325, line: 65, column: 27)
!5265 = distinct !DILexicalBlock(scope: !5262, file: !1325, line: 65, column: 17)
!5266 = !DILocation(line: 66, column: 17, scope: !5264)
!5267 = !DILocation(line: 68, column: 24, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !5265, file: !1325, line: 67, column: 20)
!5269 = !DILocation(line: 68, column: 17, scope: !5268)
!5270 = !DILocation(line: 71, column: 32, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5245, file: !1325, line: 71, column: 16)
!5272 = !DILocation(line: 71, column: 49, scope: !5271)
!5273 = !DILocation(line: 71, column: 37, scope: !5271)
!5274 = !DILocation(line: 72, column: 13, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5276, file: !1325, line: 72, column: 13)
!5276 = distinct !DILexicalBlock(scope: !5271, file: !1325, line: 71, column: 55)
!5277 = !DILocation(line: 73, column: 17, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5279, file: !1325, line: 73, column: 17)
!5279 = distinct !DILexicalBlock(scope: !5275, file: !1325, line: 72, column: 25)
!5280 = !DILocation(line: 72, column: 13, scope: !5276)
!5281 = !DILocation(line: 73, column: 17, scope: !5279)
!5282 = !DILocation(line: 74, column: 24, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5278, file: !1325, line: 73, column: 27)
!5284 = !DILocation(line: 74, column: 17, scope: !5283)
!5285 = !DILocation(line: 76, column: 24, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5278, file: !1325, line: 75, column: 20)
!5287 = !DILocation(line: 76, column: 17, scope: !5286)
!5288 = !DILocation(line: 79, column: 17, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5275, file: !1325, line: 78, column: 16)
!5290 = !DILocation(line: 80, column: 24, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5292, file: !1325, line: 79, column: 27)
!5292 = distinct !DILexicalBlock(scope: !5289, file: !1325, line: 79, column: 17)
!5293 = !DILocation(line: 80, column: 17, scope: !5291)
!5294 = !DILocation(line: 82, column: 24, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5292, file: !1325, line: 81, column: 20)
!5296 = !DILocation(line: 82, column: 17, scope: !5295)
!5297 = !DILocation(line: 87, column: 9, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !1361, file: !1325, line: 87, column: 9)
!5299 = !DILocation(line: 87, column: 9, scope: !1361)
!5300 = !DILocation(line: 88, column: 15, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5298, file: !1325, line: 87, column: 19)
!5302 = !DILocation(line: 89, column: 15, scope: !5301)
!5303 = !DILocation(line: 89, column: 13, scope: !5301)
!5304 = !DILocation(line: 90, column: 5, scope: !5301)
!5305 = !DILocation(line: 106, column: 16, scope: !5306)
!5306 = !DILexicalBlockFile(scope: !5307, file: !1325, discriminator: 2)
!5307 = !DILexicalBlockFile(scope: !1379, file: !1325, discriminator: 1)
!5308 = !DILocation(line: 94, column: 15, scope: !1361)
!5309 = !DILocation(line: 97, column: 20, scope: !1361)
!5310 = !DILocation(line: 100, column: 15, scope: !1361)
!5311 = !DILocation(line: 102, column: 9, scope: !1380)
!5312 = !DILocation(line: 102, column: 9, scope: !1361)
!5313 = !DILocation(line: 106, column: 20, scope: !1379)
!5314 = !DILocation(line: 106, column: 9, scope: !1379)
!5315 = !DILocation(line: 107, column: 17, scope: !5316)
!5316 = distinct !DILexicalBlock(scope: !1379, file: !1325, line: 106, column: 25)
!5317 = !DILocation(line: 108, column: 29, scope: !5316)
!5318 = !DILocation(line: 105, column: 13, scope: !1379)
!5319 = !DILocation(line: 111, column: 16, scope: !5306)
!5320 = !DILocation(line: 111, column: 20, scope: !1379)
!5321 = !DILocation(line: 111, column: 9, scope: !1379)
!5322 = !DILocation(line: 112, column: 17, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !1379, file: !1325, line: 111, column: 27)
!5324 = !DILocation(line: 113, column: 29, scope: !5323)
!5325 = !DILocation(line: 117, column: 41, scope: !1379)
!5326 = !DILocation(line: 117, column: 49, scope: !1379)
!5327 = !DILocation(line: 117, column: 36, scope: !1379)
!5328 = !DILocation(line: 117, column: 18, scope: !1379)
!5329 = !DILocation(line: 118, column: 36, scope: !1379)
!5330 = !DILocation(line: 118, column: 18, scope: !1379)
!5331 = !DILocation(line: 119, column: 39, scope: !1379)
!5332 = !DILocation(line: 119, column: 18, scope: !1379)
!5333 = !DILocation(line: 121, column: 15, scope: !1379)
!5334 = !DILocation(line: 122, column: 15, scope: !1379)
!5335 = !DILocation(line: 123, column: 15, scope: !1379)
!5336 = !DILocation(line: 125, column: 30, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !1379, file: !1325, line: 125, column: 13)
!5338 = !DILocation(line: 125, column: 13, scope: !1379)
!5339 = !DILocation(line: 126, column: 19, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5337, file: !1325, line: 125, column: 36)
!5341 = !DILocation(line: 127, column: 9, scope: !5340)
!5342 = !DILocation(line: 128, column: 19, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5337, file: !1325, line: 127, column: 16)
!5344 = !DILocation(line: 129, column: 32, scope: !5343)
!5345 = !DILocation(line: 131, column: 48, scope: !1379)
!5346 = !DILocation(line: 131, column: 15, scope: !1379)
!5347 = !DILocation(line: 133, column: 5, scope: !1379)
!5348 = !DILocation(line: 136, column: 13, scope: !1385)
!5349 = !DILocation(line: 137, column: 20, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5351, file: !1325, line: 136, column: 35)
!5351 = distinct !DILexicalBlock(scope: !1385, file: !1325, line: 136, column: 13)
!5352 = !DILocation(line: 137, column: 13, scope: !5350)
!5353 = !DILocation(line: 141, column: 31, scope: !1385)
!5354 = !DILocation(line: 141, column: 18, scope: !1385)
!5355 = !DILocation(line: 142, column: 47, scope: !1385)
!5356 = !DILocation(line: 142, column: 13, scope: !1385)
!5357 = !DILocation(line: 145, column: 18, scope: !1385)
!5358 = !DILocation(line: 146, column: 13, scope: !1385)
!5359 = !DILocation(line: 148, column: 18, scope: !1385)
!5360 = !DILocation(line: 149, column: 22, scope: !1392)
!5361 = !DILocation(line: 149, column: 13, scope: !1385)
!5362 = !DILocation(line: 153, column: 26, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !1391, file: !1325, line: 153, column: 17)
!5364 = !DILocation(line: 153, column: 17, scope: !1391)
!5365 = !DILocation(line: 158, column: 35, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5363, file: !1325, line: 157, column: 20)
!5367 = !DILocation(line: 158, column: 30, scope: !5366)
!5368 = !DILocation(line: 159, column: 39, scope: !5366)
!5369 = !DILocation(line: 159, column: 23, scope: !5366)
!5370 = !DILocation(line: 156, column: 21, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5363, file: !1325, line: 153, column: 44)
!5372 = !DILocation(line: 168, column: 15, scope: !1391)
!5373 = !DILocation(line: 170, column: 42, scope: !1391)
!5374 = !DILocation(line: 170, column: 53, scope: !1391)
!5375 = !DILocation(line: 170, column: 29, scope: !1391)
!5376 = !DILocation(line: 174, column: 32, scope: !1391)
!5377 = !DILocation(line: 174, column: 19, scope: !1391)
!5378 = !DILocation(line: 174, column: 42, scope: !1391)
!5379 = !DILocation(line: 152, column: 20, scope: !1391)
!5380 = !DILocation(line: 177, column: 41, scope: !1391)
!5381 = !DILocation(line: 178, column: 17, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !1391, file: !1325, line: 178, column: 17)
!5383 = !DILocation(line: 178, column: 38, scope: !5382)
!5384 = !DILocation(line: 185, column: 33, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !1391, file: !1325, line: 185, column: 17)
!5386 = !DILocation(line: 185, column: 17, scope: !1391)
!5387 = !DILocation(line: 189, column: 9, scope: !1391)
!5388 = !DILocation(line: 197, column: 9, scope: !1385)
!5389 = !DILocation(line: 197, column: 14, scope: !1385)
!5390 = !DILocation(line: 200, column: 34, scope: !1385)
!5391 = !DILocation(line: 200, column: 40, scope: !1385)
!5392 = !DILocation(line: 200, column: 15, scope: !1385)
!5393 = !DILocation(line: 201, column: 25, scope: !1385)
!5394 = !DILocation(line: 201, column: 15, scope: !1385)
!5395 = !DILocation(line: 202, column: 18, scope: !1405)
!5396 = !DILocation(line: 202, column: 27, scope: !1408)
!5397 = !DILocation(line: 202, column: 9, scope: !1405)
!5398 = !DILocation(line: 205, column: 59, scope: !1413)
!5399 = !DILocation(line: 205, column: 43, scope: !1413)
!5400 = !DILocation(line: 205, column: 13, scope: !1410)
!5401 = !DILocation(line: 223, column: 15, scope: !1385)
!5402 = !DILocation(line: 224, column: 15, scope: !1385)
!5403 = !DILocation(line: 225, column: 15, scope: !1385)
!5404 = !DILocation(line: 226, column: 5, scope: !1380)
!5405 = !DILocation(line: 216, column: 17, scope: !1407)
!5406 = !DILocation(line: 205, column: 36, scope: !1410)
!5407 = !DILocation(line: 206, column: 34, scope: !1412)
!5408 = !DILocation(line: 207, column: 44, scope: !1412)
!5409 = !DILocation(line: 207, column: 48, scope: !1412)
!5410 = !DILocation(line: 207, column: 22, scope: !1412)
!5411 = !DILocation(line: 208, column: 31, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !1412, file: !1325, line: 208, column: 21)
!5413 = !DILocation(line: 209, column: 31, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5412, file: !1325, line: 208, column: 36)
!5415 = !DILocation(line: 204, column: 17, scope: !1407)
!5416 = !DILocation(line: 208, column: 21, scope: !1412)
!5417 = !DILocation(line: 214, column: 32, scope: !1412)
!5418 = !DILocation(line: 214, column: 20, scope: !1412)
!5419 = !DILocation(line: 220, column: 31, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5421, file: !1325, line: 216, column: 24)
!5421 = distinct !DILexicalBlock(scope: !1407, file: !1325, line: 216, column: 17)
!5422 = !DILocation(line: 221, column: 13, scope: !5420)
!5423 = !DILocation(line: 202, column: 48, scope: !1408)
!5424 = !DILocation(line: 229, column: 1, scope: !1361)
!5425 = !DILocation(line: 231, column: 43, scope: !1415)
!5426 = !DILocation(line: 231, column: 54, scope: !1415)
!5427 = !DILocation(line: 231, column: 71, scope: !1415)
!5428 = !DILocation(line: 233, column: 5, scope: !1415)
!5429 = !DILocation(line: 233, column: 10, scope: !1415)
!5430 = !DILocation(line: 234, column: 24, scope: !1415)
!5431 = !DILocation(line: 234, column: 11, scope: !1415)
!5432 = !DILocation(line: 235, column: 21, scope: !1415)
!5433 = !DILocation(line: 235, column: 14, scope: !1415)
!5434 = !DILocation(line: 236, column: 14, scope: !1430)
!5435 = !DILocation(line: 236, column: 5, scope: !1430)
!5436 = !DILocation(line: 237, column: 22, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5438, file: !1325, line: 236, column: 34)
!5438 = distinct !DILexicalBlock(scope: !1430, file: !1325, line: 236, column: 5)
!5439 = !DILocation(line: 237, column: 17, scope: !5437)
!5440 = !DILocation(line: 237, column: 20, scope: !5437)
!5441 = !DILocation(line: 238, column: 14, scope: !5437)
!5442 = !DILocation(line: 239, column: 14, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5437, file: !1325, line: 239, column: 13)
!5444 = !DILocation(line: 236, column: 30, scope: !5438)
!5445 = !DILocation(line: 236, column: 23, scope: !5438)
!5446 = !DILocation(line: 239, column: 13, scope: !5437)
!5447 = !DILocation(line: 241, column: 13, scope: !1415)
!5448 = !DILocation(line: 241, column: 16, scope: !1415)
!5449 = !DILocation(line: 242, column: 14, scope: !1415)
!5450 = !DILocation(line: 243, column: 12, scope: !1415)
!5451 = !DILocation(line: 244, column: 1, scope: !1415)
!5452 = !DILocation(line: 243, column: 5, scope: !1415)
!5453 = !DILocation(line: 28, column: 44, scope: !1463)
!5454 = !DILocation(line: 28, column: 75, scope: !1463)
!5455 = !DILocation(line: 29, column: 9, scope: !1463)
!5456 = !DILocation(line: 31, column: 14, scope: !1470)
!5457 = !{!4707, !2618, i64 65}
!5458 = !DILocation(line: 31, column: 9, scope: !1463)
!5459 = !DILocation(line: 0, scope: !1553, inlinedAt: !5460)
!5460 = distinct !DILocation(line: 32, column: 9, scope: !1469)
!5461 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !5460)
!5462 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !5460)
!5463 = distinct !DILexicalBlock(scope: !1553, file: !11, line: 135, column: 44)
!5464 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !5460)
!5465 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !5460)
!5466 = !DILocation(line: 0, scope: !1609, inlinedAt: !5467)
!5467 = distinct !DILocation(line: 32, column: 29, scope: !1469)
!5468 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5467)
!5469 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5467)
!5470 = !DILocation(line: 32, column: 66, scope: !1469)
!5471 = !DILocation(line: 0, scope: !1613, inlinedAt: !5472)
!5472 = distinct !DILocation(line: 32, column: 63, scope: !1469)
!5473 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !5472)
!5474 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !5472)
!5475 = !DILocation(line: 0, scope: !1609, inlinedAt: !5476)
!5476 = distinct !DILocation(line: 32, column: 70, scope: !1469)
!5477 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5476)
!5478 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5476)
!5479 = !DILocation(line: 0, scope: !1606, inlinedAt: !5480)
!5480 = distinct !DILocation(line: 32, column: 9, scope: !1469)
!5481 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !5480)
!5482 = distinct !DILexicalBlock(scope: !5483, file: !11, line: 195, column: 42)
!5483 = distinct !DILexicalBlock(scope: !5484, file: !11, line: 195, column: 20)
!5484 = distinct !DILexicalBlock(scope: !5485, file: !11, line: 193, column: 13)
!5485 = distinct !DILexicalBlock(scope: !1606, file: !11, line: 192, column: 16)
!5486 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !5480)
!5487 = !DILocation(line: 33, column: 85, scope: !1469)
!5488 = !{!4707, !3313, i64 0}
!5489 = !DILocation(line: 33, column: 52, scope: !1469)
!5490 = !DILocation(line: 33, column: 40, scope: !1469)
!5491 = !DILocation(line: 34, column: 18, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !1469, file: !1434, line: 34, column: 13)
!5493 = !{!4707, !2618, i64 64}
!5494 = !DILocation(line: 34, column: 13, scope: !1469)
!5495 = !DILocation(line: 0, scope: !1553, inlinedAt: !5496)
!5496 = distinct !DILocation(line: 35, column: 13, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5492, file: !1434, line: 34, column: 30)
!5498 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !5496)
!5499 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !5496)
!5500 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !5496)
!5501 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !5496)
!5502 = !DILocation(line: 0, scope: !1609, inlinedAt: !5503)
!5503 = distinct !DILocation(line: 35, column: 33, scope: !5497)
!5504 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5503)
!5505 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5503)
!5506 = !DILocation(line: 0, scope: !1613, inlinedAt: !5507)
!5507 = distinct !DILocation(line: 35, column: 67, scope: !5497)
!5508 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !5507)
!5509 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !5507)
!5510 = !DILocation(line: 0, scope: !1609, inlinedAt: !5511)
!5511 = distinct !DILocation(line: 35, column: 74, scope: !5497)
!5512 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5511)
!5513 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5511)
!5514 = !DILocation(line: 0, scope: !1606, inlinedAt: !5515)
!5515 = distinct !DILocation(line: 35, column: 13, scope: !5497)
!5516 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !5515)
!5517 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !5515)
!5518 = !DILocation(line: 37, column: 9, scope: !5497)
!5519 = !DILocation(line: 37, column: 30, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5492, file: !1434, line: 37, column: 20)
!5521 = !DILocation(line: 37, column: 20, scope: !5492)
!5522 = !DILocation(line: 0, scope: !1553, inlinedAt: !5523)
!5523 = distinct !DILocation(line: 38, column: 13, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5520, file: !1434, line: 37, column: 39)
!5525 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !5523)
!5526 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !5523)
!5527 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !5523)
!5528 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !5523)
!5529 = !DILocation(line: 0, scope: !1609, inlinedAt: !5530)
!5530 = distinct !DILocation(line: 38, column: 33, scope: !5524)
!5531 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5530)
!5532 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5530)
!5533 = !DILocation(line: 0, scope: !1613, inlinedAt: !5534)
!5534 = distinct !DILocation(line: 38, column: 67, scope: !5524)
!5535 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !5534)
!5536 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !5534)
!5537 = !DILocation(line: 0, scope: !1609, inlinedAt: !5538)
!5538 = distinct !DILocation(line: 38, column: 74, scope: !5524)
!5539 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5538)
!5540 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5538)
!5541 = !DILocation(line: 0, scope: !1606, inlinedAt: !5542)
!5542 = distinct !DILocation(line: 38, column: 13, scope: !5524)
!5543 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !5542)
!5544 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !5542)
!5545 = !DILocation(line: 40, column: 9, scope: !5524)
!5546 = !DILocation(line: 41, column: 33, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5520, file: !1434, line: 40, column: 16)
!5548 = !{!5549, !2679, i64 24}
!5549 = !{!"_ZTS23halide_device_interface", !2679, i64 0, !2679, i64 4, !2679, i64 8, !2679, i64 12, !2679, i64 16, !2679, i64 20, !2679, i64 24, !2679, i64 28}
!5550 = !DILocation(line: 41, column: 22, scope: !5547)
!5551 = !DILocation(line: 0, scope: !1553, inlinedAt: !5552)
!5552 = distinct !DILocation(line: 42, column: 13, scope: !5547)
!5553 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !5552)
!5554 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !5552)
!5555 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !5552)
!5556 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !5552)
!5557 = !DILocation(line: 0, scope: !1609, inlinedAt: !5558)
!5558 = distinct !DILocation(line: 42, column: 33, scope: !5547)
!5559 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5558)
!5560 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5558)
!5561 = !DILocation(line: 0, scope: !1613, inlinedAt: !5562)
!5562 = distinct !DILocation(line: 42, column: 98, scope: !5547)
!5563 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !5562)
!5564 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !5562)
!5565 = !DILocation(line: 0, scope: !1609, inlinedAt: !5566)
!5566 = distinct !DILocation(line: 42, column: 105, scope: !5547)
!5567 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5566)
!5568 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5566)
!5569 = !DILocation(line: 0, scope: !1617, inlinedAt: !5570)
!5570 = distinct !DILocation(line: 42, column: 124, scope: !5547)
!5571 = !DILocation(line: 152, column: 33, scope: !1617, inlinedAt: !5570)
!5572 = !DILocation(line: 153, column: 48, scope: !1617, inlinedAt: !5570)
!5573 = !DILocation(line: 153, column: 15, scope: !1617, inlinedAt: !5570)
!5574 = !DILocation(line: 0, scope: !1609, inlinedAt: !5575)
!5575 = distinct !DILocation(line: 42, column: 134, scope: !5547)
!5576 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5575)
!5577 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5575)
!5578 = !DILocation(line: 42, column: 159, scope: !5547)
!5579 = !DILocation(line: 0, scope: !1621, inlinedAt: !5580)
!5580 = distinct !DILocation(line: 42, column: 151, scope: !5547)
!5581 = !DILocation(line: 157, column: 34, scope: !1621, inlinedAt: !5580)
!5582 = !DILocation(line: 158, column: 15, scope: !1621, inlinedAt: !5580)
!5583 = !DILocation(line: 0, scope: !1609, inlinedAt: !5584)
!5584 = distinct !DILocation(line: 42, column: 163, scope: !5547)
!5585 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5584)
!5586 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5584)
!5587 = !DILocation(line: 0, scope: !1606, inlinedAt: !5588)
!5588 = distinct !DILocation(line: 42, column: 13, scope: !5547)
!5589 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !5588)
!5590 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !5588)
!5591 = !DILocation(line: 43, column: 24, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !5547, file: !1434, line: 43, column: 17)
!5593 = !DILocation(line: 43, column: 17, scope: !5547)
!5594 = !DILocation(line: 44, column: 32, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5592, file: !1434, line: 43, column: 30)
!5596 = !DILocation(line: 45, column: 13, scope: !5595)
!5597 = !DILocation(line: 0, scope: !1553, inlinedAt: !5598)
!5598 = distinct !DILocation(line: 46, column: 17, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5592, file: !1434, line: 45, column: 20)
!5600 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !5598)
!5601 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !5598)
!5602 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !5598)
!5603 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !5598)
!5604 = !DILocation(line: 0, scope: !1609, inlinedAt: !5605)
!5605 = distinct !DILocation(line: 46, column: 37, scope: !5599)
!5606 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5605)
!5607 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5605)
!5608 = !DILocation(line: 0, scope: !1613, inlinedAt: !5609)
!5609 = distinct !DILocation(line: 46, column: 71, scope: !5599)
!5610 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !5609)
!5611 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !5609)
!5612 = !DILocation(line: 0, scope: !1609, inlinedAt: !5613)
!5613 = distinct !DILocation(line: 46, column: 78, scope: !5599)
!5614 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5613)
!5615 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5613)
!5616 = !DILocation(line: 0, scope: !1606, inlinedAt: !5617)
!5617 = distinct !DILocation(line: 46, column: 17, scope: !5599)
!5618 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !5617)
!5619 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !5617)
!5620 = !DILocation(line: 52, column: 5, scope: !1463)
!5621 = !DILocation(line: 93, column: 74, scope: !1490)
!5622 = !DILocation(line: 94, column: 19, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !1490, file: !1434, line: 94, column: 9)
!5624 = !DILocation(line: 94, column: 9, scope: !1490)
!5625 = !DILocation(line: 97, column: 13, scope: !1490)
!5626 = !DILocation(line: 97, column: 50, scope: !1490)
!5627 = !{!5628, !2679, i64 8}
!5628 = !{!"_ZTSN6Halide7Runtime8Internal21device_handle_wrapperE", !3313, i64 0, !2679, i64 8}
!5629 = !DILocation(line: 97, column: 5, scope: !1490)
!5630 = !DILocation(line: 98, column: 1, scope: !1490)
!5631 = !DILocation(line: 59, column: 50, scope: !1471)
!5632 = !DILocation(line: 59, column: 96, scope: !1471)
!5633 = !DILocation(line: 61, column: 63, scope: !1471)
!5634 = !DILocation(line: 62, column: 17, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !1471, file: !1434, line: 62, column: 9)
!5636 = !DILocation(line: 62, column: 9, scope: !1471)
!5637 = !DILocation(line: 65, column: 14, scope: !1471)
!5638 = !DILocation(line: 65, column: 28, scope: !1471)
!5639 = !{!5628, !3313, i64 0}
!5640 = !DILocation(line: 66, column: 14, scope: !1471)
!5641 = !DILocation(line: 66, column: 24, scope: !1471)
!5642 = !DILocation(line: 68, column: 16, scope: !1471)
!5643 = !{!5549, !2679, i64 0}
!5644 = !DILocation(line: 68, column: 5, scope: !1471)
!5645 = !DILocation(line: 0, scope: !1553, inlinedAt: !5646)
!5646 = distinct !DILocation(line: 70, column: 5, scope: !1471)
!5647 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !5646)
!5648 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !5646)
!5649 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !5646)
!5650 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !5646)
!5651 = !DILocation(line: 0, scope: !1609, inlinedAt: !5652)
!5652 = distinct !DILocation(line: 70, column: 17, scope: !1471)
!5653 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5652)
!5654 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5652)
!5655 = !DILocation(line: 70, column: 64, scope: !1471)
!5656 = !DILocation(line: 0, scope: !1613, inlinedAt: !5657)
!5657 = distinct !DILocation(line: 70, column: 61, scope: !1471)
!5658 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !5657)
!5659 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !5657)
!5660 = !DILocation(line: 0, scope: !1609, inlinedAt: !5661)
!5661 = distinct !DILocation(line: 70, column: 74, scope: !1471)
!5662 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5661)
!5663 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5661)
!5664 = !DILocation(line: 70, column: 91, scope: !1471)
!5665 = !DILocation(line: 0, scope: !1613, inlinedAt: !5666)
!5666 = distinct !DILocation(line: 70, column: 88, scope: !1471)
!5667 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !5666)
!5668 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !5666)
!5669 = !DILocation(line: 0, scope: !1609, inlinedAt: !5670)
!5670 = distinct !DILocation(line: 70, column: 106, scope: !1471)
!5671 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5670)
!5672 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5670)
!5673 = !DILocation(line: 0, scope: !1613, inlinedAt: !5674)
!5674 = distinct !DILocation(line: 70, column: 121, scope: !1471)
!5675 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !5674)
!5676 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !5674)
!5677 = !DILocation(line: 0, scope: !1609, inlinedAt: !5678)
!5678 = distinct !DILocation(line: 70, column: 132, scope: !1471)
!5679 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5678)
!5680 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5678)
!5681 = !DILocation(line: 0, scope: !1606, inlinedAt: !5682)
!5682 = distinct !DILocation(line: 70, column: 5, scope: !1471)
!5683 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !5682)
!5684 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !5682)
!5685 = !DILocation(line: 71, column: 12, scope: !1471)
!5686 = !DILocation(line: 71, column: 5, scope: !1471)
!5687 = !DILocation(line: 72, column: 1, scope: !1471)
!5688 = !DILocation(line: 74, column: 49, scope: !1478)
!5689 = !DILocation(line: 75, column: 42, scope: !1478)
!5690 = !DILocation(line: 75, column: 28, scope: !1478)
!5691 = !DILocation(line: 76, column: 18, scope: !1478)
!5692 = !DILocation(line: 76, column: 29, scope: !1478)
!5693 = !{!5549, !2679, i64 4}
!5694 = !DILocation(line: 76, column: 5, scope: !1478)
!5695 = !DILocation(line: 0, scope: !1553, inlinedAt: !5696)
!5696 = distinct !DILocation(line: 77, column: 5, scope: !1478)
!5697 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !5696)
!5698 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !5696)
!5699 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !5696)
!5700 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !5696)
!5701 = !DILocation(line: 0, scope: !1609, inlinedAt: !5702)
!5702 = distinct !DILocation(line: 77, column: 17, scope: !1478)
!5703 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5702)
!5704 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5702)
!5705 = !DILocation(line: 77, column: 77, scope: !1478)
!5706 = !DILocation(line: 0, scope: !1613, inlinedAt: !5707)
!5707 = distinct !DILocation(line: 77, column: 61, scope: !1478)
!5708 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !5707)
!5709 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !5707)
!5710 = !DILocation(line: 0, scope: !1609, inlinedAt: !5711)
!5711 = distinct !DILocation(line: 77, column: 87, scope: !1478)
!5712 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5711)
!5713 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5711)
!5714 = !DILocation(line: 77, column: 132, scope: !1478)
!5715 = !DILocation(line: 77, column: 111, scope: !1478)
!5716 = !DILocation(line: 0, scope: !1613, inlinedAt: !5717)
!5717 = distinct !DILocation(line: 77, column: 108, scope: !1478)
!5718 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !5717)
!5719 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !5717)
!5720 = !DILocation(line: 0, scope: !1609, inlinedAt: !5721)
!5721 = distinct !DILocation(line: 77, column: 146, scope: !1478)
!5722 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5721)
!5723 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5721)
!5724 = !DILocation(line: 77, column: 164, scope: !1478)
!5725 = !DILocation(line: 0, scope: !1613, inlinedAt: !5726)
!5726 = distinct !DILocation(line: 77, column: 161, scope: !1478)
!5727 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !5726)
!5728 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !5726)
!5729 = !DILocation(line: 0, scope: !1609, inlinedAt: !5730)
!5730 = distinct !DILocation(line: 77, column: 176, scope: !1478)
!5731 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5730)
!5732 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5730)
!5733 = !DILocation(line: 0, scope: !1606, inlinedAt: !5734)
!5734 = distinct !DILocation(line: 77, column: 5, scope: !1478)
!5735 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !5734)
!5736 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !5734)
!5737 = !DILocation(line: 78, column: 5, scope: !1478)
!5738 = !DILocation(line: 79, column: 1, scope: !1478)
!5739 = !DILocation(line: 81, column: 49, scope: !1484)
!5740 = !DILocation(line: 82, column: 44, scope: !1484)
!5741 = !DILocation(line: 82, column: 34, scope: !1484)
!5742 = !DILocation(line: 83, column: 17, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !1484, file: !1434, line: 83, column: 9)
!5744 = !DILocation(line: 0, scope: !1553, inlinedAt: !5745)
!5745 = distinct !DILocation(line: 84, column: 9, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5743, file: !1434, line: 83, column: 26)
!5747 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !5745)
!5748 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !5745)
!5749 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !5745)
!5750 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !5745)
!5751 = !DILocation(line: 0, scope: !1609, inlinedAt: !5752)
!5752 = distinct !DILocation(line: 84, column: 21, scope: !5746)
!5753 = !DILocation(line: 83, column: 9, scope: !1484)
!5754 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5752)
!5755 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5752)
!5756 = !DILocation(line: 0, scope: !1606, inlinedAt: !5757)
!5757 = distinct !DILocation(line: 84, column: 9, scope: !5746)
!5758 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !5757)
!5759 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !5757)
!5760 = !DILocation(line: 85, column: 9, scope: !5746)
!5761 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5762)
!5762 = distinct !DILocation(line: 87, column: 17, scope: !1484)
!5763 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5762)
!5764 = !DILocation(line: 87, column: 71, scope: !1484)
!5765 = !DILocation(line: 0, scope: !1613, inlinedAt: !5766)
!5766 = distinct !DILocation(line: 87, column: 59, scope: !1484)
!5767 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !5766)
!5768 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !5766)
!5769 = !DILocation(line: 0, scope: !1609, inlinedAt: !5770)
!5770 = distinct !DILocation(line: 88, column: 17, scope: !1484)
!5771 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5770)
!5772 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5770)
!5773 = !DILocation(line: 88, column: 58, scope: !1484)
!5774 = !DILocation(line: 88, column: 41, scope: !1484)
!5775 = !DILocation(line: 0, scope: !1613, inlinedAt: !5776)
!5776 = distinct !DILocation(line: 88, column: 38, scope: !1484)
!5777 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !5776)
!5778 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !5776)
!5779 = !DILocation(line: 0, scope: !1609, inlinedAt: !5780)
!5780 = distinct !DILocation(line: 89, column: 17, scope: !1484)
!5781 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5780)
!5782 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5780)
!5783 = !DILocation(line: 89, column: 35, scope: !1484)
!5784 = !DILocation(line: 0, scope: !1613, inlinedAt: !5785)
!5785 = distinct !DILocation(line: 89, column: 32, scope: !1484)
!5786 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !5785)
!5787 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !5785)
!5788 = !DILocation(line: 0, scope: !1609, inlinedAt: !5789)
!5789 = distinct !DILocation(line: 89, column: 43, scope: !1484)
!5790 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5789)
!5791 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5789)
!5792 = !DILocation(line: 0, scope: !1606, inlinedAt: !5793)
!5793 = distinct !DILocation(line: 87, column: 5, scope: !1484)
!5794 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !5793)
!5795 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !5793)
!5796 = !DILocation(line: 90, column: 21, scope: !1484)
!5797 = !DILocation(line: 90, column: 5, scope: !1484)
!5798 = !DILocation(line: 91, column: 1, scope: !1484)
!5799 = !DILocation(line: 103, column: 39, scope: !1495)
!5800 = !DILocation(line: 103, column: 84, scope: !1495)
!5801 = !DILocation(line: 104, column: 16, scope: !1495)
!5802 = !{!5549, !2679, i64 20}
!5803 = !DILocation(line: 104, column: 5, scope: !1495)
!5804 = !DILocation(line: 105, column: 1, scope: !1495)
!5805 = !DILocation(line: 109, column: 36, scope: !1501)
!5806 = !DILocation(line: 109, column: 67, scope: !1501)
!5807 = !DILocation(line: 110, column: 21, scope: !1501)
!5808 = !DILocation(line: 0, scope: !1546, inlinedAt: !5809)
!5809 = distinct !DILocation(line: 110, column: 21, scope: !1501)
!5810 = !DILocation(line: 12, column: 35, scope: !1546, inlinedAt: !5809)
!5811 = !DILocation(line: 13, column: 9, scope: !5812, inlinedAt: !5809)
!5812 = distinct !DILexicalBlock(scope: !1546, file: !1120, line: 12, column: 88)
!5813 = !DILocation(line: 0, scope: !1553, inlinedAt: !5814)
!5814 = distinct !DILocation(line: 112, column: 5, scope: !1501)
!5815 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !5814)
!5816 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !5814)
!5817 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !5814)
!5818 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !5814)
!5819 = !DILocation(line: 0, scope: !1609, inlinedAt: !5820)
!5820 = distinct !DILocation(line: 112, column: 17, scope: !1501)
!5821 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5820)
!5822 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5820)
!5823 = !DILocation(line: 112, column: 46, scope: !1501)
!5824 = !DILocation(line: 0, scope: !1613, inlinedAt: !5825)
!5825 = distinct !DILocation(line: 112, column: 43, scope: !1501)
!5826 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !5825)
!5827 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !5825)
!5828 = !DILocation(line: 0, scope: !1609, inlinedAt: !5829)
!5829 = distinct !DILocation(line: 112, column: 50, scope: !1501)
!5830 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5829)
!5831 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5829)
!5832 = !DILocation(line: 0, scope: !1606, inlinedAt: !5833)
!5833 = distinct !DILocation(line: 112, column: 5, scope: !1501)
!5834 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !5833)
!5835 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !5833)
!5836 = !DILocation(line: 114, column: 18, scope: !1501)
!5837 = !DILocation(line: 114, column: 9, scope: !1501)
!5838 = !DILocation(line: 0, scope: !1553, inlinedAt: !5839)
!5839 = distinct !DILocation(line: 116, column: 5, scope: !1501)
!5840 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !5839)
!5841 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !5839)
!5842 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !5839)
!5843 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !5839)
!5844 = !DILocation(line: 0, scope: !1609, inlinedAt: !5845)
!5845 = distinct !DILocation(line: 116, column: 17, scope: !1501)
!5846 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5845)
!5847 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5845)
!5848 = !DILocation(line: 0, scope: !1613, inlinedAt: !5849)
!5849 = distinct !DILocation(line: 116, column: 48, scope: !1501)
!5850 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !5849)
!5851 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !5849)
!5852 = !DILocation(line: 0, scope: !1609, inlinedAt: !5853)
!5853 = distinct !DILocation(line: 116, column: 55, scope: !1501)
!5854 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5853)
!5855 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5853)
!5856 = !DILocation(line: 0, scope: !1617, inlinedAt: !5857)
!5857 = distinct !DILocation(line: 116, column: 74, scope: !1501)
!5858 = !DILocation(line: 152, column: 33, scope: !1617, inlinedAt: !5857)
!5859 = !DILocation(line: 153, column: 48, scope: !1617, inlinedAt: !5857)
!5860 = !DILocation(line: 153, column: 15, scope: !1617, inlinedAt: !5857)
!5861 = !DILocation(line: 0, scope: !1609, inlinedAt: !5862)
!5862 = distinct !DILocation(line: 116, column: 84, scope: !1501)
!5863 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5862)
!5864 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5862)
!5865 = !DILocation(line: 0, scope: !1606, inlinedAt: !5866)
!5866 = distinct !DILocation(line: 116, column: 5, scope: !1501)
!5867 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !5866)
!5868 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !5866)
!5869 = !DILocation(line: 0, scope: !1550, inlinedAt: !5870)
!5870 = distinct !DILocation(line: 119, column: 1, scope: !1501)
!5871 = !DILocation(line: 17, column: 9, scope: !5872, inlinedAt: !5870)
!5872 = distinct !DILexicalBlock(scope: !1550, file: !1120, line: 16, column: 55)
!5873 = !DILocation(line: 119, column: 1, scope: !1501)
!5874 = !DILocation(line: 123, column: 38, scope: !1507)
!5875 = !DILocation(line: 123, column: 69, scope: !1507)
!5876 = !DILocation(line: 123, column: 105, scope: !1507)
!5877 = !DILocation(line: 124, column: 9, scope: !1507)
!5878 = !DILocation(line: 126, column: 21, scope: !1507)
!5879 = !DILocation(line: 0, scope: !1546, inlinedAt: !5880)
!5880 = distinct !DILocation(line: 126, column: 21, scope: !1507)
!5881 = !DILocation(line: 12, column: 35, scope: !1546, inlinedAt: !5880)
!5882 = !DILocation(line: 13, column: 9, scope: !5812, inlinedAt: !5880)
!5883 = !DILocation(line: 0, scope: !1553, inlinedAt: !5884)
!5884 = distinct !DILocation(line: 128, column: 5, scope: !1507)
!5885 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !5884)
!5886 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !5884)
!5887 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !5884)
!5888 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !5884)
!5889 = !DILocation(line: 0, scope: !1609, inlinedAt: !5890)
!5890 = distinct !DILocation(line: 128, column: 25, scope: !1507)
!5891 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5890)
!5892 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5890)
!5893 = !DILocation(line: 128, column: 56, scope: !1507)
!5894 = !DILocation(line: 0, scope: !1613, inlinedAt: !5895)
!5895 = distinct !DILocation(line: 128, column: 53, scope: !1507)
!5896 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !5895)
!5897 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !5895)
!5898 = !DILocation(line: 0, scope: !1609, inlinedAt: !5899)
!5899 = distinct !DILocation(line: 128, column: 60, scope: !1507)
!5900 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5899)
!5901 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5899)
!5902 = !DILocation(line: 128, column: 82, scope: !1507)
!5903 = !DILocation(line: 0, scope: !1613, inlinedAt: !5904)
!5904 = distinct !DILocation(line: 128, column: 74, scope: !1507)
!5905 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !5904)
!5906 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !5904)
!5907 = !DILocation(line: 0, scope: !1609, inlinedAt: !5908)
!5908 = distinct !DILocation(line: 128, column: 87, scope: !1507)
!5909 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5908)
!5910 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5908)
!5911 = !DILocation(line: 128, column: 108, scope: !1507)
!5912 = !DILocation(line: 0, scope: !1621, inlinedAt: !5913)
!5913 = distinct !DILocation(line: 128, column: 100, scope: !1507)
!5914 = !DILocation(line: 157, column: 34, scope: !1621, inlinedAt: !5913)
!5915 = !DILocation(line: 158, column: 15, scope: !1621, inlinedAt: !5913)
!5916 = !DILocation(line: 0, scope: !1609, inlinedAt: !5917)
!5917 = distinct !DILocation(line: 128, column: 112, scope: !1507)
!5918 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5917)
!5919 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5917)
!5920 = !DILocation(line: 128, column: 140, scope: !1507)
!5921 = !DILocation(line: 0, scope: !1617, inlinedAt: !5922)
!5922 = distinct !DILocation(line: 128, column: 132, scope: !1507)
!5923 = !DILocation(line: 153, column: 48, scope: !1617, inlinedAt: !5922)
!5924 = !DILocation(line: 153, column: 15, scope: !1617, inlinedAt: !5922)
!5925 = !DILocation(line: 0, scope: !1609, inlinedAt: !5926)
!5926 = distinct !DILocation(line: 128, column: 151, scope: !1507)
!5927 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5926)
!5928 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5926)
!5929 = !DILocation(line: 128, column: 177, scope: !1507)
!5930 = !DILocation(line: 0, scope: !1617, inlinedAt: !5931)
!5931 = distinct !DILocation(line: 128, column: 169, scope: !1507)
!5932 = !DILocation(line: 153, column: 48, scope: !1617, inlinedAt: !5931)
!5933 = !DILocation(line: 153, column: 15, scope: !1617, inlinedAt: !5931)
!5934 = !DILocation(line: 0, scope: !1609, inlinedAt: !5935)
!5935 = distinct !DILocation(line: 128, column: 187, scope: !1507)
!5936 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5935)
!5937 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5935)
!5938 = !DILocation(line: 0, scope: !1606, inlinedAt: !5939)
!5939 = distinct !DILocation(line: 128, column: 5, scope: !1507)
!5940 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !5939)
!5941 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !5939)
!5942 = !DILocation(line: 129, column: 89, scope: !1507)
!5943 = !DILocation(line: 129, column: 56, scope: !1507)
!5944 = !DILocation(line: 129, column: 36, scope: !1507)
!5945 = !DILocation(line: 130, column: 19, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !1507, file: !1434, line: 130, column: 9)
!5947 = !DILocation(line: 130, column: 9, scope: !1507)
!5948 = !DILocation(line: 0, scope: !1553, inlinedAt: !5949)
!5949 = distinct !DILocation(line: 131, column: 9, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5946, file: !1434, line: 130, column: 28)
!5951 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !5949)
!5952 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !5949)
!5953 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !5949)
!5954 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !5949)
!5955 = !DILocation(line: 0, scope: !1609, inlinedAt: !5956)
!5956 = distinct !DILocation(line: 131, column: 29, scope: !5950)
!5957 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5956)
!5958 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5956)
!5959 = !DILocation(line: 0, scope: !1613, inlinedAt: !5960)
!5960 = distinct !DILocation(line: 131, column: 57, scope: !5950)
!5961 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !5960)
!5962 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !5960)
!5963 = !DILocation(line: 0, scope: !1609, inlinedAt: !5964)
!5964 = distinct !DILocation(line: 131, column: 64, scope: !5950)
!5965 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5964)
!5966 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5964)
!5967 = !DILocation(line: 0, scope: !1606, inlinedAt: !5968)
!5968 = distinct !DILocation(line: 131, column: 9, scope: !5950)
!5969 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !5968)
!5970 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !5968)
!5971 = !DILocation(line: 132, column: 31, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5950, file: !1434, line: 132, column: 13)
!5973 = !DILocation(line: 132, column: 13, scope: !5950)
!5974 = !DILocation(line: 0, scope: !1553, inlinedAt: !5975)
!5975 = distinct !DILocation(line: 133, column: 13, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5972, file: !1434, line: 132, column: 40)
!5977 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !5975)
!5978 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !5975)
!5979 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !5975)
!5980 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !5975)
!5981 = !DILocation(line: 0, scope: !1609, inlinedAt: !5982)
!5982 = distinct !DILocation(line: 133, column: 33, scope: !5976)
!5983 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5982)
!5984 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5982)
!5985 = !DILocation(line: 0, scope: !1613, inlinedAt: !5986)
!5986 = distinct !DILocation(line: 133, column: 61, scope: !5976)
!5987 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !5986)
!5988 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !5986)
!5989 = !DILocation(line: 0, scope: !1609, inlinedAt: !5990)
!5990 = distinct !DILocation(line: 133, column: 68, scope: !5976)
!5991 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !5990)
!5992 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !5990)
!5993 = !DILocation(line: 0, scope: !1606, inlinedAt: !5994)
!5994 = distinct !DILocation(line: 133, column: 13, scope: !5976)
!5995 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !5994)
!5996 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !5994)
!5997 = !DILocation(line: 134, column: 13, scope: !5976)
!5998 = !DILocation(line: 139, column: 14, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !1507, file: !1434, line: 139, column: 9)
!6000 = !DILocation(line: 139, column: 9, scope: !5999)
!6001 = !DILocation(line: 139, column: 39, scope: !5999)
!6002 = !DILocation(line: 139, column: 18, scope: !5999)
!6003 = !DILocation(line: 0, scope: !1553, inlinedAt: !6004)
!6004 = distinct !DILocation(line: 140, column: 9, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !5999, file: !1434, line: 139, column: 53)
!6006 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !6004)
!6007 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !6004)
!6008 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !6004)
!6009 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !6004)
!6010 = !DILocation(line: 0, scope: !1609, inlinedAt: !6011)
!6011 = distinct !DILocation(line: 140, column: 29, scope: !6005)
!6012 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6011)
!6013 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6011)
!6014 = !DILocation(line: 0, scope: !1613, inlinedAt: !6015)
!6015 = distinct !DILocation(line: 140, column: 57, scope: !6005)
!6016 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !6015)
!6017 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !6015)
!6018 = !DILocation(line: 0, scope: !1609, inlinedAt: !6019)
!6019 = distinct !DILocation(line: 140, column: 64, scope: !6005)
!6020 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6019)
!6021 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6019)
!6022 = !DILocation(line: 0, scope: !1606, inlinedAt: !6023)
!6023 = distinct !DILocation(line: 140, column: 9, scope: !6005)
!6024 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !6023)
!6025 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !6023)
!6026 = !DILocation(line: 141, column: 31, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6005, file: !1434, line: 141, column: 13)
!6028 = !DILocation(line: 141, column: 39, scope: !6027)
!6029 = !DILocation(line: 141, column: 47, scope: !6027)
!6030 = !DILocation(line: 141, column: 13, scope: !6005)
!6031 = !DILocation(line: 142, column: 13, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6033, file: !1434, line: 142, column: 13)
!6033 = distinct !DILexicalBlock(scope: !6027, file: !1434, line: 141, column: 58)
!6034 = !DILocation(line: 142, column: 13, scope: !6033)
!6035 = !DILocation(line: 142, column: 13, scope: !6036)
!6036 = !DILexicalBlockFile(scope: !6032, file: !1434, discriminator: 1)
!6037 = !DILocation(line: 143, column: 22, scope: !6033)
!6038 = !DILocation(line: 144, column: 24, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6033, file: !1434, line: 144, column: 17)
!6040 = !DILocation(line: 144, column: 17, scope: !6033)
!6041 = !DILocation(line: 0, scope: !1553, inlinedAt: !6042)
!6042 = distinct !DILocation(line: 145, column: 17, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6039, file: !1434, line: 144, column: 30)
!6044 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !6042)
!6045 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !6042)
!6046 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !6042)
!6047 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !6042)
!6048 = !DILocation(line: 0, scope: !1609, inlinedAt: !6049)
!6049 = distinct !DILocation(line: 145, column: 37, scope: !6043)
!6050 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6049)
!6051 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6049)
!6052 = !DILocation(line: 0, scope: !1613, inlinedAt: !6053)
!6053 = distinct !DILocation(line: 145, column: 65, scope: !6043)
!6054 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !6053)
!6055 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !6053)
!6056 = !DILocation(line: 0, scope: !1609, inlinedAt: !6057)
!6057 = distinct !DILocation(line: 145, column: 72, scope: !6043)
!6058 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6057)
!6059 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6057)
!6060 = !DILocation(line: 0, scope: !1606, inlinedAt: !6061)
!6061 = distinct !DILocation(line: 145, column: 17, scope: !6043)
!6062 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !6061)
!6063 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !6061)
!6064 = !DILocation(line: 146, column: 17, scope: !6043)
!6065 = !DILocation(line: 149, column: 18, scope: !6005)
!6066 = !DILocation(line: 150, column: 20, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6005, file: !1434, line: 150, column: 13)
!6068 = !DILocation(line: 150, column: 13, scope: !6005)
!6069 = !DILocation(line: 0, scope: !1553, inlinedAt: !6070)
!6070 = distinct !DILocation(line: 151, column: 13, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !6067, file: !1434, line: 150, column: 26)
!6072 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !6070)
!6073 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !6070)
!6074 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !6070)
!6075 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !6070)
!6076 = !DILocation(line: 0, scope: !1609, inlinedAt: !6077)
!6077 = distinct !DILocation(line: 151, column: 33, scope: !6071)
!6078 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6077)
!6079 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6077)
!6080 = !DILocation(line: 0, scope: !1613, inlinedAt: !6081)
!6081 = distinct !DILocation(line: 151, column: 61, scope: !6071)
!6082 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !6081)
!6083 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !6081)
!6084 = !DILocation(line: 0, scope: !1609, inlinedAt: !6085)
!6085 = distinct !DILocation(line: 151, column: 68, scope: !6071)
!6086 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6085)
!6087 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6085)
!6088 = !DILocation(line: 0, scope: !1606, inlinedAt: !6089)
!6089 = distinct !DILocation(line: 151, column: 13, scope: !6071)
!6090 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !6089)
!6091 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !6089)
!6092 = !DILocation(line: 152, column: 13, scope: !6071)
!6093 = !DILocation(line: 154, column: 25, scope: !6005)
!6094 = !DILocation(line: 157, column: 14, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !1507, file: !1434, line: 157, column: 9)
!6096 = !DILocation(line: 155, column: 5, scope: !6005)
!6097 = !DILocation(line: 157, column: 18, scope: !6095)
!6098 = !DILocation(line: 157, column: 9, scope: !1507)
!6099 = !DILocation(line: 158, column: 18, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6095, file: !1434, line: 157, column: 24)
!6101 = !DILocation(line: 159, column: 20, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6100, file: !1434, line: 159, column: 13)
!6103 = !DILocation(line: 159, column: 13, scope: !6100)
!6104 = !DILocation(line: 0, scope: !1553, inlinedAt: !6105)
!6105 = distinct !DILocation(line: 160, column: 13, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6102, file: !1434, line: 159, column: 26)
!6107 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !6105)
!6108 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !6105)
!6109 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !6105)
!6110 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !6105)
!6111 = !DILocation(line: 0, scope: !1609, inlinedAt: !6112)
!6112 = distinct !DILocation(line: 160, column: 33, scope: !6106)
!6113 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6112)
!6114 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6112)
!6115 = !DILocation(line: 0, scope: !1613, inlinedAt: !6116)
!6116 = distinct !DILocation(line: 160, column: 61, scope: !6106)
!6117 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !6116)
!6118 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !6116)
!6119 = !DILocation(line: 0, scope: !1609, inlinedAt: !6120)
!6120 = distinct !DILocation(line: 161, column: 33, scope: !6106)
!6121 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6120)
!6122 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6120)
!6123 = !DILocation(line: 0, scope: !1606, inlinedAt: !6124)
!6124 = distinct !DILocation(line: 160, column: 13, scope: !6106)
!6125 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !6124)
!6126 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !6124)
!6127 = !DILocation(line: 162, column: 13, scope: !6106)
!6128 = !DILocation(line: 166, column: 14, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !1507, file: !1434, line: 166, column: 9)
!6130 = !DILocation(line: 166, column: 9, scope: !1507)
!6131 = !DILocation(line: 0, scope: !1553, inlinedAt: !6132)
!6132 = distinct !DILocation(line: 167, column: 9, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6129, file: !1434, line: 166, column: 26)
!6134 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !6132)
!6135 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !6132)
!6136 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !6132)
!6137 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !6132)
!6138 = !DILocation(line: 0, scope: !1609, inlinedAt: !6139)
!6139 = distinct !DILocation(line: 167, column: 29, scope: !6133)
!6140 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6139)
!6141 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6139)
!6142 = !DILocation(line: 0, scope: !1613, inlinedAt: !6143)
!6143 = distinct !DILocation(line: 167, column: 57, scope: !6133)
!6144 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !6143)
!6145 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !6143)
!6146 = !DILocation(line: 0, scope: !1609, inlinedAt: !6147)
!6147 = distinct !DILocation(line: 167, column: 64, scope: !6133)
!6148 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6147)
!6149 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6147)
!6150 = !DILocation(line: 0, scope: !1606, inlinedAt: !6151)
!6151 = distinct !DILocation(line: 167, column: 9, scope: !6133)
!6152 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !6151)
!6153 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !6151)
!6154 = !DILocation(line: 168, column: 18, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6133, file: !1434, line: 168, column: 13)
!6156 = !DILocation(line: 168, column: 13, scope: !6133)
!6157 = !DILocation(line: 0, scope: !1553, inlinedAt: !6158)
!6158 = distinct !DILocation(line: 169, column: 13, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6155, file: !1434, line: 168, column: 29)
!6160 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !6158)
!6161 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !6158)
!6162 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !6158)
!6163 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !6158)
!6164 = !DILocation(line: 0, scope: !1609, inlinedAt: !6165)
!6165 = distinct !DILocation(line: 169, column: 33, scope: !6159)
!6166 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6165)
!6167 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6165)
!6168 = !DILocation(line: 0, scope: !1613, inlinedAt: !6169)
!6169 = distinct !DILocation(line: 169, column: 61, scope: !6159)
!6170 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !6169)
!6171 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !6169)
!6172 = !DILocation(line: 0, scope: !1609, inlinedAt: !6173)
!6173 = distinct !DILocation(line: 169, column: 68, scope: !6159)
!6174 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6173)
!6175 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6173)
!6176 = !DILocation(line: 0, scope: !1606, inlinedAt: !6177)
!6177 = distinct !DILocation(line: 169, column: 13, scope: !6159)
!6178 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !6177)
!6179 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !6177)
!6180 = !DILocation(line: 171, column: 9, scope: !6159)
!6181 = !DILocation(line: 172, column: 33, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6155, file: !1434, line: 171, column: 16)
!6183 = !{!5549, !2679, i64 28}
!6184 = !DILocation(line: 172, column: 22, scope: !6182)
!6185 = !DILocation(line: 173, column: 24, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6182, file: !1434, line: 173, column: 17)
!6187 = !DILocation(line: 173, column: 17, scope: !6182)
!6188 = !DILocation(line: 174, column: 33, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6186, file: !1434, line: 173, column: 30)
!6190 = !DILocation(line: 0, scope: !1553, inlinedAt: !6191)
!6191 = distinct !DILocation(line: 176, column: 17, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6186, file: !1434, line: 175, column: 20)
!6193 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !6191)
!6194 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !6191)
!6195 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !6191)
!6196 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !6191)
!6197 = !DILocation(line: 0, scope: !1609, inlinedAt: !6198)
!6198 = distinct !DILocation(line: 176, column: 37, scope: !6192)
!6199 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6198)
!6200 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6198)
!6201 = !DILocation(line: 0, scope: !1613, inlinedAt: !6202)
!6202 = distinct !DILocation(line: 177, column: 37, scope: !6192)
!6203 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !6202)
!6204 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !6202)
!6205 = !DILocation(line: 0, scope: !1609, inlinedAt: !6206)
!6206 = distinct !DILocation(line: 177, column: 44, scope: !6192)
!6207 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6206)
!6208 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6206)
!6209 = !DILocation(line: 0, scope: !1606, inlinedAt: !6210)
!6210 = distinct !DILocation(line: 176, column: 17, scope: !6192)
!6211 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !6210)
!6212 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !6210)
!6213 = !DILocation(line: 178, column: 17, scope: !6192)
!6214 = !DILocation(line: 0, scope: !1550, inlinedAt: !6215)
!6215 = distinct !DILocation(line: 184, column: 1, scope: !1507)
!6216 = !DILocation(line: 17, column: 9, scope: !5872, inlinedAt: !6215)
!6217 = !DILocation(line: 184, column: 1, scope: !1507)
!6218 = !DILocation(line: 238, column: 35, scope: !1530)
!6219 = !DILocation(line: 238, column: 66, scope: !1530)
!6220 = !DILocation(line: 239, column: 14, scope: !1530)
!6221 = !DILocation(line: 240, column: 9, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !1530, file: !1434, line: 240, column: 9)
!6223 = !DILocation(line: 241, column: 26, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6222, file: !1434, line: 240, column: 14)
!6225 = !DILocation(line: 240, column: 9, scope: !1530)
!6226 = !DILocation(line: 242, column: 5, scope: !6224)
!6227 = !DILocation(line: 0, scope: !1553, inlinedAt: !6228)
!6228 = distinct !DILocation(line: 243, column: 5, scope: !1530)
!6229 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !6228)
!6230 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !6228)
!6231 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !6228)
!6232 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !6228)
!6233 = !DILocation(line: 0, scope: !1609, inlinedAt: !6234)
!6234 = distinct !DILocation(line: 243, column: 25, scope: !1530)
!6235 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6234)
!6236 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6234)
!6237 = !DILocation(line: 243, column: 54, scope: !1530)
!6238 = !DILocation(line: 0, scope: !1613, inlinedAt: !6239)
!6239 = distinct !DILocation(line: 243, column: 51, scope: !1530)
!6240 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !6239)
!6241 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !6239)
!6242 = !DILocation(line: 0, scope: !1609, inlinedAt: !6243)
!6243 = distinct !DILocation(line: 244, column: 25, scope: !1530)
!6244 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6243)
!6245 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6243)
!6246 = !DILocation(line: 244, column: 48, scope: !1530)
!6247 = !DILocation(line: 0, scope: !1621, inlinedAt: !6248)
!6248 = distinct !DILocation(line: 244, column: 40, scope: !1530)
!6249 = !DILocation(line: 157, column: 34, scope: !1621, inlinedAt: !6248)
!6250 = !DILocation(line: 158, column: 15, scope: !1621, inlinedAt: !6248)
!6251 = !DILocation(line: 0, scope: !1609, inlinedAt: !6252)
!6252 = distinct !DILocation(line: 245, column: 25, scope: !1530)
!6253 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6252)
!6254 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6252)
!6255 = !DILocation(line: 245, column: 45, scope: !1530)
!6256 = !DILocation(line: 0, scope: !1613, inlinedAt: !6257)
!6257 = distinct !DILocation(line: 245, column: 42, scope: !1530)
!6258 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !6257)
!6259 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !6257)
!6260 = !DILocation(line: 0, scope: !1609, inlinedAt: !6261)
!6261 = distinct !DILocation(line: 245, column: 84, scope: !1530)
!6262 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6261)
!6263 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6261)
!6264 = !DILocation(line: 0, scope: !1606, inlinedAt: !6265)
!6265 = distinct !DILocation(line: 243, column: 5, scope: !1530)
!6266 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !6265)
!6267 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !6265)
!6268 = !DILocation(line: 246, column: 9, scope: !1530)
!6269 = !DILocation(line: 247, column: 52, scope: !1536)
!6270 = !DILocation(line: 247, column: 40, scope: !1536)
!6271 = !DILocation(line: 248, column: 23, scope: !1540)
!6272 = !DILocation(line: 248, column: 13, scope: !1536)
!6273 = !DILocation(line: 251, column: 24, scope: !1539)
!6274 = !DILocation(line: 251, column: 13, scope: !1539)
!6275 = !DILocation(line: 252, column: 37, scope: !1539)
!6276 = !{!5549, !2679, i64 12}
!6277 = !DILocation(line: 252, column: 26, scope: !1539)
!6278 = !DILocation(line: 252, column: 17, scope: !1539)
!6279 = !DILocation(line: 0, scope: !1553, inlinedAt: !6280)
!6280 = distinct !DILocation(line: 253, column: 13, scope: !1539)
!6281 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !6280)
!6282 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !6280)
!6283 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !6280)
!6284 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !6280)
!6285 = !DILocation(line: 0, scope: !1609, inlinedAt: !6286)
!6286 = distinct !DILocation(line: 253, column: 33, scope: !1539)
!6287 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6286)
!6288 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6286)
!6289 = !DILocation(line: 0, scope: !1617, inlinedAt: !6290)
!6290 = distinct !DILocation(line: 253, column: 79, scope: !1539)
!6291 = !DILocation(line: 152, column: 33, scope: !1617, inlinedAt: !6290)
!6292 = !DILocation(line: 153, column: 48, scope: !1617, inlinedAt: !6290)
!6293 = !DILocation(line: 153, column: 15, scope: !1617, inlinedAt: !6290)
!6294 = !DILocation(line: 0, scope: !1609, inlinedAt: !6295)
!6295 = distinct !DILocation(line: 253, column: 89, scope: !1539)
!6296 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6295)
!6297 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6295)
!6298 = !DILocation(line: 0, scope: !1606, inlinedAt: !6299)
!6299 = distinct !DILocation(line: 253, column: 13, scope: !1539)
!6300 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !6299)
!6301 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !6299)
!6302 = !DILocation(line: 254, column: 24, scope: !1539)
!6303 = !DILocation(line: 254, column: 13, scope: !1539)
!6304 = !DILocation(line: 0, scope: !1553, inlinedAt: !6305)
!6305 = distinct !DILocation(line: 255, column: 13, scope: !1539)
!6306 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !6305)
!6307 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !6305)
!6308 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !6305)
!6309 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !6305)
!6310 = !DILocation(line: 0, scope: !1609, inlinedAt: !6311)
!6311 = distinct !DILocation(line: 255, column: 33, scope: !1539)
!6312 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6311)
!6313 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6311)
!6314 = !DILocation(line: 255, column: 117, scope: !1539)
!6315 = !DILocation(line: 0, scope: !1621, inlinedAt: !6316)
!6316 = distinct !DILocation(line: 255, column: 109, scope: !1539)
!6317 = !DILocation(line: 157, column: 34, scope: !1621, inlinedAt: !6316)
!6318 = !DILocation(line: 158, column: 15, scope: !1621, inlinedAt: !6316)
!6319 = !DILocation(line: 0, scope: !1609, inlinedAt: !6320)
!6320 = distinct !DILocation(line: 255, column: 121, scope: !1539)
!6321 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6320)
!6322 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6320)
!6323 = !DILocation(line: 0, scope: !1606, inlinedAt: !6324)
!6324 = distinct !DILocation(line: 255, column: 13, scope: !1539)
!6325 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !6324)
!6326 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !6324)
!6327 = !DILocation(line: 256, column: 13, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !1539, file: !1434, line: 256, column: 13)
!6329 = !DILocation(line: 256, column: 13, scope: !1539)
!6330 = !DILocation(line: 256, column: 13, scope: !6331)
!6331 = !DILexicalBlockFile(scope: !6328, file: !1434, discriminator: 1)
!6332 = !DILocation(line: 257, column: 17, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !1539, file: !1434, line: 257, column: 17)
!6334 = !DILocation(line: 260, column: 17, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6333, file: !1434, line: 259, column: 20)
!6336 = !DILocation(line: 264, column: 10, scope: !1530)
!6337 = !DILocation(line: 264, column: 20, scope: !1530)
!6338 = !DILocation(line: 265, column: 5, scope: !1530)
!6339 = !DILocation(line: 266, column: 1, scope: !1530)
!6340 = !DILocation(line: 206, column: 37, scope: !1523)
!6341 = !DILocation(line: 206, column: 68, scope: !1523)
!6342 = !DILocation(line: 206, column: 104, scope: !1523)
!6343 = !DILocation(line: 207, column: 89, scope: !1523)
!6344 = !DILocation(line: 207, column: 56, scope: !1523)
!6345 = !DILocation(line: 207, column: 36, scope: !1523)
!6346 = !DILocation(line: 0, scope: !1553, inlinedAt: !6347)
!6347 = distinct !DILocation(line: 208, column: 5, scope: !1523)
!6348 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !6347)
!6349 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !6347)
!6350 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !6347)
!6351 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !6347)
!6352 = !DILocation(line: 0, scope: !1609, inlinedAt: !6353)
!6353 = distinct !DILocation(line: 208, column: 25, scope: !1523)
!6354 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6353)
!6355 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6353)
!6356 = !DILocation(line: 208, column: 75, scope: !1523)
!6357 = !DILocation(line: 0, scope: !1613, inlinedAt: !6358)
!6358 = distinct !DILocation(line: 208, column: 72, scope: !1523)
!6359 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !6358)
!6360 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !6358)
!6361 = !DILocation(line: 0, scope: !1609, inlinedAt: !6362)
!6362 = distinct !DILocation(line: 209, column: 25, scope: !1523)
!6363 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6362)
!6364 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6362)
!6365 = !DILocation(line: 209, column: 45, scope: !1523)
!6366 = !DILocation(line: 0, scope: !1613, inlinedAt: !6367)
!6367 = distinct !DILocation(line: 209, column: 42, scope: !1523)
!6368 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !6367)
!6369 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !6367)
!6370 = !DILocation(line: 0, scope: !1609, inlinedAt: !6371)
!6371 = distinct !DILocation(line: 210, column: 25, scope: !1523)
!6372 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6371)
!6373 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6371)
!6374 = !DILocation(line: 210, column: 46, scope: !1523)
!6375 = !DILocation(line: 0, scope: !1613, inlinedAt: !6376)
!6376 = distinct !DILocation(line: 210, column: 38, scope: !1523)
!6377 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !6376)
!6378 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !6376)
!6379 = !DILocation(line: 0, scope: !1609, inlinedAt: !6380)
!6380 = distinct !DILocation(line: 211, column: 25, scope: !1523)
!6381 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6380)
!6382 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6380)
!6383 = !DILocation(line: 211, column: 46, scope: !1523)
!6384 = !DILocation(line: 0, scope: !1621, inlinedAt: !6385)
!6385 = distinct !DILocation(line: 211, column: 38, scope: !1523)
!6386 = !DILocation(line: 157, column: 34, scope: !1621, inlinedAt: !6385)
!6387 = !DILocation(line: 158, column: 15, scope: !1621, inlinedAt: !6385)
!6388 = !DILocation(line: 0, scope: !1609, inlinedAt: !6389)
!6389 = distinct !DILocation(line: 212, column: 25, scope: !1523)
!6390 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6389)
!6391 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6389)
!6392 = !DILocation(line: 212, column: 53, scope: !1523)
!6393 = !DILocation(line: 0, scope: !1617, inlinedAt: !6394)
!6394 = distinct !DILocation(line: 212, column: 45, scope: !1523)
!6395 = !DILocation(line: 153, column: 48, scope: !1617, inlinedAt: !6394)
!6396 = !DILocation(line: 153, column: 15, scope: !1617, inlinedAt: !6394)
!6397 = !DILocation(line: 0, scope: !1609, inlinedAt: !6398)
!6398 = distinct !DILocation(line: 213, column: 25, scope: !1523)
!6399 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6398)
!6400 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6398)
!6401 = !DILocation(line: 213, column: 51, scope: !1523)
!6402 = !DILocation(line: 0, scope: !1617, inlinedAt: !6403)
!6403 = distinct !DILocation(line: 213, column: 43, scope: !1523)
!6404 = !DILocation(line: 153, column: 48, scope: !1617, inlinedAt: !6403)
!6405 = !DILocation(line: 153, column: 15, scope: !1617, inlinedAt: !6403)
!6406 = !DILocation(line: 0, scope: !1609, inlinedAt: !6407)
!6407 = distinct !DILocation(line: 214, column: 25, scope: !1523)
!6408 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6407)
!6409 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6407)
!6410 = !DILocation(line: 214, column: 58, scope: !1523)
!6411 = !DILocation(line: 0, scope: !1613, inlinedAt: !6412)
!6412 = distinct !DILocation(line: 214, column: 55, scope: !1523)
!6413 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !6412)
!6414 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !6412)
!6415 = !DILocation(line: 0, scope: !1609, inlinedAt: !6416)
!6416 = distinct !DILocation(line: 214, column: 76, scope: !1523)
!6417 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6416)
!6418 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6416)
!6419 = !DILocation(line: 0, scope: !1606, inlinedAt: !6420)
!6420 = distinct !DILocation(line: 208, column: 5, scope: !1523)
!6421 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !6420)
!6422 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !6420)
!6423 = !DILocation(line: 217, column: 27, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !1523, file: !1434, line: 217, column: 9)
!6425 = !DILocation(line: 217, column: 56, scope: !6424)
!6426 = !DILocation(line: 217, column: 35, scope: !6424)
!6427 = !DILocation(line: 0, scope: !1553, inlinedAt: !6428)
!6428 = distinct !DILocation(line: 218, column: 9, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6424, file: !1434, line: 217, column: 70)
!6430 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !6428)
!6431 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !6428)
!6432 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !6428)
!6433 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !6428)
!6434 = !DILocation(line: 0, scope: !1609, inlinedAt: !6435)
!6435 = distinct !DILocation(line: 218, column: 29, scope: !6429)
!6436 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6435)
!6437 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6435)
!6438 = !DILocation(line: 0, scope: !1606, inlinedAt: !6439)
!6439 = distinct !DILocation(line: 218, column: 9, scope: !6429)
!6440 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !6439)
!6441 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !6439)
!6442 = !DILocation(line: 219, column: 9, scope: !6429)
!6443 = !DILocation(line: 224, column: 16, scope: !1523)
!6444 = !DILocation(line: 224, column: 5, scope: !1523)
!6445 = !DILocation(line: 225, column: 29, scope: !1523)
!6446 = !{!5549, !2679, i64 8}
!6447 = !DILocation(line: 225, column: 18, scope: !1523)
!6448 = !DILocation(line: 225, column: 9, scope: !1523)
!6449 = !DILocation(line: 226, column: 16, scope: !1523)
!6450 = !DILocation(line: 226, column: 5, scope: !1523)
!6451 = !DILocation(line: 0, scope: !1553, inlinedAt: !6452)
!6452 = distinct !DILocation(line: 228, column: 5, scope: !1523)
!6453 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !6452)
!6454 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !6452)
!6455 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !6452)
!6456 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !6452)
!6457 = !DILocation(line: 0, scope: !1609, inlinedAt: !6458)
!6458 = distinct !DILocation(line: 228, column: 25, scope: !1523)
!6459 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6458)
!6460 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6458)
!6461 = !DILocation(line: 0, scope: !1613, inlinedAt: !6462)
!6462 = distinct !DILocation(line: 228, column: 73, scope: !1523)
!6463 = !DILocation(line: 177, column: 37, scope: !1613, inlinedAt: !6462)
!6464 = !DILocation(line: 178, column: 15, scope: !1613, inlinedAt: !6462)
!6465 = !DILocation(line: 0, scope: !1609, inlinedAt: !6466)
!6466 = distinct !DILocation(line: 228, column: 80, scope: !1523)
!6467 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6466)
!6468 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6466)
!6469 = !DILocation(line: 0, scope: !1617, inlinedAt: !6470)
!6470 = distinct !DILocation(line: 228, column: 99, scope: !1523)
!6471 = !DILocation(line: 152, column: 33, scope: !1617, inlinedAt: !6470)
!6472 = !DILocation(line: 153, column: 48, scope: !1617, inlinedAt: !6470)
!6473 = !DILocation(line: 153, column: 15, scope: !1617, inlinedAt: !6470)
!6474 = !DILocation(line: 0, scope: !1609, inlinedAt: !6475)
!6475 = distinct !DILocation(line: 228, column: 109, scope: !1523)
!6476 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6475)
!6477 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6475)
!6478 = !DILocation(line: 0, scope: !1606, inlinedAt: !6479)
!6479 = distinct !DILocation(line: 228, column: 5, scope: !1523)
!6480 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !6479)
!6481 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !6479)
!6482 = !DILocation(line: 230, column: 9, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !1523, file: !1434, line: 230, column: 9)
!6484 = !DILocation(line: 233, column: 9, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6483, file: !1434, line: 232, column: 12)
!6486 = !DILocation(line: 235, column: 1, scope: !1523)
!6487 = !DILocation(line: 188, column: 35, scope: !1517)
!6488 = !DILocation(line: 188, column: 66, scope: !1517)
!6489 = !DILocation(line: 189, column: 36, scope: !1517)
!6490 = !DILocation(line: 190, column: 9, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !1517, file: !1434, line: 190, column: 9)
!6492 = !DILocation(line: 190, column: 9, scope: !1517)
!6493 = !DILocation(line: 191, column: 54, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6491, file: !1434, line: 190, column: 14)
!6495 = !DILocation(line: 191, column: 21, scope: !6494)
!6496 = !DILocation(line: 193, column: 19, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !1517, file: !1434, line: 193, column: 9)
!6498 = !DILocation(line: 193, column: 9, scope: !1517)
!6499 = !DILocation(line: 0, scope: !1553, inlinedAt: !6500)
!6500 = distinct !DILocation(line: 194, column: 9, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6497, file: !1434, line: 193, column: 28)
!6502 = !DILocation(line: 135, column: 19, scope: !1553, inlinedAt: !6500)
!6503 = !DILocation(line: 136, column: 23, scope: !5463, inlinedAt: !6500)
!6504 = !DILocation(line: 138, column: 19, scope: !5463, inlinedAt: !6500)
!6505 = !DILocation(line: 139, column: 14, scope: !5463, inlinedAt: !6500)
!6506 = !DILocation(line: 0, scope: !1609, inlinedAt: !6507)
!6507 = distinct !DILocation(line: 194, column: 29, scope: !6501)
!6508 = !DILocation(line: 142, column: 37, scope: !1609, inlinedAt: !6507)
!6509 = !DILocation(line: 143, column: 15, scope: !1609, inlinedAt: !6507)
!6510 = !DILocation(line: 0, scope: !1606, inlinedAt: !6511)
!6511 = distinct !DILocation(line: 194, column: 9, scope: !6501)
!6512 = !DILocation(line: 196, column: 13, scope: !5482, inlinedAt: !6511)
!6513 = !DILocation(line: 200, column: 9, scope: !5485, inlinedAt: !6511)
!6514 = !DILocation(line: 195, column: 9, scope: !6501)
!6515 = !DILocation(line: 197, column: 29, scope: !1517)
!6516 = !{!5549, !2679, i64 16}
!6517 = !DILocation(line: 197, column: 18, scope: !1517)
!6518 = !DILocation(line: 197, column: 9, scope: !1517)
!6519 = !DILocation(line: 198, column: 9, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !1517, file: !1434, line: 198, column: 9)
!6521 = !DILocation(line: 201, column: 9, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6520, file: !1434, line: 200, column: 12)
!6523 = !DILocation(line: 203, column: 1, scope: !1517)
!6524 = !DILocation(line: 270, column: 50, scope: !1541)
!6525 = !DILocation(line: 270, column: 70, scope: !1541)
!6526 = !DILocation(line: 271, column: 28, scope: !1541)
!6527 = !DILocation(line: 271, column: 22, scope: !1541)
!6528 = !DILocation(line: 272, column: 5, scope: !1541)
!6529 = !DILocation(line: 273, column: 1, scope: !1541)
!6530 = !DILocation(line: 32, column: 99, scope: !1649)
!6531 = !DILocation(line: 37, column: 21, scope: !1649)
!6532 = !DILocation(line: 0, scope: !1672, inlinedAt: !6533)
!6533 = distinct !DILocation(line: 37, column: 21, scope: !1649)
!6534 = !DILocation(line: 12, column: 35, scope: !1672, inlinedAt: !6533)
!6535 = !DILocation(line: 13, column: 9, scope: !6536, inlinedAt: !6533)
!6536 = distinct !DILexicalBlock(scope: !1672, file: !1120, line: 12, column: 88)
!6537 = !DILocation(line: 38, column: 28, scope: !1649)
!6538 = !{!6539, !2679, i64 64}
!6539 = !{!"_ZTSN6Halide7Runtime8Internal11list_head_tE", !6540, i64 0, !2679, i64 64}
!6540 = !{!"_ZTS12halide_mutex", !2619, i64 0}
!6541 = !DILocation(line: 38, column: 16, scope: !1649)
!6542 = !{!6543, !2679, i64 0}
!6543 = !{!"_ZTS44_halide_runtime_internal_registered_filter_t", !2679, i64 0, !2679, i64 4, !2679, i64 8}
!6544 = !DILocation(line: 39, column: 20, scope: !1649)
!6545 = !DILocation(line: 0, scope: !1676, inlinedAt: !6546)
!6546 = distinct !DILocation(line: 40, column: 1, scope: !1649)
!6547 = !DILocation(line: 17, column: 9, scope: !6548, inlinedAt: !6546)
!6548 = distinct !DILexicalBlock(scope: !1676, file: !1120, line: 16, column: 55)
!6549 = !DILocation(line: 40, column: 1, scope: !1649)
!6550 = !DILocation(line: 42, column: 52, scope: !1655)
!6551 = !DILocation(line: 42, column: 72, scope: !1655)
!6552 = !DILocation(line: 42, column: 108, scope: !1655)
!6553 = !DILocation(line: 43, column: 21, scope: !1655)
!6554 = !DILocation(line: 0, scope: !1672, inlinedAt: !6555)
!6555 = distinct !DILocation(line: 43, column: 21, scope: !1655)
!6556 = !DILocation(line: 12, column: 35, scope: !1672, inlinedAt: !6555)
!6557 = !DILocation(line: 13, column: 9, scope: !6536, inlinedAt: !6555)
!6558 = !DILocation(line: 44, column: 70, scope: !1668)
!6559 = !DILocation(line: 44, column: 78, scope: !1671)
!6560 = !DILocation(line: 44, column: 5, scope: !1668)
!6561 = !DILocation(line: 46, column: 47, scope: !1670)
!6562 = !{!6543, !2679, i64 4}
!6563 = !DILocation(line: 46, column: 60, scope: !1670)
!6564 = !{!6543, !2679, i64 8}
!6565 = !DILocation(line: 46, column: 17, scope: !1670)
!6566 = !DILocation(line: 46, column: 13, scope: !1670)
!6567 = !DILocation(line: 47, column: 15, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !1670, file: !1630, line: 47, column: 13)
!6569 = !DILocation(line: 45, column: 66, scope: !1671)
!6570 = !DILocation(line: 0, scope: !1676, inlinedAt: !6571)
!6571 = distinct !DILocation(line: 50, column: 1, scope: !1655)
!6572 = !DILocation(line: 17, column: 9, scope: !6548, inlinedAt: !6571)
!6573 = !DILocation(line: 50, column: 1, scope: !1655)
!6574 = !DILocation(line: 18, column: 1, scope: !1686)
!6575 = !DILocation(line: 21, column: 1, scope: !1691)
!6576 = !DILocation(line: 56, column: 52, scope: !2235)
!6577 = !DILocation(line: 56, column: 76, scope: !2235)
!6578 = !DILocation(line: 57, column: 47, scope: !2235)
!6579 = !DILocation(line: 57, column: 57, scope: !2235)
!6580 = !DILocation(line: 58, column: 5, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !2235, file: !1697, line: 58, column: 5)
!6582 = !DILocation(line: 58, column: 5, scope: !2235)
!6583 = !DILocation(line: 58, column: 5, scope: !6584)
!6584 = !DILexicalBlockFile(scope: !6581, file: !1697, discriminator: 1)
!6585 = !DILocation(line: 59, column: 5, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !2235, file: !1697, line: 59, column: 5)
!6587 = !DILocation(line: 59, column: 5, scope: !2235)
!6588 = !DILocation(line: 59, column: 5, scope: !6589)
!6589 = !DILexicalBlockFile(scope: !6586, file: !1697, discriminator: 1)
!6590 = !DILocation(line: 61, column: 12, scope: !6591)
!6591 = !DILexicalBlockFile(scope: !6592, file: !1697, discriminator: 3)
!6592 = !DILexicalBlockFile(scope: !2235, file: !1697, discriminator: 1)
!6593 = !DILocation(line: 61, column: 5, scope: !2235)
!6594 = !DILocation(line: 66, column: 9, scope: !2247)
!6595 = !DILocation(line: 66, column: 25, scope: !2247)
!6596 = !DILocation(line: 67, column: 21, scope: !2246)
!6597 = !DILocation(line: 67, column: 13, scope: !2246)
!6598 = !DILocation(line: 68, column: 19, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !2246, file: !1697, line: 68, column: 13)
!6600 = !DILocation(line: 68, column: 13, scope: !2246)
!6601 = !DILocation(line: 69, column: 13, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6599, file: !1697, line: 68, column: 34)
!6603 = !DILocation(line: 74, column: 12, scope: !2235)
!6604 = !DILocation(line: 74, column: 10, scope: !2235)
!6605 = !DILocation(line: 75, column: 12, scope: !2235)
!6606 = !DILocation(line: 75, column: 10, scope: !2235)
!6607 = !DILocation(line: 76, column: 5, scope: !2235)
!6608 = !DILocation(line: 77, column: 1, scope: !2235)
!6609 = !DILocation(line: 191, column: 44, scope: !2272)
!6610 = !DILocation(line: 191, column: 68, scope: !2272)
!6611 = !DILocation(line: 191, column: 84, scope: !2272)
!6612 = !DILocation(line: 192, column: 14, scope: !2272)
!6613 = !DILocation(line: 194, column: 9, scope: !2272)
!6614 = !DILocation(line: 195, column: 25, scope: !2272)
!6615 = !DILocation(line: 195, column: 23, scope: !2272)
!6616 = !DILocation(line: 196, column: 5, scope: !2272)
!6617 = !DILocation(line: 198, column: 10, scope: !2272)
!6618 = !DILocation(line: 132, column: 37, scope: !2424, inlinedAt: !6619)
!6619 = distinct !DILocation(line: 202, column: 9, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !2272, file: !1697, line: 202, column: 9)
!6621 = !DILocation(line: 133, column: 5, scope: !2424, inlinedAt: !6619)
!6622 = !DILocation(line: 134, column: 5, scope: !2424, inlinedAt: !6619)
!6623 = !DILocation(line: 135, column: 12, scope: !2424, inlinedAt: !6619)
!6624 = !DILocation(line: 136, column: 1, scope: !2424, inlinedAt: !6619)
!6625 = !DILocation(line: 202, column: 41, scope: !6620)
!6626 = !DILocation(line: 133, column: 10, scope: !2424, inlinedAt: !6619)
!6627 = !DILocation(line: 202, column: 9, scope: !2272)
!6628 = !DILocation(line: 203, column: 23, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6620, file: !1697, line: 202, column: 47)
!6630 = !DILocation(line: 205, column: 9, scope: !2272)
!6631 = !DILocation(line: 206, column: 13, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6633, file: !1697, line: 206, column: 13)
!6633 = distinct !DILexicalBlock(scope: !6634, file: !1697, line: 205, column: 31)
!6634 = distinct !DILexicalBlock(scope: !2272, file: !1697, line: 205, column: 9)
!6635 = !DILocation(line: 206, column: 13, scope: !6633)
!6636 = !DILocation(line: 207, column: 13, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6632, file: !1697, line: 206, column: 58)
!6638 = !DILocation(line: 208, column: 13, scope: !6637)
!6639 = !DILocation(line: 212, column: 12, scope: !2272)
!6640 = !DILocation(line: 212, column: 31, scope: !2272)
!6641 = !{!6642, !2679, i64 20}
!6642 = !{!"_ZTS13dispatchTable", !2679, i64 0, !2679, i64 4, !2679, i64 8, !2679, i64 12, !2679, i64 16, !2679, i64 20, !2679, i64 24, !2679, i64 28, !2679, i64 32, !2679, i64 36, !2679, i64 40, !2679, i64 44, !2679, i64 48, !2679, i64 52, !2679, i64 56, !2679, i64 60, !2679, i64 64, !2679, i64 68, !2679, i64 72, !2679, i64 76, !2679, i64 80, !2679, i64 84, !2679, i64 88, !2679, i64 92, !2679, i64 96, !2679, i64 100, !2679, i64 104, !2679, i64 108, !2679, i64 112, !2679, i64 116, !2679, i64 120, !2679, i64 124, !2679, i64 128, !2679, i64 132, !2679, i64 136, !2679, i64 140, !2679, i64 144, !2679, i64 148, !2679, i64 152, !2679, i64 156, !2679, i64 160, !2679, i64 164, !2679, i64 168, !2679, i64 172, !2679, i64 176, !2679, i64 180, !2679, i64 184, !2679, i64 188, !2679, i64 192, !2679, i64 196, !2679, i64 200, !2679, i64 204, !2679, i64 208, !2679, i64 212, !2679, i64 216, !2679, i64 220, !2679, i64 224, !2679, i64 228, !2679, i64 232, !2679, i64 236, !2679, i64 240, !2679, i64 244, !2679, i64 248, !2679, i64 252, !2679, i64 256, !2679, i64 260, !2679, i64 264, !2679, i64 268, !2679, i64 272, !2679, i64 276, !2679, i64 280, !2679, i64 284, !2679, i64 288, !2679, i64 292, !2679, i64 296, !2679, i64 300}
!6643 = !DILocation(line: 212, column: 10, scope: !2272)
!6644 = !DILocation(line: 213, column: 14, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !2272, file: !1697, line: 213, column: 9)
!6646 = !DILocation(line: 213, column: 9, scope: !2272)
!6647 = !DILocation(line: 214, column: 9, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6645, file: !1697, line: 213, column: 20)
!6649 = !DILocation(line: 215, column: 9, scope: !6648)
!6650 = !DILocation(line: 218, column: 5, scope: !2272)
!6651 = !DILocation(line: 227, column: 12, scope: !2272)
!6652 = !DILocation(line: 227, column: 31, scope: !2272)
!6653 = !{!6642, !2679, i64 32}
!6654 = !DILocation(line: 227, column: 45, scope: !2272)
!6655 = !DILocation(line: 227, column: 10, scope: !2272)
!6656 = !DILocation(line: 229, column: 14, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !2272, file: !1697, line: 229, column: 9)
!6658 = !DILocation(line: 229, column: 9, scope: !2272)
!6659 = !DILocation(line: 230, column: 9, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6657, file: !1697, line: 229, column: 20)
!6661 = !DILocation(line: 231, column: 9, scope: !6660)
!6662 = !DILocation(line: 234, column: 5, scope: !2272)
!6663 = !DILocation(line: 235, column: 5, scope: !2272)
!6664 = !DILocation(line: 236, column: 1, scope: !2272)
!6665 = !DILocation(line: 79, column: 52, scope: !2248)
!6666 = !DILocation(line: 80, column: 5, scope: !2248)
!6667 = !DILocation(line: 81, column: 5, scope: !2248)
!6668 = !DILocation(line: 90, column: 57, scope: !2251)
!6669 = !DILocation(line: 91, column: 35, scope: !2251)
!6670 = !DILocation(line: 92, column: 1, scope: !2251)
!6671 = !DILocation(line: 95, column: 58, scope: !2256)
!6672 = !DILocation(line: 98, column: 9, scope: !2263)
!6673 = !DILocation(line: 98, column: 9, scope: !2256)
!6674 = !DILocation(line: 101, column: 28, scope: !2262)
!6675 = !DILocation(line: 101, column: 21, scope: !2262)
!6676 = !DILocation(line: 102, column: 13, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !2262, file: !1697, line: 102, column: 13)
!6678 = !DILocation(line: 105, column: 13, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6677, file: !1697, line: 104, column: 16)
!6680 = !DILocation(line: 108, column: 1, scope: !2256)
!6681 = !DILocation(line: 117, column: 35, scope: !2264)
!6682 = !DILocation(line: 117, column: 46, scope: !2264)
!6683 = !DILocation(line: 117, column: 65, scope: !2264)
!6684 = !DILocation(line: 120, column: 11, scope: !2264)
!6685 = !DILocation(line: 118, column: 9, scope: !2264)
!6686 = !DILocation(line: 121, column: 13, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !2264, file: !1697, line: 121, column: 9)
!6688 = !DILocation(line: 125, column: 9, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !2264, file: !1697, line: 125, column: 9)
!6690 = !DILocation(line: 121, column: 9, scope: !2264)
!6691 = !DILocation(line: 126, column: 15, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6689, file: !1697, line: 125, column: 24)
!6693 = !DILocation(line: 127, column: 42, scope: !6692)
!6694 = !DILocation(line: 127, column: 9, scope: !6692)
!6695 = !DILocation(line: 128, column: 5, scope: !6692)
!6696 = !DILocation(line: 130, column: 1, scope: !2264)
!6697 = !DILocation(line: 245, column: 24, scope: !2282)
!6698 = !DILocation(line: 245, column: 47, scope: !2282)
!6699 = !DILocation(line: 245, column: 64, scope: !2282)
!6700 = !DILocation(line: 254, column: 61, scope: !2282)
!6701 = !DILocation(line: 254, column: 17, scope: !2282)
!6702 = !DILocation(line: 254, column: 35, scope: !2282)
!6703 = !{!6642, !2679, i64 4}
!6704 = !DILocation(line: 255, column: 39, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 255, column: 9)
!6706 = !DILocation(line: 255, column: 9, scope: !2282)
!6707 = !DILocation(line: 256, column: 9, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6705, file: !1697, line: 255, column: 48)
!6709 = !DILocation(line: 257, column: 9, scope: !6708)
!6710 = !DILocation(line: 259, column: 61, scope: !2282)
!6711 = !DILocation(line: 259, column: 17, scope: !2282)
!6712 = !DILocation(line: 259, column: 35, scope: !2282)
!6713 = !{!6642, !2679, i64 8}
!6714 = !DILocation(line: 260, column: 39, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 260, column: 9)
!6716 = !DILocation(line: 260, column: 9, scope: !2282)
!6717 = !DILocation(line: 261, column: 9, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6715, file: !1697, line: 260, column: 48)
!6719 = !DILocation(line: 262, column: 9, scope: !6718)
!6720 = !DILocation(line: 264, column: 67, scope: !2282)
!6721 = !DILocation(line: 264, column: 17, scope: !2282)
!6722 = !DILocation(line: 264, column: 38, scope: !2282)
!6723 = !{!6642, !2679, i64 12}
!6724 = !DILocation(line: 265, column: 42, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 265, column: 9)
!6726 = !DILocation(line: 265, column: 9, scope: !2282)
!6727 = !DILocation(line: 266, column: 9, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6725, file: !1697, line: 265, column: 51)
!6729 = !DILocation(line: 267, column: 9, scope: !6728)
!6730 = !DILocation(line: 269, column: 69, scope: !2282)
!6731 = !DILocation(line: 269, column: 17, scope: !2282)
!6732 = !DILocation(line: 269, column: 39, scope: !2282)
!6733 = !{!6642, !2679, i64 16}
!6734 = !DILocation(line: 270, column: 43, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 270, column: 9)
!6736 = !DILocation(line: 270, column: 9, scope: !2282)
!6737 = !DILocation(line: 271, column: 9, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6735, file: !1697, line: 270, column: 52)
!6739 = !DILocation(line: 272, column: 9, scope: !6738)
!6740 = !DILocation(line: 274, column: 51, scope: !2282)
!6741 = !DILocation(line: 274, column: 17, scope: !2282)
!6742 = !DILocation(line: 274, column: 30, scope: !2282)
!6743 = !DILocation(line: 275, column: 34, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 275, column: 9)
!6745 = !DILocation(line: 275, column: 9, scope: !2282)
!6746 = !DILocation(line: 276, column: 9, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6744, file: !1697, line: 275, column: 43)
!6748 = !DILocation(line: 277, column: 9, scope: !6747)
!6749 = !DILocation(line: 279, column: 53, scope: !2282)
!6750 = !DILocation(line: 279, column: 17, scope: !2282)
!6751 = !DILocation(line: 279, column: 31, scope: !2282)
!6752 = !{!6642, !2679, i64 24}
!6753 = !DILocation(line: 280, column: 35, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 280, column: 9)
!6755 = !DILocation(line: 280, column: 9, scope: !2282)
!6756 = !DILocation(line: 281, column: 9, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6754, file: !1697, line: 280, column: 44)
!6758 = !DILocation(line: 282, column: 9, scope: !6757)
!6759 = !DILocation(line: 284, column: 57, scope: !2282)
!6760 = !DILocation(line: 284, column: 17, scope: !2282)
!6761 = !DILocation(line: 284, column: 33, scope: !2282)
!6762 = !{!6642, !2679, i64 28}
!6763 = !DILocation(line: 285, column: 37, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 285, column: 9)
!6765 = !DILocation(line: 285, column: 9, scope: !2282)
!6766 = !DILocation(line: 286, column: 9, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6764, file: !1697, line: 285, column: 46)
!6768 = !DILocation(line: 287, column: 9, scope: !6767)
!6769 = !DILocation(line: 289, column: 53, scope: !2282)
!6770 = !DILocation(line: 289, column: 17, scope: !2282)
!6771 = !DILocation(line: 289, column: 31, scope: !2282)
!6772 = !DILocation(line: 290, column: 35, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 290, column: 9)
!6774 = !DILocation(line: 290, column: 9, scope: !2282)
!6775 = !DILocation(line: 291, column: 9, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6773, file: !1697, line: 290, column: 44)
!6777 = !DILocation(line: 292, column: 9, scope: !6776)
!6778 = !DILocation(line: 294, column: 41, scope: !2282)
!6779 = !DILocation(line: 294, column: 17, scope: !2282)
!6780 = !DILocation(line: 294, column: 25, scope: !2282)
!6781 = !{!6642, !2679, i64 36}
!6782 = !DILocation(line: 295, column: 29, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 295, column: 9)
!6784 = !DILocation(line: 295, column: 9, scope: !2282)
!6785 = !DILocation(line: 296, column: 9, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6783, file: !1697, line: 295, column: 38)
!6787 = !DILocation(line: 297, column: 9, scope: !6786)
!6788 = !DILocation(line: 299, column: 55, scope: !2282)
!6789 = !DILocation(line: 299, column: 17, scope: !2282)
!6790 = !DILocation(line: 299, column: 32, scope: !2282)
!6791 = !{!6642, !2679, i64 40}
!6792 = !DILocation(line: 300, column: 36, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 300, column: 9)
!6794 = !DILocation(line: 300, column: 9, scope: !2282)
!6795 = !DILocation(line: 301, column: 9, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6793, file: !1697, line: 300, column: 45)
!6797 = !DILocation(line: 302, column: 9, scope: !6796)
!6798 = !DILocation(line: 304, column: 61, scope: !2282)
!6799 = !DILocation(line: 304, column: 17, scope: !2282)
!6800 = !DILocation(line: 304, column: 35, scope: !2282)
!6801 = !{!6642, !2679, i64 44}
!6802 = !DILocation(line: 305, column: 39, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 305, column: 9)
!6804 = !DILocation(line: 305, column: 9, scope: !2282)
!6805 = !DILocation(line: 306, column: 9, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6803, file: !1697, line: 305, column: 48)
!6807 = !DILocation(line: 307, column: 9, scope: !6806)
!6808 = !DILocation(line: 309, column: 63, scope: !2282)
!6809 = !DILocation(line: 309, column: 17, scope: !2282)
!6810 = !DILocation(line: 309, column: 36, scope: !2282)
!6811 = !{!6642, !2679, i64 48}
!6812 = !DILocation(line: 310, column: 40, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 310, column: 9)
!6814 = !DILocation(line: 310, column: 9, scope: !2282)
!6815 = !DILocation(line: 311, column: 9, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6813, file: !1697, line: 310, column: 49)
!6817 = !DILocation(line: 312, column: 9, scope: !6816)
!6818 = !DILocation(line: 314, column: 63, scope: !2282)
!6819 = !DILocation(line: 314, column: 17, scope: !2282)
!6820 = !DILocation(line: 314, column: 36, scope: !2282)
!6821 = !{!6642, !2679, i64 52}
!6822 = !DILocation(line: 315, column: 40, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 315, column: 9)
!6824 = !DILocation(line: 315, column: 9, scope: !2282)
!6825 = !DILocation(line: 316, column: 9, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6823, file: !1697, line: 315, column: 49)
!6827 = !DILocation(line: 317, column: 9, scope: !6826)
!6828 = !DILocation(line: 319, column: 65, scope: !2282)
!6829 = !DILocation(line: 319, column: 17, scope: !2282)
!6830 = !DILocation(line: 319, column: 37, scope: !2282)
!6831 = !{!6642, !2679, i64 56}
!6832 = !DILocation(line: 320, column: 41, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 320, column: 9)
!6834 = !DILocation(line: 320, column: 9, scope: !2282)
!6835 = !DILocation(line: 321, column: 9, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6833, file: !1697, line: 320, column: 50)
!6837 = !DILocation(line: 322, column: 9, scope: !6836)
!6838 = !DILocation(line: 324, column: 69, scope: !2282)
!6839 = !DILocation(line: 324, column: 17, scope: !2282)
!6840 = !DILocation(line: 324, column: 39, scope: !2282)
!6841 = !{!6642, !2679, i64 60}
!6842 = !DILocation(line: 325, column: 43, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 325, column: 9)
!6844 = !DILocation(line: 325, column: 9, scope: !2282)
!6845 = !DILocation(line: 326, column: 9, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6843, file: !1697, line: 325, column: 52)
!6847 = !DILocation(line: 327, column: 9, scope: !6846)
!6848 = !DILocation(line: 329, column: 47, scope: !2282)
!6849 = !DILocation(line: 329, column: 17, scope: !2282)
!6850 = !DILocation(line: 329, column: 28, scope: !2282)
!6851 = !{!6642, !2679, i64 64}
!6852 = !DILocation(line: 330, column: 32, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 330, column: 9)
!6854 = !DILocation(line: 330, column: 9, scope: !2282)
!6855 = !DILocation(line: 331, column: 9, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6853, file: !1697, line: 330, column: 41)
!6857 = !DILocation(line: 332, column: 9, scope: !6856)
!6858 = !DILocation(line: 334, column: 69, scope: !2282)
!6859 = !DILocation(line: 334, column: 17, scope: !2282)
!6860 = !DILocation(line: 334, column: 39, scope: !2282)
!6861 = !{!6642, !2679, i64 68}
!6862 = !DILocation(line: 335, column: 43, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 335, column: 9)
!6864 = !DILocation(line: 335, column: 9, scope: !2282)
!6865 = !DILocation(line: 336, column: 9, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6863, file: !1697, line: 335, column: 52)
!6867 = !DILocation(line: 337, column: 9, scope: !6866)
!6868 = !DILocation(line: 339, column: 79, scope: !2282)
!6869 = !DILocation(line: 339, column: 17, scope: !2282)
!6870 = !DILocation(line: 339, column: 44, scope: !2282)
!6871 = !{!6642, !2679, i64 72}
!6872 = !DILocation(line: 340, column: 48, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 340, column: 9)
!6874 = !DILocation(line: 340, column: 9, scope: !2282)
!6875 = !DILocation(line: 341, column: 9, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6873, file: !1697, line: 340, column: 57)
!6877 = !DILocation(line: 342, column: 9, scope: !6876)
!6878 = !DILocation(line: 344, column: 87, scope: !2282)
!6879 = !DILocation(line: 344, column: 17, scope: !2282)
!6880 = !DILocation(line: 344, column: 48, scope: !2282)
!6881 = !{!6642, !2679, i64 76}
!6882 = !DILocation(line: 345, column: 52, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 345, column: 9)
!6884 = !DILocation(line: 345, column: 9, scope: !2282)
!6885 = !DILocation(line: 346, column: 9, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6883, file: !1697, line: 345, column: 61)
!6887 = !DILocation(line: 347, column: 9, scope: !6886)
!6888 = !DILocation(line: 349, column: 67, scope: !2282)
!6889 = !DILocation(line: 349, column: 17, scope: !2282)
!6890 = !DILocation(line: 349, column: 38, scope: !2282)
!6891 = !{!6642, !2679, i64 80}
!6892 = !DILocation(line: 350, column: 42, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 350, column: 9)
!6894 = !DILocation(line: 350, column: 9, scope: !2282)
!6895 = !DILocation(line: 351, column: 9, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6893, file: !1697, line: 350, column: 51)
!6897 = !DILocation(line: 352, column: 9, scope: !6896)
!6898 = !DILocation(line: 354, column: 67, scope: !2282)
!6899 = !DILocation(line: 354, column: 17, scope: !2282)
!6900 = !DILocation(line: 354, column: 38, scope: !2282)
!6901 = !{!6642, !2679, i64 84}
!6902 = !DILocation(line: 355, column: 42, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 355, column: 9)
!6904 = !DILocation(line: 355, column: 9, scope: !2282)
!6905 = !DILocation(line: 356, column: 9, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6903, file: !1697, line: 355, column: 51)
!6907 = !DILocation(line: 357, column: 9, scope: !6906)
!6908 = !DILocation(line: 359, column: 53, scope: !2282)
!6909 = !DILocation(line: 359, column: 17, scope: !2282)
!6910 = !DILocation(line: 359, column: 31, scope: !2282)
!6911 = !{!6642, !2679, i64 104}
!6912 = !DILocation(line: 360, column: 35, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 360, column: 9)
!6914 = !DILocation(line: 360, column: 9, scope: !2282)
!6915 = !DILocation(line: 361, column: 9, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6913, file: !1697, line: 360, column: 44)
!6917 = !DILocation(line: 362, column: 9, scope: !6916)
!6918 = !DILocation(line: 364, column: 49, scope: !2282)
!6919 = !DILocation(line: 364, column: 17, scope: !2282)
!6920 = !DILocation(line: 364, column: 29, scope: !2282)
!6921 = !{!6642, !2679, i64 108}
!6922 = !DILocation(line: 365, column: 33, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 365, column: 9)
!6924 = !DILocation(line: 365, column: 9, scope: !2282)
!6925 = !DILocation(line: 366, column: 9, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6923, file: !1697, line: 365, column: 42)
!6927 = !DILocation(line: 367, column: 9, scope: !6926)
!6928 = !DILocation(line: 369, column: 63, scope: !2282)
!6929 = !DILocation(line: 369, column: 17, scope: !2282)
!6930 = !DILocation(line: 369, column: 36, scope: !2282)
!6931 = !{!6642, !2679, i64 112}
!6932 = !DILocation(line: 370, column: 40, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 370, column: 9)
!6934 = !DILocation(line: 370, column: 9, scope: !2282)
!6935 = !DILocation(line: 371, column: 9, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6933, file: !1697, line: 370, column: 49)
!6937 = !DILocation(line: 372, column: 9, scope: !6936)
!6938 = !DILocation(line: 374, column: 47, scope: !2282)
!6939 = !DILocation(line: 374, column: 17, scope: !2282)
!6940 = !DILocation(line: 374, column: 28, scope: !2282)
!6941 = !{!6642, !2679, i64 116}
!6942 = !DILocation(line: 375, column: 32, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 375, column: 9)
!6944 = !DILocation(line: 375, column: 9, scope: !2282)
!6945 = !DILocation(line: 376, column: 9, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6943, file: !1697, line: 375, column: 41)
!6947 = !DILocation(line: 377, column: 9, scope: !6946)
!6948 = !DILocation(line: 379, column: 47, scope: !2282)
!6949 = !DILocation(line: 379, column: 17, scope: !2282)
!6950 = !DILocation(line: 379, column: 28, scope: !2282)
!6951 = !{!6642, !2679, i64 120}
!6952 = !DILocation(line: 380, column: 32, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 380, column: 9)
!6954 = !DILocation(line: 380, column: 9, scope: !2282)
!6955 = !DILocation(line: 381, column: 9, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6953, file: !1697, line: 380, column: 41)
!6957 = !DILocation(line: 382, column: 9, scope: !6956)
!6958 = !DILocation(line: 384, column: 53, scope: !2282)
!6959 = !DILocation(line: 384, column: 17, scope: !2282)
!6960 = !DILocation(line: 384, column: 31, scope: !2282)
!6961 = !{!6642, !2679, i64 124}
!6962 = !DILocation(line: 385, column: 35, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 385, column: 9)
!6964 = !DILocation(line: 385, column: 9, scope: !2282)
!6965 = !DILocation(line: 386, column: 9, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6963, file: !1697, line: 385, column: 44)
!6967 = !DILocation(line: 387, column: 9, scope: !6966)
!6968 = !DILocation(line: 389, column: 55, scope: !2282)
!6969 = !DILocation(line: 389, column: 17, scope: !2282)
!6970 = !DILocation(line: 389, column: 32, scope: !2282)
!6971 = !{!6642, !2679, i64 128}
!6972 = !DILocation(line: 390, column: 36, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 390, column: 9)
!6974 = !DILocation(line: 390, column: 9, scope: !2282)
!6975 = !DILocation(line: 391, column: 9, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6973, file: !1697, line: 390, column: 45)
!6977 = !DILocation(line: 392, column: 9, scope: !6976)
!6978 = !DILocation(line: 394, column: 71, scope: !2282)
!6979 = !DILocation(line: 394, column: 17, scope: !2282)
!6980 = !DILocation(line: 394, column: 40, scope: !2282)
!6981 = !{!6642, !2679, i64 132}
!6982 = !DILocation(line: 395, column: 44, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 395, column: 9)
!6984 = !DILocation(line: 395, column: 9, scope: !2282)
!6985 = !DILocation(line: 396, column: 9, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6983, file: !1697, line: 395, column: 53)
!6987 = !DILocation(line: 397, column: 9, scope: !6986)
!6988 = !DILocation(line: 399, column: 59, scope: !2282)
!6989 = !DILocation(line: 399, column: 17, scope: !2282)
!6990 = !DILocation(line: 399, column: 34, scope: !2282)
!6991 = !{!6642, !2679, i64 136}
!6992 = !DILocation(line: 400, column: 38, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 400, column: 9)
!6994 = !DILocation(line: 400, column: 9, scope: !2282)
!6995 = !DILocation(line: 401, column: 9, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6993, file: !1697, line: 400, column: 47)
!6997 = !DILocation(line: 402, column: 9, scope: !6996)
!6998 = !DILocation(line: 404, column: 73, scope: !2282)
!6999 = !DILocation(line: 404, column: 17, scope: !2282)
!7000 = !DILocation(line: 404, column: 41, scope: !2282)
!7001 = !{!6642, !2679, i64 140}
!7002 = !DILocation(line: 405, column: 45, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 405, column: 9)
!7004 = !DILocation(line: 405, column: 9, scope: !2282)
!7005 = !DILocation(line: 406, column: 9, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !7003, file: !1697, line: 405, column: 54)
!7007 = !DILocation(line: 407, column: 9, scope: !7006)
!7008 = !DILocation(line: 409, column: 59, scope: !2282)
!7009 = !DILocation(line: 409, column: 17, scope: !2282)
!7010 = !DILocation(line: 409, column: 34, scope: !2282)
!7011 = !{!6642, !2679, i64 148}
!7012 = !DILocation(line: 410, column: 38, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 410, column: 9)
!7014 = !DILocation(line: 410, column: 9, scope: !2282)
!7015 = !DILocation(line: 411, column: 9, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7013, file: !1697, line: 410, column: 47)
!7017 = !DILocation(line: 412, column: 9, scope: !7016)
!7018 = !DILocation(line: 414, column: 59, scope: !2282)
!7019 = !DILocation(line: 414, column: 17, scope: !2282)
!7020 = !DILocation(line: 414, column: 34, scope: !2282)
!7021 = !{!6642, !2679, i64 152}
!7022 = !DILocation(line: 415, column: 38, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 415, column: 9)
!7024 = !DILocation(line: 415, column: 9, scope: !2282)
!7025 = !DILocation(line: 416, column: 9, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7023, file: !1697, line: 415, column: 47)
!7027 = !DILocation(line: 417, column: 9, scope: !7026)
!7028 = !DILocation(line: 419, column: 77, scope: !2282)
!7029 = !DILocation(line: 419, column: 17, scope: !2282)
!7030 = !DILocation(line: 419, column: 43, scope: !2282)
!7031 = !{!6642, !2679, i64 156}
!7032 = !DILocation(line: 420, column: 47, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 420, column: 9)
!7034 = !DILocation(line: 420, column: 9, scope: !2282)
!7035 = !DILocation(line: 421, column: 9, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7033, file: !1697, line: 420, column: 56)
!7037 = !DILocation(line: 422, column: 9, scope: !7036)
!7038 = !DILocation(line: 424, column: 55, scope: !2282)
!7039 = !DILocation(line: 424, column: 17, scope: !2282)
!7040 = !DILocation(line: 424, column: 32, scope: !2282)
!7041 = !{!6642, !2679, i64 160}
!7042 = !DILocation(line: 425, column: 36, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 425, column: 9)
!7044 = !DILocation(line: 425, column: 9, scope: !2282)
!7045 = !DILocation(line: 426, column: 9, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7043, file: !1697, line: 425, column: 45)
!7047 = !DILocation(line: 427, column: 9, scope: !7046)
!7048 = !DILocation(line: 429, column: 59, scope: !2282)
!7049 = !DILocation(line: 429, column: 17, scope: !2282)
!7050 = !DILocation(line: 429, column: 34, scope: !2282)
!7051 = !{!6642, !2679, i64 164}
!7052 = !DILocation(line: 430, column: 38, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 430, column: 9)
!7054 = !DILocation(line: 430, column: 9, scope: !2282)
!7055 = !DILocation(line: 431, column: 9, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7053, file: !1697, line: 430, column: 47)
!7057 = !DILocation(line: 432, column: 9, scope: !7056)
!7058 = !DILocation(line: 434, column: 59, scope: !2282)
!7059 = !DILocation(line: 434, column: 17, scope: !2282)
!7060 = !DILocation(line: 434, column: 34, scope: !2282)
!7061 = !{!6642, !2679, i64 172}
!7062 = !DILocation(line: 435, column: 38, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 435, column: 9)
!7064 = !DILocation(line: 435, column: 9, scope: !2282)
!7065 = !DILocation(line: 436, column: 9, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7063, file: !1697, line: 435, column: 47)
!7067 = !DILocation(line: 437, column: 9, scope: !7066)
!7068 = !DILocation(line: 439, column: 61, scope: !2282)
!7069 = !DILocation(line: 439, column: 17, scope: !2282)
!7070 = !DILocation(line: 439, column: 35, scope: !2282)
!7071 = !{!6642, !2679, i64 180}
!7072 = !DILocation(line: 440, column: 39, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 440, column: 9)
!7074 = !DILocation(line: 440, column: 9, scope: !2282)
!7075 = !DILocation(line: 441, column: 9, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7073, file: !1697, line: 440, column: 48)
!7077 = !DILocation(line: 442, column: 9, scope: !7076)
!7078 = !DILocation(line: 444, column: 63, scope: !2282)
!7079 = !DILocation(line: 444, column: 17, scope: !2282)
!7080 = !DILocation(line: 444, column: 36, scope: !2282)
!7081 = !{!6642, !2679, i64 184}
!7082 = !DILocation(line: 445, column: 40, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 445, column: 9)
!7084 = !DILocation(line: 445, column: 9, scope: !2282)
!7085 = !DILocation(line: 446, column: 9, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7083, file: !1697, line: 445, column: 49)
!7087 = !DILocation(line: 447, column: 9, scope: !7086)
!7088 = !DILocation(line: 449, column: 69, scope: !2282)
!7089 = !DILocation(line: 449, column: 17, scope: !2282)
!7090 = !DILocation(line: 449, column: 39, scope: !2282)
!7091 = !{!6642, !2679, i64 188}
!7092 = !DILocation(line: 450, column: 43, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 450, column: 9)
!7094 = !DILocation(line: 450, column: 9, scope: !2282)
!7095 = !DILocation(line: 451, column: 9, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7093, file: !1697, line: 450, column: 52)
!7097 = !DILocation(line: 452, column: 9, scope: !7096)
!7098 = !DILocation(line: 454, column: 69, scope: !2282)
!7099 = !DILocation(line: 454, column: 17, scope: !2282)
!7100 = !DILocation(line: 454, column: 39, scope: !2282)
!7101 = !{!6642, !2679, i64 192}
!7102 = !DILocation(line: 455, column: 43, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 455, column: 9)
!7104 = !DILocation(line: 455, column: 9, scope: !2282)
!7105 = !DILocation(line: 456, column: 9, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7103, file: !1697, line: 455, column: 52)
!7107 = !DILocation(line: 457, column: 9, scope: !7106)
!7108 = !DILocation(line: 459, column: 53, scope: !2282)
!7109 = !DILocation(line: 459, column: 17, scope: !2282)
!7110 = !DILocation(line: 459, column: 31, scope: !2282)
!7111 = !{!6642, !2679, i64 196}
!7112 = !DILocation(line: 460, column: 35, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 460, column: 9)
!7114 = !DILocation(line: 460, column: 9, scope: !2282)
!7115 = !DILocation(line: 461, column: 9, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7113, file: !1697, line: 460, column: 44)
!7117 = !DILocation(line: 462, column: 9, scope: !7116)
!7118 = !DILocation(line: 464, column: 67, scope: !2282)
!7119 = !DILocation(line: 464, column: 17, scope: !2282)
!7120 = !DILocation(line: 464, column: 38, scope: !2282)
!7121 = !{!6642, !2679, i64 200}
!7122 = !DILocation(line: 465, column: 42, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 465, column: 9)
!7124 = !DILocation(line: 465, column: 9, scope: !2282)
!7125 = !DILocation(line: 466, column: 9, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7123, file: !1697, line: 465, column: 51)
!7127 = !DILocation(line: 467, column: 9, scope: !7126)
!7128 = !DILocation(line: 469, column: 61, scope: !2282)
!7129 = !DILocation(line: 469, column: 17, scope: !2282)
!7130 = !DILocation(line: 469, column: 35, scope: !2282)
!7131 = !{!6642, !2679, i64 204}
!7132 = !DILocation(line: 470, column: 39, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 470, column: 9)
!7134 = !DILocation(line: 470, column: 9, scope: !2282)
!7135 = !DILocation(line: 471, column: 9, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7133, file: !1697, line: 470, column: 48)
!7137 = !DILocation(line: 472, column: 9, scope: !7136)
!7138 = !DILocation(line: 474, column: 51, scope: !2282)
!7139 = !DILocation(line: 474, column: 17, scope: !2282)
!7140 = !DILocation(line: 474, column: 30, scope: !2282)
!7141 = !{!6642, !2679, i64 208}
!7142 = !DILocation(line: 475, column: 34, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 475, column: 9)
!7144 = !DILocation(line: 475, column: 9, scope: !2282)
!7145 = !DILocation(line: 476, column: 9, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7143, file: !1697, line: 475, column: 43)
!7147 = !DILocation(line: 477, column: 9, scope: !7146)
!7148 = !DILocation(line: 479, column: 53, scope: !2282)
!7149 = !DILocation(line: 479, column: 17, scope: !2282)
!7150 = !DILocation(line: 479, column: 31, scope: !2282)
!7151 = !{!6642, !2679, i64 212}
!7152 = !DILocation(line: 480, column: 35, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 480, column: 9)
!7154 = !DILocation(line: 480, column: 9, scope: !2282)
!7155 = !DILocation(line: 481, column: 9, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7153, file: !1697, line: 480, column: 44)
!7157 = !DILocation(line: 482, column: 9, scope: !7156)
!7158 = !DILocation(line: 484, column: 53, scope: !2282)
!7159 = !DILocation(line: 484, column: 17, scope: !2282)
!7160 = !DILocation(line: 484, column: 31, scope: !2282)
!7161 = !{!6642, !2679, i64 216}
!7162 = !DILocation(line: 485, column: 35, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 485, column: 9)
!7164 = !DILocation(line: 485, column: 9, scope: !2282)
!7165 = !DILocation(line: 486, column: 9, scope: !7166)
!7166 = distinct !DILexicalBlock(scope: !7163, file: !1697, line: 485, column: 44)
!7167 = !DILocation(line: 487, column: 9, scope: !7166)
!7168 = !DILocation(line: 489, column: 53, scope: !2282)
!7169 = !DILocation(line: 489, column: 17, scope: !2282)
!7170 = !DILocation(line: 489, column: 31, scope: !2282)
!7171 = !{!6642, !2679, i64 220}
!7172 = !DILocation(line: 490, column: 35, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 490, column: 9)
!7174 = !DILocation(line: 490, column: 9, scope: !2282)
!7175 = !DILocation(line: 491, column: 9, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7173, file: !1697, line: 490, column: 44)
!7177 = !DILocation(line: 492, column: 9, scope: !7176)
!7178 = !DILocation(line: 494, column: 57, scope: !2282)
!7179 = !DILocation(line: 494, column: 17, scope: !2282)
!7180 = !DILocation(line: 494, column: 33, scope: !2282)
!7181 = !{!6642, !2679, i64 224}
!7182 = !DILocation(line: 495, column: 37, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 495, column: 9)
!7184 = !DILocation(line: 495, column: 9, scope: !2282)
!7185 = !DILocation(line: 496, column: 9, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7183, file: !1697, line: 495, column: 46)
!7187 = !DILocation(line: 497, column: 9, scope: !7186)
!7188 = !DILocation(line: 499, column: 53, scope: !2282)
!7189 = !DILocation(line: 499, column: 17, scope: !2282)
!7190 = !DILocation(line: 499, column: 31, scope: !2282)
!7191 = !{!6642, !2679, i64 228}
!7192 = !DILocation(line: 500, column: 35, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 500, column: 9)
!7194 = !DILocation(line: 500, column: 9, scope: !2282)
!7195 = !DILocation(line: 501, column: 9, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7193, file: !1697, line: 500, column: 44)
!7197 = !DILocation(line: 502, column: 9, scope: !7196)
!7198 = !DILocation(line: 504, column: 53, scope: !2282)
!7199 = !DILocation(line: 504, column: 17, scope: !2282)
!7200 = !DILocation(line: 504, column: 31, scope: !2282)
!7201 = !{!6642, !2679, i64 232}
!7202 = !DILocation(line: 505, column: 35, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 505, column: 9)
!7204 = !DILocation(line: 505, column: 9, scope: !2282)
!7205 = !DILocation(line: 506, column: 9, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7203, file: !1697, line: 505, column: 44)
!7207 = !DILocation(line: 507, column: 9, scope: !7206)
!7208 = !DILocation(line: 509, column: 53, scope: !2282)
!7209 = !DILocation(line: 509, column: 17, scope: !2282)
!7210 = !DILocation(line: 509, column: 31, scope: !2282)
!7211 = !{!6642, !2679, i64 236}
!7212 = !DILocation(line: 510, column: 35, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 510, column: 9)
!7214 = !DILocation(line: 510, column: 9, scope: !2282)
!7215 = !DILocation(line: 511, column: 9, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7213, file: !1697, line: 510, column: 44)
!7217 = !DILocation(line: 512, column: 9, scope: !7216)
!7218 = !DILocation(line: 514, column: 53, scope: !2282)
!7219 = !DILocation(line: 514, column: 17, scope: !2282)
!7220 = !DILocation(line: 514, column: 31, scope: !2282)
!7221 = !{!6642, !2679, i64 240}
!7222 = !DILocation(line: 515, column: 35, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 515, column: 9)
!7224 = !DILocation(line: 515, column: 9, scope: !2282)
!7225 = !DILocation(line: 516, column: 9, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7223, file: !1697, line: 515, column: 44)
!7227 = !DILocation(line: 517, column: 9, scope: !7226)
!7228 = !DILocation(line: 519, column: 53, scope: !2282)
!7229 = !DILocation(line: 519, column: 17, scope: !2282)
!7230 = !DILocation(line: 519, column: 31, scope: !2282)
!7231 = !{!6642, !2679, i64 244}
!7232 = !DILocation(line: 520, column: 35, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 520, column: 9)
!7234 = !DILocation(line: 520, column: 9, scope: !2282)
!7235 = !DILocation(line: 521, column: 9, scope: !7236)
!7236 = distinct !DILexicalBlock(scope: !7233, file: !1697, line: 520, column: 44)
!7237 = !DILocation(line: 522, column: 9, scope: !7236)
!7238 = !DILocation(line: 524, column: 55, scope: !2282)
!7239 = !DILocation(line: 524, column: 17, scope: !2282)
!7240 = !DILocation(line: 524, column: 32, scope: !2282)
!7241 = !{!6642, !2679, i64 248}
!7242 = !DILocation(line: 525, column: 36, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 525, column: 9)
!7244 = !DILocation(line: 525, column: 9, scope: !2282)
!7245 = !DILocation(line: 526, column: 9, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7243, file: !1697, line: 525, column: 45)
!7247 = !DILocation(line: 527, column: 9, scope: !7246)
!7248 = !DILocation(line: 529, column: 53, scope: !2282)
!7249 = !DILocation(line: 529, column: 17, scope: !2282)
!7250 = !DILocation(line: 529, column: 31, scope: !2282)
!7251 = !{!6642, !2679, i64 252}
!7252 = !DILocation(line: 530, column: 35, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 530, column: 9)
!7254 = !DILocation(line: 530, column: 9, scope: !2282)
!7255 = !DILocation(line: 531, column: 9, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7253, file: !1697, line: 530, column: 44)
!7257 = !DILocation(line: 532, column: 9, scope: !7256)
!7258 = !DILocation(line: 534, column: 69, scope: !2282)
!7259 = !DILocation(line: 534, column: 17, scope: !2282)
!7260 = !DILocation(line: 534, column: 39, scope: !2282)
!7261 = !{!6642, !2679, i64 256}
!7262 = !DILocation(line: 535, column: 43, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 535, column: 9)
!7264 = !DILocation(line: 535, column: 9, scope: !2282)
!7265 = !DILocation(line: 536, column: 9, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7263, file: !1697, line: 535, column: 52)
!7267 = !DILocation(line: 537, column: 9, scope: !7266)
!7268 = !DILocation(line: 539, column: 67, scope: !2282)
!7269 = !DILocation(line: 539, column: 17, scope: !2282)
!7270 = !DILocation(line: 539, column: 38, scope: !2282)
!7271 = !{!6642, !2679, i64 260}
!7272 = !DILocation(line: 540, column: 42, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 540, column: 9)
!7274 = !DILocation(line: 540, column: 9, scope: !2282)
!7275 = !DILocation(line: 541, column: 9, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7273, file: !1697, line: 540, column: 51)
!7277 = !DILocation(line: 542, column: 9, scope: !7276)
!7278 = !DILocation(line: 544, column: 65, scope: !2282)
!7279 = !DILocation(line: 544, column: 17, scope: !2282)
!7280 = !DILocation(line: 544, column: 37, scope: !2282)
!7281 = !{!6642, !2679, i64 268}
!7282 = !DILocation(line: 545, column: 41, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 545, column: 9)
!7284 = !DILocation(line: 545, column: 9, scope: !2282)
!7285 = !DILocation(line: 546, column: 9, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7283, file: !1697, line: 545, column: 50)
!7287 = !DILocation(line: 547, column: 9, scope: !7286)
!7288 = !DILocation(line: 549, column: 61, scope: !2282)
!7289 = !DILocation(line: 549, column: 17, scope: !2282)
!7290 = !DILocation(line: 549, column: 35, scope: !2282)
!7291 = !{!6642, !2679, i64 272}
!7292 = !DILocation(line: 550, column: 39, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 550, column: 9)
!7294 = !DILocation(line: 550, column: 9, scope: !2282)
!7295 = !DILocation(line: 551, column: 9, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7293, file: !1697, line: 550, column: 48)
!7297 = !DILocation(line: 552, column: 9, scope: !7296)
!7298 = !DILocation(line: 554, column: 67, scope: !2282)
!7299 = !DILocation(line: 554, column: 17, scope: !2282)
!7300 = !DILocation(line: 554, column: 38, scope: !2282)
!7301 = !{!6642, !2679, i64 280}
!7302 = !DILocation(line: 555, column: 42, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 555, column: 9)
!7304 = !DILocation(line: 555, column: 9, scope: !2282)
!7305 = !DILocation(line: 556, column: 9, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7303, file: !1697, line: 555, column: 51)
!7307 = !DILocation(line: 557, column: 9, scope: !7306)
!7308 = !DILocation(line: 559, column: 65, scope: !2282)
!7309 = !DILocation(line: 559, column: 17, scope: !2282)
!7310 = !DILocation(line: 559, column: 37, scope: !2282)
!7311 = !{!6642, !2679, i64 284}
!7312 = !DILocation(line: 560, column: 41, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 560, column: 9)
!7314 = !DILocation(line: 560, column: 9, scope: !2282)
!7315 = !DILocation(line: 561, column: 9, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7313, file: !1697, line: 560, column: 50)
!7317 = !DILocation(line: 562, column: 9, scope: !7316)
!7318 = !DILocation(line: 564, column: 63, scope: !2282)
!7319 = !DILocation(line: 564, column: 17, scope: !2282)
!7320 = !DILocation(line: 564, column: 36, scope: !2282)
!7321 = !{!6642, !2679, i64 288}
!7322 = !DILocation(line: 565, column: 40, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 565, column: 9)
!7324 = !DILocation(line: 565, column: 9, scope: !2282)
!7325 = !DILocation(line: 566, column: 9, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7323, file: !1697, line: 565, column: 49)
!7327 = !DILocation(line: 567, column: 9, scope: !7326)
!7328 = !DILocation(line: 569, column: 59, scope: !2282)
!7329 = !DILocation(line: 569, column: 17, scope: !2282)
!7330 = !DILocation(line: 569, column: 34, scope: !2282)
!7331 = !{!6642, !2679, i64 292}
!7332 = !DILocation(line: 570, column: 38, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 570, column: 9)
!7334 = !DILocation(line: 570, column: 9, scope: !2282)
!7335 = !DILocation(line: 571, column: 9, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7333, file: !1697, line: 570, column: 47)
!7337 = !DILocation(line: 572, column: 9, scope: !7336)
!7338 = !DILocation(line: 574, column: 65, scope: !2282)
!7339 = !DILocation(line: 574, column: 17, scope: !2282)
!7340 = !DILocation(line: 574, column: 37, scope: !2282)
!7341 = !{!6642, !2679, i64 296}
!7342 = !DILocation(line: 575, column: 41, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 575, column: 9)
!7344 = !DILocation(line: 575, column: 9, scope: !2282)
!7345 = !DILocation(line: 576, column: 9, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7343, file: !1697, line: 575, column: 50)
!7347 = !DILocation(line: 577, column: 9, scope: !7346)
!7348 = !DILocation(line: 580, column: 20, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 580, column: 9)
!7350 = !DILocation(line: 580, column: 9, scope: !2282)
!7351 = !DILocation(line: 581, column: 71, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7349, file: !1697, line: 580, column: 27)
!7353 = !DILocation(line: 581, column: 21, scope: !7352)
!7354 = !DILocation(line: 581, column: 42, scope: !7352)
!7355 = !{!6642, !2679, i64 300}
!7356 = !DILocation(line: 582, column: 46, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7352, file: !1697, line: 582, column: 13)
!7358 = !DILocation(line: 582, column: 13, scope: !7352)
!7359 = !DILocation(line: 583, column: 13, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7357, file: !1697, line: 582, column: 55)
!7361 = !DILocation(line: 584, column: 13, scope: !7360)
!7362 = !DILocation(line: 588, column: 20, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 588, column: 9)
!7364 = !DILocation(line: 588, column: 9, scope: !2282)
!7365 = !DILocation(line: 590, column: 71, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7363, file: !1697, line: 588, column: 27)
!7367 = !DILocation(line: 590, column: 21, scope: !7366)
!7368 = !DILocation(line: 590, column: 42, scope: !7366)
!7369 = !{!6642, !2679, i64 264}
!7370 = !DILocation(line: 591, column: 46, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7366, file: !1697, line: 591, column: 13)
!7372 = !DILocation(line: 591, column: 13, scope: !7366)
!7373 = !DILocation(line: 592, column: 13, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7371, file: !1697, line: 591, column: 55)
!7375 = !DILocation(line: 593, column: 13, scope: !7374)
!7376 = !DILocation(line: 595, column: 57, scope: !7366)
!7377 = !DILocation(line: 595, column: 21, scope: !7366)
!7378 = !DILocation(line: 595, column: 35, scope: !7366)
!7379 = !{!6642, !2679, i64 88}
!7380 = !DILocation(line: 596, column: 39, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7366, file: !1697, line: 596, column: 13)
!7382 = !DILocation(line: 596, column: 13, scope: !7366)
!7383 = !DILocation(line: 597, column: 13, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7381, file: !1697, line: 596, column: 48)
!7385 = !DILocation(line: 598, column: 13, scope: !7384)
!7386 = !DILocation(line: 600, column: 69, scope: !7366)
!7387 = !DILocation(line: 600, column: 21, scope: !7366)
!7388 = !DILocation(line: 600, column: 41, scope: !7366)
!7389 = !{!6642, !2679, i64 92}
!7390 = !DILocation(line: 601, column: 45, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7366, file: !1697, line: 601, column: 13)
!7392 = !DILocation(line: 601, column: 13, scope: !7366)
!7393 = !DILocation(line: 602, column: 13, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7391, file: !1697, line: 601, column: 54)
!7395 = !DILocation(line: 603, column: 13, scope: !7394)
!7396 = !DILocation(line: 605, column: 57, scope: !7366)
!7397 = !DILocation(line: 605, column: 21, scope: !7366)
!7398 = !DILocation(line: 605, column: 35, scope: !7366)
!7399 = !{!6642, !2679, i64 96}
!7400 = !DILocation(line: 606, column: 39, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7366, file: !1697, line: 606, column: 13)
!7402 = !DILocation(line: 606, column: 13, scope: !7366)
!7403 = !DILocation(line: 607, column: 13, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7401, file: !1697, line: 606, column: 48)
!7405 = !DILocation(line: 608, column: 13, scope: !7404)
!7406 = !DILocation(line: 610, column: 63, scope: !7366)
!7407 = !DILocation(line: 610, column: 21, scope: !7366)
!7408 = !DILocation(line: 610, column: 38, scope: !7366)
!7409 = !{!6642, !2679, i64 100}
!7410 = !DILocation(line: 611, column: 42, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7366, file: !1697, line: 611, column: 13)
!7412 = !DILocation(line: 611, column: 13, scope: !7366)
!7413 = !DILocation(line: 612, column: 13, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7411, file: !1697, line: 611, column: 51)
!7415 = !DILocation(line: 613, column: 13, scope: !7414)
!7416 = !DILocation(line: 615, column: 67, scope: !7366)
!7417 = !DILocation(line: 615, column: 21, scope: !7366)
!7418 = !DILocation(line: 615, column: 40, scope: !7366)
!7419 = !{!6642, !2679, i64 276}
!7420 = !DILocation(line: 616, column: 44, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7366, file: !1697, line: 616, column: 13)
!7422 = !DILocation(line: 616, column: 13, scope: !7366)
!7423 = !DILocation(line: 617, column: 13, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7421, file: !1697, line: 616, column: 53)
!7425 = !DILocation(line: 618, column: 13, scope: !7424)
!7426 = !DILocation(line: 620, column: 73, scope: !7366)
!7427 = !DILocation(line: 620, column: 21, scope: !7366)
!7428 = !DILocation(line: 620, column: 43, scope: !7366)
!7429 = !{!6642, !2679, i64 144}
!7430 = !DILocation(line: 621, column: 47, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !7366, file: !1697, line: 621, column: 13)
!7432 = !DILocation(line: 621, column: 13, scope: !7366)
!7433 = !DILocation(line: 622, column: 13, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7431, file: !1697, line: 621, column: 56)
!7435 = !DILocation(line: 623, column: 13, scope: !7434)
!7436 = !DILocation(line: 625, column: 73, scope: !7366)
!7437 = !DILocation(line: 625, column: 21, scope: !7366)
!7438 = !DILocation(line: 625, column: 43, scope: !7366)
!7439 = !{!6642, !2679, i64 168}
!7440 = !DILocation(line: 626, column: 47, scope: !7441)
!7441 = distinct !DILexicalBlock(scope: !7366, file: !1697, line: 626, column: 13)
!7442 = !DILocation(line: 626, column: 13, scope: !7366)
!7443 = !DILocation(line: 627, column: 13, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7441, file: !1697, line: 626, column: 56)
!7445 = !DILocation(line: 628, column: 13, scope: !7444)
!7446 = !DILocation(line: 634, column: 20, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !2282, file: !1697, line: 634, column: 9)
!7448 = !DILocation(line: 634, column: 9, scope: !2282)
!7449 = !DILocation(line: 635, column: 63, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7447, file: !1697, line: 634, column: 27)
!7451 = !DILocation(line: 635, column: 21, scope: !7450)
!7452 = !DILocation(line: 635, column: 38, scope: !7450)
!7453 = !{!6642, !2679, i64 176}
!7454 = !DILocation(line: 636, column: 42, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7450, file: !1697, line: 636, column: 13)
!7456 = !DILocation(line: 636, column: 13, scope: !7450)
!7457 = !DILocation(line: 637, column: 13, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7455, file: !1697, line: 636, column: 51)
!7459 = !DILocation(line: 638, column: 9, scope: !7458)
!7460 = !DILocation(line: 641, column: 1, scope: !2282)
!7461 = !DILocation(line: 645, column: 55, scope: !2290)
!7462 = !DILocation(line: 645, column: 76, scope: !2290)
!7463 = !DILocation(line: 646, column: 51, scope: !2290)
!7464 = !DILocation(line: 646, column: 60, scope: !2290)
!7465 = !DILocation(line: 0, scope: !2443, inlinedAt: !7466)
!7466 = distinct !DILocation(line: 647, column: 5, scope: !2290)
!7467 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !7466)
!7468 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !7466)
!7469 = distinct !DILexicalBlock(scope: !2443, file: !11, line: 135, column: 44)
!7470 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !7466)
!7471 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !7466)
!7472 = !DILocation(line: 0, scope: !2497, inlinedAt: !7473)
!7473 = distinct !DILocation(line: 647, column: 25, scope: !2290)
!7474 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7473)
!7475 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7473)
!7476 = !DILocation(line: 0, scope: !2501, inlinedAt: !7477)
!7477 = distinct !DILocation(line: 648, column: 25, scope: !2290)
!7478 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !7477)
!7479 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !7477)
!7480 = !DILocation(line: 0, scope: !2497, inlinedAt: !7481)
!7481 = distinct !DILocation(line: 648, column: 41, scope: !2290)
!7482 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7481)
!7483 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7481)
!7484 = !DILocation(line: 648, column: 63, scope: !2290)
!7485 = !DILocation(line: 0, scope: !2501, inlinedAt: !7486)
!7486 = distinct !DILocation(line: 648, column: 60, scope: !2290)
!7487 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !7486)
!7488 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !7486)
!7489 = !DILocation(line: 0, scope: !2497, inlinedAt: !7490)
!7490 = distinct !DILocation(line: 649, column: 25, scope: !2290)
!7491 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7490)
!7492 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7490)
!7493 = !DILocation(line: 0, scope: !2501, inlinedAt: !7494)
!7494 = distinct !DILocation(line: 649, column: 42, scope: !2290)
!7495 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !7494)
!7496 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !7494)
!7497 = !DILocation(line: 0, scope: !2497, inlinedAt: !7498)
!7498 = distinct !DILocation(line: 649, column: 57, scope: !2290)
!7499 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7498)
!7500 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7498)
!7501 = !DILocation(line: 0, scope: !2505, inlinedAt: !7502)
!7502 = distinct !DILocation(line: 649, column: 71, scope: !2290)
!7503 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !7502)
!7504 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !7502)
!7505 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !7502)
!7506 = !DILocation(line: 0, scope: !2497, inlinedAt: !7507)
!7507 = distinct !DILocation(line: 650, column: 25, scope: !2290)
!7508 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7507)
!7509 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7507)
!7510 = !DILocation(line: 0, scope: !2494, inlinedAt: !7511)
!7511 = distinct !DILocation(line: 647, column: 5, scope: !2290)
!7512 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !7511)
!7513 = distinct !DILexicalBlock(scope: !7514, file: !11, line: 195, column: 42)
!7514 = distinct !DILexicalBlock(scope: !7515, file: !11, line: 195, column: 20)
!7515 = distinct !DILexicalBlock(scope: !7516, file: !11, line: 193, column: 13)
!7516 = distinct !DILexicalBlock(scope: !2494, file: !11, line: 192, column: 16)
!7517 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !7511)
!7518 = !DILocation(line: 652, column: 5, scope: !2290)
!7519 = !DILocation(line: 652, column: 13, scope: !2290)
!7520 = !DILocation(line: 0, scope: !2435, inlinedAt: !7521)
!7521 = distinct !DILocation(line: 652, column: 13, scope: !2290)
!7522 = !DILocation(line: 165, column: 19, scope: !2435, inlinedAt: !7521)
!7523 = !DILocation(line: 166, column: 11, scope: !2435, inlinedAt: !7521)
!7524 = !{!7525, !2679, i64 0}
!7525 = !{!"_ZTSN6Halide7Runtime8Internal12Renderscript7ContextE", !2679, i64 0, !2679, i64 4, !2679, i64 8, !2680, i64 12}
!7526 = !DILocation(line: 166, column: 39, scope: !2435, inlinedAt: !7521)
!7527 = !{!7525, !2679, i64 4}
!7528 = !DILocation(line: 166, column: 51, scope: !2435, inlinedAt: !7521)
!7529 = !{!7525, !2679, i64 8}
!7530 = !DILocation(line: 167, column: 11, scope: !2435, inlinedAt: !7521)
!7531 = !{!7525, !2680, i64 12}
!7532 = !DILocation(line: 169, column: 9, scope: !7533, inlinedAt: !7521)
!7533 = distinct !DILexicalBlock(scope: !2435, file: !1697, line: 167, column: 41)
!7534 = !DILocation(line: 171, column: 17, scope: !7533, inlinedAt: !7521)
!7535 = !DILocation(line: 171, column: 15, scope: !7533, inlinedAt: !7521)
!7536 = !DILocation(line: 172, column: 9, scope: !7537, inlinedAt: !7521)
!7537 = distinct !DILexicalBlock(scope: !7533, file: !1697, line: 172, column: 9)
!7538 = !DILocation(line: 172, column: 9, scope: !7533, inlinedAt: !7521)
!7539 = !DILocation(line: 172, column: 9, scope: !7540, inlinedAt: !7521)
!7540 = !DILexicalBlockFile(scope: !7537, file: !1697, discriminator: 1)
!7541 = !DILocation(line: 173, column: 9, scope: !7542, inlinedAt: !7521)
!7542 = distinct !DILexicalBlock(scope: !7533, file: !1697, line: 173, column: 9)
!7543 = !DILocation(line: 173, column: 9, scope: !7533, inlinedAt: !7521)
!7544 = !DILocation(line: 173, column: 9, scope: !7545, inlinedAt: !7521)
!7545 = !DILexicalBlockFile(scope: !7542, file: !1697, discriminator: 1)
!7546 = !DILocation(line: 653, column: 13, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !2290, file: !1697, line: 653, column: 9)
!7548 = !DILocation(line: 653, column: 19, scope: !7547)
!7549 = !DILocation(line: 653, column: 9, scope: !2290)
!7550 = !DILocation(line: 0, scope: !2443, inlinedAt: !7551)
!7551 = distinct !DILocation(line: 654, column: 9, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7547, file: !1697, line: 653, column: 34)
!7553 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !7551)
!7554 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !7551)
!7555 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !7551)
!7556 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !7551)
!7557 = !DILocation(line: 0, scope: !2497, inlinedAt: !7558)
!7558 = distinct !DILocation(line: 654, column: 29, scope: !7552)
!7559 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7558)
!7560 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7558)
!7561 = !DILocation(line: 0, scope: !2497, inlinedAt: !7562)
!7562 = distinct !DILocation(line: 655, column: 29, scope: !7552)
!7563 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7562)
!7564 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7562)
!7565 = !DILocation(line: 655, column: 72, scope: !7552)
!7566 = !DILocation(line: 0, scope: !2505, inlinedAt: !7567)
!7567 = distinct !DILocation(line: 655, column: 65, scope: !7552)
!7568 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !7567)
!7569 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !7567)
!7570 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !7567)
!7571 = !DILocation(line: 0, scope: !2497, inlinedAt: !7572)
!7572 = distinct !DILocation(line: 656, column: 29, scope: !7552)
!7573 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7572)
!7574 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7572)
!7575 = !DILocation(line: 0, scope: !2494, inlinedAt: !7576)
!7576 = distinct !DILocation(line: 654, column: 9, scope: !7552)
!7577 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !7576)
!7578 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !7576)
!7579 = !DILocation(line: 657, column: 20, scope: !7552)
!7580 = !DILocation(line: 657, column: 9, scope: !7552)
!7581 = !DILocation(line: 661, column: 25, scope: !2290)
!7582 = !DILocation(line: 661, column: 14, scope: !2290)
!7583 = !DILocation(line: 668, column: 28, scope: !2290)
!7584 = !DILocation(line: 668, column: 20, scope: !2290)
!7585 = !DILocation(line: 669, column: 11, scope: !7586)
!7586 = distinct !DILexicalBlock(scope: !2290, file: !1697, line: 669, column: 9)
!7587 = !DILocation(line: 669, column: 10, scope: !7586)
!7588 = !DILocation(line: 669, column: 9, scope: !2290)
!7589 = !DILocation(line: 670, column: 34, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7586, file: !1697, line: 669, column: 20)
!7591 = !DILocation(line: 670, column: 16, scope: !7590)
!7592 = !DILocation(line: 671, column: 19, scope: !7590)
!7593 = !DILocation(line: 671, column: 26, scope: !7590)
!7594 = !{!7595, !2679, i64 0}
!7595 = !{!"_ZTSN6Halide7Runtime8Internal12Renderscript12module_stateE", !2679, i64 0, !2679, i64 4}
!7596 = !DILocation(line: 672, column: 26, scope: !7590)
!7597 = !DILocation(line: 672, column: 19, scope: !7590)
!7598 = !DILocation(line: 672, column: 24, scope: !7590)
!7599 = !{!7595, !2679, i64 4}
!7600 = !DILocation(line: 673, column: 22, scope: !7590)
!7601 = !DILocation(line: 673, column: 20, scope: !7590)
!7602 = !DILocation(line: 677, column: 11, scope: !2303)
!7603 = !DILocation(line: 674, column: 5, scope: !7590)
!7604 = !DILocation(line: 677, column: 20, scope: !2303)
!7605 = !DILocation(line: 677, column: 10, scope: !2303)
!7606 = !DILocation(line: 677, column: 9, scope: !2290)
!7607 = !DILocation(line: 678, column: 32, scope: !2302)
!7608 = !DILocation(line: 678, column: 21, scope: !2302)
!7609 = !DILocation(line: 0, scope: !2443, inlinedAt: !7610)
!7610 = distinct !DILocation(line: 679, column: 9, scope: !2302)
!7611 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !7610)
!7612 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !7610)
!7613 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !7610)
!7614 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !7610)
!7615 = !DILocation(line: 0, scope: !2497, inlinedAt: !7616)
!7616 = distinct !DILocation(line: 679, column: 29, scope: !2302)
!7617 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7616)
!7618 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7616)
!7619 = !DILocation(line: 0, scope: !2497, inlinedAt: !7620)
!7620 = distinct !DILocation(line: 679, column: 83, scope: !2302)
!7621 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7620)
!7622 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7620)
!7623 = !DILocation(line: 0, scope: !2497, inlinedAt: !7624)
!7624 = distinct !DILocation(line: 679, column: 95, scope: !2302)
!7625 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7624)
!7626 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7624)
!7627 = !DILocation(line: 0, scope: !2494, inlinedAt: !7628)
!7628 = distinct !DILocation(line: 679, column: 9, scope: !2302)
!7629 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !7628)
!7630 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !7628)
!7631 = !DILocation(line: 682, column: 21, scope: !2302)
!7632 = !DILocation(line: 683, column: 28, scope: !2302)
!7633 = !DILocation(line: 683, column: 47, scope: !2302)
!7634 = !DILocation(line: 684, column: 17, scope: !2302)
!7635 = !DILocation(line: 686, column: 13, scope: !2302)
!7636 = !DILocation(line: 688, column: 13, scope: !2302)
!7637 = !DILocation(line: 683, column: 10, scope: !2302)
!7638 = !DILocation(line: 683, column: 19, scope: !2302)
!7639 = !DILocation(line: 683, column: 26, scope: !2302)
!7640 = !DILocation(line: 0, scope: !2443, inlinedAt: !7641)
!7641 = distinct !DILocation(line: 693, column: 9, scope: !2302)
!7642 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !7641)
!7643 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !7641)
!7644 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !7641)
!7645 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !7641)
!7646 = !DILocation(line: 0, scope: !2497, inlinedAt: !7647)
!7647 = distinct !DILocation(line: 693, column: 29, scope: !2302)
!7648 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7647)
!7649 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7647)
!7650 = !DILocation(line: 694, column: 42, scope: !2302)
!7651 = !DILocation(line: 694, column: 51, scope: !2302)
!7652 = !DILocation(line: 0, scope: !2501, inlinedAt: !7653)
!7653 = distinct !DILocation(line: 694, column: 29, scope: !2302)
!7654 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !7653)
!7655 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !7653)
!7656 = !DILocation(line: 0, scope: !2497, inlinedAt: !7657)
!7657 = distinct !DILocation(line: 694, column: 59, scope: !2302)
!7658 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7657)
!7659 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7657)
!7660 = !DILocation(line: 0, scope: !2494, inlinedAt: !7661)
!7661 = distinct !DILocation(line: 693, column: 9, scope: !2302)
!7662 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !7661)
!7663 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !7661)
!7664 = !DILocation(line: 695, column: 5, scope: !2302)
!7665 = !DILocation(line: 698, column: 24, scope: !2290)
!7666 = !DILocation(line: 698, column: 14, scope: !2290)
!7667 = !DILocation(line: 0, scope: !2443, inlinedAt: !7668)
!7668 = distinct !DILocation(line: 699, column: 5, scope: !2290)
!7669 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !7668)
!7670 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !7668)
!7671 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !7668)
!7672 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !7668)
!7673 = !DILocation(line: 0, scope: !2497, inlinedAt: !7674)
!7674 = distinct !DILocation(line: 699, column: 25, scope: !2290)
!7675 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7674)
!7676 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7674)
!7677 = !DILocation(line: 699, column: 53, scope: !2290)
!7678 = !DILocation(line: 699, column: 44, scope: !2290)
!7679 = !DILocation(line: 699, column: 65, scope: !2290)
!7680 = !DILocation(line: 0, scope: !2509, inlinedAt: !7681)
!7681 = distinct !DILocation(line: 699, column: 41, scope: !2290)
!7682 = !DILocation(line: 167, column: 32, scope: !2509, inlinedAt: !7681)
!7683 = !DILocation(line: 168, column: 15, scope: !2509, inlinedAt: !7681)
!7684 = !DILocation(line: 0, scope: !2497, inlinedAt: !7685)
!7685 = distinct !DILocation(line: 700, column: 25, scope: !2290)
!7686 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7685)
!7687 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7685)
!7688 = !DILocation(line: 0, scope: !2494, inlinedAt: !7689)
!7689 = distinct !DILocation(line: 699, column: 5, scope: !2290)
!7690 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !7689)
!7691 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !7689)
!7692 = !DILocation(line: 0, scope: !2440, inlinedAt: !7693)
!7693 = distinct !DILocation(line: 704, column: 1, scope: !2290)
!7694 = !DILocation(line: 176, column: 54, scope: !7695, inlinedAt: !7693)
!7695 = distinct !DILexicalBlock(scope: !2440, file: !1697, line: 176, column: 16)
!7696 = !DILocation(line: 176, column: 18, scope: !7695, inlinedAt: !7693)
!7697 = !DILocation(line: 704, column: 1, scope: !2290)
!7698 = !DILocation(line: 706, column: 48, scope: !2306)
!7699 = !DILocation(line: 706, column: 72, scope: !2306)
!7700 = !DILocation(line: 707, column: 14, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !2306, file: !1697, line: 707, column: 9)
!7702 = !DILocation(line: 707, column: 18, scope: !7701)
!7703 = !DILocation(line: 707, column: 9, scope: !2306)
!7704 = !DILocation(line: 711, column: 29, scope: !2306)
!7705 = !DILocation(line: 711, column: 11, scope: !2306)
!7706 = !DILocation(line: 0, scope: !2443, inlinedAt: !7707)
!7707 = distinct !DILocation(line: 713, column: 5, scope: !2306)
!7708 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !7707)
!7709 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !7707)
!7710 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !7707)
!7711 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !7707)
!7712 = !DILocation(line: 0, scope: !2497, inlinedAt: !7713)
!7713 = distinct !DILocation(line: 713, column: 25, scope: !2306)
!7714 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7713)
!7715 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7713)
!7716 = !DILocation(line: 0, scope: !2501, inlinedAt: !7717)
!7717 = distinct !DILocation(line: 714, column: 25, scope: !2306)
!7718 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !7717)
!7719 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !7717)
!7720 = !DILocation(line: 0, scope: !2497, inlinedAt: !7721)
!7721 = distinct !DILocation(line: 714, column: 41, scope: !2306)
!7722 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7721)
!7723 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7721)
!7724 = !DILocation(line: 714, column: 57, scope: !2306)
!7725 = !DILocation(line: 0, scope: !2501, inlinedAt: !7726)
!7726 = distinct !DILocation(line: 714, column: 54, scope: !2306)
!7727 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !7726)
!7728 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !7726)
!7729 = !DILocation(line: 0, scope: !2497, inlinedAt: !7730)
!7730 = distinct !DILocation(line: 714, column: 61, scope: !2306)
!7731 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7730)
!7732 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7730)
!7733 = !DILocation(line: 0, scope: !2494, inlinedAt: !7734)
!7734 = distinct !DILocation(line: 713, column: 5, scope: !2306)
!7735 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !7734)
!7736 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !7734)
!7737 = !DILocation(line: 716, column: 5, scope: !2306)
!7738 = !DILocation(line: 716, column: 13, scope: !2306)
!7739 = !DILocation(line: 0, scope: !2435, inlinedAt: !7740)
!7740 = distinct !DILocation(line: 716, column: 13, scope: !2306)
!7741 = !DILocation(line: 165, column: 19, scope: !2435, inlinedAt: !7740)
!7742 = !DILocation(line: 166, column: 11, scope: !2435, inlinedAt: !7740)
!7743 = !DILocation(line: 166, column: 39, scope: !2435, inlinedAt: !7740)
!7744 = !DILocation(line: 166, column: 51, scope: !2435, inlinedAt: !7740)
!7745 = !DILocation(line: 167, column: 11, scope: !2435, inlinedAt: !7740)
!7746 = !DILocation(line: 169, column: 9, scope: !7533, inlinedAt: !7740)
!7747 = !DILocation(line: 171, column: 17, scope: !7533, inlinedAt: !7740)
!7748 = !DILocation(line: 171, column: 15, scope: !7533, inlinedAt: !7740)
!7749 = !DILocation(line: 172, column: 9, scope: !7537, inlinedAt: !7740)
!7750 = !DILocation(line: 172, column: 9, scope: !7533, inlinedAt: !7740)
!7751 = !DILocation(line: 172, column: 9, scope: !7540, inlinedAt: !7740)
!7752 = !DILocation(line: 173, column: 9, scope: !7542, inlinedAt: !7740)
!7753 = !DILocation(line: 173, column: 9, scope: !7533, inlinedAt: !7740)
!7754 = !DILocation(line: 173, column: 9, scope: !7545, inlinedAt: !7740)
!7755 = !DILocation(line: 717, column: 13, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !2306, file: !1697, line: 717, column: 9)
!7757 = !DILocation(line: 717, column: 19, scope: !7756)
!7758 = !DILocation(line: 717, column: 9, scope: !2306)
!7759 = !DILocation(line: 711, column: 21, scope: !2306)
!7760 = !DILocation(line: 722, column: 25, scope: !2306)
!7761 = !DILocation(line: 722, column: 14, scope: !2306)
!7762 = !DILocation(line: 0, scope: !2443, inlinedAt: !7763)
!7763 = distinct !DILocation(line: 725, column: 5, scope: !2306)
!7764 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !7763)
!7765 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !7763)
!7766 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !7763)
!7767 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !7763)
!7768 = !DILocation(line: 0, scope: !2497, inlinedAt: !7769)
!7769 = distinct !DILocation(line: 725, column: 25, scope: !2306)
!7770 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7769)
!7771 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7769)
!7772 = !DILocation(line: 0, scope: !2501, inlinedAt: !7773)
!7773 = distinct !DILocation(line: 726, column: 25, scope: !2306)
!7774 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !7773)
!7775 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !7773)
!7776 = !DILocation(line: 0, scope: !2497, inlinedAt: !7777)
!7777 = distinct !DILocation(line: 726, column: 46, scope: !2306)
!7778 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7777)
!7779 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7777)
!7780 = !DILocation(line: 0, scope: !2494, inlinedAt: !7781)
!7781 = distinct !DILocation(line: 725, column: 5, scope: !2306)
!7782 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !7781)
!7783 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !7781)
!7784 = !DILocation(line: 728, column: 14, scope: !2306)
!7785 = !DILocation(line: 731, column: 24, scope: !2306)
!7786 = !DILocation(line: 731, column: 14, scope: !2306)
!7787 = !DILocation(line: 0, scope: !2443, inlinedAt: !7788)
!7788 = distinct !DILocation(line: 732, column: 5, scope: !2306)
!7789 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !7788)
!7790 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !7788)
!7791 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !7788)
!7792 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !7788)
!7793 = !DILocation(line: 0, scope: !2497, inlinedAt: !7794)
!7794 = distinct !DILocation(line: 732, column: 25, scope: !2306)
!7795 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7794)
!7796 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7794)
!7797 = !DILocation(line: 732, column: 53, scope: !2306)
!7798 = !DILocation(line: 732, column: 44, scope: !2306)
!7799 = !DILocation(line: 732, column: 65, scope: !2306)
!7800 = !DILocation(line: 0, scope: !2509, inlinedAt: !7801)
!7801 = distinct !DILocation(line: 732, column: 41, scope: !2306)
!7802 = !DILocation(line: 167, column: 32, scope: !2509, inlinedAt: !7801)
!7803 = !DILocation(line: 168, column: 15, scope: !2509, inlinedAt: !7801)
!7804 = !DILocation(line: 0, scope: !2497, inlinedAt: !7805)
!7805 = distinct !DILocation(line: 733, column: 25, scope: !2306)
!7806 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7805)
!7807 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7805)
!7808 = !DILocation(line: 0, scope: !2494, inlinedAt: !7809)
!7809 = distinct !DILocation(line: 732, column: 5, scope: !2306)
!7810 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !7809)
!7811 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !7809)
!7812 = !DILocation(line: 0, scope: !2440, inlinedAt: !7813)
!7813 = distinct !DILocation(line: 737, column: 1, scope: !2306)
!7814 = !DILocation(line: 176, column: 54, scope: !7695, inlinedAt: !7813)
!7815 = !DILocation(line: 176, column: 18, scope: !7695, inlinedAt: !7813)
!7816 = !DILocation(line: 737, column: 1, scope: !2306)
!7817 = !DILocation(line: 739, column: 51, scope: !2316)
!7818 = !DILocation(line: 0, scope: !2443, inlinedAt: !7819)
!7819 = distinct !DILocation(line: 740, column: 5, scope: !2316)
!7820 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !7819)
!7821 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !7819)
!7822 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !7819)
!7823 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !7819)
!7824 = !DILocation(line: 0, scope: !2497, inlinedAt: !7825)
!7825 = distinct !DILocation(line: 740, column: 25, scope: !2316)
!7826 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7825)
!7827 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7825)
!7828 = !DILocation(line: 0, scope: !2501, inlinedAt: !7829)
!7829 = distinct !DILocation(line: 741, column: 25, scope: !2316)
!7830 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !7829)
!7831 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !7829)
!7832 = !DILocation(line: 0, scope: !2497, inlinedAt: !7833)
!7833 = distinct !DILocation(line: 741, column: 41, scope: !2316)
!7834 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7833)
!7835 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7833)
!7836 = !DILocation(line: 0, scope: !2494, inlinedAt: !7837)
!7837 = distinct !DILocation(line: 740, column: 5, scope: !2316)
!7838 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !7837)
!7839 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !7837)
!7840 = !DILocation(line: 743, column: 5, scope: !2316)
!7841 = !DILocation(line: 743, column: 13, scope: !2316)
!7842 = !DILocation(line: 0, scope: !2435, inlinedAt: !7843)
!7843 = distinct !DILocation(line: 743, column: 13, scope: !2316)
!7844 = !DILocation(line: 165, column: 19, scope: !2435, inlinedAt: !7843)
!7845 = !DILocation(line: 166, column: 11, scope: !2435, inlinedAt: !7843)
!7846 = !DILocation(line: 166, column: 39, scope: !2435, inlinedAt: !7843)
!7847 = !DILocation(line: 166, column: 51, scope: !2435, inlinedAt: !7843)
!7848 = !DILocation(line: 167, column: 11, scope: !2435, inlinedAt: !7843)
!7849 = !DILocation(line: 169, column: 9, scope: !7533, inlinedAt: !7843)
!7850 = !DILocation(line: 171, column: 17, scope: !7533, inlinedAt: !7843)
!7851 = !DILocation(line: 171, column: 15, scope: !7533, inlinedAt: !7843)
!7852 = !DILocation(line: 172, column: 9, scope: !7537, inlinedAt: !7843)
!7853 = !DILocation(line: 172, column: 9, scope: !7533, inlinedAt: !7843)
!7854 = !DILocation(line: 172, column: 9, scope: !7540, inlinedAt: !7843)
!7855 = !DILocation(line: 173, column: 9, scope: !7542, inlinedAt: !7843)
!7856 = !DILocation(line: 173, column: 9, scope: !7533, inlinedAt: !7843)
!7857 = !DILocation(line: 173, column: 9, scope: !7545, inlinedAt: !7843)
!7858 = !DILocation(line: 744, column: 13, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !2316, file: !1697, line: 744, column: 9)
!7860 = !DILocation(line: 744, column: 19, scope: !7859)
!7861 = !DILocation(line: 744, column: 9, scope: !2316)
!7862 = !DILocation(line: 755, column: 27, scope: !2316)
!7863 = !DILocation(line: 756, column: 12, scope: !7864)
!7864 = !DILexicalBlockFile(scope: !7865, file: !1697, discriminator: 2)
!7865 = !DILexicalBlockFile(scope: !2316, file: !1697, discriminator: 1)
!7866 = !DILocation(line: 756, column: 5, scope: !2316)
!7867 = !DILocation(line: 0, scope: !2443, inlinedAt: !7868)
!7868 = distinct !DILocation(line: 745, column: 9, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7859, file: !1697, line: 744, column: 34)
!7870 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !7868)
!7871 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !7868)
!7872 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !7868)
!7873 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !7868)
!7874 = !DILocation(line: 0, scope: !2497, inlinedAt: !7875)
!7875 = distinct !DILocation(line: 745, column: 29, scope: !7869)
!7876 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7875)
!7877 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7875)
!7878 = !DILocation(line: 0, scope: !2497, inlinedAt: !7879)
!7879 = distinct !DILocation(line: 746, column: 29, scope: !7869)
!7880 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7879)
!7881 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7879)
!7882 = !DILocation(line: 746, column: 67, scope: !7869)
!7883 = !DILocation(line: 0, scope: !2505, inlinedAt: !7884)
!7884 = distinct !DILocation(line: 746, column: 60, scope: !7869)
!7885 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !7884)
!7886 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !7884)
!7887 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !7884)
!7888 = !DILocation(line: 0, scope: !2497, inlinedAt: !7889)
!7889 = distinct !DILocation(line: 746, column: 73, scope: !7869)
!7890 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7889)
!7891 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7889)
!7892 = !DILocation(line: 0, scope: !2494, inlinedAt: !7893)
!7893 = distinct !DILocation(line: 745, column: 9, scope: !7869)
!7894 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !7893)
!7895 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !7893)
!7896 = !DILocation(line: 747, column: 20, scope: !7869)
!7897 = !DILocation(line: 747, column: 9, scope: !7869)
!7898 = !DILocation(line: 757, column: 20, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7900, file: !1697, line: 757, column: 13)
!7900 = distinct !DILexicalBlock(scope: !2316, file: !1697, line: 756, column: 19)
!7901 = !DILocation(line: 757, column: 13, scope: !7899)
!7902 = !DILocation(line: 757, column: 13, scope: !7900)
!7903 = !DILocation(line: 0, scope: !2443, inlinedAt: !7904)
!7904 = distinct !DILocation(line: 758, column: 13, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7899, file: !1697, line: 757, column: 28)
!7906 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !7904)
!7907 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !7904)
!7908 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !7904)
!7909 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !7904)
!7910 = !DILocation(line: 0, scope: !2497, inlinedAt: !7911)
!7911 = distinct !DILocation(line: 758, column: 33, scope: !7905)
!7912 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7911)
!7913 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7911)
!7914 = !DILocation(line: 759, column: 43, scope: !7905)
!7915 = !DILocation(line: 0, scope: !2501, inlinedAt: !7916)
!7916 = distinct !DILocation(line: 759, column: 33, scope: !7905)
!7917 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !7916)
!7918 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !7916)
!7919 = !DILocation(line: 0, scope: !2497, inlinedAt: !7920)
!7920 = distinct !DILocation(line: 759, column: 50, scope: !7905)
!7921 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7920)
!7922 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7920)
!7923 = !DILocation(line: 0, scope: !2494, inlinedAt: !7924)
!7924 = distinct !DILocation(line: 758, column: 13, scope: !7905)
!7925 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !7924)
!7926 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !7924)
!7927 = !DILocation(line: 765, column: 27, scope: !7905)
!7928 = !DILocation(line: 766, column: 9, scope: !7905)
!7929 = !DILocation(line: 767, column: 24, scope: !7900)
!7930 = !DILocation(line: 771, column: 13, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !2316, file: !1697, line: 771, column: 9)
!7932 = !DILocation(line: 771, column: 25, scope: !7931)
!7933 = !DILocation(line: 771, column: 22, scope: !7931)
!7934 = !DILocation(line: 771, column: 9, scope: !2316)
!7935 = !DILocation(line: 0, scope: !2443, inlinedAt: !7936)
!7936 = distinct !DILocation(line: 772, column: 9, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7931, file: !1697, line: 771, column: 34)
!7938 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !7936)
!7939 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !7936)
!7940 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !7936)
!7941 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !7936)
!7942 = !DILocation(line: 0, scope: !2497, inlinedAt: !7943)
!7943 = distinct !DILocation(line: 772, column: 29, scope: !7937)
!7944 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7943)
!7945 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7943)
!7946 = !DILocation(line: 772, column: 72, scope: !7937)
!7947 = !DILocation(line: 0, scope: !2501, inlinedAt: !7948)
!7948 = distinct !DILocation(line: 772, column: 69, scope: !7937)
!7949 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !7948)
!7950 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !7948)
!7951 = !DILocation(line: 0, scope: !2497, inlinedAt: !7952)
!7952 = distinct !DILocation(line: 773, column: 29, scope: !7937)
!7953 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !7952)
!7954 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !7952)
!7955 = !DILocation(line: 0, scope: !2494, inlinedAt: !7956)
!7956 = distinct !DILocation(line: 772, column: 9, scope: !7937)
!7957 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !7956)
!7958 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !7956)
!7959 = !DILocation(line: 777, column: 17, scope: !7937)
!7960 = !DILocation(line: 778, column: 5, scope: !7937)
!7961 = !DILocation(line: 780, column: 5, scope: !2316)
!7962 = !DILocation(line: 0, scope: !2440, inlinedAt: !7963)
!7963 = distinct !DILocation(line: 783, column: 1, scope: !2316)
!7964 = !DILocation(line: 176, column: 54, scope: !7695, inlinedAt: !7963)
!7965 = !DILocation(line: 176, column: 18, scope: !7695, inlinedAt: !7963)
!7966 = !DILocation(line: 783, column: 1, scope: !2316)
!7967 = !DILocation(line: 785, column: 28, scope: !2321)
!7968 = !DILocation(line: 785, column: 52, scope: !2321)
!7969 = !DILocation(line: 786, column: 24, scope: !2321)
!7970 = !DILocation(line: 786, column: 12, scope: !2321)
!7971 = !DILocation(line: 787, column: 17, scope: !2329)
!7972 = !DILocation(line: 789, column: 30, scope: !2331)
!7973 = !DILocation(line: 789, column: 28, scope: !2331)
!7974 = !DILocation(line: 789, column: 47, scope: !2331)
!7975 = !DILocation(line: 789, column: 45, scope: !2331)
!7976 = !DILocation(line: 788, column: 16, scope: !2331)
!7977 = !DILocation(line: 790, column: 28, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !2331, file: !1697, line: 790, column: 13)
!7979 = !DILocation(line: 790, column: 13, scope: !2331)
!7980 = !DILocation(line: 794, column: 5, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !2321, file: !1697, line: 794, column: 5)
!7982 = !DILocation(line: 794, column: 5, scope: !2321)
!7983 = !DILocation(line: 794, column: 5, scope: !7984)
!7984 = !DILexicalBlockFile(scope: !7981, file: !1697, discriminator: 1)
!7985 = !DILocation(line: 795, column: 5, scope: !2321)
!7986 = !DILocation(line: 799, column: 50, scope: !2333)
!7987 = !DILocation(line: 800, column: 13, scope: !2333)
!7988 = !DILocation(line: 800, column: 28, scope: !2333)
!7989 = !DILocation(line: 800, column: 33, scope: !2333)
!7990 = !DILocation(line: 800, column: 36, scope: !2333)
!7991 = !DILocation(line: 800, column: 51, scope: !2333)
!7992 = !DILocation(line: 800, column: 5, scope: !7993)
!7993 = !DILexicalBlockFile(scope: !2333, file: !1697, discriminator: 2)
!7994 = !DILocation(line: 804, column: 50, scope: !2339)
!7995 = !DILocation(line: 804, column: 74, scope: !2339)
!7996 = !DILocation(line: 0, scope: !2443, inlinedAt: !7997)
!7997 = distinct !DILocation(line: 805, column: 5, scope: !2339)
!7998 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !7997)
!7999 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !7997)
!8000 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !7997)
!8001 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !7997)
!8002 = !DILocation(line: 0, scope: !2497, inlinedAt: !8003)
!8003 = distinct !DILocation(line: 805, column: 25, scope: !2339)
!8004 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8003)
!8005 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8003)
!8006 = !DILocation(line: 0, scope: !2501, inlinedAt: !8007)
!8007 = distinct !DILocation(line: 806, column: 25, scope: !2339)
!8008 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !8007)
!8009 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !8007)
!8010 = !DILocation(line: 0, scope: !2497, inlinedAt: !8011)
!8011 = distinct !DILocation(line: 806, column: 41, scope: !2339)
!8012 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8011)
!8013 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8011)
!8014 = !DILocation(line: 806, column: 57, scope: !2339)
!8015 = !DILocation(line: 0, scope: !2501, inlinedAt: !8016)
!8016 = distinct !DILocation(line: 806, column: 54, scope: !2339)
!8017 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !8016)
!8018 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !8016)
!8019 = !DILocation(line: 0, scope: !2497, inlinedAt: !8020)
!8020 = distinct !DILocation(line: 806, column: 61, scope: !2339)
!8021 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8020)
!8022 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8020)
!8023 = !DILocation(line: 0, scope: !2494, inlinedAt: !8024)
!8024 = distinct !DILocation(line: 805, column: 5, scope: !2339)
!8025 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !8024)
!8026 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !8024)
!8027 = !DILocation(line: 808, column: 5, scope: !2339)
!8028 = !DILocation(line: 808, column: 13, scope: !2339)
!8029 = !DILocation(line: 0, scope: !2435, inlinedAt: !8030)
!8030 = distinct !DILocation(line: 808, column: 13, scope: !2339)
!8031 = !DILocation(line: 165, column: 19, scope: !2435, inlinedAt: !8030)
!8032 = !DILocation(line: 166, column: 11, scope: !2435, inlinedAt: !8030)
!8033 = !DILocation(line: 166, column: 39, scope: !2435, inlinedAt: !8030)
!8034 = !DILocation(line: 166, column: 51, scope: !2435, inlinedAt: !8030)
!8035 = !DILocation(line: 167, column: 11, scope: !2435, inlinedAt: !8030)
!8036 = !DILocation(line: 169, column: 9, scope: !7533, inlinedAt: !8030)
!8037 = !DILocation(line: 171, column: 17, scope: !7533, inlinedAt: !8030)
!8038 = !DILocation(line: 171, column: 15, scope: !7533, inlinedAt: !8030)
!8039 = !DILocation(line: 172, column: 9, scope: !7537, inlinedAt: !8030)
!8040 = !DILocation(line: 172, column: 9, scope: !7533, inlinedAt: !8030)
!8041 = !DILocation(line: 172, column: 9, scope: !7540, inlinedAt: !8030)
!8042 = !DILocation(line: 173, column: 9, scope: !7542, inlinedAt: !8030)
!8043 = !DILocation(line: 173, column: 9, scope: !7533, inlinedAt: !8030)
!8044 = !DILocation(line: 173, column: 9, scope: !7545, inlinedAt: !8030)
!8045 = !DILocation(line: 809, column: 13, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !2339, file: !1697, line: 809, column: 9)
!8047 = !DILocation(line: 809, column: 19, scope: !8046)
!8048 = !DILocation(line: 809, column: 9, scope: !2339)
!8049 = !DILocation(line: 813, column: 19, scope: !2339)
!8050 = !DILocation(line: 813, column: 12, scope: !2339)
!8051 = !DILocation(line: 815, column: 14, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !2339, file: !1697, line: 815, column: 9)
!8053 = !DILocation(line: 815, column: 9, scope: !8052)
!8054 = !DILocation(line: 815, column: 9, scope: !2339)
!8055 = !DILocation(line: 0, scope: !2443, inlinedAt: !8056)
!8056 = distinct !DILocation(line: 817, column: 9, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8052, file: !1697, line: 815, column: 19)
!8058 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !8056)
!8059 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !8056)
!8060 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !8056)
!8061 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !8056)
!8062 = !DILocation(line: 0, scope: !2497, inlinedAt: !8063)
!8063 = distinct !DILocation(line: 817, column: 29, scope: !8057)
!8064 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8063)
!8065 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8063)
!8066 = !DILocation(line: 0, scope: !2494, inlinedAt: !8067)
!8067 = distinct !DILocation(line: 817, column: 9, scope: !8057)
!8068 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !8067)
!8069 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !8067)
!8070 = !DILocation(line: 819, column: 9, scope: !8057)
!8071 = !DILocation(line: 822, column: 5, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !2339, file: !1697, line: 822, column: 5)
!8073 = !DILocation(line: 822, column: 5, scope: !8074)
!8074 = !DILexicalBlockFile(scope: !8072, file: !1697, discriminator: 1)
!8075 = !DILocation(line: 822, column: 5, scope: !8076)
!8076 = !DILexicalBlockFile(scope: !8072, file: !1697, discriminator: 3)
!8077 = !DILocation(line: 822, column: 5, scope: !8078)
!8078 = !DILexicalBlockFile(scope: !8072, file: !1697, discriminator: 5)
!8079 = !DILocation(line: 822, column: 5, scope: !2339)
!8080 = !DILocation(line: 822, column: 5, scope: !8081)
!8081 = !DILexicalBlockFile(scope: !8082, file: !1697, discriminator: 7)
!8082 = !DILexicalBlockFile(scope: !8083, file: !1697, discriminator: 6)
!8083 = !DILexicalBlockFile(scope: !8084, file: !1697, discriminator: 4)
!8084 = !DILexicalBlockFile(scope: !8072, file: !1697, discriminator: 2)
!8085 = !DILocation(line: 832, column: 53, scope: !2339)
!8086 = !DILocation(line: 833, column: 28, scope: !2339)
!8087 = !DILocation(line: 0, scope: !2443, inlinedAt: !8088)
!8088 = distinct !DILocation(line: 825, column: 5, scope: !2339)
!8089 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !8088)
!8090 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !8088)
!8091 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !8088)
!8092 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !8088)
!8093 = !DILocation(line: 0, scope: !2497, inlinedAt: !8094)
!8094 = distinct !DILocation(line: 825, column: 25, scope: !2339)
!8095 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8094)
!8096 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8094)
!8097 = !DILocation(line: 826, column: 29, scope: !2339)
!8098 = !DILocation(line: 0, scope: !2497, inlinedAt: !8099)
!8099 = distinct !DILocation(line: 826, column: 25, scope: !2339)
!8100 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8099)
!8101 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8099)
!8102 = !DILocation(line: 0, scope: !2497, inlinedAt: !8103)
!8103 = distinct !DILocation(line: 827, column: 25, scope: !2339)
!8104 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8103)
!8105 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8103)
!8106 = !DILocation(line: 827, column: 54, scope: !2339)
!8107 = !DILocation(line: 0, scope: !2513, inlinedAt: !8108)
!8108 = distinct !DILocation(line: 827, column: 42, scope: !2339)
!8109 = !DILocation(line: 147, column: 33, scope: !2513, inlinedAt: !8108)
!8110 = !DILocation(line: 148, column: 15, scope: !2513, inlinedAt: !8108)
!8111 = !DILocation(line: 0, scope: !2497, inlinedAt: !8112)
!8112 = distinct !DILocation(line: 827, column: 59, scope: !2339)
!8113 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8112)
!8114 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8112)
!8115 = !DILocation(line: 0, scope: !2497, inlinedAt: !8116)
!8116 = distinct !DILocation(line: 828, column: 25, scope: !2339)
!8117 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8116)
!8118 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8116)
!8119 = !DILocation(line: 828, column: 43, scope: !2339)
!8120 = !DILocation(line: 0, scope: !2505, inlinedAt: !8121)
!8121 = distinct !DILocation(line: 828, column: 40, scope: !2339)
!8122 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !8121)
!8123 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !8121)
!8124 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !8121)
!8125 = !DILocation(line: 0, scope: !2497, inlinedAt: !8126)
!8126 = distinct !DILocation(line: 828, column: 58, scope: !2339)
!8127 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8126)
!8128 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8126)
!8129 = !DILocation(line: 829, column: 28, scope: !2339)
!8130 = !DILocation(line: 0, scope: !2505, inlinedAt: !8131)
!8131 = distinct !DILocation(line: 829, column: 25, scope: !2339)
!8132 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !8131)
!8133 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !8131)
!8134 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !8131)
!8135 = !DILocation(line: 0, scope: !2497, inlinedAt: !8136)
!8136 = distinct !DILocation(line: 829, column: 43, scope: !2339)
!8137 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8136)
!8138 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8136)
!8139 = !DILocation(line: 829, column: 53, scope: !2339)
!8140 = !DILocation(line: 0, scope: !2505, inlinedAt: !8141)
!8141 = distinct !DILocation(line: 829, column: 50, scope: !2339)
!8142 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !8141)
!8143 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !8141)
!8144 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !8141)
!8145 = !DILocation(line: 0, scope: !2497, inlinedAt: !8146)
!8146 = distinct !DILocation(line: 829, column: 68, scope: !2339)
!8147 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8146)
!8148 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8146)
!8149 = !DILocation(line: 830, column: 28, scope: !2339)
!8150 = !DILocation(line: 0, scope: !2505, inlinedAt: !8151)
!8151 = distinct !DILocation(line: 830, column: 25, scope: !2339)
!8152 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !8151)
!8153 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !8151)
!8154 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !8151)
!8155 = !DILocation(line: 0, scope: !2497, inlinedAt: !8156)
!8156 = distinct !DILocation(line: 830, column: 43, scope: !2339)
!8157 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8156)
!8158 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8156)
!8159 = !DILocation(line: 0, scope: !2497, inlinedAt: !8160)
!8160 = distinct !DILocation(line: 831, column: 25, scope: !2339)
!8161 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8160)
!8162 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8160)
!8163 = !DILocation(line: 831, column: 43, scope: !2339)
!8164 = !DILocation(line: 0, scope: !2505, inlinedAt: !8165)
!8165 = distinct !DILocation(line: 831, column: 40, scope: !2339)
!8166 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !8165)
!8167 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !8165)
!8168 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !8165)
!8169 = !DILocation(line: 0, scope: !2497, inlinedAt: !8170)
!8170 = distinct !DILocation(line: 831, column: 58, scope: !2339)
!8171 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8170)
!8172 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8170)
!8173 = !DILocation(line: 832, column: 28, scope: !2339)
!8174 = !DILocation(line: 0, scope: !2505, inlinedAt: !8175)
!8175 = distinct !DILocation(line: 832, column: 25, scope: !2339)
!8176 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !8175)
!8177 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !8175)
!8178 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !8175)
!8179 = !DILocation(line: 0, scope: !2497, inlinedAt: !8180)
!8180 = distinct !DILocation(line: 832, column: 43, scope: !2339)
!8181 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8180)
!8182 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8180)
!8183 = !DILocation(line: 0, scope: !2505, inlinedAt: !8184)
!8184 = distinct !DILocation(line: 832, column: 50, scope: !2339)
!8185 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !8184)
!8186 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !8184)
!8187 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !8184)
!8188 = !DILocation(line: 0, scope: !2497, inlinedAt: !8189)
!8189 = distinct !DILocation(line: 832, column: 68, scope: !2339)
!8190 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8189)
!8191 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8189)
!8192 = !DILocation(line: 0, scope: !2505, inlinedAt: !8193)
!8193 = distinct !DILocation(line: 833, column: 25, scope: !2339)
!8194 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !8193)
!8195 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !8193)
!8196 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !8193)
!8197 = !DILocation(line: 0, scope: !2497, inlinedAt: !8198)
!8198 = distinct !DILocation(line: 833, column: 43, scope: !2339)
!8199 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8198)
!8200 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8198)
!8201 = !DILocation(line: 0, scope: !2497, inlinedAt: !8202)
!8202 = distinct !DILocation(line: 834, column: 25, scope: !2339)
!8203 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8202)
!8204 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8202)
!8205 = !DILocation(line: 834, column: 40, scope: !2339)
!8206 = !DILocation(line: 0, scope: !2505, inlinedAt: !8207)
!8207 = distinct !DILocation(line: 834, column: 32, scope: !2339)
!8208 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !8207)
!8209 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !8207)
!8210 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !8207)
!8211 = !DILocation(line: 0, scope: !2497, inlinedAt: !8212)
!8212 = distinct !DILocation(line: 834, column: 50, scope: !2339)
!8213 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8212)
!8214 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8212)
!8215 = !DILocation(line: 0, scope: !2494, inlinedAt: !8216)
!8216 = distinct !DILocation(line: 825, column: 5, scope: !2339)
!8217 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !8216)
!8218 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !8216)
!8219 = !DILocation(line: 837, column: 25, scope: !2339)
!8220 = !DILocation(line: 837, column: 14, scope: !2339)
!8221 = !DILocation(line: 840, column: 11, scope: !2339)
!8222 = !DILocation(line: 854, column: 17, scope: !2339)
!8223 = !DILocation(line: 854, column: 5, scope: !2339)
!8224 = !DILocation(line: 853, column: 16, scope: !2339)
!8225 = !DILocation(line: 860, column: 13, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !2339, file: !1697, line: 854, column: 28)
!8227 = !DILocation(line: 863, column: 13, scope: !8226)
!8228 = !DILocation(line: 0, scope: !2517, inlinedAt: !8229)
!8229 = distinct !DILocation(line: 865, column: 13, scope: !8226)
!8230 = !DILocation(line: 135, column: 19, scope: !2517, inlinedAt: !8229)
!8231 = !DILocation(line: 136, column: 23, scope: !8232, inlinedAt: !8229)
!8232 = distinct !DILexicalBlock(scope: !2517, file: !11, line: 135, column: 44)
!8233 = !DILocation(line: 138, column: 19, scope: !8232, inlinedAt: !8229)
!8234 = !DILocation(line: 139, column: 14, scope: !8232, inlinedAt: !8229)
!8235 = !DILocation(line: 0, scope: !2571, inlinedAt: !8236)
!8236 = distinct !DILocation(line: 865, column: 33, scope: !8226)
!8237 = !DILocation(line: 142, column: 37, scope: !2571, inlinedAt: !8236)
!8238 = !DILocation(line: 143, column: 15, scope: !2571, inlinedAt: !8236)
!8239 = !DILocation(line: 865, column: 88, scope: !8226)
!8240 = !DILocation(line: 0, scope: !2575, inlinedAt: !8241)
!8241 = distinct !DILocation(line: 865, column: 80, scope: !8226)
!8242 = !DILocation(line: 152, column: 33, scope: !2575, inlinedAt: !8241)
!8243 = !DILocation(line: 153, column: 48, scope: !2575, inlinedAt: !8241)
!8244 = !DILocation(line: 153, column: 15, scope: !2575, inlinedAt: !8241)
!8245 = !DILocation(line: 0, scope: !2571, inlinedAt: !8246)
!8246 = distinct !DILocation(line: 865, column: 98, scope: !8226)
!8247 = !DILocation(line: 142, column: 37, scope: !2571, inlinedAt: !8246)
!8248 = !DILocation(line: 143, column: 15, scope: !2571, inlinedAt: !8246)
!8249 = !DILocation(line: 0, scope: !2568, inlinedAt: !8250)
!8250 = distinct !DILocation(line: 865, column: 13, scope: !8226)
!8251 = !DILocation(line: 194, column: 13, scope: !8252, inlinedAt: !8250)
!8252 = distinct !DILexicalBlock(scope: !8253, file: !11, line: 193, column: 35)
!8253 = distinct !DILexicalBlock(scope: !8254, file: !11, line: 193, column: 13)
!8254 = distinct !DILexicalBlock(scope: !2568, file: !11, line: 192, column: 16)
!8255 = !DILocation(line: 200, column: 9, scope: !8254, inlinedAt: !8250)
!8256 = !DILocation(line: 866, column: 5, scope: !8226)
!8257 = !DILocation(line: 868, column: 9, scope: !2350)
!8258 = !DILocation(line: 872, column: 37, scope: !2349)
!8259 = !DILocation(line: 872, column: 56, scope: !2349)
!8260 = !DILocation(line: 873, column: 17, scope: !2349)
!8261 = !DILocation(line: 868, column: 9, scope: !2339)
!8262 = !DILocation(line: 872, column: 15, scope: !2349)
!8263 = !DILocation(line: 875, column: 18, scope: !2349)
!8264 = !DILocation(line: 875, column: 37, scope: !2349)
!8265 = !DILocation(line: 876, column: 17, scope: !2349)
!8266 = !DILocation(line: 876, column: 48, scope: !2349)
!8267 = !DILocation(line: 876, column: 64, scope: !2349)
!8268 = !DILocation(line: 0, scope: !2443, inlinedAt: !8269)
!8269 = distinct !DILocation(line: 880, column: 9, scope: !2349)
!8270 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !8269)
!8271 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !8269)
!8272 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !8269)
!8273 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !8269)
!8274 = !DILocation(line: 0, scope: !2497, inlinedAt: !8275)
!8275 = distinct !DILocation(line: 880, column: 29, scope: !2349)
!8276 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8275)
!8277 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8275)
!8278 = !DILocation(line: 0, scope: !2501, inlinedAt: !8279)
!8279 = distinct !DILocation(line: 880, column: 68, scope: !2349)
!8280 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !8279)
!8281 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !8279)
!8282 = !DILocation(line: 0, scope: !2497, inlinedAt: !8283)
!8283 = distinct !DILocation(line: 880, column: 78, scope: !2349)
!8284 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8283)
!8285 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8283)
!8286 = !DILocation(line: 880, column: 88, scope: !2349)
!8287 = !DILocation(line: 0, scope: !2505, inlinedAt: !8288)
!8288 = distinct !DILocation(line: 880, column: 85, scope: !2349)
!8289 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !8288)
!8290 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !8288)
!8291 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !8288)
!8292 = !DILocation(line: 0, scope: !2497, inlinedAt: !8293)
!8293 = distinct !DILocation(line: 880, column: 103, scope: !2349)
!8294 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8293)
!8295 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8293)
!8296 = !DILocation(line: 880, column: 113, scope: !2349)
!8297 = !DILocation(line: 0, scope: !2505, inlinedAt: !8298)
!8298 = distinct !DILocation(line: 880, column: 110, scope: !2349)
!8299 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !8298)
!8300 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !8298)
!8301 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !8298)
!8302 = !DILocation(line: 0, scope: !2497, inlinedAt: !8303)
!8303 = distinct !DILocation(line: 880, column: 128, scope: !2349)
!8304 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8303)
!8305 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8303)
!8306 = !DILocation(line: 0, scope: !2494, inlinedAt: !8307)
!8307 = distinct !DILocation(line: 880, column: 9, scope: !2349)
!8308 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !8307)
!8309 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !8307)
!8310 = !DILocation(line: 881, column: 5, scope: !2349)
!8311 = !DILocation(line: 882, column: 29, scope: !2352)
!8312 = !DILocation(line: 882, column: 15, scope: !2352)
!8313 = !DILocation(line: 885, column: 18, scope: !2352)
!8314 = !DILocation(line: 885, column: 37, scope: !2352)
!8315 = !DILocation(line: 885, column: 52, scope: !2352)
!8316 = !DILocation(line: 886, column: 48, scope: !2352)
!8317 = !DILocation(line: 886, column: 64, scope: !2352)
!8318 = !DILocation(line: 887, column: 48, scope: !2352)
!8319 = !DILocation(line: 0, scope: !2443, inlinedAt: !8320)
!8320 = distinct !DILocation(line: 890, column: 9, scope: !2352)
!8321 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !8320)
!8322 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !8320)
!8323 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !8320)
!8324 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !8320)
!8325 = !DILocation(line: 0, scope: !2497, inlinedAt: !8326)
!8326 = distinct !DILocation(line: 890, column: 29, scope: !2352)
!8327 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8326)
!8328 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8326)
!8329 = !DILocation(line: 0, scope: !2501, inlinedAt: !8330)
!8330 = distinct !DILocation(line: 890, column: 62, scope: !2352)
!8331 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !8330)
!8332 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !8330)
!8333 = !DILocation(line: 0, scope: !2497, inlinedAt: !8334)
!8334 = distinct !DILocation(line: 890, column: 72, scope: !2352)
!8335 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8334)
!8336 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8334)
!8337 = !DILocation(line: 890, column: 82, scope: !2352)
!8338 = !DILocation(line: 0, scope: !2505, inlinedAt: !8339)
!8339 = distinct !DILocation(line: 890, column: 79, scope: !2352)
!8340 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !8339)
!8341 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !8339)
!8342 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !8339)
!8343 = !DILocation(line: 0, scope: !2497, inlinedAt: !8344)
!8344 = distinct !DILocation(line: 890, column: 97, scope: !2352)
!8345 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8344)
!8346 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8344)
!8347 = !DILocation(line: 890, column: 107, scope: !2352)
!8348 = !DILocation(line: 0, scope: !2505, inlinedAt: !8349)
!8349 = distinct !DILocation(line: 890, column: 104, scope: !2352)
!8350 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !8349)
!8351 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !8349)
!8352 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !8349)
!8353 = !DILocation(line: 0, scope: !2497, inlinedAt: !8354)
!8354 = distinct !DILocation(line: 890, column: 122, scope: !2352)
!8355 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8354)
!8356 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8354)
!8357 = !DILocation(line: 890, column: 132, scope: !2352)
!8358 = !DILocation(line: 0, scope: !2505, inlinedAt: !8359)
!8359 = distinct !DILocation(line: 890, column: 129, scope: !2352)
!8360 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !8359)
!8361 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !8359)
!8362 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !8359)
!8363 = !DILocation(line: 0, scope: !2497, inlinedAt: !8364)
!8364 = distinct !DILocation(line: 890, column: 147, scope: !2352)
!8365 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8364)
!8366 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8364)
!8367 = !DILocation(line: 0, scope: !2494, inlinedAt: !8368)
!8368 = distinct !DILocation(line: 890, column: 9, scope: !2352)
!8369 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !8368)
!8370 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !8368)
!8371 = !DILocation(line: 893, column: 15, scope: !2339)
!8372 = !DILocation(line: 893, column: 34, scope: !2339)
!8373 = !DILocation(line: 894, column: 13, scope: !2339)
!8374 = !DILocation(line: 893, column: 11, scope: !2339)
!8375 = !DILocation(line: 896, column: 11, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !2339, file: !1697, line: 896, column: 9)
!8377 = !DILocation(line: 136, column: 23, scope: !8232, inlinedAt: !8378)
!8378 = distinct !DILocation(line: 897, column: 9, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8376, file: !1697, line: 896, column: 20)
!8380 = !DILocation(line: 138, column: 19, scope: !8232, inlinedAt: !8378)
!8381 = !DILocation(line: 139, column: 14, scope: !8232, inlinedAt: !8378)
!8382 = !DILocation(line: 896, column: 9, scope: !2339)
!8383 = !DILocation(line: 0, scope: !2517, inlinedAt: !8378)
!8384 = !DILocation(line: 135, column: 19, scope: !2517, inlinedAt: !8378)
!8385 = !DILocation(line: 0, scope: !2571, inlinedAt: !8386)
!8386 = distinct !DILocation(line: 897, column: 29, scope: !8379)
!8387 = !DILocation(line: 142, column: 37, scope: !2571, inlinedAt: !8386)
!8388 = !DILocation(line: 143, column: 15, scope: !2571, inlinedAt: !8386)
!8389 = !DILocation(line: 0, scope: !2568, inlinedAt: !8390)
!8390 = distinct !DILocation(line: 897, column: 9, scope: !8379)
!8391 = !DILocation(line: 194, column: 13, scope: !8252, inlinedAt: !8390)
!8392 = !DILocation(line: 200, column: 9, scope: !8254, inlinedAt: !8390)
!8393 = !DILocation(line: 898, column: 9, scope: !8379)
!8394 = !DILocation(line: 0, scope: !2443, inlinedAt: !8395)
!8395 = distinct !DILocation(line: 900, column: 9, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8376, file: !1697, line: 899, column: 12)
!8397 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !8395)
!8398 = !DILocation(line: 0, scope: !2497, inlinedAt: !8399)
!8399 = distinct !DILocation(line: 900, column: 29, scope: !8396)
!8400 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8399)
!8401 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8399)
!8402 = !DILocation(line: 0, scope: !2501, inlinedAt: !8403)
!8403 = distinct !DILocation(line: 900, column: 62, scope: !8396)
!8404 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !8403)
!8405 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !8403)
!8406 = !DILocation(line: 0, scope: !2497, inlinedAt: !8407)
!8407 = distinct !DILocation(line: 900, column: 75, scope: !8396)
!8408 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8407)
!8409 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8407)
!8410 = !DILocation(line: 0, scope: !2501, inlinedAt: !8411)
!8411 = distinct !DILocation(line: 900, column: 91, scope: !8396)
!8412 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !8411)
!8413 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !8411)
!8414 = !DILocation(line: 0, scope: !2497, inlinedAt: !8415)
!8415 = distinct !DILocation(line: 900, column: 101, scope: !8396)
!8416 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8415)
!8417 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8415)
!8418 = !DILocation(line: 0, scope: !2494, inlinedAt: !8419)
!8419 = distinct !DILocation(line: 900, column: 9, scope: !8396)
!8420 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !8419)
!8421 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !8419)
!8422 = !DILocation(line: 902, column: 42, scope: !2339)
!8423 = !DILocation(line: 902, column: 16, scope: !2339)
!8424 = !DILocation(line: 902, column: 14, scope: !2339)
!8425 = !DILocation(line: 903, column: 18, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !2339, file: !1697, line: 903, column: 9)
!8427 = !DILocation(line: 136, column: 23, scope: !8232, inlinedAt: !8428)
!8428 = distinct !DILocation(line: 904, column: 9, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8426, file: !1697, line: 903, column: 24)
!8430 = !DILocation(line: 138, column: 19, scope: !8232, inlinedAt: !8428)
!8431 = !DILocation(line: 139, column: 14, scope: !8232, inlinedAt: !8428)
!8432 = !DILocation(line: 903, column: 9, scope: !2339)
!8433 = !DILocation(line: 0, scope: !2517, inlinedAt: !8428)
!8434 = !DILocation(line: 135, column: 19, scope: !2517, inlinedAt: !8428)
!8435 = !DILocation(line: 0, scope: !2571, inlinedAt: !8436)
!8436 = distinct !DILocation(line: 904, column: 29, scope: !8429)
!8437 = !DILocation(line: 142, column: 37, scope: !2571, inlinedAt: !8436)
!8438 = !DILocation(line: 143, column: 15, scope: !2571, inlinedAt: !8436)
!8439 = !DILocation(line: 0, scope: !2568, inlinedAt: !8440)
!8440 = distinct !DILocation(line: 904, column: 9, scope: !8429)
!8441 = !DILocation(line: 194, column: 13, scope: !8252, inlinedAt: !8440)
!8442 = !DILocation(line: 200, column: 9, scope: !8254, inlinedAt: !8440)
!8443 = !DILocation(line: 905, column: 9, scope: !8429)
!8444 = !DILocation(line: 0, scope: !2443, inlinedAt: !8445)
!8445 = distinct !DILocation(line: 907, column: 5, scope: !2339)
!8446 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !8445)
!8447 = !DILocation(line: 0, scope: !2497, inlinedAt: !8448)
!8448 = distinct !DILocation(line: 907, column: 25, scope: !2339)
!8449 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8448)
!8450 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8448)
!8451 = !DILocation(line: 0, scope: !2501, inlinedAt: !8452)
!8452 = distinct !DILocation(line: 907, column: 90, scope: !2339)
!8453 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !8452)
!8454 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !8452)
!8455 = !DILocation(line: 0, scope: !2497, inlinedAt: !8456)
!8456 = distinct !DILocation(line: 907, column: 95, scope: !2339)
!8457 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8456)
!8458 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8456)
!8459 = !DILocation(line: 0, scope: !2501, inlinedAt: !8460)
!8460 = distinct !DILocation(line: 907, column: 111, scope: !2339)
!8461 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !8460)
!8462 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !8460)
!8463 = !DILocation(line: 0, scope: !2497, inlinedAt: !8464)
!8464 = distinct !DILocation(line: 907, column: 121, scope: !2339)
!8465 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8464)
!8466 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8464)
!8467 = !DILocation(line: 0, scope: !2494, inlinedAt: !8468)
!8468 = distinct !DILocation(line: 907, column: 5, scope: !2339)
!8469 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !8468)
!8470 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !8468)
!8471 = !DILocation(line: 910, column: 24, scope: !2339)
!8472 = !DILocation(line: 910, column: 14, scope: !2339)
!8473 = !DILocation(line: 0, scope: !2443, inlinedAt: !8474)
!8474 = distinct !DILocation(line: 911, column: 5, scope: !2339)
!8475 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !8474)
!8476 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !8474)
!8477 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !8474)
!8478 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !8474)
!8479 = !DILocation(line: 0, scope: !2497, inlinedAt: !8480)
!8480 = distinct !DILocation(line: 911, column: 25, scope: !2339)
!8481 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8480)
!8482 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8480)
!8483 = !DILocation(line: 911, column: 65, scope: !2339)
!8484 = !DILocation(line: 911, column: 56, scope: !2339)
!8485 = !DILocation(line: 911, column: 77, scope: !2339)
!8486 = !DILocation(line: 0, scope: !2509, inlinedAt: !8487)
!8487 = distinct !DILocation(line: 911, column: 53, scope: !2339)
!8488 = !DILocation(line: 167, column: 32, scope: !2509, inlinedAt: !8487)
!8489 = !DILocation(line: 168, column: 15, scope: !2509, inlinedAt: !8487)
!8490 = !DILocation(line: 0, scope: !2497, inlinedAt: !8491)
!8491 = distinct !DILocation(line: 912, column: 25, scope: !2339)
!8492 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8491)
!8493 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8491)
!8494 = !DILocation(line: 0, scope: !2494, inlinedAt: !8495)
!8495 = distinct !DILocation(line: 911, column: 5, scope: !2339)
!8496 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !8495)
!8497 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !8495)
!8498 = !DILocation(line: 0, scope: !2440, inlinedAt: !8499)
!8499 = distinct !DILocation(line: 920, column: 1, scope: !2339)
!8500 = !DILocation(line: 176, column: 54, scope: !7695, inlinedAt: !8499)
!8501 = !DILocation(line: 176, column: 18, scope: !7695, inlinedAt: !8499)
!8502 = !DILocation(line: 920, column: 1, scope: !2339)
!8503 = !DILocation(line: 922, column: 51, scope: !2355)
!8504 = !DILocation(line: 922, column: 75, scope: !2355)
!8505 = !DILocation(line: 0, scope: !2443, inlinedAt: !8506)
!8506 = distinct !DILocation(line: 923, column: 5, scope: !2355)
!8507 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !8506)
!8508 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !8506)
!8509 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !8506)
!8510 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !8506)
!8511 = !DILocation(line: 0, scope: !2497, inlinedAt: !8512)
!8512 = distinct !DILocation(line: 923, column: 25, scope: !2355)
!8513 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8512)
!8514 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8512)
!8515 = !DILocation(line: 0, scope: !2501, inlinedAt: !8516)
!8516 = distinct !DILocation(line: 924, column: 25, scope: !2355)
!8517 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !8516)
!8518 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !8516)
!8519 = !DILocation(line: 0, scope: !2497, inlinedAt: !8520)
!8520 = distinct !DILocation(line: 924, column: 41, scope: !2355)
!8521 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8520)
!8522 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8520)
!8523 = !DILocation(line: 925, column: 29, scope: !2355)
!8524 = !DILocation(line: 0, scope: !2497, inlinedAt: !8525)
!8525 = distinct !DILocation(line: 925, column: 25, scope: !2355)
!8526 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8525)
!8527 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8525)
!8528 = !DILocation(line: 0, scope: !2497, inlinedAt: !8529)
!8529 = distinct !DILocation(line: 926, column: 25, scope: !2355)
!8530 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8529)
!8531 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8529)
!8532 = !DILocation(line: 926, column: 49, scope: !2355)
!8533 = !DILocation(line: 0, scope: !2501, inlinedAt: !8534)
!8534 = distinct !DILocation(line: 926, column: 46, scope: !2355)
!8535 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !8534)
!8536 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !8534)
!8537 = !DILocation(line: 0, scope: !2497, inlinedAt: !8538)
!8538 = distinct !DILocation(line: 926, column: 53, scope: !2355)
!8539 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8538)
!8540 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8538)
!8541 = !DILocation(line: 0, scope: !2494, inlinedAt: !8542)
!8542 = distinct !DILocation(line: 923, column: 5, scope: !2355)
!8543 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !8542)
!8544 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !8542)
!8545 = !DILocation(line: 928, column: 5, scope: !2355)
!8546 = !DILocation(line: 928, column: 13, scope: !2355)
!8547 = !DILocation(line: 0, scope: !2435, inlinedAt: !8548)
!8548 = distinct !DILocation(line: 928, column: 13, scope: !2355)
!8549 = !DILocation(line: 165, column: 19, scope: !2435, inlinedAt: !8548)
!8550 = !DILocation(line: 166, column: 11, scope: !2435, inlinedAt: !8548)
!8551 = !DILocation(line: 166, column: 39, scope: !2435, inlinedAt: !8548)
!8552 = !DILocation(line: 166, column: 51, scope: !2435, inlinedAt: !8548)
!8553 = !DILocation(line: 167, column: 11, scope: !2435, inlinedAt: !8548)
!8554 = !DILocation(line: 169, column: 9, scope: !7533, inlinedAt: !8548)
!8555 = !DILocation(line: 171, column: 17, scope: !7533, inlinedAt: !8548)
!8556 = !DILocation(line: 171, column: 15, scope: !7533, inlinedAt: !8548)
!8557 = !DILocation(line: 172, column: 9, scope: !7537, inlinedAt: !8548)
!8558 = !DILocation(line: 172, column: 9, scope: !7533, inlinedAt: !8548)
!8559 = !DILocation(line: 172, column: 9, scope: !7540, inlinedAt: !8548)
!8560 = !DILocation(line: 173, column: 9, scope: !7542, inlinedAt: !8548)
!8561 = !DILocation(line: 173, column: 9, scope: !7533, inlinedAt: !8548)
!8562 = !DILocation(line: 173, column: 9, scope: !7545, inlinedAt: !8548)
!8563 = !DILocation(line: 929, column: 13, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !2355, file: !1697, line: 929, column: 9)
!8565 = !DILocation(line: 929, column: 19, scope: !8564)
!8566 = !DILocation(line: 929, column: 9, scope: !2355)
!8567 = !DILocation(line: 934, column: 25, scope: !2355)
!8568 = !DILocation(line: 934, column: 14, scope: !2355)
!8569 = !DILocation(line: 937, column: 5, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !2355, file: !1697, line: 937, column: 5)
!8571 = !DILocation(line: 937, column: 5, scope: !8572)
!8572 = !DILexicalBlockFile(scope: !8570, file: !1697, discriminator: 1)
!8573 = !DILocation(line: 937, column: 5, scope: !2355)
!8574 = !DILocation(line: 937, column: 5, scope: !8575)
!8575 = !DILexicalBlockFile(scope: !8576, file: !1697, discriminator: 3)
!8576 = !DILexicalBlockFile(scope: !8570, file: !1697, discriminator: 2)
!8577 = !DILocation(line: 939, column: 9, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !2355, file: !1697, line: 939, column: 9)
!8579 = !DILocation(line: 944, column: 54, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8578, file: !1697, line: 939, column: 69)
!8581 = !DILocation(line: 939, column: 43, scope: !8578)
!8582 = !DILocation(line: 939, column: 47, scope: !8578)
!8583 = !DILocation(line: 939, column: 62, scope: !8578)
!8584 = !DILocation(line: 939, column: 9, scope: !2355)
!8585 = !DILocation(line: 940, column: 9, scope: !8580)
!8586 = !DILocation(line: 940, column: 28, scope: !8580)
!8587 = !DILocation(line: 941, column: 17, scope: !8580)
!8588 = !DILocation(line: 941, column: 65, scope: !8580)
!8589 = !DILocation(line: 941, column: 35, scope: !8580)
!8590 = !DILocation(line: 941, column: 27, scope: !8580)
!8591 = !DILocation(line: 943, column: 13, scope: !8580)
!8592 = !DILocation(line: 943, column: 35, scope: !8580)
!8593 = !DILocation(line: 943, column: 62, scope: !8580)
!8594 = !DILocation(line: 944, column: 28, scope: !8580)
!8595 = !DILocation(line: 237, column: 47, scope: !2579, inlinedAt: !8596)
!8596 = distinct !DILocation(line: 944, column: 47, scope: !8580)
!8597 = !DILocation(line: 237, column: 59, scope: !2579, inlinedAt: !8596)
!8598 = !DILocation(line: 238, column: 16, scope: !2579, inlinedAt: !8596)
!8599 = !DILocation(line: 238, column: 14, scope: !2579, inlinedAt: !8596)
!8600 = !DILocation(line: 238, column: 12, scope: !2579, inlinedAt: !8596)
!8601 = !DILocation(line: 944, column: 77, scope: !8580)
!8602 = !DILocation(line: 944, column: 45, scope: !8580)
!8603 = !DILocation(line: 944, column: 70, scope: !8580)
!8604 = !DILocation(line: 237, column: 47, scope: !2579, inlinedAt: !8605)
!8605 = distinct !DILocation(line: 945, column: 30, scope: !8580)
!8606 = !DILocation(line: 237, column: 59, scope: !2579, inlinedAt: !8605)
!8607 = !DILocation(line: 945, column: 28, scope: !8580)
!8608 = !DILocation(line: 945, column: 53, scope: !8580)
!8609 = !DILocation(line: 946, column: 5, scope: !8580)
!8610 = !DILocation(line: 947, column: 9, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8578, file: !1697, line: 946, column: 12)
!8612 = !DILocation(line: 947, column: 28, scope: !8611)
!8613 = !DILocation(line: 948, column: 17, scope: !8611)
!8614 = !DILocation(line: 948, column: 65, scope: !8611)
!8615 = !DILocation(line: 948, column: 35, scope: !8611)
!8616 = !DILocation(line: 948, column: 27, scope: !8611)
!8617 = !DILocation(line: 949, column: 57, scope: !8611)
!8618 = !DILocation(line: 950, column: 13, scope: !8611)
!8619 = !DILocation(line: 950, column: 35, scope: !8611)
!8620 = !DILocation(line: 950, column: 62, scope: !8611)
!8621 = !DILocation(line: 951, column: 28, scope: !8611)
!8622 = !DILocation(line: 951, column: 45, scope: !8611)
!8623 = !DILocation(line: 951, column: 69, scope: !8611)
!8624 = !DILocation(line: 951, column: 62, scope: !8611)
!8625 = !DILocation(line: 952, column: 28, scope: !8611)
!8626 = !DILocation(line: 958, column: 58, scope: !2355)
!8627 = !DILocation(line: 957, column: 53, scope: !2355)
!8628 = !DILocation(line: 957, column: 28, scope: !2355)
!8629 = !DILocation(line: 956, column: 67, scope: !2355)
!8630 = !DILocation(line: 0, scope: !2443, inlinedAt: !8631)
!8631 = distinct !DILocation(line: 955, column: 5, scope: !2355)
!8632 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !8631)
!8633 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !8631)
!8634 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !8631)
!8635 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !8631)
!8636 = !DILocation(line: 0, scope: !2497, inlinedAt: !8637)
!8637 = distinct !DILocation(line: 955, column: 25, scope: !2355)
!8638 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8637)
!8639 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8637)
!8640 = !DILocation(line: 956, column: 37, scope: !2355)
!8641 = !DILocation(line: 956, column: 29, scope: !2355)
!8642 = !DILocation(line: 0, scope: !2501, inlinedAt: !8643)
!8643 = distinct !DILocation(line: 956, column: 25, scope: !2355)
!8644 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !8643)
!8645 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !8643)
!8646 = !DILocation(line: 0, scope: !2497, inlinedAt: !8647)
!8647 = distinct !DILocation(line: 956, column: 73, scope: !2355)
!8648 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8647)
!8649 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8647)
!8650 = !DILocation(line: 0, scope: !2505, inlinedAt: !8651)
!8651 = distinct !DILocation(line: 957, column: 25, scope: !2355)
!8652 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !8651)
!8653 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !8651)
!8654 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !8651)
!8655 = !DILocation(line: 0, scope: !2497, inlinedAt: !8656)
!8656 = distinct !DILocation(line: 957, column: 43, scope: !2355)
!8657 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8656)
!8658 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8656)
!8659 = !DILocation(line: 0, scope: !2505, inlinedAt: !8660)
!8660 = distinct !DILocation(line: 957, column: 50, scope: !2355)
!8661 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !8660)
!8662 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !8660)
!8663 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !8660)
!8664 = !DILocation(line: 0, scope: !2497, inlinedAt: !8665)
!8665 = distinct !DILocation(line: 957, column: 68, scope: !2355)
!8666 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8665)
!8667 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8665)
!8668 = !DILocation(line: 958, column: 28, scope: !2355)
!8669 = !DILocation(line: 0, scope: !2505, inlinedAt: !8670)
!8670 = distinct !DILocation(line: 958, column: 25, scope: !2355)
!8671 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !8670)
!8672 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !8670)
!8673 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !8670)
!8674 = !DILocation(line: 0, scope: !2497, inlinedAt: !8675)
!8675 = distinct !DILocation(line: 958, column: 43, scope: !2355)
!8676 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8675)
!8677 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8675)
!8678 = !DILocation(line: 0, scope: !2505, inlinedAt: !8679)
!8679 = distinct !DILocation(line: 958, column: 50, scope: !2355)
!8680 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !8679)
!8681 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !8679)
!8682 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !8679)
!8683 = !DILocation(line: 959, column: 34, scope: !2355)
!8684 = !DILocation(line: 959, column: 44, scope: !2355)
!8685 = !DILocation(line: 959, column: 29, scope: !8686)
!8686 = !DILexicalBlockFile(scope: !2355, file: !1697, discriminator: 1)
!8687 = !DILocation(line: 959, column: 28, scope: !8688)
!8688 = !DILexicalBlockFile(scope: !8689, file: !1697, discriminator: 4)
!8689 = !DILexicalBlockFile(scope: !2355, file: !1697, discriminator: 3)
!8690 = !DILocation(line: 0, scope: !2497, inlinedAt: !8691)
!8691 = distinct !DILocation(line: 959, column: 25, scope: !2355)
!8692 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8691)
!8693 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8691)
!8694 = !DILocation(line: 0, scope: !2497, inlinedAt: !8695)
!8695 = distinct !DILocation(line: 959, column: 85, scope: !2355)
!8696 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8695)
!8697 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8695)
!8698 = !DILocation(line: 959, column: 105, scope: !2355)
!8699 = !DILocation(line: 0, scope: !2501, inlinedAt: !8700)
!8700 = distinct !DILocation(line: 959, column: 97, scope: !2355)
!8701 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !8700)
!8702 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !8700)
!8703 = !DILocation(line: 0, scope: !2497, inlinedAt: !8704)
!8704 = distinct !DILocation(line: 959, column: 110, scope: !2355)
!8705 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8704)
!8706 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8704)
!8707 = !DILocation(line: 960, column: 34, scope: !2355)
!8708 = !DILocation(line: 960, column: 44, scope: !2355)
!8709 = !DILocation(line: 960, column: 65, scope: !2355)
!8710 = !DILocation(line: 960, column: 29, scope: !2355)
!8711 = !DILocation(line: 960, column: 52, scope: !2355)
!8712 = !DILocation(line: 960, column: 51, scope: !2355)
!8713 = !DILocation(line: 960, column: 74, scope: !2355)
!8714 = !DILocation(line: 960, column: 73, scope: !2355)
!8715 = !DILocation(line: 960, column: 72, scope: !2355)
!8716 = !DILocation(line: 0, scope: !2588, inlinedAt: !8717)
!8717 = distinct !DILocation(line: 960, column: 25, scope: !8688)
!8718 = !DILocation(line: 172, column: 31, scope: !2588, inlinedAt: !8717)
!8719 = !DILocation(line: 173, column: 49, scope: !2588, inlinedAt: !8717)
!8720 = !DILocation(line: 173, column: 15, scope: !2588, inlinedAt: !8717)
!8721 = !DILocation(line: 0, scope: !2497, inlinedAt: !8722)
!8722 = distinct !DILocation(line: 960, column: 97, scope: !2355)
!8723 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8722)
!8724 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8722)
!8725 = !DILocation(line: 0, scope: !2494, inlinedAt: !8726)
!8726 = distinct !DILocation(line: 955, column: 5, scope: !2355)
!8727 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !8726)
!8728 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !8726)
!8729 = !DILocation(line: 963, column: 24, scope: !2355)
!8730 = !DILocation(line: 963, column: 14, scope: !2355)
!8731 = !DILocation(line: 0, scope: !2443, inlinedAt: !8732)
!8732 = distinct !DILocation(line: 964, column: 5, scope: !2355)
!8733 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !8732)
!8734 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !8732)
!8735 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !8732)
!8736 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !8732)
!8737 = !DILocation(line: 0, scope: !2497, inlinedAt: !8738)
!8738 = distinct !DILocation(line: 964, column: 25, scope: !2355)
!8739 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8738)
!8740 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8738)
!8741 = !DILocation(line: 964, column: 53, scope: !2355)
!8742 = !DILocation(line: 964, column: 44, scope: !2355)
!8743 = !DILocation(line: 964, column: 65, scope: !2355)
!8744 = !DILocation(line: 0, scope: !2509, inlinedAt: !8745)
!8745 = distinct !DILocation(line: 964, column: 41, scope: !2355)
!8746 = !DILocation(line: 167, column: 32, scope: !2509, inlinedAt: !8745)
!8747 = !DILocation(line: 168, column: 15, scope: !2509, inlinedAt: !8745)
!8748 = !DILocation(line: 0, scope: !2497, inlinedAt: !8749)
!8749 = distinct !DILocation(line: 965, column: 25, scope: !2355)
!8750 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8749)
!8751 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8749)
!8752 = !DILocation(line: 0, scope: !2494, inlinedAt: !8753)
!8753 = distinct !DILocation(line: 964, column: 5, scope: !2355)
!8754 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !8753)
!8755 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !8753)
!8756 = !DILocation(line: 0, scope: !2440, inlinedAt: !8757)
!8757 = distinct !DILocation(line: 969, column: 1, scope: !2355)
!8758 = !DILocation(line: 176, column: 54, scope: !7695, inlinedAt: !8757)
!8759 = !DILocation(line: 176, column: 18, scope: !7695, inlinedAt: !8757)
!8760 = !DILocation(line: 969, column: 1, scope: !2355)
!8761 = !DILocation(line: 971, column: 49, scope: !2362)
!8762 = !DILocation(line: 971, column: 73, scope: !2362)
!8763 = !DILocation(line: 0, scope: !2443, inlinedAt: !8764)
!8764 = distinct !DILocation(line: 972, column: 5, scope: !2362)
!8765 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !8764)
!8766 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !8764)
!8767 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !8764)
!8768 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !8764)
!8769 = !DILocation(line: 0, scope: !2497, inlinedAt: !8770)
!8770 = distinct !DILocation(line: 972, column: 25, scope: !2362)
!8771 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8770)
!8772 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8770)
!8773 = !DILocation(line: 0, scope: !2501, inlinedAt: !8774)
!8774 = distinct !DILocation(line: 973, column: 25, scope: !2362)
!8775 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !8774)
!8776 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !8774)
!8777 = !DILocation(line: 0, scope: !2497, inlinedAt: !8778)
!8778 = distinct !DILocation(line: 973, column: 41, scope: !2362)
!8779 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8778)
!8780 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8778)
!8781 = !DILocation(line: 974, column: 29, scope: !2362)
!8782 = !DILocation(line: 0, scope: !2497, inlinedAt: !8783)
!8783 = distinct !DILocation(line: 974, column: 25, scope: !2362)
!8784 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8783)
!8785 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8783)
!8786 = !DILocation(line: 0, scope: !2497, inlinedAt: !8787)
!8787 = distinct !DILocation(line: 975, column: 25, scope: !2362)
!8788 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8787)
!8789 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8787)
!8790 = !DILocation(line: 975, column: 40, scope: !2362)
!8791 = !DILocation(line: 0, scope: !2501, inlinedAt: !8792)
!8792 = distinct !DILocation(line: 975, column: 37, scope: !2362)
!8793 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !8792)
!8794 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !8792)
!8795 = !DILocation(line: 0, scope: !2497, inlinedAt: !8796)
!8796 = distinct !DILocation(line: 975, column: 44, scope: !2362)
!8797 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8796)
!8798 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8796)
!8799 = !DILocation(line: 976, column: 61, scope: !2362)
!8800 = !DILocation(line: 976, column: 28, scope: !2362)
!8801 = !DILocation(line: 0, scope: !2501, inlinedAt: !8802)
!8802 = distinct !DILocation(line: 976, column: 25, scope: !2362)
!8803 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !8802)
!8804 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !8802)
!8805 = !DILocation(line: 0, scope: !2497, inlinedAt: !8806)
!8806 = distinct !DILocation(line: 976, column: 66, scope: !2362)
!8807 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8806)
!8808 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8806)
!8809 = !DILocation(line: 977, column: 66, scope: !2362)
!8810 = !DILocation(line: 977, column: 36, scope: !2362)
!8811 = !DILocation(line: 977, column: 28, scope: !2362)
!8812 = !DILocation(line: 0, scope: !2501, inlinedAt: !8813)
!8813 = distinct !DILocation(line: 977, column: 25, scope: !2362)
!8814 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !8813)
!8815 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !8813)
!8816 = !DILocation(line: 0, scope: !2497, inlinedAt: !8817)
!8817 = distinct !DILocation(line: 977, column: 71, scope: !2362)
!8818 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8817)
!8819 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8817)
!8820 = !DILocation(line: 0, scope: !2494, inlinedAt: !8821)
!8821 = distinct !DILocation(line: 972, column: 5, scope: !2362)
!8822 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !8821)
!8823 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !8821)
!8824 = !DILocation(line: 979, column: 5, scope: !2362)
!8825 = !DILocation(line: 979, column: 13, scope: !2362)
!8826 = !DILocation(line: 0, scope: !2435, inlinedAt: !8827)
!8827 = distinct !DILocation(line: 979, column: 13, scope: !2362)
!8828 = !DILocation(line: 165, column: 19, scope: !2435, inlinedAt: !8827)
!8829 = !DILocation(line: 166, column: 11, scope: !2435, inlinedAt: !8827)
!8830 = !DILocation(line: 166, column: 39, scope: !2435, inlinedAt: !8827)
!8831 = !DILocation(line: 166, column: 51, scope: !2435, inlinedAt: !8827)
!8832 = !DILocation(line: 167, column: 11, scope: !2435, inlinedAt: !8827)
!8833 = !DILocation(line: 169, column: 9, scope: !7533, inlinedAt: !8827)
!8834 = !DILocation(line: 171, column: 17, scope: !7533, inlinedAt: !8827)
!8835 = !DILocation(line: 171, column: 15, scope: !7533, inlinedAt: !8827)
!8836 = !DILocation(line: 172, column: 9, scope: !7537, inlinedAt: !8827)
!8837 = !DILocation(line: 172, column: 9, scope: !7533, inlinedAt: !8827)
!8838 = !DILocation(line: 172, column: 9, scope: !7540, inlinedAt: !8827)
!8839 = !DILocation(line: 173, column: 9, scope: !7542, inlinedAt: !8827)
!8840 = !DILocation(line: 173, column: 9, scope: !7533, inlinedAt: !8827)
!8841 = !DILocation(line: 173, column: 9, scope: !7545, inlinedAt: !8827)
!8842 = !DILocation(line: 980, column: 13, scope: !8843)
!8843 = distinct !DILexicalBlock(scope: !2362, file: !1697, line: 980, column: 9)
!8844 = !DILocation(line: 980, column: 19, scope: !8843)
!8845 = !DILocation(line: 980, column: 9, scope: !2362)
!8846 = !DILocation(line: 985, column: 25, scope: !2362)
!8847 = !DILocation(line: 985, column: 14, scope: !2362)
!8848 = !DILocation(line: 988, column: 5, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !2362, file: !1697, line: 988, column: 5)
!8850 = !DILocation(line: 988, column: 5, scope: !8851)
!8851 = !DILexicalBlockFile(scope: !8849, file: !1697, discriminator: 1)
!8852 = !DILocation(line: 988, column: 5, scope: !2362)
!8853 = !DILocation(line: 988, column: 5, scope: !8854)
!8854 = !DILexicalBlockFile(scope: !8855, file: !1697, discriminator: 3)
!8855 = !DILexicalBlockFile(scope: !8849, file: !1697, discriminator: 2)
!8856 = !DILocation(line: 0, scope: !2443, inlinedAt: !8857)
!8857 = distinct !DILocation(line: 990, column: 5, scope: !2362)
!8858 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !8857)
!8859 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !8857)
!8860 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !8857)
!8861 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !8857)
!8862 = !DILocation(line: 0, scope: !2497, inlinedAt: !8863)
!8863 = distinct !DILocation(line: 990, column: 25, scope: !2362)
!8864 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8863)
!8865 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8863)
!8866 = !DILocation(line: 991, column: 67, scope: !2362)
!8867 = !DILocation(line: 991, column: 37, scope: !2362)
!8868 = !DILocation(line: 991, column: 29, scope: !2362)
!8869 = !DILocation(line: 0, scope: !2501, inlinedAt: !8870)
!8870 = distinct !DILocation(line: 991, column: 25, scope: !2362)
!8871 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !8870)
!8872 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !8870)
!8873 = !DILocation(line: 0, scope: !2497, inlinedAt: !8874)
!8874 = distinct !DILocation(line: 991, column: 73, scope: !2362)
!8875 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8874)
!8876 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8874)
!8877 = !DILocation(line: 992, column: 28, scope: !2362)
!8878 = !DILocation(line: 0, scope: !2505, inlinedAt: !8879)
!8879 = distinct !DILocation(line: 992, column: 25, scope: !2362)
!8880 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !8879)
!8881 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !8879)
!8882 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !8879)
!8883 = !DILocation(line: 0, scope: !2497, inlinedAt: !8884)
!8884 = distinct !DILocation(line: 992, column: 43, scope: !2362)
!8885 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8884)
!8886 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8884)
!8887 = !DILocation(line: 992, column: 53, scope: !2362)
!8888 = !DILocation(line: 0, scope: !2505, inlinedAt: !8889)
!8889 = distinct !DILocation(line: 992, column: 50, scope: !2362)
!8890 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !8889)
!8891 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !8889)
!8892 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !8889)
!8893 = !DILocation(line: 0, scope: !2497, inlinedAt: !8894)
!8894 = distinct !DILocation(line: 992, column: 68, scope: !2362)
!8895 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8894)
!8896 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8894)
!8897 = !DILocation(line: 993, column: 28, scope: !2362)
!8898 = !DILocation(line: 0, scope: !2505, inlinedAt: !8899)
!8899 = distinct !DILocation(line: 993, column: 25, scope: !2362)
!8900 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !8899)
!8901 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !8899)
!8902 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !8899)
!8903 = !DILocation(line: 0, scope: !2497, inlinedAt: !8904)
!8904 = distinct !DILocation(line: 993, column: 43, scope: !2362)
!8905 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8904)
!8906 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8904)
!8907 = !DILocation(line: 993, column: 58, scope: !2362)
!8908 = !DILocation(line: 0, scope: !2505, inlinedAt: !8909)
!8909 = distinct !DILocation(line: 993, column: 50, scope: !2362)
!8910 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !8909)
!8911 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !8909)
!8912 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !8909)
!8913 = !DILocation(line: 0, scope: !2497, inlinedAt: !8914)
!8914 = distinct !DILocation(line: 994, column: 25, scope: !2362)
!8915 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8914)
!8916 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8914)
!8917 = !DILocation(line: 994, column: 51, scope: !2362)
!8918 = !DILocation(line: 0, scope: !2501, inlinedAt: !8919)
!8919 = distinct !DILocation(line: 994, column: 43, scope: !2362)
!8920 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !8919)
!8921 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !8919)
!8922 = !DILocation(line: 0, scope: !2497, inlinedAt: !8923)
!8923 = distinct !DILocation(line: 994, column: 56, scope: !2362)
!8924 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8923)
!8925 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8923)
!8926 = !DILocation(line: 0, scope: !2494, inlinedAt: !8927)
!8927 = distinct !DILocation(line: 990, column: 5, scope: !2362)
!8928 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !8927)
!8929 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !8927)
!8930 = !DILocation(line: 996, column: 5, scope: !2362)
!8931 = !DILocation(line: 996, column: 24, scope: !2362)
!8932 = !DILocation(line: 997, column: 13, scope: !2362)
!8933 = !DILocation(line: 997, column: 61, scope: !2362)
!8934 = !DILocation(line: 997, column: 31, scope: !2362)
!8935 = !DILocation(line: 997, column: 23, scope: !2362)
!8936 = !DILocation(line: 0, scope: !2443, inlinedAt: !8937)
!8937 = distinct !DILocation(line: 1000, column: 5, scope: !2362)
!8938 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !8937)
!8939 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !8937)
!8940 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !8937)
!8941 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !8937)
!8942 = !DILocation(line: 0, scope: !2497, inlinedAt: !8943)
!8943 = distinct !DILocation(line: 1000, column: 25, scope: !2362)
!8944 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8943)
!8945 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8943)
!8946 = !DILocation(line: 0, scope: !2494, inlinedAt: !8947)
!8947 = distinct !DILocation(line: 1000, column: 5, scope: !2362)
!8948 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !8947)
!8949 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !8947)
!8950 = !DILocation(line: 1002, column: 9, scope: !2370)
!8951 = !DILocation(line: 1002, column: 43, scope: !2370)
!8952 = !DILocation(line: 1002, column: 47, scope: !2370)
!8953 = !DILocation(line: 1002, column: 62, scope: !2370)
!8954 = !DILocation(line: 1002, column: 9, scope: !2362)
!8955 = !DILocation(line: 1003, column: 9, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !2369, file: !1697, line: 1003, column: 9)
!8957 = !DILocation(line: 1003, column: 9, scope: !2369)
!8958 = !DILocation(line: 1003, column: 9, scope: !8959)
!8959 = !DILexicalBlockFile(scope: !8956, file: !1697, discriminator: 1)
!8960 = !DILocation(line: 0, scope: !2443, inlinedAt: !8961)
!8961 = distinct !DILocation(line: 1004, column: 9, scope: !2369)
!8962 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !8961)
!8963 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !8961)
!8964 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !8961)
!8965 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !8961)
!8966 = !DILocation(line: 0, scope: !2497, inlinedAt: !8967)
!8967 = distinct !DILocation(line: 1004, column: 29, scope: !2369)
!8968 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8967)
!8969 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8967)
!8970 = !DILocation(line: 1005, column: 14, scope: !2369)
!8971 = !DILocation(line: 1005, column: 31, scope: !2369)
!8972 = !DILocation(line: 1005, column: 29, scope: !2369)
!8973 = !DILocation(line: 237, column: 47, scope: !2579, inlinedAt: !8974)
!8974 = distinct !DILocation(line: 1005, column: 48, scope: !2369)
!8975 = !DILocation(line: 237, column: 59, scope: !2579, inlinedAt: !8974)
!8976 = !DILocation(line: 238, column: 16, scope: !2579, inlinedAt: !8974)
!8977 = !DILocation(line: 238, column: 14, scope: !2579, inlinedAt: !8974)
!8978 = !DILocation(line: 238, column: 12, scope: !2579, inlinedAt: !8974)
!8979 = !DILocation(line: 1005, column: 78, scope: !2369)
!8980 = !DILocation(line: 1005, column: 46, scope: !2369)
!8981 = !DILocation(line: 1005, column: 71, scope: !2369)
!8982 = !DILocation(line: 0, scope: !2505, inlinedAt: !8983)
!8983 = distinct !DILocation(line: 1004, column: 71, scope: !2369)
!8984 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !8983)
!8985 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !8983)
!8986 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !8983)
!8987 = !DILocation(line: 0, scope: !2497, inlinedAt: !8988)
!8988 = distinct !DILocation(line: 1006, column: 13, scope: !2369)
!8989 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !8988)
!8990 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !8988)
!8991 = !DILocation(line: 1006, column: 37, scope: !2369)
!8992 = !DILocation(line: 237, column: 47, scope: !2579, inlinedAt: !8993)
!8993 = distinct !DILocation(line: 1006, column: 54, scope: !2369)
!8994 = !DILocation(line: 237, column: 59, scope: !2579, inlinedAt: !8993)
!8995 = !DILocation(line: 238, column: 16, scope: !2579, inlinedAt: !8993)
!8996 = !DILocation(line: 238, column: 14, scope: !2579, inlinedAt: !8993)
!8997 = !DILocation(line: 238, column: 12, scope: !2579, inlinedAt: !8993)
!8998 = !DILocation(line: 1006, column: 84, scope: !2369)
!8999 = !DILocation(line: 1006, column: 52, scope: !2369)
!9000 = !DILocation(line: 1006, column: 77, scope: !2369)
!9001 = !DILocation(line: 0, scope: !2505, inlinedAt: !9002)
!9002 = distinct !DILocation(line: 1006, column: 33, scope: !2369)
!9003 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !9002)
!9004 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !9002)
!9005 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !9002)
!9006 = !DILocation(line: 0, scope: !2494, inlinedAt: !9007)
!9007 = distinct !DILocation(line: 1004, column: 9, scope: !2369)
!9008 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !9007)
!9009 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !9007)
!9010 = !DILocation(line: 1007, column: 27, scope: !2369)
!9011 = !DILocation(line: 1007, column: 44, scope: !2369)
!9012 = !DILocation(line: 1007, column: 42, scope: !2369)
!9013 = !DILocation(line: 237, column: 47, scope: !2579, inlinedAt: !9014)
!9014 = distinct !DILocation(line: 1007, column: 61, scope: !2369)
!9015 = !DILocation(line: 237, column: 59, scope: !2579, inlinedAt: !9014)
!9016 = !DILocation(line: 238, column: 16, scope: !2579, inlinedAt: !9014)
!9017 = !DILocation(line: 238, column: 14, scope: !2579, inlinedAt: !9014)
!9018 = !DILocation(line: 238, column: 12, scope: !2579, inlinedAt: !9014)
!9019 = !DILocation(line: 1007, column: 91, scope: !2369)
!9020 = !DILocation(line: 1007, column: 59, scope: !2369)
!9021 = !DILocation(line: 1007, column: 84, scope: !2369)
!9022 = !DILocation(line: 1007, column: 16, scope: !2369)
!9023 = !DILocation(line: 0, scope: !2443, inlinedAt: !9024)
!9024 = distinct !DILocation(line: 1008, column: 9, scope: !2369)
!9025 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !9024)
!9026 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !9024)
!9027 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !9024)
!9028 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !9024)
!9029 = !DILocation(line: 0, scope: !2497, inlinedAt: !9030)
!9030 = distinct !DILocation(line: 1008, column: 29, scope: !2369)
!9031 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9030)
!9032 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9030)
!9033 = !DILocation(line: 0, scope: !2592, inlinedAt: !9034)
!9034 = distinct !DILocation(line: 1008, column: 46, scope: !2369)
!9035 = !DILocation(line: 162, column: 34, scope: !2592, inlinedAt: !9034)
!9036 = !DILocation(line: 163, column: 49, scope: !2592, inlinedAt: !9034)
!9037 = !DILocation(line: 163, column: 15, scope: !2592, inlinedAt: !9034)
!9038 = !DILocation(line: 0, scope: !2497, inlinedAt: !9039)
!9039 = distinct !DILocation(line: 1008, column: 70, scope: !2369)
!9040 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9039)
!9041 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9039)
!9042 = !DILocation(line: 0, scope: !2494, inlinedAt: !9043)
!9043 = distinct !DILocation(line: 1008, column: 9, scope: !2369)
!9044 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !9043)
!9045 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !9043)
!9046 = !DILocation(line: 1009, column: 30, scope: !2369)
!9047 = !DILocation(line: 237, column: 47, scope: !2579, inlinedAt: !9048)
!9048 = distinct !DILocation(line: 1009, column: 47, scope: !2369)
!9049 = !DILocation(line: 237, column: 59, scope: !2579, inlinedAt: !9048)
!9050 = !DILocation(line: 238, column: 16, scope: !2579, inlinedAt: !9048)
!9051 = !DILocation(line: 238, column: 14, scope: !2579, inlinedAt: !9048)
!9052 = !DILocation(line: 238, column: 12, scope: !2579, inlinedAt: !9048)
!9053 = !DILocation(line: 1009, column: 77, scope: !2369)
!9054 = !DILocation(line: 1009, column: 45, scope: !2369)
!9055 = !DILocation(line: 1009, column: 70, scope: !2369)
!9056 = !DILocation(line: 1009, column: 16, scope: !2369)
!9057 = !DILocation(line: 0, scope: !2443, inlinedAt: !9058)
!9058 = distinct !DILocation(line: 1010, column: 9, scope: !2369)
!9059 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !9058)
!9060 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !9058)
!9061 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !9058)
!9062 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !9058)
!9063 = !DILocation(line: 0, scope: !2497, inlinedAt: !9064)
!9064 = distinct !DILocation(line: 1010, column: 29, scope: !2369)
!9065 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9064)
!9066 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9064)
!9067 = !DILocation(line: 0, scope: !2592, inlinedAt: !9068)
!9068 = distinct !DILocation(line: 1010, column: 49, scope: !2369)
!9069 = !DILocation(line: 162, column: 34, scope: !2592, inlinedAt: !9068)
!9070 = !DILocation(line: 163, column: 49, scope: !2592, inlinedAt: !9068)
!9071 = !DILocation(line: 163, column: 15, scope: !2592, inlinedAt: !9068)
!9072 = !DILocation(line: 0, scope: !2497, inlinedAt: !9073)
!9073 = distinct !DILocation(line: 1010, column: 76, scope: !2369)
!9074 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9073)
!9075 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9073)
!9076 = !DILocation(line: 0, scope: !2494, inlinedAt: !9077)
!9077 = distinct !DILocation(line: 1010, column: 9, scope: !2369)
!9078 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !9077)
!9079 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !9077)
!9080 = !DILocation(line: 1011, column: 9, scope: !2369)
!9081 = !DILocation(line: 1011, column: 28, scope: !2369)
!9082 = !DILocation(line: 1012, column: 17, scope: !2369)
!9083 = !DILocation(line: 1012, column: 65, scope: !2369)
!9084 = !DILocation(line: 1012, column: 35, scope: !2369)
!9085 = !DILocation(line: 1012, column: 27, scope: !2369)
!9086 = !DILocation(line: 1014, column: 13, scope: !2369)
!9087 = !DILocation(line: 1014, column: 35, scope: !2369)
!9088 = !DILocation(line: 1014, column: 62, scope: !2369)
!9089 = !DILocation(line: 0, scope: !2443, inlinedAt: !9090)
!9090 = distinct !DILocation(line: 1017, column: 9, scope: !2369)
!9091 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !9090)
!9092 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !9090)
!9093 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !9090)
!9094 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !9090)
!9095 = !DILocation(line: 0, scope: !2497, inlinedAt: !9096)
!9096 = distinct !DILocation(line: 1017, column: 29, scope: !2369)
!9097 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9096)
!9098 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9096)
!9099 = !DILocation(line: 0, scope: !2494, inlinedAt: !9100)
!9100 = distinct !DILocation(line: 1017, column: 9, scope: !2369)
!9101 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !9100)
!9102 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !9100)
!9103 = !DILocation(line: 1018, column: 5, scope: !2369)
!9104 = !DILocation(line: 0, scope: !2443, inlinedAt: !9105)
!9105 = distinct !DILocation(line: 1019, column: 9, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !2370, file: !1697, line: 1018, column: 12)
!9107 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !9105)
!9108 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !9105)
!9109 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !9105)
!9110 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !9105)
!9111 = !DILocation(line: 0, scope: !2497, inlinedAt: !9112)
!9112 = distinct !DILocation(line: 1019, column: 29, scope: !9106)
!9113 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9112)
!9114 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9112)
!9115 = !DILocation(line: 1020, column: 23, scope: !9106)
!9116 = !DILocation(line: 1020, column: 42, scope: !9106)
!9117 = !DILocation(line: 0, scope: !2501, inlinedAt: !9118)
!9118 = distinct !DILocation(line: 1020, column: 13, scope: !9106)
!9119 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !9118)
!9120 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !9118)
!9121 = !DILocation(line: 0, scope: !2497, inlinedAt: !9122)
!9122 = distinct !DILocation(line: 1021, column: 13, scope: !9106)
!9123 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9122)
!9124 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9122)
!9125 = !DILocation(line: 1021, column: 26, scope: !9106)
!9126 = !DILocation(line: 0, scope: !2505, inlinedAt: !9127)
!9127 = distinct !DILocation(line: 1021, column: 23, scope: !9106)
!9128 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !9127)
!9129 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !9127)
!9130 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !9127)
!9131 = !DILocation(line: 0, scope: !2497, inlinedAt: !9132)
!9132 = distinct !DILocation(line: 1022, column: 13, scope: !9106)
!9133 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9132)
!9134 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9132)
!9135 = !DILocation(line: 1022, column: 25, scope: !9106)
!9136 = !DILocation(line: 0, scope: !2505, inlinedAt: !9137)
!9137 = distinct !DILocation(line: 1022, column: 22, scope: !9106)
!9138 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !9137)
!9139 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !9137)
!9140 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !9137)
!9141 = !DILocation(line: 0, scope: !2497, inlinedAt: !9142)
!9142 = distinct !DILocation(line: 1023, column: 13, scope: !9106)
!9143 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9142)
!9144 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9142)
!9145 = !DILocation(line: 1023, column: 25, scope: !9106)
!9146 = !DILocation(line: 0, scope: !2505, inlinedAt: !9147)
!9147 = distinct !DILocation(line: 1023, column: 22, scope: !9106)
!9148 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !9147)
!9149 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !9147)
!9150 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !9147)
!9151 = !DILocation(line: 0, scope: !2497, inlinedAt: !9152)
!9152 = distinct !DILocation(line: 1024, column: 13, scope: !9106)
!9153 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9152)
!9154 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9152)
!9155 = !DILocation(line: 1024, column: 38, scope: !9106)
!9156 = !DILocation(line: 0, scope: !2501, inlinedAt: !9157)
!9157 = distinct !DILocation(line: 1024, column: 30, scope: !9106)
!9158 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !9157)
!9159 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !9157)
!9160 = !DILocation(line: 0, scope: !2497, inlinedAt: !9161)
!9161 = distinct !DILocation(line: 1025, column: 13, scope: !9106)
!9162 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9161)
!9163 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9161)
!9164 = !DILocation(line: 1025, column: 29, scope: !9106)
!9165 = !DILocation(line: 1025, column: 46, scope: !9106)
!9166 = !DILocation(line: 1025, column: 44, scope: !9106)
!9167 = !DILocation(line: 1025, column: 63, scope: !9106)
!9168 = !DILocation(line: 1025, column: 61, scope: !9106)
!9169 = !DILocation(line: 1025, column: 85, scope: !9106)
!9170 = !DILocation(line: 1025, column: 78, scope: !9106)
!9171 = !DILocation(line: 0, scope: !2505, inlinedAt: !9172)
!9172 = distinct !DILocation(line: 1025, column: 26, scope: !9106)
!9173 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !9172)
!9174 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !9172)
!9175 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !9172)
!9176 = !DILocation(line: 0, scope: !2497, inlinedAt: !9177)
!9177 = distinct !DILocation(line: 1026, column: 13, scope: !9106)
!9178 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9177)
!9179 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9177)
!9180 = !DILocation(line: 1026, column: 31, scope: !9106)
!9181 = !DILocation(line: 1026, column: 53, scope: !9106)
!9182 = !DILocation(line: 1026, column: 46, scope: !9106)
!9183 = !DILocation(line: 0, scope: !2505, inlinedAt: !9184)
!9184 = distinct !DILocation(line: 1026, column: 27, scope: !9106)
!9185 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !9184)
!9186 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !9184)
!9187 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !9184)
!9188 = !DILocation(line: 0, scope: !2497, inlinedAt: !9189)
!9189 = distinct !DILocation(line: 1026, column: 64, scope: !9106)
!9190 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9189)
!9191 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9189)
!9192 = !DILocation(line: 0, scope: !2494, inlinedAt: !9193)
!9193 = distinct !DILocation(line: 1019, column: 9, scope: !9106)
!9194 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !9193)
!9195 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !9193)
!9196 = !DILocation(line: 1030, column: 9, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9106, file: !1697, line: 1030, column: 9)
!9198 = !DILocation(line: 1030, column: 9, scope: !9106)
!9199 = !DILocation(line: 1030, column: 9, scope: !9200)
!9200 = !DILexicalBlockFile(scope: !9197, file: !1697, discriminator: 1)
!9201 = !DILocation(line: 1031, column: 9, scope: !9106)
!9202 = !DILocation(line: 1031, column: 28, scope: !9106)
!9203 = !DILocation(line: 1032, column: 17, scope: !9106)
!9204 = !DILocation(line: 1032, column: 65, scope: !9106)
!9205 = !DILocation(line: 1032, column: 35, scope: !9106)
!9206 = !DILocation(line: 1032, column: 27, scope: !9106)
!9207 = !DILocation(line: 1033, column: 57, scope: !9106)
!9208 = !DILocation(line: 1034, column: 13, scope: !9106)
!9209 = !DILocation(line: 1034, column: 35, scope: !9106)
!9210 = !DILocation(line: 1034, column: 62, scope: !9106)
!9211 = !DILocation(line: 1035, column: 28, scope: !9106)
!9212 = !DILocation(line: 1035, column: 45, scope: !9106)
!9213 = !DILocation(line: 1035, column: 69, scope: !9106)
!9214 = !DILocation(line: 1035, column: 62, scope: !9106)
!9215 = !DILocation(line: 1036, column: 28, scope: !9106)
!9216 = !DILocation(line: 0, scope: !2443, inlinedAt: !9217)
!9217 = distinct !DILocation(line: 1038, column: 9, scope: !9106)
!9218 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !9217)
!9219 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !9217)
!9220 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !9217)
!9221 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !9217)
!9222 = !DILocation(line: 0, scope: !2497, inlinedAt: !9223)
!9223 = distinct !DILocation(line: 1038, column: 29, scope: !9106)
!9224 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9223)
!9225 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9223)
!9226 = !DILocation(line: 0, scope: !2494, inlinedAt: !9227)
!9227 = distinct !DILocation(line: 1038, column: 9, scope: !9106)
!9228 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !9227)
!9229 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !9227)
!9230 = !DILocation(line: 0, scope: !2443, inlinedAt: !9231)
!9231 = distinct !DILocation(line: 1041, column: 5, scope: !2362)
!9232 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !9231)
!9233 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !9231)
!9234 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !9231)
!9235 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !9231)
!9236 = !DILocation(line: 0, scope: !2497, inlinedAt: !9237)
!9237 = distinct !DILocation(line: 1041, column: 25, scope: !2362)
!9238 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9237)
!9239 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9237)
!9240 = !DILocation(line: 1041, column: 57, scope: !2362)
!9241 = !DILocation(line: 0, scope: !2505, inlinedAt: !9242)
!9242 = distinct !DILocation(line: 1041, column: 54, scope: !2362)
!9243 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !9242)
!9244 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !9242)
!9245 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !9242)
!9246 = !DILocation(line: 0, scope: !2497, inlinedAt: !9247)
!9247 = distinct !DILocation(line: 1041, column: 72, scope: !2362)
!9248 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9247)
!9249 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9247)
!9250 = !DILocation(line: 1042, column: 28, scope: !2362)
!9251 = !DILocation(line: 0, scope: !2505, inlinedAt: !9252)
!9252 = distinct !DILocation(line: 1042, column: 25, scope: !2362)
!9253 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !9252)
!9254 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !9252)
!9255 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !9252)
!9256 = !DILocation(line: 0, scope: !2497, inlinedAt: !9257)
!9257 = distinct !DILocation(line: 1042, column: 43, scope: !2362)
!9258 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9257)
!9259 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9257)
!9260 = !DILocation(line: 1042, column: 53, scope: !2362)
!9261 = !DILocation(line: 0, scope: !2505, inlinedAt: !9262)
!9262 = distinct !DILocation(line: 1042, column: 50, scope: !2362)
!9263 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !9262)
!9264 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !9262)
!9265 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !9262)
!9266 = !DILocation(line: 0, scope: !2497, inlinedAt: !9267)
!9267 = distinct !DILocation(line: 1042, column: 68, scope: !2362)
!9268 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9267)
!9269 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9267)
!9270 = !DILocation(line: 1043, column: 33, scope: !2362)
!9271 = !DILocation(line: 0, scope: !2505, inlinedAt: !9272)
!9272 = distinct !DILocation(line: 1043, column: 25, scope: !2362)
!9273 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !9272)
!9274 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !9272)
!9275 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !9272)
!9276 = !DILocation(line: 0, scope: !2497, inlinedAt: !9277)
!9277 = distinct !DILocation(line: 1043, column: 43, scope: !2362)
!9278 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9277)
!9279 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9277)
!9280 = !DILocation(line: 1044, column: 66, scope: !2362)
!9281 = !DILocation(line: 1044, column: 36, scope: !2362)
!9282 = !DILocation(line: 1044, column: 28, scope: !2362)
!9283 = !DILocation(line: 0, scope: !2501, inlinedAt: !9284)
!9284 = distinct !DILocation(line: 1044, column: 25, scope: !2362)
!9285 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !9284)
!9286 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !9284)
!9287 = !DILocation(line: 0, scope: !2497, inlinedAt: !9288)
!9288 = distinct !DILocation(line: 1045, column: 25, scope: !2362)
!9289 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9288)
!9290 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9288)
!9291 = !DILocation(line: 1045, column: 45, scope: !2362)
!9292 = !DILocation(line: 0, scope: !2501, inlinedAt: !9293)
!9293 = distinct !DILocation(line: 1045, column: 37, scope: !2362)
!9294 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !9293)
!9295 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !9293)
!9296 = !DILocation(line: 0, scope: !2497, inlinedAt: !9297)
!9297 = distinct !DILocation(line: 1046, column: 25, scope: !2362)
!9298 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9297)
!9299 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9297)
!9300 = !DILocation(line: 1046, column: 63, scope: !2362)
!9301 = !DILocation(line: 1046, column: 49, scope: !2362)
!9302 = !DILocation(line: 0, scope: !2588, inlinedAt: !9303)
!9303 = distinct !DILocation(line: 1046, column: 45, scope: !2362)
!9304 = !DILocation(line: 172, column: 31, scope: !2588, inlinedAt: !9303)
!9305 = !DILocation(line: 173, column: 49, scope: !2588, inlinedAt: !9303)
!9306 = !DILocation(line: 173, column: 15, scope: !2588, inlinedAt: !9303)
!9307 = !DILocation(line: 0, scope: !2497, inlinedAt: !9308)
!9308 = distinct !DILocation(line: 1046, column: 69, scope: !2362)
!9309 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9308)
!9310 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9308)
!9311 = !DILocation(line: 0, scope: !2494, inlinedAt: !9312)
!9312 = distinct !DILocation(line: 1041, column: 5, scope: !2362)
!9313 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !9312)
!9314 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !9312)
!9315 = !DILocation(line: 1049, column: 24, scope: !2362)
!9316 = !DILocation(line: 1049, column: 14, scope: !2362)
!9317 = !DILocation(line: 0, scope: !2443, inlinedAt: !9318)
!9318 = distinct !DILocation(line: 1050, column: 5, scope: !2362)
!9319 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !9318)
!9320 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !9318)
!9321 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !9318)
!9322 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !9318)
!9323 = !DILocation(line: 0, scope: !2497, inlinedAt: !9324)
!9324 = distinct !DILocation(line: 1050, column: 25, scope: !2362)
!9325 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9324)
!9326 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9324)
!9327 = !DILocation(line: 1050, column: 53, scope: !2362)
!9328 = !DILocation(line: 1050, column: 44, scope: !2362)
!9329 = !DILocation(line: 1050, column: 65, scope: !2362)
!9330 = !DILocation(line: 0, scope: !2509, inlinedAt: !9331)
!9331 = distinct !DILocation(line: 1050, column: 41, scope: !2362)
!9332 = !DILocation(line: 167, column: 32, scope: !2509, inlinedAt: !9331)
!9333 = !DILocation(line: 168, column: 15, scope: !2509, inlinedAt: !9331)
!9334 = !DILocation(line: 0, scope: !2497, inlinedAt: !9335)
!9335 = distinct !DILocation(line: 1051, column: 25, scope: !2362)
!9336 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9335)
!9337 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9335)
!9338 = !DILocation(line: 0, scope: !2494, inlinedAt: !9339)
!9339 = distinct !DILocation(line: 1050, column: 5, scope: !2362)
!9340 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !9339)
!9341 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !9339)
!9342 = !DILocation(line: 0, scope: !2440, inlinedAt: !9343)
!9343 = distinct !DILocation(line: 1055, column: 1, scope: !2362)
!9344 = !DILocation(line: 176, column: 54, scope: !7695, inlinedAt: !9343)
!9345 = !DILocation(line: 176, column: 18, scope: !7695, inlinedAt: !9343)
!9346 = !DILocation(line: 1055, column: 1, scope: !2362)
!9347 = !DILocation(line: 1057, column: 48, scope: !2373)
!9348 = !DILocation(line: 1057, column: 79, scope: !2373)
!9349 = !DILocation(line: 0, scope: !2443, inlinedAt: !9350)
!9350 = distinct !DILocation(line: 1058, column: 5, scope: !2373)
!9351 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !9350)
!9352 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !9350)
!9353 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !9350)
!9354 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !9350)
!9355 = !DILocation(line: 0, scope: !2497, inlinedAt: !9356)
!9356 = distinct !DILocation(line: 1058, column: 25, scope: !2373)
!9357 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9356)
!9358 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9356)
!9359 = !DILocation(line: 0, scope: !2501, inlinedAt: !9360)
!9360 = distinct !DILocation(line: 1059, column: 25, scope: !2373)
!9361 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !9360)
!9362 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !9360)
!9363 = !DILocation(line: 0, scope: !2497, inlinedAt: !9364)
!9364 = distinct !DILocation(line: 1059, column: 41, scope: !2373)
!9365 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9364)
!9366 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9364)
!9367 = !DILocation(line: 0, scope: !2494, inlinedAt: !9368)
!9368 = distinct !DILocation(line: 1058, column: 5, scope: !2373)
!9369 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !9368)
!9370 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !9368)
!9371 = !DILocation(line: 1061, column: 5, scope: !2373)
!9372 = !DILocation(line: 1061, column: 13, scope: !2373)
!9373 = !DILocation(line: 0, scope: !2435, inlinedAt: !9374)
!9374 = distinct !DILocation(line: 1061, column: 13, scope: !2373)
!9375 = !DILocation(line: 165, column: 19, scope: !2435, inlinedAt: !9374)
!9376 = !DILocation(line: 166, column: 11, scope: !2435, inlinedAt: !9374)
!9377 = !DILocation(line: 166, column: 39, scope: !2435, inlinedAt: !9374)
!9378 = !DILocation(line: 166, column: 51, scope: !2435, inlinedAt: !9374)
!9379 = !DILocation(line: 167, column: 11, scope: !2435, inlinedAt: !9374)
!9380 = !DILocation(line: 169, column: 9, scope: !7533, inlinedAt: !9374)
!9381 = !DILocation(line: 171, column: 17, scope: !7533, inlinedAt: !9374)
!9382 = !DILocation(line: 171, column: 15, scope: !7533, inlinedAt: !9374)
!9383 = !DILocation(line: 172, column: 9, scope: !7537, inlinedAt: !9374)
!9384 = !DILocation(line: 172, column: 9, scope: !7533, inlinedAt: !9374)
!9385 = !DILocation(line: 172, column: 9, scope: !7540, inlinedAt: !9374)
!9386 = !DILocation(line: 173, column: 9, scope: !7542, inlinedAt: !9374)
!9387 = !DILocation(line: 173, column: 9, scope: !7533, inlinedAt: !9374)
!9388 = !DILocation(line: 173, column: 9, scope: !7545, inlinedAt: !9374)
!9389 = !DILocation(line: 1062, column: 13, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !2373, file: !1697, line: 1062, column: 9)
!9391 = !DILocation(line: 1062, column: 19, scope: !9390)
!9392 = !DILocation(line: 1062, column: 9, scope: !2373)
!9393 = !DILocation(line: 1067, column: 25, scope: !2373)
!9394 = !DILocation(line: 1067, column: 14, scope: !2373)
!9395 = !DILocation(line: 1070, column: 5, scope: !2373)
!9396 = !DILocation(line: 1070, column: 24, scope: !2373)
!9397 = !DILocation(line: 1070, column: 42, scope: !2373)
!9398 = !DILocation(line: 1073, column: 24, scope: !2373)
!9399 = !DILocation(line: 1073, column: 14, scope: !2373)
!9400 = !DILocation(line: 0, scope: !2443, inlinedAt: !9401)
!9401 = distinct !DILocation(line: 1074, column: 5, scope: !2373)
!9402 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !9401)
!9403 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !9401)
!9404 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !9401)
!9405 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !9401)
!9406 = !DILocation(line: 0, scope: !2497, inlinedAt: !9407)
!9407 = distinct !DILocation(line: 1074, column: 25, scope: !2373)
!9408 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9407)
!9409 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9407)
!9410 = !DILocation(line: 1074, column: 53, scope: !2373)
!9411 = !DILocation(line: 1074, column: 44, scope: !2373)
!9412 = !DILocation(line: 1074, column: 65, scope: !2373)
!9413 = !DILocation(line: 0, scope: !2509, inlinedAt: !9414)
!9414 = distinct !DILocation(line: 1074, column: 41, scope: !2373)
!9415 = !DILocation(line: 167, column: 32, scope: !2509, inlinedAt: !9414)
!9416 = !DILocation(line: 168, column: 15, scope: !2509, inlinedAt: !9414)
!9417 = !DILocation(line: 0, scope: !2497, inlinedAt: !9418)
!9418 = distinct !DILocation(line: 1075, column: 25, scope: !2373)
!9419 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9418)
!9420 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9418)
!9421 = !DILocation(line: 0, scope: !2494, inlinedAt: !9422)
!9422 = distinct !DILocation(line: 1074, column: 5, scope: !2373)
!9423 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !9422)
!9424 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !9422)
!9425 = !DILocation(line: 0, scope: !2440, inlinedAt: !9426)
!9426 = distinct !DILocation(line: 1079, column: 1, scope: !2373)
!9427 = !DILocation(line: 176, column: 54, scope: !7695, inlinedAt: !9426)
!9428 = !DILocation(line: 176, column: 18, scope: !7695, inlinedAt: !9426)
!9429 = !DILocation(line: 1079, column: 1, scope: !2373)
!9430 = !DILocation(line: 1082, column: 40, scope: !2380)
!9431 = !DILocation(line: 1082, column: 60, scope: !2380)
!9432 = !DILocation(line: 1083, column: 36, scope: !2380)
!9433 = !DILocation(line: 1083, column: 52, scope: !2380)
!9434 = !DILocation(line: 1083, column: 65, scope: !2380)
!9435 = !DILocation(line: 1084, column: 28, scope: !2380)
!9436 = !DILocation(line: 1084, column: 41, scope: !2380)
!9437 = !DILocation(line: 1084, column: 55, scope: !2380)
!9438 = !DILocation(line: 1084, column: 69, scope: !2380)
!9439 = !DILocation(line: 1085, column: 28, scope: !2380)
!9440 = !DILocation(line: 1085, column: 53, scope: !2380)
!9441 = !DILocation(line: 1085, column: 72, scope: !2380)
!9442 = !DILocation(line: 1086, column: 31, scope: !2380)
!9443 = !DILocation(line: 1086, column: 52, scope: !2380)
!9444 = !DILocation(line: 1087, column: 31, scope: !2380)
!9445 = !DILocation(line: 1087, column: 50, scope: !2380)
!9446 = !DILocation(line: 1088, column: 28, scope: !2380)
!9447 = !DILocation(line: 0, scope: !2443, inlinedAt: !9448)
!9448 = distinct !DILocation(line: 1089, column: 5, scope: !2380)
!9449 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !9448)
!9450 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !9448)
!9451 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !9448)
!9452 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !9448)
!9453 = !DILocation(line: 0, scope: !2497, inlinedAt: !9454)
!9454 = distinct !DILocation(line: 1089, column: 25, scope: !2380)
!9455 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9454)
!9456 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9454)
!9457 = !DILocation(line: 0, scope: !2501, inlinedAt: !9458)
!9458 = distinct !DILocation(line: 1089, column: 74, scope: !2380)
!9459 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !9458)
!9460 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !9458)
!9461 = !DILocation(line: 0, scope: !2497, inlinedAt: !9462)
!9462 = distinct !DILocation(line: 1090, column: 25, scope: !2380)
!9463 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9462)
!9464 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9462)
!9465 = !DILocation(line: 0, scope: !2497, inlinedAt: !9466)
!9466 = distinct !DILocation(line: 1091, column: 25, scope: !2380)
!9467 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9466)
!9468 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9466)
!9469 = !DILocation(line: 0, scope: !2497, inlinedAt: !9470)
!9470 = distinct !DILocation(line: 1091, column: 38, scope: !2380)
!9471 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9470)
!9472 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9470)
!9473 = !DILocation(line: 0, scope: !2497, inlinedAt: !9474)
!9474 = distinct !DILocation(line: 1091, column: 52, scope: !2380)
!9475 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9474)
!9476 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9474)
!9477 = !DILocation(line: 0, scope: !2497, inlinedAt: !9478)
!9478 = distinct !DILocation(line: 1092, column: 25, scope: !2380)
!9479 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9478)
!9480 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9478)
!9481 = !DILocation(line: 0, scope: !2505, inlinedAt: !9482)
!9482 = distinct !DILocation(line: 1092, column: 39, scope: !2380)
!9483 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !9482)
!9484 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !9482)
!9485 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !9482)
!9486 = !DILocation(line: 0, scope: !2497, inlinedAt: !9487)
!9487 = distinct !DILocation(line: 1092, column: 50, scope: !2380)
!9488 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9487)
!9489 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9487)
!9490 = !DILocation(line: 0, scope: !2505, inlinedAt: !9491)
!9491 = distinct !DILocation(line: 1092, column: 57, scope: !2380)
!9492 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !9491)
!9493 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !9491)
!9494 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !9491)
!9495 = !DILocation(line: 0, scope: !2497, inlinedAt: !9496)
!9496 = distinct !DILocation(line: 1092, column: 68, scope: !2380)
!9497 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9496)
!9498 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9496)
!9499 = !DILocation(line: 0, scope: !2505, inlinedAt: !9500)
!9500 = distinct !DILocation(line: 1093, column: 25, scope: !2380)
!9501 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !9500)
!9502 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !9500)
!9503 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !9500)
!9504 = !DILocation(line: 0, scope: !2497, inlinedAt: !9505)
!9505 = distinct !DILocation(line: 1093, column: 36, scope: !2380)
!9506 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9505)
!9507 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9505)
!9508 = !DILocation(line: 0, scope: !2497, inlinedAt: !9509)
!9509 = distinct !DILocation(line: 1094, column: 25, scope: !2380)
!9510 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9509)
!9511 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9509)
!9512 = !DILocation(line: 0, scope: !2505, inlinedAt: !9513)
!9513 = distinct !DILocation(line: 1094, column: 40, scope: !2380)
!9514 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !9513)
!9515 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !9513)
!9516 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !9513)
!9517 = !DILocation(line: 0, scope: !2497, inlinedAt: !9518)
!9518 = distinct !DILocation(line: 1094, column: 52, scope: !2380)
!9519 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9518)
!9520 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9518)
!9521 = !DILocation(line: 0, scope: !2505, inlinedAt: !9522)
!9522 = distinct !DILocation(line: 1094, column: 59, scope: !2380)
!9523 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !9522)
!9524 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !9522)
!9525 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !9522)
!9526 = !DILocation(line: 0, scope: !2497, inlinedAt: !9527)
!9527 = distinct !DILocation(line: 1094, column: 71, scope: !2380)
!9528 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9527)
!9529 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9527)
!9530 = !DILocation(line: 0, scope: !2505, inlinedAt: !9531)
!9531 = distinct !DILocation(line: 1095, column: 25, scope: !2380)
!9532 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !9531)
!9533 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !9531)
!9534 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !9531)
!9535 = !DILocation(line: 0, scope: !2497, inlinedAt: !9536)
!9536 = distinct !DILocation(line: 1095, column: 37, scope: !2380)
!9537 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9536)
!9538 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9536)
!9539 = !DILocation(line: 0, scope: !2497, inlinedAt: !9540)
!9540 = distinct !DILocation(line: 1096, column: 25, scope: !2380)
!9541 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9540)
!9542 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9540)
!9543 = !DILocation(line: 0, scope: !2505, inlinedAt: !9544)
!9544 = distinct !DILocation(line: 1096, column: 38, scope: !2380)
!9545 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !9544)
!9546 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !9544)
!9547 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !9544)
!9548 = !DILocation(line: 0, scope: !2497, inlinedAt: !9549)
!9549 = distinct !DILocation(line: 1096, column: 58, scope: !2380)
!9550 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9549)
!9551 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9549)
!9552 = !DILocation(line: 0, scope: !2494, inlinedAt: !9553)
!9553 = distinct !DILocation(line: 1089, column: 5, scope: !2380)
!9554 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !9553)
!9555 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !9553)
!9556 = !DILocation(line: 1098, column: 5, scope: !2380)
!9557 = !DILocation(line: 1098, column: 13, scope: !2380)
!9558 = !DILocation(line: 0, scope: !2435, inlinedAt: !9559)
!9559 = distinct !DILocation(line: 1098, column: 13, scope: !2380)
!9560 = !DILocation(line: 165, column: 19, scope: !2435, inlinedAt: !9559)
!9561 = !DILocation(line: 166, column: 11, scope: !2435, inlinedAt: !9559)
!9562 = !DILocation(line: 166, column: 39, scope: !2435, inlinedAt: !9559)
!9563 = !DILocation(line: 166, column: 51, scope: !2435, inlinedAt: !9559)
!9564 = !DILocation(line: 167, column: 11, scope: !2435, inlinedAt: !9559)
!9565 = !DILocation(line: 169, column: 9, scope: !7533, inlinedAt: !9559)
!9566 = !DILocation(line: 171, column: 17, scope: !7533, inlinedAt: !9559)
!9567 = !DILocation(line: 171, column: 15, scope: !7533, inlinedAt: !9559)
!9568 = !DILocation(line: 172, column: 9, scope: !7537, inlinedAt: !9559)
!9569 = !DILocation(line: 172, column: 9, scope: !7533, inlinedAt: !9559)
!9570 = !DILocation(line: 172, column: 9, scope: !7540, inlinedAt: !9559)
!9571 = !DILocation(line: 173, column: 9, scope: !7542, inlinedAt: !9559)
!9572 = !DILocation(line: 173, column: 9, scope: !7533, inlinedAt: !9559)
!9573 = !DILocation(line: 173, column: 9, scope: !7545, inlinedAt: !9559)
!9574 = !DILocation(line: 1099, column: 13, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !2380, file: !1697, line: 1099, column: 9)
!9576 = !DILocation(line: 1099, column: 19, scope: !9575)
!9577 = !DILocation(line: 1099, column: 9, scope: !2380)
!9578 = !DILocation(line: 0, scope: !2443, inlinedAt: !9579)
!9579 = distinct !DILocation(line: 1103, column: 5, scope: !2380)
!9580 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !9579)
!9581 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !9579)
!9582 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !9579)
!9583 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !9579)
!9584 = !DILocation(line: 0, scope: !2497, inlinedAt: !9585)
!9585 = distinct !DILocation(line: 1103, column: 25, scope: !2380)
!9586 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9585)
!9587 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9585)
!9588 = !DILocation(line: 0, scope: !2494, inlinedAt: !9589)
!9589 = distinct !DILocation(line: 1103, column: 5, scope: !2380)
!9590 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !9589)
!9591 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !9589)
!9592 = !DILocation(line: 1106, column: 25, scope: !2380)
!9593 = !DILocation(line: 1106, column: 14, scope: !2380)
!9594 = !DILocation(line: 1109, column: 5, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !2380, file: !1697, line: 1109, column: 5)
!9596 = !DILocation(line: 1109, column: 5, scope: !2380)
!9597 = !DILocation(line: 1109, column: 5, scope: !9598)
!9598 = !DILexicalBlockFile(scope: !9595, file: !1697, discriminator: 1)
!9599 = !DILocation(line: 1110, column: 49, scope: !2380)
!9600 = !DILocation(line: 1110, column: 11, scope: !2380)
!9601 = !DILocation(line: 0, scope: !2443, inlinedAt: !9602)
!9602 = distinct !DILocation(line: 1111, column: 5, scope: !2380)
!9603 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !9602)
!9604 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !9602)
!9605 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !9602)
!9606 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !9602)
!9607 = !DILocation(line: 0, scope: !2497, inlinedAt: !9608)
!9608 = distinct !DILocation(line: 1111, column: 25, scope: !2380)
!9609 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9608)
!9610 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9608)
!9611 = !DILocation(line: 0, scope: !2501, inlinedAt: !9612)
!9612 = distinct !DILocation(line: 1111, column: 42, scope: !2380)
!9613 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !9612)
!9614 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !9612)
!9615 = !DILocation(line: 0, scope: !2497, inlinedAt: !9616)
!9616 = distinct !DILocation(line: 1111, column: 52, scope: !2380)
!9617 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9616)
!9618 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9616)
!9619 = !DILocation(line: 0, scope: !2494, inlinedAt: !9620)
!9620 = distinct !DILocation(line: 1111, column: 5, scope: !2380)
!9621 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !9620)
!9622 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !9620)
!9623 = !DILocation(line: 1112, column: 5, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !2380, file: !1697, line: 1112, column: 5)
!9625 = !DILocation(line: 1112, column: 5, scope: !2380)
!9626 = !DILocation(line: 1112, column: 5, scope: !9627)
!9627 = !DILexicalBlockFile(scope: !9624, file: !1697, discriminator: 1)
!9628 = !DILocation(line: 1118, column: 12, scope: !2380)
!9629 = !DILocation(line: 1118, column: 32, scope: !2380)
!9630 = !DILocation(line: 1118, column: 5, scope: !2380)
!9631 = !DILocation(line: 1124, column: 13, scope: !2408)
!9632 = !DILocation(line: 0, scope: !2443, inlinedAt: !9633)
!9633 = distinct !DILocation(line: 1119, column: 9, scope: !2410)
!9634 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !9633)
!9635 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !9633)
!9636 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !9633)
!9637 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !9633)
!9638 = !DILocation(line: 0, scope: !2497, inlinedAt: !9639)
!9639 = distinct !DILocation(line: 1119, column: 29, scope: !2410)
!9640 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9639)
!9641 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9639)
!9642 = !DILocation(line: 1119, column: 78, scope: !2410)
!9643 = !DILocation(line: 0, scope: !2513, inlinedAt: !9644)
!9644 = distinct !DILocation(line: 1119, column: 66, scope: !2410)
!9645 = !DILocation(line: 147, column: 33, scope: !2513, inlinedAt: !9644)
!9646 = !DILocation(line: 148, column: 15, scope: !2513, inlinedAt: !9644)
!9647 = !DILocation(line: 0, scope: !2497, inlinedAt: !9648)
!9648 = distinct !DILocation(line: 1119, column: 87, scope: !2410)
!9649 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9648)
!9650 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9648)
!9651 = !DILocation(line: 1120, column: 41, scope: !2410)
!9652 = !DILocation(line: 0, scope: !2513, inlinedAt: !9653)
!9653 = distinct !DILocation(line: 1120, column: 29, scope: !2410)
!9654 = !DILocation(line: 147, column: 33, scope: !2513, inlinedAt: !9653)
!9655 = !DILocation(line: 148, column: 15, scope: !2513, inlinedAt: !9653)
!9656 = !DILocation(line: 0, scope: !2497, inlinedAt: !9657)
!9657 = distinct !DILocation(line: 1120, column: 61, scope: !2410)
!9658 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9657)
!9659 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9657)
!9660 = !DILocation(line: 1121, column: 44, scope: !2410)
!9661 = !DILocation(line: 1121, column: 33, scope: !2410)
!9662 = !DILocation(line: 0, scope: !2501, inlinedAt: !9663)
!9663 = distinct !DILocation(line: 1121, column: 29, scope: !2410)
!9664 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !9663)
!9665 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !9663)
!9666 = !DILocation(line: 0, scope: !2497, inlinedAt: !9667)
!9667 = distinct !DILocation(line: 1121, column: 61, scope: !2410)
!9668 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9667)
!9669 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9667)
!9670 = !DILocation(line: 1122, column: 33, scope: !2410)
!9671 = !DILocation(line: 0, scope: !2497, inlinedAt: !9672)
!9672 = distinct !DILocation(line: 1122, column: 29, scope: !2410)
!9673 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9672)
!9674 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9672)
!9675 = !DILocation(line: 0, scope: !2497, inlinedAt: !9676)
!9676 = distinct !DILocation(line: 1122, column: 104, scope: !2410)
!9677 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9676)
!9678 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9676)
!9679 = !DILocation(line: 0, scope: !2494, inlinedAt: !9680)
!9680 = distinct !DILocation(line: 1119, column: 9, scope: !2410)
!9681 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !9680)
!9682 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !9680)
!9683 = !DILocation(line: 1123, column: 13, scope: !2409)
!9684 = !DILocation(line: 1123, column: 37, scope: !2409)
!9685 = !DILocation(line: 1123, column: 13, scope: !2410)
!9686 = !DILocation(line: 1124, column: 46, scope: !2408)
!9687 = !DILocation(line: 1124, column: 33, scope: !2408)
!9688 = !DILocation(line: 1124, column: 21, scope: !2408)
!9689 = !DILocation(line: 1125, column: 13, scope: !2408)
!9690 = !DILocation(line: 1125, column: 32, scope: !2408)
!9691 = !DILocation(line: 1125, column: 50, scope: !2408)
!9692 = !DILocation(line: 1127, column: 9, scope: !2409)
!9693 = !DILocation(line: 1127, column: 9, scope: !2408)
!9694 = !DILocation(line: 1128, column: 47, scope: !2412)
!9695 = !DILocation(line: 1128, column: 34, scope: !2412)
!9696 = !DILocation(line: 1128, column: 22, scope: !2412)
!9697 = !DILocation(line: 1129, column: 13, scope: !2412)
!9698 = !DILocation(line: 1129, column: 32, scope: !2412)
!9699 = !DILocation(line: 1130, column: 21, scope: !2412)
!9700 = !DILocation(line: 1131, column: 25, scope: !2412)
!9701 = !DILocation(line: 1131, column: 17, scope: !2412)
!9702 = !DILocation(line: 1133, column: 27, scope: !9703)
!9703 = distinct !DILexicalBlock(scope: !2412, file: !1697, line: 1133, column: 17)
!9704 = !DILocation(line: 1135, column: 13, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9703, file: !1697, line: 1133, column: 33)
!9706 = !DILocation(line: 1139, column: 17, scope: !2410)
!9707 = !DILocation(line: 1114, column: 12, scope: !2380)
!9708 = !DILocation(line: 1142, column: 16, scope: !2380)
!9709 = !DILocation(line: 1142, column: 9, scope: !2380)
!9710 = !DILocation(line: 0, scope: !2443, inlinedAt: !9711)
!9711 = distinct !DILocation(line: 1143, column: 5, scope: !2380)
!9712 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !9711)
!9713 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !9711)
!9714 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !9711)
!9715 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !9711)
!9716 = !DILocation(line: 0, scope: !2497, inlinedAt: !9717)
!9717 = distinct !DILocation(line: 1143, column: 25, scope: !2380)
!9718 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9717)
!9719 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9717)
!9720 = !DILocation(line: 0, scope: !2505, inlinedAt: !9721)
!9721 = distinct !DILocation(line: 1143, column: 83, scope: !2380)
!9722 = !DILocation(line: 152, column: 33, scope: !2505, inlinedAt: !9721)
!9723 = !DILocation(line: 153, column: 48, scope: !2505, inlinedAt: !9721)
!9724 = !DILocation(line: 153, column: 15, scope: !2505, inlinedAt: !9721)
!9725 = !DILocation(line: 0, scope: !2497, inlinedAt: !9726)
!9726 = distinct !DILocation(line: 1144, column: 25, scope: !2380)
!9727 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9726)
!9728 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9726)
!9729 = !DILocation(line: 0, scope: !2501, inlinedAt: !9730)
!9730 = distinct !DILocation(line: 1144, column: 41, scope: !2380)
!9731 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !9730)
!9732 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !9730)
!9733 = !DILocation(line: 0, scope: !2497, inlinedAt: !9734)
!9734 = distinct !DILocation(line: 1145, column: 25, scope: !2380)
!9735 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9734)
!9736 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9734)
!9737 = !DILocation(line: 0, scope: !2497, inlinedAt: !9738)
!9738 = distinct !DILocation(line: 1146, column: 25, scope: !2380)
!9739 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9738)
!9740 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9738)
!9741 = !DILocation(line: 1147, column: 37, scope: !2380)
!9742 = !DILocation(line: 1147, column: 29, scope: !2380)
!9743 = !DILocation(line: 0, scope: !2501, inlinedAt: !9744)
!9744 = distinct !DILocation(line: 1147, column: 25, scope: !2380)
!9745 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !9744)
!9746 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !9744)
!9747 = !DILocation(line: 0, scope: !2497, inlinedAt: !9748)
!9748 = distinct !DILocation(line: 1148, column: 25, scope: !2380)
!9749 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9748)
!9750 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9748)
!9751 = !DILocation(line: 1149, column: 37, scope: !2380)
!9752 = !DILocation(line: 1149, column: 29, scope: !2380)
!9753 = !DILocation(line: 0, scope: !2501, inlinedAt: !9754)
!9754 = distinct !DILocation(line: 1149, column: 25, scope: !2380)
!9755 = !DILocation(line: 177, column: 37, scope: !2501, inlinedAt: !9754)
!9756 = !DILocation(line: 178, column: 15, scope: !2501, inlinedAt: !9754)
!9757 = !DILocation(line: 0, scope: !2497, inlinedAt: !9758)
!9758 = distinct !DILocation(line: 1150, column: 25, scope: !2380)
!9759 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9758)
!9760 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9758)
!9761 = !DILocation(line: 0, scope: !2494, inlinedAt: !9762)
!9762 = distinct !DILocation(line: 1143, column: 5, scope: !2380)
!9763 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !9762)
!9764 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !9762)
!9765 = !DILocation(line: 1152, column: 5, scope: !2380)
!9766 = !DILocation(line: 1152, column: 24, scope: !2380)
!9767 = !DILocation(line: 1153, column: 13, scope: !2380)
!9768 = !DILocation(line: 1156, column: 17, scope: !2380)
!9769 = !DILocation(line: 1156, column: 9, scope: !2380)
!9770 = !DILocation(line: 0, scope: !2443, inlinedAt: !9771)
!9771 = distinct !DILocation(line: 1161, column: 5, scope: !2380)
!9772 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !9771)
!9773 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !9771)
!9774 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !9771)
!9775 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !9771)
!9776 = !DILocation(line: 0, scope: !2497, inlinedAt: !9777)
!9777 = distinct !DILocation(line: 1161, column: 25, scope: !2380)
!9778 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9777)
!9779 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9777)
!9780 = !DILocation(line: 0, scope: !2494, inlinedAt: !9781)
!9781 = distinct !DILocation(line: 1161, column: 5, scope: !2380)
!9782 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !9781)
!9783 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !9781)
!9784 = !DILocation(line: 1163, column: 5, scope: !2380)
!9785 = !DILocation(line: 1163, column: 24, scope: !2380)
!9786 = !DILocation(line: 1163, column: 42, scope: !2380)
!9787 = !DILocation(line: 0, scope: !2443, inlinedAt: !9788)
!9788 = distinct !DILocation(line: 1165, column: 5, scope: !2380)
!9789 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !9788)
!9790 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !9788)
!9791 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !9788)
!9792 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !9788)
!9793 = !DILocation(line: 0, scope: !2497, inlinedAt: !9794)
!9794 = distinct !DILocation(line: 1165, column: 25, scope: !2380)
!9795 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9794)
!9796 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9794)
!9797 = !DILocation(line: 0, scope: !2494, inlinedAt: !9798)
!9798 = distinct !DILocation(line: 1165, column: 5, scope: !2380)
!9799 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !9798)
!9800 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !9798)
!9801 = !DILocation(line: 1167, column: 5, scope: !2380)
!9802 = !DILocation(line: 1167, column: 24, scope: !2380)
!9803 = !DILocation(line: 1168, column: 13, scope: !2380)
!9804 = !DILocation(line: 1168, column: 31, scope: !2380)
!9805 = !DILocation(line: 1168, column: 23, scope: !2380)
!9806 = !DILocation(line: 0, scope: !2443, inlinedAt: !9807)
!9807 = distinct !DILocation(line: 1171, column: 5, scope: !2380)
!9808 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !9807)
!9809 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !9807)
!9810 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !9807)
!9811 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !9807)
!9812 = !DILocation(line: 0, scope: !2497, inlinedAt: !9813)
!9813 = distinct !DILocation(line: 1171, column: 25, scope: !2380)
!9814 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9813)
!9815 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9813)
!9816 = !DILocation(line: 0, scope: !2494, inlinedAt: !9817)
!9817 = distinct !DILocation(line: 1171, column: 5, scope: !2380)
!9818 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !9817)
!9819 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !9817)
!9820 = !DILocation(line: 1174, column: 24, scope: !2380)
!9821 = !DILocation(line: 1174, column: 14, scope: !2380)
!9822 = !DILocation(line: 0, scope: !2443, inlinedAt: !9823)
!9823 = distinct !DILocation(line: 1175, column: 5, scope: !2380)
!9824 = !DILocation(line: 135, column: 19, scope: !2443, inlinedAt: !9823)
!9825 = !DILocation(line: 136, column: 23, scope: !7469, inlinedAt: !9823)
!9826 = !DILocation(line: 138, column: 19, scope: !7469, inlinedAt: !9823)
!9827 = !DILocation(line: 139, column: 14, scope: !7469, inlinedAt: !9823)
!9828 = !DILocation(line: 0, scope: !2497, inlinedAt: !9829)
!9829 = distinct !DILocation(line: 1175, column: 25, scope: !2380)
!9830 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9829)
!9831 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9829)
!9832 = !DILocation(line: 1175, column: 53, scope: !2380)
!9833 = !DILocation(line: 1175, column: 44, scope: !2380)
!9834 = !DILocation(line: 1175, column: 65, scope: !2380)
!9835 = !DILocation(line: 0, scope: !2509, inlinedAt: !9836)
!9836 = distinct !DILocation(line: 1175, column: 41, scope: !2380)
!9837 = !DILocation(line: 167, column: 32, scope: !2509, inlinedAt: !9836)
!9838 = !DILocation(line: 168, column: 15, scope: !2509, inlinedAt: !9836)
!9839 = !DILocation(line: 0, scope: !2497, inlinedAt: !9840)
!9840 = distinct !DILocation(line: 1176, column: 25, scope: !2380)
!9841 = !DILocation(line: 142, column: 37, scope: !2497, inlinedAt: !9840)
!9842 = !DILocation(line: 143, column: 15, scope: !2497, inlinedAt: !9840)
!9843 = !DILocation(line: 0, scope: !2494, inlinedAt: !9844)
!9844 = distinct !DILocation(line: 1175, column: 5, scope: !2380)
!9845 = !DILocation(line: 196, column: 13, scope: !7513, inlinedAt: !9844)
!9846 = !DILocation(line: 200, column: 9, scope: !7516, inlinedAt: !9844)
!9847 = !DILocation(line: 0, scope: !2440, inlinedAt: !9848)
!9848 = distinct !DILocation(line: 1179, column: 1, scope: !2380)
!9849 = !DILocation(line: 176, column: 54, scope: !7695, inlinedAt: !9848)
!9850 = !DILocation(line: 176, column: 18, scope: !7695, inlinedAt: !9848)
!9851 = !DILocation(line: 1179, column: 1, scope: !2380)
!9852 = !DILocation(line: 1182, column: 5, scope: !2415)
!9853 = !DILocation(line: 1187, column: 5, scope: !2418)
!9854 = !DILocation(line: 1188, column: 1, scope: !2418)
!9855 = !DILocation(line: 149, column: 36, scope: !2431)
!9856 = !DILocation(line: 150, column: 24, scope: !2431)
!9857 = !DILocation(line: 150, column: 15, scope: !2431)
!9858 = !DILocation(line: 151, column: 20, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !2431, file: !1697, line: 151, column: 13)
!9860 = !DILocation(line: 133, column: 10, scope: !2424, inlinedAt: !9861)
!9861 = distinct !DILocation(line: 156, column: 44, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !2431, file: !1697, line: 156, column: 13)
!9863 = !DILocation(line: 151, column: 13, scope: !2431)
!9864 = !DILocation(line: 152, column: 13, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9859, file: !1697, line: 151, column: 29)
!9866 = !DILocation(line: 153, column: 13, scope: !9865)
!9867 = !DILocation(line: 156, column: 34, scope: !9862)
!9868 = !DILocation(line: 132, column: 37, scope: !2424, inlinedAt: !9861)
!9869 = !DILocation(line: 133, column: 5, scope: !2424, inlinedAt: !9861)
!9870 = !DILocation(line: 134, column: 5, scope: !2424, inlinedAt: !9861)
!9871 = !DILocation(line: 135, column: 12, scope: !2424, inlinedAt: !9861)
!9872 = !DILocation(line: 136, column: 1, scope: !2424, inlinedAt: !9861)
!9873 = !DILocation(line: 156, column: 13, scope: !9862)
!9874 = !DILocation(line: 156, column: 13, scope: !2431)
!9875 = !DILocation(line: 157, column: 13, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9862, file: !1697, line: 156, column: 87)
!9877 = !DILocation(line: 158, column: 13, scope: !9876)
!9878 = !DILocation(line: 160, column: 9, scope: !2431)
!9879 = !DILocation(line: 161, column: 9, scope: !2431)
!9880 = !DILocation(line: 162, column: 5, scope: !2431)
!9881 = !DILocation(line: 7, column: 102, scope: !364)
!9882 = !{!"branch_weights", i32 1073741824, i32 0}
!9883 = !{!"branch_weights", i32 0, i32 1073741824}
!9884 = !DILocation(line: 12, column: 9, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9886, file: !362, line: 11, column: 12)
!9886 = distinct !DILexicalBlock(scope: !364, file: !362, line: 11, column: 9)
!9887 = !DILocation(line: 13, column: 5, scope: !9885)
!9888 = !DILocation(line: 7, column: 35, scope: !364)
!9889 = !DILocation(line: 7, column: 56, scope: !364)
!9890 = !DILocation(line: 8, column: 11, scope: !364)
!9891 = !DILocation(line: 11, column: 9, scope: !9886)
!9892 = !DILocation(line: 11, column: 9, scope: !364)
emit_file.Compiling to native code...
Target triple: armv7s--linux-eabi
